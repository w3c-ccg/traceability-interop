{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2e4b1a6f-3f0b-47d8-9e8f-1df212348d8c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "29c8366c-e003-4b90-bc59-f72f16dffa2c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7d9cb32a-c93c-4496-a8e3-ebe145e654c9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c676d352-fc87-4c29-98ec-b0b665f500fa"
                }
              }
            ]
          },
          {
            "id": "45ab271d-5177-4845-8709-70f875175cd9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "66cf087f-46e5-49fe-980a-7c0be7c4ac78",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4d1c5a1b-7c01-4849-8498-677cd94e68ca"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "27a25bc4-4639-4af7-9efc-814a8827a84f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7c6d074d-e876-4952-96dc-19481f653bdc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "817da9b0-adaf-4df5-a9c7-f637747e7fba",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e038d571-5e8b-4773-b781-20966a61e4f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "27cb12db-9db9-46e7-b47f-666639ce93a1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e012f209-6d92-473c-a713-d66e9db73fec",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "486dc309-8be2-43ec-97af-7654d47dcffc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "deefcc2a-d830-4bda-a87b-dcd27ed6b712",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8ba24129-80dc-497c-b256-3ba4bdf7f8c5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ddc3faf5-285e-40f7-bbc3-941509f10c2a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "81b4e659-09f6-4750-bf12-c332c944376b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a209c7e0-8ce6-47a4-9f80-d5a4f95cc469",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e470bcbb-b0e6-4967-9874-0fb53c115350"
            }
          }
        ]
      },
      {
        "id": "78112903-ae81-46b9-b96b-f63d9f9395dc",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5030b301-0b69-4fc6-8c70-01ef1cd1e457",
            "name": "Negative Testing",
            "item": [
              {
                "id": "220da661-8fbd-4758-a0cb-b85aba160acf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9d323394-c65b-404e-a155-d75dc7923451",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "006ebb6e-ebc1-4245-a04d-eed372e3d4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "910d76c7-06ee-4083-bdc2-9c8f14b105cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b9eef0-6fc0-402a-ba63-e0a9997fd2a0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73efc69-d659-4814-9715-2f0f700cb7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c48c9c6d-77c5-4e07-8628-7e9576265a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95255ec7-719c-4f1f-b474-817e9bce1801",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c57a56-fe55-4fe9-861f-1db59af518fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f956a039-7d39-44db-ac40-0442695e1dde"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bd1c3ddd-798b-41d4-b721-718e4a850b28",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "237b09a9-2f4f-4f8e-abd7-a9b472a67ee6",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f17686-caaf-475f-9604-a1693bb08bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1750e652-2aa8-42fb-86d3-51619ecbafa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf3fbb6-6ed0-4789-90cf-3d39417ca0c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1c893d4-4eec-44f8-9ad3-556dcda7670f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "16318dd2-d2f6-407d-b1ad-245a1186eca1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0281d001-2c48-43d4-b9a5-7518c4d38a4e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ac5e6ab-b1e1-4cbf-9487-8a995f2f4939",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9a3de016-d6a8-4235-97a5-cf220ff09ca4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bdfd666a-6428-4f50-be3d-aa207cb6df36",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "8cc3b583-b8f3-458a-8d03-05174f55f84e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "96a7aea2-1644-42df-8207-6776f6176142",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5ccfd4c1-75df-427a-8aff-4f1aabf76e74"
            }
          }
        ]
      },
      {
        "id": "bb8e642e-7224-48ef-99da-51fdec603257",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d6fe06dd-fc50-421a-bd3b-587bda1947c0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4e3b3eeb-05ca-414a-bbf1-47565190db8a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d0738a48-6ee9-4f5d-b916-bccce746e114",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e6c6c0-8391-4016-bcd6-716143b165c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0d0e924-ba9f-4f08-a171-70713fa6415f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6dea485-8ff8-43c2-890c-125242e179cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f35831eb-fe72-4626-9604-3ed716a4916d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b99261-1ca3-4743-b22a-14ce13938200",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a0d6ee-e2eb-46c9-8fd8-dba4000b26f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "853878ff-538e-4106-a050-2c574652faf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7225d1-6e82-4856-96d5-3438468fb87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "828ba61e-7b87-4ea5-bc5e-6e9a0e7572d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb228ca-a781-47e1-a2e2-353890038919",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b11bbf-0f4b-4182-be87-8354158e8c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47dd46e5-1555-4dc1-9664-d278664be7e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e276e1-8a0e-423c-95f1-edd556b7cc34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "150ccee2-9b5d-48c3-a3de-4524c77c5975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b6e365-6a20-48ca-8579-734fc3754c8a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1531d442-5cc0-427f-90c8-2a8f615e7c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c29c607-38d4-4b34-b56c-f7bea0d7a37d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1668dc0-0cb2-4384-aeb9-1ae390e618db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64203acc-e313-4ec3-a02a-73c101164826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2d9290-57e9-4413-926c-7af4a7f0557c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac07b2a-5ee1-4204-ba5b-d78eaef37dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "807d51d0-a248-4cbd-a926-35d7657c8efc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47aaba08-5775-4454-b8c2-4c196e8c0489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf493b61-acd4-46ad-9d62-99b384a65687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b29db7-511c-4eac-9244-d19a72de34ec",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccfa3736-6de9-441d-a997-c10a1cf8603a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3879988a-f83d-426d-a21f-86016be7419f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46cfddc9-73fc-4b3f-b4c9-f1bd39640a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1d698d8-ae11-4059-99ba-0ccda2308eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf1a7a6-3a6b-4be2-a51a-1f45091901a4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ddd2e2-164c-4ead-8a63-14ce35badc48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ee2d52-84d0-4e6b-af91-8a509be203b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1219f315-d363-40be-bf0e-eda6e8870b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7dc940c-18b2-469e-80ac-fabc757931bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8b7e26-b13c-4d89-95dc-d1155f0a5b24",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63987423-4e20-47b8-8a7f-c3cd99bf2dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b69a6402-df59-41aa-9a3c-a918dc2553ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc6ea6f-16b2-45be-9f7a-ecae72ae24eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8830b5a3-ece5-4e23-8cac-667e303867ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f84772-6cbc-42c5-b722-3d3346dec794",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd4a96e-98c6-4939-b439-54cf4ce4aa17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11d3b728-1796-444f-90e9-c044e28b2bc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a37a54-d323-4af7-ab1d-c63a66969b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d33ba89-696e-4c1c-972b-c7b61176e015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539c3e12-e48d-403d-8cc9-08487f9f97dc",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdba5fbf-5234-4278-b4d7-666f432b891d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f84729a-7db4-47e8-8754-ddb09f815e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da69b837-b030-475a-8441-4a64b7a4e9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8814c20b-d64e-475f-bfe7-0ea3e638ec81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5222494-774b-4a28-9e9d-5187afb2c089",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d94d651-f0de-4a52-9658-91a8369653f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc5ac84-5e8f-4c9e-8697-45441944e10a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ad0880-10dc-457d-8c51-a89a6f59b6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7630c70e-c9a8-4d90-87a6-9a4598a59c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b802c5-63cc-42d5-87a7-e75998044ad5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc9ab48-00c7-4aef-a487-d7122ab6dd69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "402e749e-c89e-4380-bd9c-b0d7085fabdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e00c5c5-7b4a-46fa-b1ec-0d0ab93ddeea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbf6da7a-4ec4-4370-884e-b04588076a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f11d05a-45f8-4c07-8300-154ba5f3b4f4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c9f96f-0555-4182-8274-52c45c85950a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f022c29-957d-4ff6-b4d2-4a9b8eada70a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0877f8ed-cadf-44f3-8a82-8146ddb0eea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61dbc281-cad1-4f28-90dc-51605ae1e014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00a91ad-3c90-4144-8da7-ea734887f713",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63831ed2-24b5-455d-8962-20f1aada786b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd014fc9-d9e9-4a25-bc48-3c0962534cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40154e60-288b-4555-8bdd-3ebe7befc772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e88c4043-c078-4935-a865-2cd61ef39940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16bcbb27-5344-4b8b-926f-412d23beff8a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf2fe74-8437-4c5f-9f34-07de88994bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c58fc4e-9ea6-4d5a-8557-1313627846c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf61068-650b-4d8e-97c1-2eb0fc6cdb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f39d1b0d-8302-4b56-b53a-60a4dd1c9b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c528389-c94b-4f86-a5fd-b0dd526a0286",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b07c267-94d5-4cae-be49-37272e1e1b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd97e2de-a9f6-4383-9156-059f2ed8b4b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c948c962-dab3-4388-8b4f-2e4a2b80bfdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82594ad0-c4fa-4a2e-ba6f-c1277a2e5939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8062f1-932f-4246-a07d-99ebcb3c0999",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1d4b0e-19d2-4005-979e-0edb5b7c1ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3153fe0b-8bec-40df-819d-d1032196b66e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3553f38-e5fd-4dd2-bbe7-8622238e3dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e77670ef-f1f5-45bf-9ccf-85a3ad0bbdd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff4ff5d-06bf-4e81-92ac-2d2a00f54878",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d062b09-53b4-4c06-b86a-31d4b8e0d161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbfe5f31-a3f2-4aa7-9f38-f4f8a198e484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dab7515-01c3-48f2-b65e-ee1764a4a5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b25ac28-239e-4296-8bc5-58826637e714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3716a3ad-f48e-43a1-8d08-10b28d648a2e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3278de-812c-4cf1-9c2a-b530e861d2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffff6488-42f6-4739-9cbb-e6396279ba4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b926a9-6c8e-47b8-8689-c794b081a5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "082aa735-352e-444e-b320-297829e1ed03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f32e63-358a-4a93-a8b3-74dcc8a9d4a7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "876c0ca0-e60a-4776-b321-51e1aa207704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a2c470-6d20-43b0-8186-ab2a86d215b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50f0e45-72b1-4cb7-84b5-166f24fc0b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef258318-d8f7-4cfb-ac7b-2e91d2a3d85f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ab9667-acf2-4fd6-a76c-ae7845389165",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59181320-0590-48e2-8737-6597aef5bb65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "215cc8d4-408e-4115-8de0-035cee4357a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4439da5a-47af-410e-b169-225e0cfaef42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc914641-58c9-4250-8e10-8ddb8a78a376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e66a7ca-7104-4b76-b39b-66ff36641919",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d610b67c-135e-4990-81cc-d822738394c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e501051-fe9b-48e5-bad2-b03d0347406b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe0c1a9-590f-466e-9e38-2117fc435dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "12889b25-dc1a-4224-9c60-b14b5c0d40ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1055cc19-2d13-4681-b42d-1cbe0e3370b1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd669cb-f946-45e6-8aef-efabb5563358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e9ff431-8daa-4702-93cf-9ac70bf1c501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e197fb68-2cdd-4d1e-a201-ec5514c9ee46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1229291d-e8fc-419f-9fef-d93f9dc7a91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c94d29-858e-4d9b-8008-b55a674503eb",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7626017f-f1d1-4ca3-a8fc-819320b50903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32bf3f2f-cb7c-4b47-a5b6-b567d27fbdf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9086969c-3ed8-4c7f-953e-914f278617c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff9b03b0-7fa8-4213-8cd3-9c1011321843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71147dce-b219-4280-9b18-dd647d2afaa8",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3218ed73-a08e-4ebf-a83e-18d803491446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696027e1-ad3f-4430-bccc-10a4f8b8c4d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d95e89-7885-4d32-95fa-871e0b9c868e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e4c2d47-1861-438c-b982-0785417b2398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53de67e6-439d-4c18-a79a-b9a5ae676313",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19c8c9d-0c2f-4771-af90-3a1dfd251fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72081adc-7a6a-4fd3-a0ea-a3fdaac02576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1befe81-d819-405a-907b-742f6f3b1bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ed22733-c724-4173-a5a9-06b112b8ff42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90c7e24-7871-4228-8fcb-16942c8d65aa",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "968d6a0d-c0ae-4a1f-ab2f-ddbaf9628206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16eee78a-769b-45ec-ab48-8ff66f2ee31f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea878ddc-b288-4374-9c51-e0ee0628949e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e1afd8d-a709-4580-9d8c-2dc82e67c6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38a4516-712f-45ba-946d-f429706b801b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3603758-b5cd-4469-8d8e-25af123c875f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b862fdae-0837-43f6-82ef-4b23a358f664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b22520f-e02b-4a89-8efb-dbe494feb4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "876832d4-6c9f-459d-982a-c765b3e41092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f57c269-8e76-45a9-a4c7-b111fb310620",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db366de7-8982-4a7c-906b-245aa9a37caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ed1425c-96fd-4997-84f1-e67324d77ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed54c45-7612-4fc1-b0e2-a437d06c44d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f565c9d9-7e63-4c5b-b51f-cc91d956880c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201587ba-19da-4cd9-8be6-870b20d26c98",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ce027e-1fff-4407-b279-656a01ae84e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6da1236-3ea2-4f06-9f71-d81c11ee663e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09fc1066-b67e-47ce-a6d3-945df3fe8b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8f8ffaf-dc6c-4f01-87e7-f6c46fb6dc02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd10228-cc87-4f07-a114-71a1c338f68f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8144fd-ce43-4e2c-8a24-e9cb3a15ab20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c567a5-31ed-44db-9906-d9e6be76cb9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b056b7c0-b0e4-4d9a-851b-545aad97d550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "01398374-9147-450e-a4a6-0c12125f8b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3defd4e9-1f53-43c6-97c7-10c10de870ec",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69be7c6d-a7ff-413b-93bb-96fa9d133cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6fb72e7-f6a4-4133-9a83-fecaaae20e2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5752306-669c-41cc-8868-960c9053d70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6316686d-f333-4b43-ad2d-f0e1cb6faec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad425b5-4129-4f83-82bf-2bc1af026e3b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "700752cf-63f0-416e-9aa9-47955f9fd58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69dc9e3d-152a-43dc-a869-62a92800941a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6aa9d50-316f-4a23-abd6-45db0e9f19fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a20744b-b035-4109-8dba-46da2b15957f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ca3583-2304-4f57-8856-7a635a4a6a5f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a75d3c-1753-41f9-be30-1a8e3a86db13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded9b3b4-8112-476a-b599-83f7284df3dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0a32a3-f2b6-4bd7-8822-b893bb109d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5149f156-b895-47c5-9a8e-8ab5c6bc275e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "274f62a4-74fb-4bdd-8768-de730fbadb37",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac9e734-2e30-4f10-b836-c7448ddc75ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "369f1d36-5e7f-49ac-b350-1ce0448cd6bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7574bcb6-da58-43ec-8ab6-04ad7c40ce2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "41fdda1d-8384-4ad4-906f-ea54dcc2e902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d932ad-b3e9-4d49-92be-f7dc04d853dc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "030b1e0e-d58a-4eb2-bb00-7600007f3262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa181b9f-c891-4c9f-9f7f-bfc050da0d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97cc9f8-5ec4-4868-88f4-320e78fc4ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a3336a6f-6ac5-424c-a23b-969add70c28e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1a8816-8d86-4e44-ba9a-31a0601b2d58",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d3b2c4-2b02-4151-a235-09900620b2c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "674a64a1-a418-45e3-823a-a883c136cad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3907956a-ce8f-4f01-8c1b-abbfead45d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e933e5eb-4545-4e8a-9890-25fe747d2b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65369ab-d19a-426a-af34-b0b977bdf614",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f70cc3-1118-4a53-b918-3b23e82ac67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa9d358-1664-42f2-b601-ab496e379836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d9a11a-b5a0-4b2d-81e9-7596f9d885b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b34be114-5e44-49df-9671-9fbb9ec2bb9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d166205-2cc1-416e-a0fb-930c361897d6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c03a538-beca-4a46-ad46-62398b44346e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2fa6f91-bdf4-43be-8dbc-91bad71075c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1707d29-06d9-44a3-b41e-f44709633bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a05fbd0b-acb1-4544-8995-470c2494d9de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "939465f8-bbc2-4026-9d0d-3f868f09d5c1",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25980395-a956-418c-b349-c66daa755dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16e82586-360a-4a29-8f56-47286b9d975f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396fe092-5d31-4ea5-860b-049ca70f5559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4778abb2-ef89-44ad-a661-2d7eec69f095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def284bf-57f1-4ef9-a5d5-b3ec7dc8a435",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6611907-dff5-4807-bd49-bc3b72881eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2d8b4f-6f85-48dc-bc9f-c1f33d963b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e5db8f-e4ec-4f1d-98ba-466173b96d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f7f2566-91a7-4b9f-8053-7012f4b49758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b150ff6-70a3-4efb-9108-b7d149899e97",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c2677c-a4d2-4571-89e2-456668212fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7849c9a-1e97-468c-8071-b7b79468e35b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1d5714-2436-43b3-a128-0fbaf3220bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2086dfb5-80ef-45be-a472-00965fd6ee1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776f2526-aec9-47a8-a042-87b046ab66a9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b674d77-63e4-4d74-b9ae-9ac423a24d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18483557-a62a-4712-b36c-8c784dd39938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64400b3-4964-4f76-9cb0-e9b3b2e1cc3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "507cf8e6-0575-40fb-8ba6-fedfb0b2fe86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7ec77a-bf87-4e7a-bbaa-a14deccb9a4a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d28e5e2-9629-4790-9a60-c70d7a0bf283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2149cc2d-97c0-4cc3-b659-e2f198ba8f53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ed18fa-0304-4076-8570-c970349e1c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b163f156-5ede-4041-9356-0103bb1034b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0c396b-9a22-4e46-9361-7a2974f6840e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19bc660-205c-4f35-938b-7386a3f48352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "692812d8-8fa5-474c-9768-b6c4c4d7c9e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83282392-7ccc-429e-8ce3-4b32a5d74fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "af388383-5a96-41a3-9a98-668c3cd7b672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97ccd5c-0e26-47d2-b116-a8e73916827d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1597eb62-b0ef-4a03-aaf1-f0f309256253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea7ef46-7408-41ef-bb5f-9f00864d8967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154a9057-3bf8-443f-8d82-58ff47f05bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6f34a35-2831-48c4-97ae-cb839694138f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ee06ff-4635-4972-a333-e0e68faf672c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cf186a-5e8d-4b96-9e2a-0dbbe3c5e558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6679e8f-84a2-45d0-afbc-3d2d4b7f11de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb958a8b-0c17-4318-85de-b0cb39322594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eea712b6-7630-454d-8fbb-8bad6e6b3688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7423773e-31d9-49e5-b3f7-6bb417d54015",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e6e25a-e419-4ff1-92ce-aae12abe74a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ccb95f5-c79e-4817-bd50-a79f795415de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8002f8-da17-45b8-92fb-7a28ab6e8c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "179fb94b-43cf-433f-814c-f736eb663001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7492c2d9-ec4a-44b6-997e-f88a65f8a3b2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "835f1c92-3ab3-4fa7-b29a-6a8b9a3c6797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ec092ab-1582-4b47-8244-03d0debba715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ede8725-5f6a-44c7-bf69-abdff43be54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a42b30b6-0158-48fb-b11e-a059537a155c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc6696f-c483-4d48-8de3-433ec4ae4115",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7a57f5-d384-4ce2-b0b4-3dc4eb6d599f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7860c239-4d49-4068-b6c1-676024f49f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e71a80-3a4e-4dc5-8396-87b43e484368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "27a06323-7982-4d6d-98c4-cd878990a74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7141a9e1-cf3a-440b-a821-074c4d90a70b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c7ebfd-e934-45fa-b55a-7aea64a50a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e5eb8b9-8466-4b5c-bc87-86a9c8ff9f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ab9c21-a6cf-4b8a-b8e4-71fa16aee20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b20c03e-7cf7-4773-a2f1-8ae17150e755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd89211-ad55-47b7-acec-830ca1c19ec9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e962f25-e331-4278-8434-e3e3be8e7552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e97c9d1-0d29-4e4a-b1e6-e5aa8e99f859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637bbdd3-4377-4756-84ae-edca550af63e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "68eec894-4e7b-4dec-bc73-7a85e57bd166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f26ebc-aa6f-4c9d-b343-3cc9bb5e24d5",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "456898eb-7e47-4e6c-beca-98171bc1bd69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4c93c8-3254-4c16-91c7-f06c4839fd98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e548cd-78a5-4352-a9f5-444bf61ac91f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eddc54a6-ae54-417a-afb0-34b2f7884579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f717d572-7d3e-45af-bab4-8328b41f7489",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc37e16f-aa99-4f73-aa26-dfb3fcc8a036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4d35204-7320-4272-b223-604d17ca12ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc2effa-3739-4e63-82e2-baf77a182f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0754f523-775d-4c27-bc32-d455df922cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319fa7cc-db9e-4062-9c51-927d92ba0c70",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f03d07-e355-45ef-b0ca-4fbfee2e64d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "029e3a5e-6110-4dee-8816-b6c9e5d9350b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e91078-686e-4705-97ee-79b6bb0b15ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "069633d0-83a8-465a-a2c2-f4f533e13e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebeb3564-ea3e-4173-9e4f-69014d885840",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a00b2b1-aa98-4ea8-967a-470dc42d02e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd81fd19-9c92-4cf3-9d4a-a09fe30662d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3dfb45e-f938-4903-bd50-3648d9d53ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0ee0c7da-ef96-4c62-a364-8dbbae47f955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73045cfc-843d-43f2-9989-0830502838af",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3dd3550-f8d9-40d4-bdcc-e2fd1ae4ac8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd5b17e-a005-4489-9aec-2e52491a955a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783a61f4-adbc-40b6-aad5-d0b0e9ee0d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3fd7591-640a-4db4-85d1-3b67376c0f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73840543-0868-484f-a41a-847efc540858",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad39681-c6be-4b23-8ae9-fc501bf03913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec84104-1b66-4012-afaf-affc6c144154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81adbf9-1ab9-4c7d-b170-b58c94fc2180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "774322d2-5271-4161-8cda-6ff0aad356a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25bb5f09-01ec-4d59-a7cb-9b3fc7cdd5ab",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a302d866-83e7-4f80-980a-27d36c3fddd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51fdb1b9-83aa-42b7-a389-064b742aa63b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfab6e8b-e2e8-4683-9926-270d497d4bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "081851e3-309d-4346-b001-d6fd1734009a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20484b3-5ae3-49b6-8fd6-20c0324292d4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6020f8a2-abda-4c52-97cf-c38637578fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd65ea2-5804-440a-b95e-310d31b25ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99325b1a-a786-4cdc-988d-6d3a236fa46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd10574-fd3a-451a-a52b-afa1b7fa8223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38270069-0f7e-4447-991f-f290ce15bb35",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5448d0c3-0b5e-41d8-aef4-020899bbfd3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67a6dfbc-28f5-4bc1-9f27-122501a6d7cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3867c5-93c8-4989-b22e-a74da825ac6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "74af3c8a-26b3-43f0-a4e2-50cad73daeaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315846af-2fa9-4ff4-8bb1-c34b461f7b92",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e3479f-1938-4aa5-9495-3b8cfc547019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b95b34c6-7cd8-4189-bef8-cfd7ee346850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71283a4b-f237-4d4f-a020-f1c0a2a2f515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2d2d387-fbf5-49d5-a196-d8055fff6eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28b1c56-299b-4ae8-8628-9ced7af063f8",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e02b847-853f-4c72-9f20-bf20344e7921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2255ba8-71c5-4eb8-be60-7a840ada5a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf2441e-4822-4017-a2a3-34ec89250356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0664e7e-76eb-4be7-9cfd-070bff8bf297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d814045a-77d1-4a89-9c01-b634cc5e3114",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ebf3d5-2f5f-4365-b888-45577efdcf9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22a45ca7-cdea-4119-992f-77555cbc3c77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8baa5cec-7291-4db8-a9be-960cc9c0ebe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1cacd18-a97e-4a06-8589-fc7c6edecf59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13558150-ea3f-4db3-931b-83a13c242d27",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b928146b-7272-41dc-bd14-82ad71117eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace5b447-23fa-43a0-82b2-76298b730ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8eb7bdd-c194-44d6-bc05-c9f5ed3a1853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09b3d0f1-e8f7-4754-90cb-835bc190cedd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed84871-f3ca-465b-a0ce-edee632fa9cf",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7994f412-9380-4c0d-b9ed-e42eba26759b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e291f913-cd70-47fb-bd0a-f254755ddefe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ccb70a-a970-43f1-806d-765ef7d36a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40c02b26-f5e2-4233-b703-2ee6b8771ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0193be60-99a8-403b-b287-9a1da6755b7f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9c176a-55e1-4839-ade5-fbfde5295e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57ae2006-4f4b-486d-a7e2-2b43a0b02158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6947550b-7a01-4395-adea-cf0c8d715269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e76ab40b-305c-4efe-87be-330b83ef9772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74670a79-76a4-41e9-8115-6a430f1c887c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb0e424-946c-4275-b670-a4bc47be1817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f515dd7f-d3da-4164-a432-f10e6de69c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62069ea0-5a6e-4c0b-bece-2705c07b0ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc94c378-e41c-4ca8-8ed8-4d7488055e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ff2dd7-238c-4614-a286-a3764e7fb95a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "888868b3-90e2-45f1-ad44-3c504e6d1358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e144feb-f65f-45e0-9fb7-1931e4a8e068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e5376e-b69b-4898-9ffd-3d85f54e625e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "750167cf-0462-4018-9255-24f50aa5f8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e71bce-1d90-4734-94fc-b8c5150acc55",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5e2fae-c8ed-4685-b28c-d8d4092aa31e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "296814f0-2f4d-4fbe-8d02-0be999b61b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "226515a6-5181-411b-9b98-c97fd9022bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a14a8b8-ef44-42e9-8fb7-cd9bf492e771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3d7abf-e818-4034-ad92-e2f22ddc468b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f06ab95-23ff-4f96-8e17-273383397970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0134e036-a960-4db2-be65-42e6065a4f32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54043a3e-c52a-4dbf-8ee4-eeb7763be11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "35966899-17a2-41a5-a8d7-fdd68563761e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d22e73-3df9-470e-9281-603e3ff85ff5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dedc5338-ffaa-47a1-97b6-556d08a4b79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9365357c-0d20-41b9-be2b-e71151fc3040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f414f3f2-1183-48e6-9034-430668a86fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "390179c6-8cf4-431e-900a-a9641fab6754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8843cfef-300d-40c1-9baf-d6cf8c087a57",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e28c26-c0d2-4f68-ab05-6617fa88c3fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7adf357f-be53-40e7-b148-378a00738d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbb8066-28c1-41cb-a8a8-a87263f216e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4be798e5-41ca-4e2d-aa95-285c425f3182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3aeb792-90b8-49e2-ba4e-bf54b328a1bb",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd3af7e-cb74-4cc0-b1dc-6410dbfeb286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae6d3d51-95ed-466f-8c60-ec9fd93278e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86081c64-d8ee-4cc4-a42f-55e080aa5048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2227880d-1210-4b28-bc37-95cde12f7bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9bab710-be6a-4832-abe7-d03c810a8cea",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2f98fa-4096-44ce-9e68-1c7268c67b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70c8dfb6-4765-44f5-8d6e-2309b8c58f36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc9102f-f616-423d-8ae3-3a4be36a2bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd66bf6-d3b2-4b6d-8625-dbd371f391c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4fbaa6d-6dbc-430e-9146-33492a37c25f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58050c0e-2067-4ad4-afea-138e574a878a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beeb0d92-5183-4476-b26f-a5c2f7056864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e704703c-b4c5-45b8-b2d1-47e5b8cfd99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee5adb7c-3fdf-4af1-b5a9-3f0df5ede69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dad14d9-b152-4417-b8c9-c2a61ef692c2",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c461dda-2dbb-40a6-b006-c155883c5bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9503737c-9fca-4e71-94af-a8b8a85b716e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6972c974-e602-41eb-9489-1e3f47ce1b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e8717c2-cbec-4c49-b2a6-101915c531c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf149669-bf98-45b5-8169-d4d2dab32b36",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eda3cef-d67e-468f-9eb3-e0e0a741b8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3fbfc9b-a0d5-4d47-b5a9-b43b5fe23cf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d4dd80a-5fa4-4fec-b77e-39b00da462c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "02cf9de7-f94f-4e9f-ae0f-920f66abb206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b19a1a-8cf0-40fa-b07f-c09aa133960a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5a23b6-6732-4dad-8d84-657390ad7f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4927b591-28ad-423c-8fb0-3870e8697b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f474377-23d5-46f6-bc7a-3c25bbdcfc9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "23e52cfa-b606-4b46-a9b9-a41e8d33640a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d6d705-c9ac-4be1-8fe3-fc707e11676c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4149abda-d834-448e-8cdc-cb34eb50d6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5606d2f-aab8-4213-a05d-f653658e5325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74cce0b7-6ca3-4159-aa17-fcc2f15ae2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc32494-c6a2-41c2-bbb3-96a9adbbdec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60346e6c-857c-4c5e-9f79-61d7aaf322b5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8894cabd-41f1-453b-b0f9-07923915afad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ceeeee5-5912-4e41-b57f-51d273d47d68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0c9bc2-6964-4e9c-8761-aa9a2e18ec50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b50ba821-3624-4c7d-b229-bdb437302f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ee8943-db5c-4eea-a4fa-8a96274120dc",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f12da00-1564-4636-bd0e-0a9bb195ddbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f63cd869-7f07-4589-9c5e-3ab7d2365344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef9409d-1526-4df1-90a4-cff2c7a43d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "520d4558-1471-4cef-a94f-bfc1a4996cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c21ce8-d549-4905-8c45-eb0ad23f56e1",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9daa67e5-df41-4037-babf-8b99efa8da5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28967c0d-bebf-4804-9662-5744355a00b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2087457d-3c61-4d7f-adfa-656cf95e692f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d164abc-266b-477b-b68c-ee4d8433fbb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760f4cb0-b4a1-4610-ac6c-490b15e4b9d8",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b85d50d-db50-4b2a-807f-bbe462973402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85906cd6-e330-45a7-ad41-112e7d097b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9db6bc-bad7-4794-b48a-f10e7302310e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31242e08-886b-4240-bd46-f00f0d90f9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69be59d4-a604-4035-a63d-e59c6ce7e3d1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7d0a88-3ae0-4c3f-9622-81318abba384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1179dc8-68ad-4ff5-ae10-a235feae4532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd72a49-a971-4c79-9891-c2dc89bdaa62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e202c94e-d3dd-4710-b019-33831b80827a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2811df24-49ba-42bb-9484-5521e938232b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1fbccaa-57fa-4f47-bf1c-426d59bca761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3a39a5d-c316-41ae-b3ce-188695ed2fdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d34765-fa4a-4391-b505-871683612c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "38f3fd34-482a-49ad-95d0-eb1879c02f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3f2081-94b8-4a89-857f-47cb67e0e30c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68026c6-684b-41b0-881e-bbc00c21dd72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd72f5f8-5111-4dfa-93a2-08fcb4ce2183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6705a0-48d5-4242-bb83-3514ca21de67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb29b06a-9d3d-4b8c-a2ae-a9fb75e02469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35b1c14-6c3a-4ce5-95c4-14d9ccc8b171",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270af579-0990-49ed-9471-5ee6aad7031d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2d2ba3a-ff91-47a6-8fb8-3a5020831fa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3879eb72-9e59-4fdd-ac22-0904af2e89f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a130f205-0847-4100-b0f2-a3ca46e3ae5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29673e8-f802-4e1a-8d33-a5a5f7b7fabe",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "725c82f4-7ca3-4507-916e-32f209677893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f1cd859-7bbb-418c-8aa7-791067ffa786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4745f186-f814-4387-883e-06b513aae1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "297ccd90-894b-4280-888e-b46819894130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c964b9bc-9bd1-4d2f-ad99-ce6a9a5e59fa",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df161a5-f030-42ba-a41a-90ba19920264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf6afb4f-485c-429a-9ec4-49d4af33b6e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1014189-a5a1-4f8c-a403-9e0ba4ec0e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "15d0d7a0-347e-4dcf-abac-4316733c38ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5e9370-51b6-484b-b1dd-1c1eee7e420c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e9fd0b-5863-4c8a-b0b0-062ad37806f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "403b003c-5aa2-4d3d-91d0-0ef4a3af07e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b365d67d-227d-4be5-84d3-e955c07e1e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "81cf78e0-4a1c-445e-9494-bb5c823f72a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb18e19-20a7-4e99-99db-22369bd4afad",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15ded63-e82d-4fa7-a04d-c30412949e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e3f41141-eb4d-45cd-b644-04b22a6e7db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a9485b-6c84-4b06-b65e-4ad8e1f9c833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6987e10f-e233-4c70-b201-61c23c4643ca"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "237c4dc2-af4f-4896-81d8-7a44ddd87696",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "51cda500-6686-4eb4-906d-e29f939ec3cf",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d35af3d-baf5-48bd-85f7-8cc6ae002c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dddc8097-25e1-4f1f-ba19-518fb1a17f81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fba6e0a-ecad-4742-a29a-78e8e0a8670b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8cabe10f-d58d-44e2-bc19-6116374aeb96"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ba03d00-fd6f-4a32-8819-f256a4b26578",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c6585e4-2f70-467f-a627-a828748aea15"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "260022ad-1984-42e3-8fa2-11281ceeb83a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0cf0903b-39a9-4c15-adcd-9f9683eba8b9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "49887227-35ab-42ca-9334-051bde3d96f7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e98e2121-70a4-42f5-ab1d-fb8057062db0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a8f86cf6-f893-4bd6-a297-c59bf8c065cc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b6945304-156c-43dc-94bc-b2273d3aaf5f"
                }
              }
            ]
          },
          {
            "id": "0aa5c3c0-ea74-4932-b5f4-a3e5852ad0d4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4cf2e1c2-bd0c-49d6-a8fa-7cbfea7f0b6b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6c281ea-1825-470c-91f3-30c54f4d2535",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "699ec6bf-f309-4f16-98f5-cb9fdcfdc87f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43f736e7-5c64-4bcf-ab78-ced52113ea50",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8573518e-cfb3-4e6b-8bbf-cdd1bcf2ed81"
                    }
                  }
                ]
              },
              {
                "id": "b7c06433-170b-49db-978b-38561c4778e0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "588c96b6-0a4c-4f98-8a0d-1b954107db6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd66a428-1fb7-4836-85aa-31e64d5bc527"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7d8bd04-6440-4c27-a383-47b337a07900",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c4625bd1-fe49-4e9e-a5b5-b8c270e9d631"
                    }
                  }
                ]
              },
              {
                "id": "96e412f4-d5cb-411b-ad53-3927ef0ca40a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53d4eaec-0153-4f76-81f7-37d6facfe190",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cddbbded-9936-4f2d-8715-caaaa473a6d3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e60f853a-9533-4a82-969d-c12554b9206f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "77399f0d-7f47-4fd6-a354-79feb0732784"
                    }
                  }
                ]
              },
              {
                "id": "ee7a2ed4-9782-42b0-bc32-a5b93d5dd0ec",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf25fd7e-fe97-438e-ae64-188330084fd9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a498c15b-fcea-47df-8fd3-765b5cc0c796"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cff0b7ee-dfd0-4798-b694-716e260a70b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8c3609fa-086c-4cb7-8565-c73b01f970fc"
                    }
                  }
                ]
              },
              {
                "id": "9ae2300f-9999-43d5-aadb-9b21359822b6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e9e65cf-3e5b-4c4f-9343-a1aa524dd27a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ec194fe8-a3d0-4cf7-a6eb-fd83ffad248e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5588141-c66a-46a5-807a-a86f45aeaf2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b345fbf0-57ff-4fa0-8de8-5f28e263c66e"
                    }
                  }
                ]
              },
              {
                "id": "a2faadf7-3ebc-4d78-9ad9-9821f7e61380",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "039d4cf9-31ad-4b70-87bb-4cc479cac868",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dd11784f-12a9-4a9b-97df-fdd5c92b17e0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87cfd4b6-1eb4-49d8-b869-8beaddc0e899",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "95dc93fa-a9cb-41cc-8637-f3fca50e30a9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "28621e21-0e68-4743-a70a-b8ab875be545",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "20155a69-3e97-43b2-922d-6f49bf71b3f0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2a82a6c2-574c-44f2-8b5a-4028ed4ca4eb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f549848e-5296-4b79-93c1-6d797fe36ace"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08098738-af3c-45a9-99d9-e51d3ade1888",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7340f976-c9df-4d2f-86f6-a42a57e58c76"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2f515b71-294d-407f-821e-597758ecafda",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "016265b9-e5cb-4638-b206-f70d241cc4f0"
            }
          }
        ]
      },
      {
        "id": "fb2d94ca-d3ec-45cf-a5d0-c8bb5ee77155",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "acbd18a8-cc74-40c5-94ab-bf3c6311e19d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ca4c04fc-e5fd-452c-b1f8-5116f3eb673d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "98945111-f187-4710-b5ba-9eb6be75ced9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33addc5f-c85b-48a0-9249-988d604aad29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "070c45f1-9a49-43b2-b21e-aae92b36da05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5772e61c-a2e2-4fc2-921c-7036313c6ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "010d5d94-1ea0-40f7-9f73-f88c3ab78871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168a9878-a06b-47f0-a16b-e2b0a51d695d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcddbfcc-9aed-4ee0-9629-def7a5015688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af7f7f65-938e-4cd7-a42f-452ce2208fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a3767a-c6b9-423f-9378-688dd3366e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "995dd54a-bc0c-4b60-a1e8-8d6b255a7258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc70b7e-7561-43f8-8e63-f62ee4fe3f58",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e8e85e-7474-4400-9799-a22b580fcc9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0591da9-b496-4374-a271-226f90df0d55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147763ed-6b76-4dda-92ff-f34f151bd75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c32e5bf-c791-4a34-b00c-ed43a8736651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8fab25e-87bd-4249-bfa4-24494caa637c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda23d20-450d-4dea-8176-68d72319e0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00c959b2-b5cc-49ad-8ece-379cfa91e135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189f1456-e7da-497a-9330-94ee68503f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5180f1a3-f98a-4630-90f3-72a2a0d3982d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3945bc9b-d379-4e5b-b1a8-72b58ef3b204",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "942052fc-b6c8-4586-a560-2df167dfa811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0c5fdfe-d9b9-4e54-bbe8-77542ee9d025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d72f941-cc0a-47e6-93db-074117a55cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7bd8b01-f9f7-4be2-ba6b-74ad934b390c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0f5c7f-7370-4323-990a-932bc990fa4d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1c7656-4bb3-4917-8cc1-f6efdfd3f879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e069aec5-49ef-4a4f-ab9e-0b5a0656af49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d90a9b-8eac-4b6c-b7b9-bd3b97f48af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d32a66e-c3a4-4a97-9a85-35e4086799c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36bbee37-719c-4979-be21-b5564966f4ba",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f557554-d6c8-4bb3-84aa-4ea3643145f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b748ac30-9ea1-4cd8-aebb-2adaa2b3574c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e9c701-5c00-44c0-9058-cc3e1453fdf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "de57119e-0102-4e09-96f3-ebcd0d5f1745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ad94f9-792e-46e6-b7e4-2be7d5d63a6f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af5d6ace-5d19-4ddb-8008-729528c51b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2d37500-594b-4f87-8de4-27cd7d938c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db0baa7-2c03-4e89-a0cc-1566082aef96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e2973ef-1eb9-436d-92c2-b4ab49a78e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c608b2fc-ba3e-4ab0-b293-35f42bbc1624",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f146f363-716b-4766-98f5-42a838d1c099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c4cdada-d29c-4977-b3ab-d8edce64924d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7638985e-78ac-470c-931d-e0505cbf873e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "766b1e56-92f9-42cd-934f-a4b361e48379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ff7775-12c9-479e-911d-241ebcf987a9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6665babf-b204-4e72-8ca8-8473101e5d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab6929c6-330d-4ac2-83a4-8ffe4ccb1b3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95def64e-05ce-4c7e-8d8d-3a914da8912a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "09826742-2a20-46c6-9304-cfead35266e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7d4605-d341-445a-bc5e-6b2685467f4d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8be244-0647-4bd0-aa36-41b8774be14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f698a2-a07f-484c-9d91-1c83756b7f9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e34d58-7b06-4c62-9812-fe3df7f9f1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f4fd4120-9f66-4ac7-a890-e3b30b45510f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1fa6a7-85e9-431f-92ab-d24b8b8865b1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9974adf5-16d7-4b06-a47e-8a0edae68b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84173465-0268-4899-a3e2-7db702b5afb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "383e9c66-6dea-4c28-9cfd-2eb9128bd965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b5c388ec-854d-47b4-9a55-77d815cdfb1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e06ec6-28a4-49d5-ba51-2b28e2fa662b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "629ee570-a11e-4aa4-a43a-2c637fce59e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d1ff252-e2e8-4028-bc17-1c17dd0d7107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12727af-e319-4655-988d-4278d65b1cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6e45937-f528-4323-97cb-9ed9200a6b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8af9fc-9435-4eff-864f-6c1f6c765431",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60208ccc-0df8-47aa-9aad-b303e7da5a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f135a9d-9522-41b1-9542-840bf7855876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42356a5-e009-4bf8-9172-c6c7ada217f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bed1c73-2301-4005-a9b5-78de9794c17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0e3b8c-99c0-413d-9bab-7eae1c94538e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e18bcd-d515-463c-8d52-4f8178041f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e3e85df-e1b7-4847-acbf-dd268941fbb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c06bd5-1f48-4434-bd31-331f8da987c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b266a73c-0c28-4a1a-91ac-b0f5a33dac84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a074f2-fcdb-429c-906e-645b618505a3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "756ffa5e-4dd3-4be3-85e0-281c1dad5827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eba7df4b-e4d3-49bb-a598-e00b3f10310c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae74ad3e-6f30-4743-95c7-b902f8aecfe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef62bd4e-8e91-4d40-8351-127a94983be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7054b28e-fda5-4f07-af69-5834dbe17c9c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8d7b0f-92d0-4490-8922-7f9d0c499c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bff2825-2a92-42d2-b9c7-9bffa8fc2ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c56293-bdde-49be-8dbf-8dd4c0b851ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "70c25f84-131f-4e83-bd1d-973f101af1c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1371a581-2790-488c-9628-c0c0e9540a82",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c064e568-6645-4d56-b230-85b210eda997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e9eea9c-20f2-4234-bcb5-0c826a91baa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9e668f-104d-4fe4-8899-ad1857f26220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6257e4e3-0e5a-417b-923e-0f75318aec63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f46dc5-3235-4bc2-afd6-72fdf306d140",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00240610-6f58-4869-a830-e95324d7792a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d0579d-d2d9-44e9-8a52-109d7fd00188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e8226f-778a-433b-8d50-2c9bd8bff319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d10abaac-7ff2-4891-8be7-a2b550b47762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a00a4d-292b-42b6-80ec-1f14164b1648",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b09c21-03b5-4d43-b65a-04d306f85e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4f0b4dc-0229-4d3e-83c1-f895d619a537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7080d107-dc61-481e-a50b-cc47bf36f2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf0a4e68-2f90-4e6f-a198-cd1cb0a7d6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf1952e-348a-4300-8b86-9377c3ed124e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beac0199-9b0c-4e69-b98e-3d5454424e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "002e8607-2e3e-4bcd-b7d3-dba021b972aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc973375-bc7f-4964-8cb4-16832272a3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cbffa0b-fafe-4432-8f24-25a6ed7bb7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8841de-abd1-402a-9cca-c76bc534ab27",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4590faa9-4051-41e8-9870-f196e90561a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aebbad2-f790-46d9-bd5f-0c9d15d69ef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6fb7cb-a207-44bc-8997-cd72d6bb1336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26089a0a-17a8-4661-b5b2-c6ca54ab0d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99d83bf-db45-4035-a90a-3090b1666903",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "125ed024-5b29-4825-9929-2b31a2ba94e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eda5960-06f4-48ec-b94a-8293f7732d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd9a0e6-9fff-40c1-b2f6-2eccc5df743f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d2ddcbd-f3d7-4cc4-ac67-5f1e0c085ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69753b40-fd8c-4620-8621-a8c63edbdda1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ced1dcf-09b3-4dfb-87ce-e2e6bfc20471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "164b9f9a-1bf9-4855-b56a-e137228f2908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ba10a7-1f9d-4efd-9833-851c7ee462a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f2204e1-df5b-4f7b-94fa-8e590d4fa0d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c60c38-3f55-4c80-9108-edb41e4d675d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "612851ea-894b-4ad7-97fc-3c0100077a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "402c343d-4708-43e8-8878-ee8dbcbe1cc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b7789e-ea28-4dc1-8c74-0412996781da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6dceb1b-ce6e-421e-b3ce-661ab71d8817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6748967-7e29-4f25-856d-50142d7a8ec6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2234e8ef-93f3-41b3-837b-82ddc6ea1ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0eb91b8-045b-4aaf-9860-593cbfb32f9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67e2487-fd4e-4554-9617-2ea066dbb55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cea4e5a-11f3-46b2-9b4f-4c98b20ea8c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e4cc44-a84a-4c01-97f3-17fdc21d16d0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d341ee01-4fab-4550-befc-faeaa6f9c09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "433eb45e-88cd-4650-b9ff-5ef3a6de9adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743b0f07-9491-4bc9-9289-c4edbbfd080b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac59573c-485d-4a3e-a006-d4dc5d5ca8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95238e20-77ac-452e-a9ed-6bfa53133f44",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e5f18c-5b81-48a6-835f-3e8dce686234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad12162a-b0bb-4d64-ac42-0de3230e78fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8edd37-82c5-4851-9ebf-3ac2893ed0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d27b41b-dad5-4feb-98c9-37bd6f3f09a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c978c9c7-7578-495b-ae23-38ae0af747b6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b66ae558-5668-42f2-bc78-c5fe4c3c77de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e009726-5ddf-416d-8b70-fee2b4e87ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8509aec0-edb4-4fba-9cdf-9f8de813a709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d49fa900-c19a-44f7-a12c-f5e6292dacec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68fc95b1-a650-4951-a253-82680fde6ca8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7a2021-ee1c-4a9a-86d7-099b49a1146b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43939020-2e2c-46a3-9613-37403ade5559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f21fc2-c6e6-45e3-ae4c-7f4c5a4906d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "833ad1b3-722e-4d51-a605-b08aef6d0126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b06618c-dc7e-41a6-b7a3-143f43014de7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c55a434-ed45-4362-b9a8-d10a63819646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "941d3621-696a-43fc-934c-a1e7e53a380a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8ee66d-c107-4257-af11-83caaca0e17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5036ac88-7e39-46a7-ba08-60dbb863e417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f475436a-db86-49c0-847c-7543db1e8e72",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a9802e-2ee2-43fb-b102-9f2c729557df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeac99a9-9c36-456e-825b-3e608fa3f44e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c35b9e-758d-4785-bc17-4e2b7918c8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eef44ffb-b4bf-48ba-862a-9673ca9c46db"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "637cc85e-a9d1-4693-bace-1e2113ab6f2e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "89bb24cc-5af0-4df7-aa9b-4cce2fe8439d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc413823-7746-442e-b5e2-b10ee8f0d338",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "237d9cab-3af9-4fbe-b2a7-0e8cf3917739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2abfe6-5ae4-4225-955b-97bc9d3fc79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ae2d863-63af-4c2f-83b1-e864fb08118c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c0a05ef-f307-4805-8a2e-deaff7b5f6c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b898c89d-1e06-4de7-b248-ffadd23a20ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0168752e-2162-42b9-9bcc-3288cf600ba5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4bf7d322-5b48-461a-9ae7-a5e1521e9bf2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d54f035b-fb3e-465a-b3e5-b5bf48e6a2f8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "83e60617-df7d-46aa-abd6-95fe8eaff81d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dbe44fbb-67a9-46f8-9cfa-93716aaad96b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7c73ab94-4d37-4b8f-b25b-075a5a93c82a"
            }
          }
        ]
      },
      {
        "id": "beeb131e-7719-42af-a183-b9f555a7b723",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "229ea8a5-2879-4290-8b0a-02a2aa59bd02",
            "name": "Negative Testing",
            "item": [
              {
                "id": "71bb327d-d61b-4473-ba2a-2ac436f40611",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "32f48e8b-3d0c-452c-a4d8-698e8fbde102",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc266df-3390-4115-a977-663748e44c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b60ff09-a39d-4242-a4c3-4f6b1d90b012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b536d8e-9a94-4696-9bb1-389f57e206a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "62ecec4a-4eb1-428a-ac03-22dc6f47f122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43aefce4-62cc-4eea-9e60-5a7f984a4503",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa98589-ee55-47e6-a751-cb94be7efca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef655e4f-1d1f-44f8-b3b6-389b6ff4037d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f08945-f5dc-4f84-98bb-fe8285faedf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "55ea7941-af47-43f4-9f0c-1aa4d5b1ff64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba54de0-0746-4d68-97e2-4c9490135c50",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4040b3ff-e8ef-418e-a0f4-f9d5950d3f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa06679d-ee0e-42bb-9304-ac16af15a9c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1a16db-5f23-4d6b-8847-680d55472199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a77b675-b33c-47db-879e-b250d189796c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d8b768-a5dc-44fe-b501-ffd365f5fbc3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac15ec9c-2003-47bd-be92-e3d434d5f7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "664db250-ed37-4419-b2b8-3f82a7d0e3eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dcd6227-025d-4dad-9ea7-1444190d78bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4bcef69-1448-4588-9277-caaff6d7ac89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c655817-ed72-437a-a11a-a9b9d5b800a9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6f0860-f6f6-4c7e-9438-d5950389c211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67324da3-183d-4cca-ac35-1fb2a8dff0e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1d3605-3242-4ac6-a7c2-e5276bdb58ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93a40f89-7664-4808-a3b6-92026c22ae71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1c97fd-6309-47d9-bd0f-3c10833b0d72",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca199eb2-af69-4d60-87a6-67c5244d2d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad0061fb-54cb-49e9-988c-b3850f545cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e520d2ac-3725-4774-97dc-eadc910fe113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "420bc94c-cec2-480b-b01b-543c05fa2ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfef1bf5-ff27-457f-809e-e7b50a756165",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a913312-6a2b-4177-9b05-328a57ff4863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aede27de-1f7b-4413-b3c8-04cd785edd68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1dad176-fa34-4a30-861f-f0f07b67b17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd356dca-4ca6-4ce6-9d10-c8dd7f0edcaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758d296d-a4ed-4d40-be3a-5853c694f2b8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac5a49b-b5a7-47d4-bafc-7318763adfba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07010c44-ad74-445f-9208-a35518f1a62f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03cb7806-8b90-4877-b292-f1c185f59542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b8cc559-3f76-47f7-ac28-28596bae24de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0687f5f0-9142-403a-b3bc-220516463617",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edffffb-980d-48f6-8b1e-2351b9aba447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55cf75f6-a16d-4a3f-be6e-cfbdae5b2017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29613c9f-501a-4052-b0fb-a96d7d3acf8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "21b208f4-ad45-45a8-98a6-6ef43bd96b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d4df2a-5bc6-4f62-984b-6bab1ab7d3fb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "002e55a5-da9f-4b29-a538-2992b2a4b254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd715d42-9e5a-4312-8ea3-ecda6898da5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ea28c9-0341-46f4-873d-277051fae5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88dcfe2c-3422-4309-93a3-6781b45dcdfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "344fa9b9-42bc-4edd-ab7c-fbf315ed68d8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "807331ae-2c5a-4c84-bb2e-3cf8c6075c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ca330ea-b3eb-498b-8f84-fff5aba443de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263bd03c-326f-4874-a27b-c40e44f66613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7a018ea8-9743-452b-b2ac-79cb67285751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df6b898a-e6da-4bce-ab74-834f689cbabc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f25100-9571-4d07-ba38-059fa3ba2340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aed59df6-78e6-4de3-ab1b-be1b3e43f351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6de6f3-9000-42cf-aa7a-694716101283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8e0b7906-448b-4c2a-932f-27ab2d5b81c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4e8454-588a-4f39-9e01-61eb79711e99",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c1b746-da07-46a2-9064-006384e1fc55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f1a54b8-aff6-4186-bf71-319a2af9f58e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd24c949-def6-472e-aaef-8fdf9f6af35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "92268175-6749-4f57-829b-d7fac1c921e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2097014-b7b3-4db2-8f63-bbea6f823dd3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87d71b6-f3c5-4581-b615-ca36cfa00ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11d478f-32f8-4715-a459-5a6d5e806b96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5530414-25cb-4c6f-9e49-710cfd91397f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "74b0c507-b7df-444a-8e1c-68b4fa33f1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4096c4c0-3dd2-4383-8be2-ce41e44705e7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a963cf7-4177-4afd-aaa6-50bf279fe465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27ca2f6b-0c65-4a58-9ff5-6c350da287c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bbfa7e3-28dd-486b-994a-c0495c355fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "916ffae8-0108-4e2d-83cf-026574a6a91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77fcd535-ee7e-4c00-b70f-438fb36106a8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "377d0457-f207-479c-ad79-32dd0721c68f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de466e44-7d31-426b-b553-e4fe51d9829b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f1380e-4a65-4700-a72c-7686b364e39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5174aa3d-9ad9-46cf-b3c2-59b1d01f5dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803b7225-6d17-44b0-b45e-5a10271d5e25",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4de440-c56c-43f4-9528-8b749cede137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92322910-0da2-4769-8b25-edac66d2e004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a008b71f-e071-47b4-8f09-44cd39496d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "171d504f-45ef-4d77-bdfc-86e736981b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a7bc16-fb72-4f41-8089-a83f0011bcbc",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c4a639-e863-4e51-83e8-1802858e34c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "635fce08-6bae-46ef-abed-fed745af0272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d843a89b-2ea1-4ef7-9f6d-1ecc5e613972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "798f4841-aaef-49f8-a70a-6bf6113b51f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246e0313-b5eb-46a5-8ba3-d924b9b97d58",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6391726-9557-45a4-ab67-09a814822b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab83f69-9e23-45bc-878f-2a12d94a5206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f40340a-a551-46e2-ad49-a32b8885d3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bec3fb3-1704-4b87-94b2-046bb7dd27bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9aa922f-b50a-4cc2-8b95-f74ed97a6f12",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce5f6fc-b4b8-4a0f-b5ee-552e1e0570d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f100d33-c0a9-4034-9ad3-25d7b4b4ed95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69093af2-116b-44b4-9c93-a56a6bd6b272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "838db93c-da82-40b8-8470-67916e1bf76b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ec2fc1-5793-43af-85bc-02ca7a265f00",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858dfdc5-f1ac-423f-a142-3bea0a9cae78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eb5811c-dac5-49f4-848e-9bac8b2e6308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598300bd-59cb-4509-973f-374b4176e60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f27d501-6657-4891-951f-b34133a60ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1afd67f1-9b71-4454-b492-7e70c89979cb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643d5111-b8e6-485e-80ce-3b051ef2b371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19803880-4e17-4c41-a2cf-b359bfd7849e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24593c91-77e2-4a56-951c-d060e65589f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e77cf2e6-6114-46c0-963b-a8aa6cf0416d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2a933f-11e8-4077-a681-44cb6bc3ccb9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2351c7b-589c-4588-a4e4-2f38ca79065a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a426bc-c9b7-4d74-b6ee-3c5c5d0bf932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c45296-eebb-4bee-b50e-d6539ff92a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9a934b7-ba06-4d74-a265-e526d88635b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d9de46-c070-41fd-a67c-04f28c4f96ce",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9800272f-b19c-46b2-8573-e0bfcac499d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a9817f-b548-4eb0-bc1b-6ceaf27d0cff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e755fa37-e099-4c20-97b2-61a36d86a19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb2b86cb-b638-48c8-aa23-56c76550499d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a78162-96e2-45ed-8d3a-7b10a7aeacfc",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad00510-306e-465b-89c9-034fe452da4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee6470ea-9247-48b8-93c4-bbd7ca75be3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2daabc4d-ac4f-46c8-9ce2-0ed9bd290302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7de32a25-ccfe-4abd-aa10-6495d5fd69ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af19a41f-9ed3-4600-9908-453c24a337ca",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da52d553-9406-4c24-b8a9-882cacb205aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5c7e4da-f4af-45fc-a9c4-c0bbdade013a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f40578c-53f1-413f-96a1-8912c8204376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01244881-c4b1-4f03-abaa-bf5ee95244a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18735136-145e-4305-8ce0-229aa7b2cbb8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "802bd176-2ca7-46b7-a544-4efaf1ba8ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6672b2f6-135c-4b6a-b5a7-00eda2b25d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2a388b-d47e-448a-991e-d4784b54d8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e57f731-ada7-4cfb-9a86-bf8867b5a0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f73e90-e740-499c-b082-effbca65aa1a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571c6b4f-753a-498a-946b-c28c93c02d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f0a8ee-07c0-41c0-870e-d1720ad0f0a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610b7498-7da0-4430-8dbe-97cd2dba978f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b3e7d60-c572-4f6d-8c8b-9e8ab3622843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8607df5-5732-4fe1-a5dd-7bcfcc9f1aff",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2fde37-3071-4ca5-8ea8-67428c0ef90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f3af79f-ecd0-4e96-83ad-427b332854cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7459dd-ca1f-429d-96fc-e132cd977e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fa05502-c61b-4f3a-bdb7-b6eab204e903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0cf703-8893-4970-b404-56fa3503942a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b929c41e-da9c-435e-a45c-19809e4d2f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d90a2f84-ca10-4368-8449-2e5be115be4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807e481e-6635-4b83-8825-34b60e32fef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "473b3076-de70-48e1-9fc2-48ba27259270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2727c26-e83c-49bd-8b4b-86a7ee4611c6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b71f6a-315d-4f08-9052-00a8e274617e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d296a348-a130-45f4-8948-1d014c81788e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6ce1f5-6a35-4b5a-b25e-65a0001329d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4705f581-87a6-46f8-8730-b83901e5d5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cdc0a29-16c5-43ce-9aff-390345c32852",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af8a806-d92f-4126-81b8-5b0f2b9d4467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd353bc-ad06-4b62-a0ad-0d2f9098ba4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d567fa-b491-422b-8904-b4dd5ad509fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc809a18-0b49-430c-8958-75708132a4a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ecd8ec1-4d46-470d-9586-a19de4d4fb85",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "157cd8c6-93be-4f17-87df-9c7db94ddb9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29653d42-52fe-460a-b225-68b19ae4af9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36315c3d-d5b8-4f88-90a1-b205e0c7c331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3260c904-0c05-4fa3-83a1-4e195cc958db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b709b6-259e-4f6a-bf9c-af8f4c93ec37",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "510eb5d6-e2c3-4080-8094-10b5d77fa8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e59b0f75-fdc1-44a6-8bab-d747a1501e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9200cc65-ded3-4434-b9ec-6b5888b76ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ddc8c62-81af-4f83-9168-896916f996e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec569a24-c2f1-479d-932a-c6cc622cb393",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc7718f-fb15-47c6-a98a-ab2d33951e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "840ba910-4e8f-4c3f-ad0b-f4a143ea372c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62068ce4-f844-4d21-8cd4-48f37fd8cdc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e1de498-c6bf-41ff-8ab0-dff1a6549936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118ddd4b-3da8-4ae1-9bd3-863f4e76afec",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd36a51-8f95-430b-a286-f59efcad52b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0835240-b42d-4558-9ee2-c904ff2c94c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d9875b-86f3-45f9-be8b-5a561b1ecefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb39ecf8-3f17-442d-8b43-f0235422616a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12484199-0a38-4417-bcf1-d35c4c0b7677",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab8ef19-2b6d-4f7e-9383-3f59b2d6048e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c11290-199e-4763-8626-5740eeb53034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b30ed7-efa3-4bc2-b22a-e40565337231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e148b8d-11b6-4a8c-9971-18c83a614d51"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cef75296-b2aa-4c68-ba01-0288950c0f50",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "25dd8715-0f6f-40f4-b689-95ec46edc993",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee985ae-97c1-4f74-9d8c-54e179d0609f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ec1142d4-29df-4fc7-b5be-d24176e554ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f226e6-80a9-45fb-bf96-3e7c3c99f4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d2c7ca5-b082-46e2-94ef-80d5b768d40d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7fc2f87c-f6c7-46f9-b93e-21b679076c05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "528dbad7-c163-4495-ba07-53fedd7a4aa4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eddf8f8e-652a-4f1c-8e6f-9372db0ad8c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2336e121-2af5-409d-a772-84f09bc800c6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "76ec500e-9c30-4821-b486-b4418de6bc59",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "72448f78-d6e2-466c-9ca1-3d36799d5121"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb2fd182-3be9-4a0a-ae59-ae863afea83e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "afcdd15e-9ed3-44e7-a9f9-abea3f834d4d"
            }
          }
        ]
      },
      {
        "id": "ba707c62-29aa-4c15-bced-c1f4a6784805",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "44ce69a1-8171-4123-a934-34879ee26b67",
            "name": "Negative Testing",
            "item": [
              {
                "id": "81cfd1ac-1d54-4311-a888-06942055e7aa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "210d61d4-aa94-4e49-b313-6f7281d3e8d4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64dbe764-093c-44f9-9c79-169da7fec38f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edb90b6d-7f7a-4ad5-a8f4-bf7a80962c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c51c177-c047-4a2a-892c-126e7a40a420",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beec8a86-1563-459d-9572-2894d7a569c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241670fd-5d56-4ddc-a4ac-80f96b44590e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807aa737-f0f0-440c-b05d-49d1921ff4dc",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23cd4e2-7a41-4aaf-9359-0cc347ab9d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "337c42e5-6764-4dd4-b6d5-f4ff2656e9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9255383d-8b12-443a-a48a-66415aa13a60",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38891f02-6878-469a-ad41-aaf410c4a59f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f951b6b1-8475-49f4-b603-6564ebca5db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc609718-7210-4807-9038-162a9f58bc8f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7fffa80-845b-4484-a287-2f40bd896f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "467c1877-40ef-481c-ad17-db3901b21486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24162af2-d42b-49c5-a1f4-54282ad80d38",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff61c2e-63bb-425b-be73-56df71ed7728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d874d0eb-047f-4e6a-ae7a-74483aab550e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "809548fb-101a-41f1-8ba2-06df4db40fb9",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6038e020-e932-45df-8273-961668af8bfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fc24425-1dec-4ea7-82a1-97cdc3c8cf0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c35a06-0797-45d6-aaf8-eaae850e2c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b25571-8930-4d06-9e99-549710bb01e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f09c2221-3542-4fae-b563-688714655c61",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9cc520c-dbaa-4089-b890-90f7ceaf29ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5341e6ad-1883-437f-b82a-6bc0e9f39cc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19008315-fe9e-4d04-bd06-c998af8e36b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a74e4a82-6d7f-4fdc-a768-4837a96d7d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c953eb3f-1f96-480a-8ae4-15022fb859e1",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189d7b49-87d7-4dbe-bd30-dce71aa8c17f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31075093-7838-428e-8824-da9333065092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "125b184b-7b73-4145-a043-aa01c5930ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3fc2fc1-c38e-4e88-959e-4e76cd07078e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ee9fe2-4d48-46c8-8882-2cf65f418e72",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2283aaa-7948-47b0-bdfa-9e8a8d030aa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b609f553-0688-4f8b-a0f2-d70e90e2da6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b4e812-76e0-47c3-a94e-89a6e19bfd93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ebf65c-ccc6-47e0-ae93-9985b4da20e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b79d9c-c78c-4761-a5ad-781dba938b94",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e78e05-3f80-463d-ad11-b7d64277c2e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82ed2b4f-7a25-4fbc-bb83-1318e5714233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0f0a67-7be0-4b00-99d9-b8543c23024f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60fac4c7-84bc-40a8-80d4-182c6cf8865e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162ca8e9-ae14-4659-b3cb-6e0397ad0ea0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a06bee-562d-4537-900e-1bb48b616d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a16757e3-8ea5-49d9-a1e8-c27e8d4ec6c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3a475c-59bf-43cf-8910-8c3c7c3a77e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85e2478d-2262-41ff-8a84-ae28656422dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "812dd82d-555c-49bc-97db-ff956ebffa93",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4090fd6-6cf4-497e-a781-7ded86529217",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5cd203c-adf8-4de4-9894-a3f41b71c24b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4135a94c-9223-47ac-b516-c30fa61bf73d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e45580-f41b-4f1d-87a6-518bba7423fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aacd2808-9512-4e36-b7ff-82241f83e91b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151a8426-88ce-43e2-b687-2446ca1b3f8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c749568-dad9-4b35-ada8-67d1a8446eb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9977dca1-ace1-4ab0-8055-093cb85e9a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1afcd1ea-0f61-4900-bca3-c3d35b9cb483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff64a2c3-91cf-4c49-bead-d760fe420a2f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea27836-a8a8-4064-9db8-dd964b54219a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "393221f5-eaf4-423b-bf8b-9216515c6937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28094879-3c5e-49b2-90b6-7ce7d6035495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d7c5516-9883-4eb6-9b29-8d8691331b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a4fcbf-c554-4c5e-8603-5abd43c9c82c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68817bf3-c689-4501-8a77-f0114a8353b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c23c20c-1d57-4986-af96-ff9876fbbaa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c231e355-68ee-4877-92a6-8d2893f1413f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8ab3165-105f-467c-bcac-9eef6b8259ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d294fe8-85b8-4cc6-b747-73ab2ae5dc90",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a4353d-89b2-4de3-a568-f698e137fb64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd872a4-e2c0-4414-88f0-8171a1f12209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "501f71c9-45e1-4295-814b-6ed1bceb046d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35ce358f-5682-443e-9a38-b7a65acfbe53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a4cddd-b11e-4a55-96c7-e673bdcade50",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4775dde5-1c38-4f53-acf0-de4c29e4e0f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d79505f5-c327-4510-b6e2-827d7952d862"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc516028-e566-43f1-ab77-1f850ce49ffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cbe16de-409d-46a9-8a1f-9f35c7d29a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e6d7c6-ab87-4c2d-a66b-3077c583770e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2223429a-1514-482d-9779-353f96563e61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3067d62e-1b13-48a4-b704-30ab8e287e5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fadb4fe4-b0d5-465f-a416-e6f17da3a773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dc7b828-2103-416f-8d76-727bd8c5a90e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb20026-3dbe-436f-944d-8cf35978c4eb",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d959591-e6b6-4a0a-a918-3a648b2e61cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9f0a30e-47ba-4335-a549-585a5db82b7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0993ad-18d7-4f6e-b56b-ddbca57b7afb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b42c6940-a625-4942-aa8b-4d8765e79e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6704eaea-7e20-4e4f-bd34-738a5e597d0c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b954c83-df15-4d3e-a5e9-c10b428be025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef7e6f3-919e-42e4-bcdf-df459cc100f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6ca033-8813-47cd-ad24-adba96f30ca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d31c7367-e6bb-4879-8cf5-f6b43d0be2f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86de351a-cbb7-448c-beeb-e2116cad83e2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7de1dc8-41e2-4c54-93ba-f9da22010bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa8eca0-9da0-42db-9991-b88d3072f0bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c502a5-c510-44ab-b276-c7dbf2114337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "209f24f1-b076-4192-bda7-96a150b87f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56da445-49b1-48c5-a692-9591a92eafbe",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc1caaf-7c65-48c6-9337-919e18696b4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2c234b1-2782-43de-81c4-1c1adb34b060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ea5cb8-b10a-49d8-a21b-7ea10d03c19c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba865076-9ad1-4b78-bca4-9be2d1491a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740c5547-b638-4bff-9b5e-18804d3c8734",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443ce316-04ed-45c1-9556-d58c0fcc2ec8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5c49e23-a5cc-4855-9eca-89f6f0b3cff6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c6a1f0-fbd4-4678-bda5-c76c0eed97e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef89290b-0b5a-4560-b650-107bd982ffc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c39230-fd43-4174-bba8-9c6496cef267",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d180faad-0c3f-4257-b32e-331fea8a648f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f49f636-76a4-42cb-aa37-d0ea13a2db8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c26298-91d0-46c1-ac24-8891c98e56d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc2aa6f-b24b-4ca1-a166-7d23891ef4a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8fca00-e9c1-4cb1-8276-36ed654a0656",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d9ab2e-73f1-41a7-b54f-a2c9d16f371f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2adb72ad-a08b-4a12-9f0f-a78d25227fe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0006ab87-52c6-4d7f-a406-e6747828fc13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d2a5f53-466d-414b-bc9e-28e316027858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da17489d-a381-4fd6-b490-2aca9268bdb0",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b167200e-8405-4dcc-8bc4-e698bf9e1f6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29d292dd-2660-4781-8f4a-487aa6f92cd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "651780a6-68f3-42c4-af10-4906a2e11c92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0125d93d-5501-4db3-9b83-e81f059257db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12eca0dc-d089-4ea7-b049-ccbd7235134b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d709db83-3f0d-4fda-ace1-d92ac8fd49a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e6c47f-0faf-4edd-a06f-da7adb0f490d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eecf668d-097d-47e3-948d-2ffcc77c822c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29fb0d1d-51b3-494b-ba6f-11f35ffdd3d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651fc26f-9cec-40ef-8ace-291516f5683e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "291e119f-d6c1-43bb-971e-cdc414d0ba52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd84ba65-6a65-436f-980e-bc547c247f6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa5550b-d93b-4573-9206-1a421545b50b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab061b0e-4c8f-49b3-a0ba-e89bc22de17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98798291-8cf0-40bd-ad3a-1164d1ef0ad2",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2fef94-374e-410b-b081-22505f7fc1a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01b278de-c354-44c7-aef0-043ee1f27787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "058b6459-d1b5-47c3-82ce-bbd56027b3bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f4209c7-cc9f-47df-ab63-ef09c51637c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef342927-44da-4da3-82f3-e1f598dcaba8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163428f9-51fe-49a1-9903-c93f6abb6547",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b29f166-e101-48b0-af13-667b2d0094e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda1764a-d230-4e8e-82bf-35bf2f29c000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ac3fc4-2ef3-4105-972b-d5e2d6b11a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26cdd611-04d4-4a2d-b462-efd00ea29b72",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a723e8-01cd-4bd9-99bf-53f69eb3ea4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "140ae50e-e022-44dd-aab0-5e9b35b29114"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b9cd61-9647-470d-8339-aac73bdde6e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e00fbad3-9882-431c-adab-ba8708479b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b9d31d7-d9b4-494d-b79e-c361b465d076",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968f9e16-5c57-4267-8835-aaa4ef5fd08c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "373c7d17-67f0-4141-b0e8-48ecfd49e332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "504aef4d-046c-40e4-b908-d07090cf14a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02d23a49-5a7e-4622-9a97-0f8706caefa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73035bef-cd0d-4cc8-91ff-1a25cda2e545",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fed3009-044f-490f-b17c-6f256565efe6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6881a62-64ab-4fdd-83a1-ec2f907acf85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0679b8be-cd38-409d-8261-8756f70b42a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b032457f-5f9f-4f8a-937b-d6cd87ba3660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10c67a5-ee11-44c7-933c-e77b493707d3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6b10da-c1a7-4327-92ec-9c301c87edf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11080286-f7cb-43b9-9f54-96f07afbff5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9168c534-d1bc-4819-a9f0-0f96fbb3f0ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d615eb5-760e-4364-bd76-e5e4780666ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c86c22-d77e-4e78-bf11-13b8d7bfb3b0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91586b08-234b-469a-b61e-2608256a839a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9d5e4e-61d2-4a3f-90e9-1981a86c324a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a6c003-31dc-4376-ae2b-c24517a80bda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "233f9bfc-4167-46f8-b254-283eddcfa569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40cc388d-6d0e-483e-b532-6cf654da206e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4633d9-dcfa-48c5-af9b-4a7274cc01a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b1a180-7198-4e60-8a3b-5b3710f17e88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5a0057-a238-44b9-9b61-aac9876b47a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb0b3b7-ec9a-483f-b13d-55e77447bebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67c9a61-46d3-49e2-9cb5-c8e05708bcd9",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569de2e8-a15c-422c-ba57-cd1118059bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f571281-dd63-4578-9d61-bd023f37120e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66830914-7e95-418c-9090-0fd189103fe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea22ea6c-f706-4adf-9e17-b921484cbc0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8cc20dd-69eb-43a7-9aeb-9a093d556a3f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d983fc9-958f-4711-ac39-aa697d6825dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c78bec-ae43-4f1f-8363-8a059370dc1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b5b702-2833-4c5d-a4f6-a4d3a378a729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72667893-1f1e-4822-96ea-729d45dcb2f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5786c994-b2d3-4bd0-a6f0-fdebb87ea9aa",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74e7c74-06a2-4cb8-9529-650217d7eccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f416c5-24c5-4114-8963-fcd3d9d17c4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4496bca9-4556-4f6e-b702-f5aa8ceddb6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1008e67-4efd-4c97-bf45-930a795801b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398434f5-49c7-4ab0-b2c0-cfd2179f7c1d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244470a9-d0a4-4d01-b4a9-26a28ceb7f65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ba5a2b8-8f74-472a-8f84-3d02e43eee5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "407dc8c6-3ee1-485c-bf8c-c39f3dac1004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a7c5c01-534e-4c2c-a070-af310d080838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7269aa-ab57-4543-b840-21fa7e1139cf",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a28962d-f09a-4a63-b67f-d736d5d2c5c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc44f70b-8fee-4bdb-927a-59b461decb42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4314683d-2a13-4404-b098-115fcd90766e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c38a3e8-7758-4d4f-91dc-f335965c0aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a18d61a-ce32-4fd1-b806-cda85fa67e3d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e201fcb-6856-4d44-82c0-7601b564bd04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "074b84e1-acd0-4440-89ab-8330d311e2ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18dd09a1-29bb-4230-acd4-02cc6fd2fe52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf0344db-75f3-4154-8cb9-aa5cb2179594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2866f041-8ed4-47f6-8252-5f2838051468",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2967627d-f41e-4fd8-a627-0dfd41be8cbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b638f94-0aa2-41c7-b58d-7e20f7d6f098"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "983c27ae-e21e-49dd-ac9b-1c8c14d5a286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0202e875-50eb-4d31-9294-dcab5554a59b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61817412-e8bf-4e74-8964-82cbfbd293ec",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543b0078-ae08-4b0c-93c9-905f821a0a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e69075d4-0567-4ae8-87e2-4b1b65b36687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa58d77-06c6-437f-9022-628d417b0b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e389be2-fa67-4f71-ae3a-563f4622867c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2504ac7-be4a-4ac6-9c3d-c5727a72d56b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1449b6ef-8bab-4f59-b01a-8bf49a2295e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57683931-a02a-47a0-b2d6-9a226268e244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e41734-6b52-42ae-9887-34508c39c678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6448977-c7b3-4ef7-a596-a950d387590d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7021b3fc-e246-4407-9350-c96e2c256619",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf9269d-244f-424d-af5c-d304e2c99987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19ff077f-66da-4a30-b9d6-f0ed9eb632d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efac7ffc-438d-4745-8087-5c2298fc4208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d54b7e2-6817-4f0d-a23e-a0fd6c431e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd10c67-c1ea-4734-a6f2-3e15768a8439",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7563cce0-38bf-4932-8a12-41af48359e32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa0535c-e79f-425e-a277-e1987c9a874e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa81b61b-b912-4bf6-bfec-f1afe513b73b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2896974a-ffdc-453e-b2df-60b74932a93b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d065ad-f31f-4b72-98ef-eb7adfaed77a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9c9615-6d7b-4105-af06-67b047688021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d5d3433-7c52-4856-8b43-d1eb9782628d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0946d6f4-6c93-40dd-957a-c0864ecf9cc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e4fd4cc-7a26-447c-8837-e696c34a2662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41cdc5a8-f558-4129-b0b6-b3374570410b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5404c06f-db86-4853-a1bc-f3ce833e2177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c00f36-5f7c-43b1-bd62-419f05700ea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5049e136-8b7a-49cd-a834-bbd6d0d8394c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd8622c8-08b6-461d-a2bc-f12bbcc26840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e112fa9-926e-4cc4-9f11-945db6f0193b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21ef55c-e225-4bb4-aa91-af0e16e2d125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d72e7eae-7583-428f-b915-2b8b56dc743f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4daf1def-633f-4f37-ab03-f7cfa69657ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "780483f4-b3ca-4f3d-b1d7-f48e4a695633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474de1d1-beca-401c-88d4-e5bb86eac413",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6a6fee-b47a-46d9-8c0e-34f932287972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49d38dd6-1b27-4a30-9e67-f20bf1d33a58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a821649e-6135-4f02-8d28-5ac2df997242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "246c0756-952e-43da-9882-30fa7976595b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66213355-66f6-405f-9fff-f34fc1f15756",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21c416e-1227-48cb-9059-3d1c909abae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1cba6ad-40a0-42c5-8593-2581b1832a71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "410a6e54-f33f-4f2e-a345-3ccb973623cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "333b92ff-f006-4a3c-95f4-591915edadaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a30ee1-8074-433d-b310-0cf985e75b2c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74feab7c-92f7-4d5f-aa77-11d2794e4f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f3b56aa-4547-4785-84cc-575f5aab7c53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10cec56-ecef-4731-a965-ee048b82645f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d1d13df-a84e-4a17-b971-ea95d667d51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243c1039-8d13-4920-b5a7-1e4f9fcdc691",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381f20cb-a58e-4ccb-a7cf-10adc0786c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de777713-99f1-48a9-ae4d-863cf409a509"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b391fd17-94d8-4d62-9197-20f5df352b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7804ece6-8a1a-4603-864f-1a49c9025f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef1e888-fc0f-4dbf-ae02-ed4013cf397d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f044e9a1-47bb-4556-8ba9-f374e3dd3fe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55333c27-3fc1-4ceb-b524-8d3a690656ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3437551-c25e-4507-9e13-760a28b7465c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e93ad972-a12a-4bc5-9c53-18e72a9341ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8390d143-e4cb-4840-a191-13023172cb12",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e55a8b-4f57-4eba-b867-e43011cc5ee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f21b941c-ee49-4bf9-a162-bbe1c995c191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d76a15-1600-48d6-8926-66fe9eeb8d25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a694cf54-70b1-4efd-b4e4-d8cc433f5f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1c9309-ae2a-4b43-84db-133d98316a24",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0693f85b-6936-4717-bdc2-b786e7462a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bc70364-1ce2-4033-99f5-f2ed487211ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1b5ed9-2fa5-49c6-8b8c-fa9ae0a4f83b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c142f1fc-5751-4c8d-85a4-99035904a43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac0db45-627e-46a8-94ad-53841f72be7d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ef2e1f-2e79-4be7-a1bd-3adc85baf71d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de20e32-2a31-455e-8bd6-a5f75fb5435f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0853c7b6-bb53-4fbb-ab46-b138aaf3cc3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf78f1e-a8f7-4e27-81f8-5671e6e26bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce71583-46f3-4fa1-a349-e880f74af56c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa35081e-693d-4d8e-9d0c-2a938989f40c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a1781d-bd15-48bb-aa91-b354ed7bd6cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6eb4a74-fbf7-479a-b383-cd0de6b62d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c591dff-7443-4ebf-b529-83de1ed6b052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ee457f-fde7-46a8-abd4-a5b1d68624c9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c6d9cd-8644-4e0c-92c1-bcd88011357c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87436129-d569-4193-b13a-81c945302df5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1b54d6-e4ef-436d-a0ea-66f0ef3ed23a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "808b5e2f-ea98-4599-8c86-e02f04e75690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f8b2cb-b2d6-41c1-8e6f-ed4b0187c900",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a91db3e-8105-4903-a73a-e0c759b8b029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c24cdb4f-4025-4785-81d6-39c0c0bc4716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6992ca03-b1ae-4bf8-bd9a-8ecdb32f1379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97ae957f-f535-4cb8-8808-20dc33494cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ecc48eb-aeaf-4149-8606-7d0f5f1fa5f5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93da61e3-410e-40f6-b196-3d7e41147896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b30bf566-8c0e-466d-af27-ae1c377a9db8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b613923f-6f4e-4e4a-b714-3552f13004e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f054c2-15ad-4291-b831-1cc4617bb2aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934ae48c-c033-4a30-b0c1-4c57a21fd7d6",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a25e44-d441-4692-8b8a-889e44b44e63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a17b402-64f1-4019-a917-f111fcf81a7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0c5c5d-2844-4fcf-a987-b6e0f88a81f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a2065f3-96ff-4e5c-b445-1feac288f096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60008b57-4247-419c-b9ab-e23692e5ebbb",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb80987c-f355-416c-abc6-c925febb4ade",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "035475f9-2d9d-4946-8ec0-1731c7d45ee8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc50343a-e5b2-4459-a5f5-69ba666b5957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "141709b0-77a1-4dca-bf0f-94ec56dcf5c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce599e71-2dbe-4c36-b817-d8fc7bc21a56",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef77d36-60c1-495a-8981-3ce68051dfdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47ec7035-6c4b-481b-85b7-0a72f4f9cf13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c012214-b4f8-4f56-9202-f80fc91d5b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e075f908-fcb5-4277-9e85-1293d4b65eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e3d25d-2f5e-481b-a095-4fc6b89ae068",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07e8bcc-8577-4c96-a9b0-77688283c5ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "066a2f41-1a34-4458-9110-676647ae9eb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db69f8b3-9d82-4a85-aece-93e43d3bbfa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34e87810-10e6-4366-87e2-0721b0858b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7a3256-9fef-4e07-8163-db544942e939",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5d31bc-819b-4919-91da-c222ba3dc0de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f859ee35-4f38-49bc-a29d-6c0a40dddc32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5141d5dd-1c68-4bc5-8c2a-9652c5659ae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca64564c-f92e-412a-a507-035cef86a631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78be4148-6466-427c-bbc3-a6c6706ce984",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428efd84-c766-4363-a9e2-78193953af65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae15fa53-3897-436d-ac9a-c2f13a2ca6d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0a3d4e-d366-4537-ab58-e2fc7900a50f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11c09b51-bd60-4644-9a3b-ca8ea921b101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd41bbee-1b7b-4204-a1a6-a43df2c6ac1b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28633eb-ff2b-4a56-b89e-7cead0ca9663",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a983d9d-97ed-4181-9e15-dc156431d068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33fae1c-c3bb-4dcd-8eb1-afca71b920bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "786f837f-1755-40c1-bd51-f5a0901012d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b079fc80-b43e-4b52-83fb-0c45ddbadf26",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d6c5f0-8284-4e33-baf8-d8e07bdc5512",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23cece9c-2123-4520-8144-d58ac9a0fba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c7edbd-9acb-4bfd-97fc-6afdb2381965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec75b879-f027-4c79-a689-741beedabbc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ed4ea9-a272-4d0d-b9c0-3a675de218aa",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc67202-ce15-4261-b711-6fcdf381f7d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75d649fb-5649-4462-833f-923025a275f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f8564e-5715-41cc-837d-fec150382983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e36a8ef5-b136-4d61-acef-c0eda1ae4c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed5ade6-f645-44e7-bb65-89ecddb16d3a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925ecad6-2fc5-4b1a-820e-5c0b57f41d22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d1f7d90-5b45-4dae-b6da-abc86ccba87b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "466583db-b0ea-4537-bdbf-54f8f54d6ad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43837a7e-6d8a-4025-a5ad-10d1b837ba28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e5c26f-0105-4b2c-b989-b4e8dcfdaa18",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558a5f6d-788b-4402-9239-d1c93b221ebc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7809fce-f742-4e75-b4b2-db6b587b7c84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97e4bb7-b783-43e4-adc6-f787337d428a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e29a09e3-373e-4e86-a22d-fafaa9deae7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a81126-f0e8-4f61-b79f-670cd0bd05ae",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8173b613-29a9-4f3e-8548-67a0dc24995c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "508d0550-5cea-4b4e-bc8d-4e97fd632bfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a70af5f-dec5-4f44-a73b-34353752a873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66fd4eeb-5adf-49fe-888b-2d14185e4438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59febbd4-5789-4985-a749-2b236b45da88",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d06c1e-b030-43fb-af9b-b2da24e08699",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec69f149-acc2-4479-b92d-733414848742"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "689fdc37-278c-44f8-adf3-3e8e7bcb31dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a0e559-b233-4bc2-8e8b-417dcc3e9c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311cf264-dd33-49ac-8e41-7f80201894c1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a00828-783e-4708-8292-91acb02bd2d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "436d85df-9d94-4bf7-bd1f-83ce23ecf3de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f910fe-bc84-49fd-ba71-4062d3ee8003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c07f4dd7-963a-4b85-b1d5-817c8112dc84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a39fb2-149d-43ef-a263-031bbc79c353",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3695e1db-3ee6-4ecf-9e9f-222a875aa4fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbad31f7-ad39-4621-a567-0f7439c82fb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc93fea4-5958-4f63-97f2-7c29b12c6759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aafdabc-c390-4966-b5d5-815a4b6a1ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc83f81-4eed-4168-8c94-2876609c74df",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278db923-52ea-409f-9566-1bc0808e53ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff013dbe-537f-46a1-8f0a-e2199f2a9451"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "383bdc87-c2ac-4ebf-984a-c5513fc15807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f33d8b3a-503c-4a4f-b40d-ae0b72c2a4d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3d92d4-3b31-45d9-87c3-23e1241e9821",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecbaa354-3243-44fa-b288-0adc8d282a34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52a3d70a-701b-4068-94ce-610cbbaf7ca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d124dfee-47a4-4bb4-a192-f1ec14ba77c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a87907-0847-44ad-a446-e0f74108f7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c46aa2-991c-4b9b-ba98-804538aec017",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b632bbd7-86ec-4eed-909b-f0a280640713",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ae62311-1583-47a3-bb62-a695ef309f92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e06820-d214-48c1-aeb2-d8854011ee32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d942ad-9eb8-4f99-ad02-caac74624f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7f5cdc-d83d-44c9-9f1c-b601094bbf0d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0cd621-c530-4e60-a2f6-e61c5b99c94b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7f733d1-22bd-4e0c-adb0-dae937d47dd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c6c98d-4702-46ee-980e-c606787eb6a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e4f729d-c046-4154-8ff2-bcbc4423427a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf722922-0751-4deb-b35d-75b647c6a104",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9304102d-81a7-4aad-a1fd-bc4230b523ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1b7e6b1-3ef5-4aff-ab76-4756af4a977d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28637db7-1fc0-47ba-b7b9-6c95dda8e961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a57d8fce-c40a-405f-99c4-43e7b69cbaa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49bcab44-10bd-49aa-97a8-0d8111009322",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381b6f06-76be-4050-b27a-489ca6502378",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2be69cf7-4de2-4632-acd8-723e2c0f499f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa469f6-cd37-4b15-8e8d-4ba39ecd8284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b411e980-6c12-4b03-958b-4b263427940e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2024f75-411a-46ad-85f5-59bde7064925",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b934d0a8-fc34-4d7d-ba33-528600e89cdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60261489-a920-4414-b28a-8bceee903b8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75822c4-82ea-4272-8734-04b7d37eff15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9e704da-41eb-4fe3-abb1-c85964c0e849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6c8cd8-de5a-47b8-8cd9-2c1e10615a73",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0239c355-2f21-4beb-b779-056dec692c1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "406c63db-7319-46ed-8b1e-53c667e7ce45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "532525ca-27ce-4174-ab5a-86ff43faf611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd9af091-d204-4a08-9b76-ff77c35d5614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59832595-8a75-4745-b765-47af4c1c7353",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a441101b-ea58-4568-820b-2a71ff2a3526",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3570fab2-00c2-4829-960d-c54b94421583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6999e1cb-428f-47c6-b3e3-50fe5e2fb77b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bdf685f-a2fe-4520-a2c9-dd92bfe17418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae66336-ce15-4e03-96dc-6a0cd96e6ac4",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b55bf5-261c-4068-ba7c-51f3155500ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4fd817c-eaf5-453d-a02c-f162ecc29720"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a9ddc1-bbc0-4490-9031-67b0145762f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49675bc1-1c16-402e-850b-1ceafbe437db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d99543-08a6-4fcd-81d6-1d4039ba4581",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ef4b85-c406-48cb-899f-0f6bbcea6c08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03ac5532-267e-4cb7-a2bc-764178a12c2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68242fd8-c040-4925-a49c-098766359af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af61540a-bc3f-4326-886e-769b417955af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17abd21c-46bb-4bc7-95b2-8d69508ef1d0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "210bc350-530f-4a45-9202-c840d028727e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbbc3f95-3a51-4a1c-8a42-d5a3cb6727ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb2518c-ea8a-4f0c-930e-1cc75334370a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d54f059-8a25-45d5-bfaf-e26a78e051b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7135b59-14f6-475d-b291-5bc8e0e6cc66",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3645fff3-8530-4ee0-8a5e-b63f62efd453",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99ea5121-d16d-46bd-a7cb-ff8956856d68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a8974b-60d3-4c8c-a70c-4c242d1b6d19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac4b8d9e-3aea-4f1f-a1dc-08e0ae547936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41a9fa5-2f92-447b-a354-ea1001201306",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2697d2f4-1113-48ec-9ec9-73ca7d1f6d87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99c45602-def6-4914-bb48-54163ac58243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a004528-6323-4ef6-8643-8ac8558175a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc338ed-e7c3-4501-8d64-ef537238afb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b0ad76-e140-4a50-aeb7-a19f1c143661",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0535096-962f-4745-9d94-746a558c0088",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db4a9bda-8b11-47f5-8935-2a87e34092f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef6e8ec-3f8c-40fe-b9f8-2b51d64a3e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "851874a9-1e9c-4ccb-9d2f-acf1cca2a5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d31e06c-0e42-4e70-87cb-e089594f4e9e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466cfb40-4c3d-4d65-8995-b88dece4892f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e69da06-21ea-4ef6-9265-0886928a2d81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27cce8dd-f066-40db-b5ef-3c8bdafdb928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddfc47b9-be5b-4f8d-8203-be14b0dcd8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4095f6a6-8a32-43e0-852b-95f533145bc6",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46db91c0-4a0a-4043-9fc5-8febc5ad5bf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b4e2a3c-6975-4ff0-a0fe-a75f382aa24d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f7c78a-3aff-4757-8555-8e40bab5528f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a43b713-8ece-40a4-99a7-80ab3a1ee324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8faa152a-0d47-456a-a989-d9546e733453",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b539b2a4-affd-4e75-b152-057258c7f552",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b68cb61f-f10d-44f9-a69a-cc1e05547e0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94527b4-d948-4c96-8661-12449a9eeddd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8d41e21-d992-4d29-8894-e0dcec717e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7797ed65-5a95-4bbf-be7a-6c5381c142b6",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f15eb9-0d04-4d65-a99e-a56e4aa67f4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df012a51-7984-465d-bca7-2ca227679966"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e235274-da68-455e-ac5d-9bf2754b51c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da6dc123-eebb-4d9f-9f88-70375a388b28"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82c981a5-46c3-4930-ac41-80a18856d500",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "741db7bc-cd36-4313-bf9d-11eb2f591e97"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "40bf848f-8c64-4a5d-a599-e3fb4594a983",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "484f4422-116d-49d3-a431-40035b667697"
                    }
                  }
                ]
              },
              {
                "id": "56b1ffbc-013b-4bb9-94cc-2a54aad63859",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "20f148c6-5b8b-4021-9aa7-85a4348f94e9",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4da182-3d4e-4556-bc7a-ec1854e3e795",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "be9d0d5e-b052-4526-8f06-0af368f14ac6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16f6e29-2021-4aea-aab1-f6a2d37354fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e1d7ef7-cc7c-4334-996b-2109cb974be2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f03b9802-fd1d-4ac2-9806-8d9fdbea59f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2df4a76f-8a78-4cd7-b77e-449848495ad4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e86e1cb-9350-44fe-b751-345b5d08c02e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "890cae3e-ed34-418e-94b4-3ca40e95adde"
                    }
                  }
                ]
              },
              {
                "id": "305bc5d8-4f28-4290-8395-eb0de6b298ce",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5279a53c-798d-44bc-822f-5fb2707dd8c7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9bfc18-70f0-4e25-a552-c1063116696c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4dc364b4-2001-40a4-a039-a6dbbfea6dbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5867bdfe-11bb-4fdb-b90e-2acb9a4b77e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dcf07b0-476b-45fb-8bf1-1f702c159c65"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8ce97c56-cbdb-47a5-92ef-42b35a681657",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9bb57bd3-9c07-4e99-aa82-8d2ca5a389ca",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ce9bbbc-dc00-4fcc-b3f1-1cf550ddd7c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0b058c0f-b011-473a-8e42-22df89e1dbdd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0b8ec77-e42e-4b63-bcec-44d3fcc2b066",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b1767c9-5819-437f-a43c-70c569597d0f"
                    }
                  }
                ]
              },
              {
                "id": "a4e33607-6222-4f94-919b-f6a9c84def4d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce506168-a7c8-4d73-919e-3464c4180672",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e1756244-639d-4096-a54d-3e05041471a4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3066930b-acde-4e14-919b-b71d1a01dac4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6e31093-606b-41b2-9538-c12313ef508e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29117db2-0e94-4c5b-beaa-91fa1dc1a084",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "cf65079e-8a29-4c59-afa5-0feb7e81ac05"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4de85a48-3f30-4994-9fd0-0d3b086d1221",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d0db3465-5db8-433c-8802-49926ddb68b4"
            }
          }
        ]
      },
      {
        "id": "a2dd3aae-c5ca-40fb-9ceb-deadecf42fdd",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8e8d9a8c-8478-4bff-8392-3f690542bd25",
            "name": "Negative Testing",
            "item": [
              {
                "id": "15aa9836-52df-42b6-abfc-f20c7d028276",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "83dda266-622a-4cad-b61a-6247885c53da",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393f58ea-790b-4bd1-89a3-c54954850839",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4d53b3ef-04f0-490b-add8-d8d461c095d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "845600e9-7909-4982-b131-cc2420f53231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd9c8ed2-8781-4a5d-a23b-775ce14955a2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "542d6cfc-25ac-42c9-8674-79bb970e3372",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f97618a9-97e5-4583-b018-841a841cc11c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce39d074-3a03-4fa3-b2ae-809b0f676998",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2c645a9-eb7e-425b-ab3a-c90343ca0601"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b2f9f98-2983-4138-bf59-03cf7b2a7e1f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f0ae07d2-b943-492e-9e09-a8e208b9b0c2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b89d749c-9564-4f43-8cfa-39b70f06cdae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0415808e-477e-4b54-b54b-e860d8884c38"
            }
          }
        ]
      },
      {
        "id": "6119632a-5b17-44c4-bc4e-46c69c9bdd51",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8bfa8974-1935-43aa-a6e3-4ea0f2313b57",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1af18cab-1d89-4f77-8a3e-c2abedaebdad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8333ac2c-5170-4039-aa3a-d7c44623c3fd",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225b1b0d-fdc7-4c21-b471-25201b8e0522",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32a2593c-2295-4215-ada6-d04bd4403bc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c2e9f5-a29e-4b84-8506-026dfd911a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3232bc63-9646-49e7-afdf-0e6e76c6a69b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb6af6ad-22e7-4b64-a717-c5c19d3780d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8e4af51-0e15-48d0-bc45-c60b71f58b6e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8f4e31f-db2d-4a13-9173-b0757cc90d24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "555af655-4f91-4840-a391-8650a98f5a8d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0bdbe1c5-c0a2-4b5c-a114-d0cd9f7a78a0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "70c6436e-34cd-4c11-87dc-f52634871238"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d3cb224-e02a-4ad7-9233-00508ac49c91",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7416a97-092b-427f-b4d1-1b45c61ae289"
            }
          }
        ]
      },
      {
        "id": "859fdc27-3499-435d-9242-15cc3f5de7ae",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "af45812b-2b71-456c-9746-12abeddb2bb4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3550805c-a392-4a5c-9a69-b3b994309c73",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4e2bfd9d-f289-439c-ba58-9c737376757a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a36c0fe-fa45-424e-913b-d95f6aed29db",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1c41976-4a26-4deb-8fc0-f9dd69348a0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de75022-5956-4234-afe4-0a8b6f15e36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "792ccdbc-995a-4d34-8ee3-61bc28ae9b4f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1472811e-3d56-442a-b028-77955a3312e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e11c6d0-1d48-45e6-a8f0-c2d50275e95c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0bf974b2-6a6d-402f-8be1-4b329f13fde2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88054bab-e942-480c-8b66-5679d0adb154"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1313ba13-61f6-403a-b77a-6ab82aeaf62b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ab841c52-2283-4df1-940f-e88bb828548d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "89cd67d2-b261-485b-9d72-6d8cf068b2b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fae0145a-f546-433b-b5a8-b72b5a59da59"
            }
          }
        ]
      },
      {
        "id": "2f809503-5ef1-43a2-b122-86a7f4026e83",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8cd7343-dcc4-449a-b56e-9f29dba4df02",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1403cef7-c285-44b9-87d1-6eb93e146fae",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "851f6208-98dd-40aa-a80e-68ced93a891b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c3c60c99-b53f-470d-8421-6328d84ac75d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7cdd3ac-60ca-4a85-9108-cf2eb875cd02",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 214.45422535211253,
      "responseMin": 10,
      "responseMax": 6486,
      "responseSd": 408.0175120729532,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689468824206,
      "completed": 1689468897295
    },
    "executions": [
      {
        "id": "29c8366c-e003-4b90-bc59-f72f16dffa2c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "eff3b7e5-2e49-4450-9ba0-56372e90aace",
          "httpRequestId": "d0c5ae74-59d5-4d95-a905-841e2719eaff"
        },
        "item": {
          "id": "29c8366c-e003-4b90-bc59-f72f16dffa2c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "811ae3b4-fec1-405e-8fb0-89328906410f",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 0
        }
      },
      {
        "id": "45ab271d-5177-4845-8709-70f875175cd9",
        "cursor": {
          "ref": "c09d3f51-7484-403a-8aa0-a8076c317571",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a0c93a6c-b6d8-438b-b738-800a1725b260"
        },
        "item": {
          "id": "45ab271d-5177-4845-8709-70f875175cd9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f684596a-36b6-4416-af06-131a1f78d441",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "817da9b0-adaf-4df5-a9c7-f637747e7fba",
        "cursor": {
          "ref": "aa19f7ac-df21-4b2e-829a-7b1f5a030d85",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "36249eed-172c-428b-8a90-5ecc620dbb69"
        },
        "item": {
          "id": "817da9b0-adaf-4df5-a9c7-f637747e7fba",
          "name": "did_json"
        },
        "response": {
          "id": "1212f162-c91d-4c98-8416-7bd094dcfd86",
          "status": "OK",
          "code": 200,
          "responseTime": 1323,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d323394-c65b-404e-a155-d75dc7923451",
        "cursor": {
          "ref": "46924831-8330-4b78-a73b-adce610ddc83",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3f5b967b-08fa-457e-817b-26ebf86c90c0"
        },
        "item": {
          "id": "9d323394-c65b-404e-a155-d75dc7923451",
          "name": "did:invalid"
        },
        "response": {
          "id": "98669bd1-ac7c-486c-87f2-8591a2a787a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d323394-c65b-404e-a155-d75dc7923451",
        "cursor": {
          "ref": "46924831-8330-4b78-a73b-adce610ddc83",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3f5b967b-08fa-457e-817b-26ebf86c90c0"
        },
        "item": {
          "id": "9d323394-c65b-404e-a155-d75dc7923451",
          "name": "did:invalid"
        },
        "response": {
          "id": "98669bd1-ac7c-486c-87f2-8591a2a787a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b9eef0-6fc0-402a-ba63-e0a9997fd2a0",
        "cursor": {
          "ref": "f76503fa-5515-4667-a776-fe612913f0b3",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f530a72b-66a3-4cc3-bb46-458173dd065c"
        },
        "item": {
          "id": "10b9eef0-6fc0-402a-ba63-e0a9997fd2a0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "de2fa85a-58ca-4bda-afe6-fb44f0972dfb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 297,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95255ec7-719c-4f1f-b474-817e9bce1801",
        "cursor": {
          "ref": "140b77e6-6adb-42fd-8402-e74faad9df7f",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d874e6fe-b0be-40f8-a041-7cab00ba3578"
        },
        "item": {
          "id": "95255ec7-719c-4f1f-b474-817e9bce1801",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0ac370f1-1697-4e00-b4ce-8f906dd72ffe",
          "status": "Not Found",
          "code": 404,
          "responseTime": 246,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237b09a9-2f4f-4f8e-abd7-a9b472a67ee6",
        "cursor": {
          "ref": "5194a64c-c824-49b6-a406-44c59ea7fe74",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a93751bc-fcde-4766-8dae-faa91a1c2ceb"
        },
        "item": {
          "id": "237b09a9-2f4f-4f8e-abd7-a9b472a67ee6",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2757d7bf-8082-4542-b7d8-a49e554cb604",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0281d001-2c48-43d4-b9a5-7518c4d38a4e",
        "cursor": {
          "ref": "05397cd7-64bf-49af-885c-bdcef3762137",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3c3cd457-8e59-42a0-a8d4-e071f2d21696"
        },
        "item": {
          "id": "0281d001-2c48-43d4-b9a5-7518c4d38a4e",
          "name": "identifiers"
        },
        "response": {
          "id": "b475ece2-227f-4bb0-8d7b-43c8120e52f0",
          "status": "OK",
          "code": 200,
          "responseTime": 1223,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0738a48-6ee9-4f5d-b916-bccce746e114",
        "cursor": {
          "ref": "e73e7293-8a9c-4340-9a31-402516db7835",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "96fa59fc-d81f-4ab8-8ba3-c288b97afe80"
        },
        "item": {
          "id": "d0738a48-6ee9-4f5d-b916-bccce746e114",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f93b5887-0a26-47ce-9066-8d96067a7539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b99261-1ca3-4743-b22a-14ce13938200",
        "cursor": {
          "ref": "455eed92-2ebd-41e4-821e-7e4f075b677b",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c90005a7-2f0f-4a48-9605-f3e8364e7332"
        },
        "item": {
          "id": "a8b99261-1ca3-4743-b22a-14ce13938200",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7b87b3c2-a46c-46a0-b37d-8fd5ec181b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 976
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb228ca-a781-47e1-a2e2-353890038919",
        "cursor": {
          "ref": "faf92d31-08dd-4ca6-8b84-ce993524d917",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1e91088d-592c-44e1-812f-a14e44eb72a6"
        },
        "item": {
          "id": "7eb228ca-a781-47e1-a2e2-353890038919",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "be10c547-a193-4c92-b080-04f8dfc25806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 984
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b6e365-6a20-48ca-8579-734fc3754c8a",
        "cursor": {
          "ref": "5ff7ef0f-9e55-42b4-b82a-091e7b6fa87b",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "905136a1-6f90-42a5-a68a-777092cad4f3"
        },
        "item": {
          "id": "56b6e365-6a20-48ca-8579-734fc3754c8a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f0b5e662-04f0-4d39-9261-27df27e96fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2d9290-57e9-4413-926c-7af4a7f0557c",
        "cursor": {
          "ref": "30c95cbf-44b8-4032-b2a7-3d253eeb604c",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7f0f421e-02b8-4d19-b492-4f3ce0c012f7"
        },
        "item": {
          "id": "ca2d9290-57e9-4413-926c-7af4a7f0557c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6433251e-3ef5-461d-a225-ea8d26017391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b29db7-511c-4eac-9244-d19a72de34ec",
        "cursor": {
          "ref": "0d6fa584-aad5-41d6-a846-347a3a42d5cc",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c68eb478-f9a2-482e-bb77-6588c766319f"
        },
        "item": {
          "id": "63b29db7-511c-4eac-9244-d19a72de34ec",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "06ef1221-c4a1-4c41-b46a-1c8071ad3566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1030
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf1a7a6-3a6b-4be2-a51a-1f45091901a4",
        "cursor": {
          "ref": "04f17b2d-5eb0-47ac-91d5-df7acf3bad4a",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "32cbda82-dd68-48b6-bd71-5b615e897404"
        },
        "item": {
          "id": "7bf1a7a6-3a6b-4be2-a51a-1f45091901a4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c216e382-9193-4711-9608-67d797903800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8b7e26-b13c-4d89-95dc-d1155f0a5b24",
        "cursor": {
          "ref": "2e9b2532-6483-44dd-92e1-f4e97592864a",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "457e95c9-cec4-4044-99f0-3d52bceb772b"
        },
        "item": {
          "id": "5a8b7e26-b13c-4d89-95dc-d1155f0a5b24",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7374ad30-780e-4baa-b439-30d30ba12f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1068
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f84772-6cbc-42c5-b722-3d3346dec794",
        "cursor": {
          "ref": "01b4a1b9-6949-43da-976d-429ddba7383d",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3741dfa4-953f-465b-906f-b67cef009da6"
        },
        "item": {
          "id": "e8f84772-6cbc-42c5-b722-3d3346dec794",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6dbfcca3-e008-4811-9b92-a5ec287536f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539c3e12-e48d-403d-8cc9-08487f9f97dc",
        "cursor": {
          "ref": "19bc789d-1803-4327-86e8-c1f93d38d49d",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c015a0b8-68ea-4ff5-97b8-65ed8201b4c9"
        },
        "item": {
          "id": "539c3e12-e48d-403d-8cc9-08487f9f97dc",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e38d76f6-6630-49f9-85d6-c4ddaae1228b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5222494-774b-4a28-9e9d-5187afb2c089",
        "cursor": {
          "ref": "1dfa7892-ccdb-4786-abcc-949bf98df3c0",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "896729cb-ab82-4356-aca8-80e08505bd56"
        },
        "item": {
          "id": "a5222494-774b-4a28-9e9d-5187afb2c089",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e9486f9e-25ce-45d4-a134-2473cf38721b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1036
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b802c5-63cc-42d5-87a7-e75998044ad5",
        "cursor": {
          "ref": "82cca526-76d0-4fca-8132-5ba1bf05e264",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d9af1fa0-1819-4ff5-bf21-7ccc229b8670"
        },
        "item": {
          "id": "01b802c5-63cc-42d5-87a7-e75998044ad5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "196c3ac4-9aa3-4647-880f-e1935ffb7740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1077
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f11d05a-45f8-4c07-8300-154ba5f3b4f4",
        "cursor": {
          "ref": "b1303f2d-dc88-4994-a5cb-c45604e3ece8",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "980cca30-6982-4d7f-b7c9-c78fcb7dc0c1"
        },
        "item": {
          "id": "1f11d05a-45f8-4c07-8300-154ba5f3b4f4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e3027355-a30c-4558-8371-ab076c7bc3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1092
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00a91ad-3c90-4144-8da7-ea734887f713",
        "cursor": {
          "ref": "e953f357-8db0-43d8-bfe2-6c38fec30e5e",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "cd5880f5-6a6a-4ac1-ab35-bdbc489870ba"
        },
        "item": {
          "id": "b00a91ad-3c90-4144-8da7-ea734887f713",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "cdecd5cb-74ed-44db-9408-1bd9a010dd75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1048
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16bcbb27-5344-4b8b-926f-412d23beff8a",
        "cursor": {
          "ref": "fc622040-0541-498f-9e07-5f1f3b0d707b",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "96eb752b-5cb3-494f-8f25-37d74bfa104a"
        },
        "item": {
          "id": "16bcbb27-5344-4b8b-926f-412d23beff8a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "035682bd-82d0-4546-906b-d12dd2a78a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1045
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c528389-c94b-4f86-a5fd-b0dd526a0286",
        "cursor": {
          "ref": "c8c86b06-06fa-438d-8bfb-5fb5a30b8ecd",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8efee83a-4552-456e-a414-a0c6bfd127f2"
        },
        "item": {
          "id": "0c528389-c94b-4f86-a5fd-b0dd526a0286",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "08e67288-bdc4-43a1-8ff4-65b741b1d5af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1047
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8062f1-932f-4246-a07d-99ebcb3c0999",
        "cursor": {
          "ref": "dbe7248c-2576-4aed-8fa3-b6f733c97884",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0a994312-9f3a-470d-a50c-5f01c244cf0d"
        },
        "item": {
          "id": "ee8062f1-932f-4246-a07d-99ebcb3c0999",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e40e78d4-0639-4fb0-ab41-f66aa9f2e4f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff4ff5d-06bf-4e81-92ac-2d2a00f54878",
        "cursor": {
          "ref": "e618c02d-ed94-4c62-9bc7-008d329b25dc",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5d45d3e4-2f00-40c8-8e06-dc86b50b61d2"
        },
        "item": {
          "id": "3ff4ff5d-06bf-4e81-92ac-2d2a00f54878",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "45e6e353-6678-4a12-8f4a-489f59927e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3716a3ad-f48e-43a1-8d08-10b28d648a2e",
        "cursor": {
          "ref": "e21d32d9-3ef9-4955-bfac-867c8f72e6e7",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "29f0c268-cb5f-467a-8327-774e91b37b86"
        },
        "item": {
          "id": "3716a3ad-f48e-43a1-8d08-10b28d648a2e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f93bfa93-9cff-4521-a303-fec4ff943948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f32e63-358a-4a93-a8b3-74dcc8a9d4a7",
        "cursor": {
          "ref": "456f39c1-a018-4b83-ab53-d5af316a104b",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d85a370c-af12-401f-a88d-a0259ee2fec8"
        },
        "item": {
          "id": "d8f32e63-358a-4a93-a8b3-74dcc8a9d4a7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "74297c41-4425-45bd-905d-15399b879897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ab9667-acf2-4fd6-a76c-ae7845389165",
        "cursor": {
          "ref": "bc6401a6-ea5f-4a12-ad68-254d576944bc",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0a0ae0d3-38fc-4d6b-9f38-95a150914023"
        },
        "item": {
          "id": "29ab9667-acf2-4fd6-a76c-ae7845389165",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "cc3359d0-08d7-41c7-8c02-44abd3cce642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e66a7ca-7104-4b76-b39b-66ff36641919",
        "cursor": {
          "ref": "5f320cfd-9f04-4025-bd6e-b8020bc51c75",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "138f2600-2bc9-489f-87e2-5cfca4cbeb13"
        },
        "item": {
          "id": "7e66a7ca-7104-4b76-b39b-66ff36641919",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1e35146d-40e2-4f50-87ea-b69d1a2a04ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1055cc19-2d13-4681-b42d-1cbe0e3370b1",
        "cursor": {
          "ref": "e54c300d-a5c0-47fe-8c14-227c293599b5",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0c5c3446-8fec-4137-891c-6eeb87f1cee1"
        },
        "item": {
          "id": "1055cc19-2d13-4681-b42d-1cbe0e3370b1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c06d82c4-9eb4-46da-bfa6-06922cbe4f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c94d29-858e-4d9b-8008-b55a674503eb",
        "cursor": {
          "ref": "686d910a-edb9-4eda-872e-c5741d37c49b",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c3859c2d-1fbc-4dde-a6c1-951f4eab7a40"
        },
        "item": {
          "id": "d0c94d29-858e-4d9b-8008-b55a674503eb",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "89ff5974-3e9a-4ba4-9bff-7d1943a84870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71147dce-b219-4280-9b18-dd647d2afaa8",
        "cursor": {
          "ref": "eed08586-1080-46d9-8448-0e339ba167ad",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "765bbe91-3df0-4341-b9f5-d28e323a77f7"
        },
        "item": {
          "id": "71147dce-b219-4280-9b18-dd647d2afaa8",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "13fc2889-72bb-4e11-b78e-6e920e50aa51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53de67e6-439d-4c18-a79a-b9a5ae676313",
        "cursor": {
          "ref": "612d1110-c749-4100-963c-3149485651dc",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2e7cc5b0-c875-417f-9d92-cefd37c3988f"
        },
        "item": {
          "id": "53de67e6-439d-4c18-a79a-b9a5ae676313",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0368b94d-9f6e-4704-8a03-130cffcd7634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90c7e24-7871-4228-8fcb-16942c8d65aa",
        "cursor": {
          "ref": "a7ceb64b-ac07-45c8-8373-f6f958158f5c",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "bdb6184c-bd51-4350-9622-0d74915252c5"
        },
        "item": {
          "id": "d90c7e24-7871-4228-8fcb-16942c8d65aa",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b2c87ed8-2053-4e31-81aa-619a510c2090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38a4516-712f-45ba-946d-f429706b801b",
        "cursor": {
          "ref": "e42a3f6f-7fe6-48c5-9e3e-2a25e43a6786",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4611113a-57bf-481a-a45c-432a8390fc5e"
        },
        "item": {
          "id": "f38a4516-712f-45ba-946d-f429706b801b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b78cc6ec-6e82-4cf6-a1aa-c87999b38acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f57c269-8e76-45a9-a4c7-b111fb310620",
        "cursor": {
          "ref": "07dfd799-2c1e-402b-93f0-b496507a7bfa",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "31f329da-41f7-4259-90c8-8577033d0196"
        },
        "item": {
          "id": "5f57c269-8e76-45a9-a4c7-b111fb310620",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6a0d1bd4-9e9b-4c8a-9ff7-3ccffb50c424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201587ba-19da-4cd9-8be6-870b20d26c98",
        "cursor": {
          "ref": "e34fbbbb-445b-4653-96c4-2477610f7128",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a43b5ce4-d4dc-4ea1-903f-2d95aa75c166"
        },
        "item": {
          "id": "201587ba-19da-4cd9-8be6-870b20d26c98",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1ec92b13-f199-43e8-a7e6-5467c9f0726e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd10228-cc87-4f07-a114-71a1c338f68f",
        "cursor": {
          "ref": "85518eff-0270-40de-9f2e-81fa2e150845",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ea7d35e1-d131-412f-b6f0-1d0d02fac89e"
        },
        "item": {
          "id": "8dd10228-cc87-4f07-a114-71a1c338f68f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b8a0aeaa-4918-4e06-8a9b-35001f8242d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3defd4e9-1f53-43c6-97c7-10c10de870ec",
        "cursor": {
          "ref": "6525e94d-6051-42cd-a33c-f8fee08e6f42",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "162f2086-2274-4e79-9698-c0bec237d7bb"
        },
        "item": {
          "id": "3defd4e9-1f53-43c6-97c7-10c10de870ec",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0306c4f3-e3b7-4cba-b1db-4e9b79184a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad425b5-4129-4f83-82bf-2bc1af026e3b",
        "cursor": {
          "ref": "a180b0de-dce4-46fb-b961-a40b5f5f3c38",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5eefb00a-5887-484c-811d-430a7891bf2c"
        },
        "item": {
          "id": "5ad425b5-4129-4f83-82bf-2bc1af026e3b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "258362bc-b926-440b-a8bf-6fe30dbecda5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ca3583-2304-4f57-8856-7a635a4a6a5f",
        "cursor": {
          "ref": "d1a33e31-1e4c-4a6e-a6d5-12346557b723",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6bb4798c-caea-4650-8132-602f9066dbd0"
        },
        "item": {
          "id": "a0ca3583-2304-4f57-8856-7a635a4a6a5f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fe5a8a85-f5fe-4b7f-a88a-92c3dbe22460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274f62a4-74fb-4bdd-8768-de730fbadb37",
        "cursor": {
          "ref": "2bcc0815-1259-4190-b728-223f261066aa",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "17a796d1-3226-4af6-a103-eb67b058fb71"
        },
        "item": {
          "id": "274f62a4-74fb-4bdd-8768-de730fbadb37",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e9b9b212-20bb-4c4b-93c1-d09466dcc7ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1808
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d932ad-b3e9-4d49-92be-f7dc04d853dc",
        "cursor": {
          "ref": "42e34edb-507b-45f5-b523-1dd7d2440094",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0055d14b-7397-4ebc-b995-7eba58b7b210"
        },
        "item": {
          "id": "90d932ad-b3e9-4d49-92be-f7dc04d853dc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e9547d1a-b0c3-48b4-9295-cbec1ce41d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1a8816-8d86-4e44-ba9a-31a0601b2d58",
        "cursor": {
          "ref": "c3e970e7-6bda-4a23-94ae-7015313b9736",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2ee86877-fd2d-4cfb-9a4f-932b5fc0c6ee"
        },
        "item": {
          "id": "1e1a8816-8d86-4e44-ba9a-31a0601b2d58",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7232e67e-f38a-4b6d-81d9-943f6b1ed2b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65369ab-d19a-426a-af34-b0b977bdf614",
        "cursor": {
          "ref": "fdb0ddcb-dac2-404d-9c29-da1b00db2b2c",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "54e2361a-9d37-42fe-90f6-2fcc8807ecad"
        },
        "item": {
          "id": "e65369ab-d19a-426a-af34-b0b977bdf614",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7107dd72-4e01-4c9b-89fb-35cb04a461ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d166205-2cc1-416e-a0fb-930c361897d6",
        "cursor": {
          "ref": "c9c6ca26-c1d9-441b-b08b-bfde48aea170",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d23dbcc9-1697-4841-bfbf-b89b89139e2e"
        },
        "item": {
          "id": "0d166205-2cc1-416e-a0fb-930c361897d6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ab95fe39-33a3-4765-a604-9b86317f3d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1745
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939465f8-bbc2-4026-9d0d-3f868f09d5c1",
        "cursor": {
          "ref": "d2a5ded5-037c-485d-9cdc-ed55c0160df1",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a07be50c-b30e-4655-afbe-6053f84adbd9"
        },
        "item": {
          "id": "939465f8-bbc2-4026-9d0d-3f868f09d5c1",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d55e7985-d962-402f-8147-f3c7a529d899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def284bf-57f1-4ef9-a5d5-b3ec7dc8a435",
        "cursor": {
          "ref": "92596cb7-1fb3-403b-b2e1-42814762c2c8",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "fe1299a4-81e3-4143-9db4-71ad698578e2"
        },
        "item": {
          "id": "def284bf-57f1-4ef9-a5d5-b3ec7dc8a435",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ccb74828-f213-4116-b2f1-3d19e65dad31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b150ff6-70a3-4efb-9108-b7d149899e97",
        "cursor": {
          "ref": "07c8ae20-3f0c-4daf-9a6d-ced52964f82e",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "919b0542-8de7-4bf9-b1a6-fbde7a501286"
        },
        "item": {
          "id": "9b150ff6-70a3-4efb-9108-b7d149899e97",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d71be7d9-de8a-48dc-b329-3cce7e09f3cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 2147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776f2526-aec9-47a8-a042-87b046ab66a9",
        "cursor": {
          "ref": "1b37e94f-0c77-45a8-ae91-6d6382462600",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "98bd5edd-bd2a-43a2-9cdb-77d5a5d74d85"
        },
        "item": {
          "id": "776f2526-aec9-47a8-a042-87b046ab66a9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "755bb3a5-96c2-4a02-86e4-62e5c92f1ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7ec77a-bf87-4e7a-bbaa-a14deccb9a4a",
        "cursor": {
          "ref": "4c0b7377-b394-4051-b59a-61d2493feae8",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "bcc1a132-d492-41ca-ada8-654829ec3cb2"
        },
        "item": {
          "id": "ad7ec77a-bf87-4e7a-bbaa-a14deccb9a4a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2925ca42-07da-42cd-9bf3-1f3856c2bfa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1035
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0c396b-9a22-4e46-9361-7a2974f6840e",
        "cursor": {
          "ref": "0f5cde4a-d8d0-44fd-afb0-29285a2b8624",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "38642ae6-d878-487e-9c7f-d3552c120be6"
        },
        "item": {
          "id": "4b0c396b-9a22-4e46-9361-7a2974f6840e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "950bc90b-140f-4aee-8ccf-acb54d6ce959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1059
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97ccd5c-0e26-47d2-b116-a8e73916827d",
        "cursor": {
          "ref": "6b0e1e07-5f39-4f0b-9ed5-25203c96d774",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3849decf-b13f-419c-974a-a93abaa239c0"
        },
        "item": {
          "id": "c97ccd5c-0e26-47d2-b116-a8e73916827d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0357b453-ac3d-48f6-84c5-7c158c0a06a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ee06ff-4635-4972-a333-e0e68faf672c",
        "cursor": {
          "ref": "31b6fa19-d86f-43cf-b7e6-52ae4b1bf096",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "04b78fbd-db95-4260-b0cc-49640d52d871"
        },
        "item": {
          "id": "34ee06ff-4635-4972-a333-e0e68faf672c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1dd76e8d-8d2a-426c-b814-354122cd141f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7423773e-31d9-49e5-b3f7-6bb417d54015",
        "cursor": {
          "ref": "00d2c40f-b95c-4214-8b47-14b284f50fca",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ec8fde19-6e82-4c1f-8536-86c63d8ca1d2"
        },
        "item": {
          "id": "7423773e-31d9-49e5-b3f7-6bb417d54015",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f99787a2-df0a-48f4-952e-c19676d55a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7492c2d9-ec4a-44b6-997e-f88a65f8a3b2",
        "cursor": {
          "ref": "6c44567d-7f2c-4f0f-a11d-2059cbb64973",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "71ae4ac2-2d2a-4936-bdfd-7ca9649854e3"
        },
        "item": {
          "id": "7492c2d9-ec4a-44b6-997e-f88a65f8a3b2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6c30d458-5446-444d-b86c-aa9fbd5b98eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc6696f-c483-4d48-8de3-433ec4ae4115",
        "cursor": {
          "ref": "ac76e029-099d-4b4d-9787-c495b7eaab8e",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6efca1c5-684e-45b9-a0d5-0fdb2a1a3d3e"
        },
        "item": {
          "id": "8bc6696f-c483-4d48-8de3-433ec4ae4115",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "575ad19e-19b6-4010-aba5-d1942d1bd872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7141a9e1-cf3a-440b-a821-074c4d90a70b",
        "cursor": {
          "ref": "0481ffb6-1458-47d1-883d-d949787b745e",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "32d55ddc-fcba-47a2-b4be-e37146dc5078"
        },
        "item": {
          "id": "7141a9e1-cf3a-440b-a821-074c4d90a70b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a0e84c2d-4af4-4bf1-9d45-4c58ebf5c3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd89211-ad55-47b7-acec-830ca1c19ec9",
        "cursor": {
          "ref": "16c03ad3-7cbd-418d-9227-f022d04774a0",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "3beebe0c-d8f0-4cb5-85dd-ef0ef33ec946"
        },
        "item": {
          "id": "ecd89211-ad55-47b7-acec-830ca1c19ec9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f531946f-01f1-4042-93fc-f13a775dafc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f26ebc-aa6f-4c9d-b343-3cc9bb5e24d5",
        "cursor": {
          "ref": "9f4deb2c-c8c9-4d60-8a80-fdedbd91a2bb",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3a88774b-e15f-4c54-bcc0-cdd7a105839c"
        },
        "item": {
          "id": "42f26ebc-aa6f-4c9d-b343-3cc9bb5e24d5",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "fd215883-8739-4b61-9114-73544bfe4b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f717d572-7d3e-45af-bab4-8328b41f7489",
        "cursor": {
          "ref": "25c3229d-ca52-48e0-a14f-90a54367c954",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "32ac87ea-6753-4bcd-8d3c-5f0e5eba45be"
        },
        "item": {
          "id": "f717d572-7d3e-45af-bab4-8328b41f7489",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "68d2da97-8f1e-4081-9a8e-b4ce60135a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319fa7cc-db9e-4062-9c51-927d92ba0c70",
        "cursor": {
          "ref": "ee82bf2f-a9ba-47aa-a03e-1c9824648442",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "60e89cd6-92fb-4b08-bdcc-3cf95e495333"
        },
        "item": {
          "id": "319fa7cc-db9e-4062-9c51-927d92ba0c70",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ac75a445-ad6f-400d-be9b-afc6d920b1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebeb3564-ea3e-4173-9e4f-69014d885840",
        "cursor": {
          "ref": "47171d9e-6405-4395-8c47-42a006e3fe02",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "27bb468e-b1f9-4c61-b874-cb1479be5060"
        },
        "item": {
          "id": "ebeb3564-ea3e-4173-9e4f-69014d885840",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "14a60385-567c-434c-84fa-123be9b005fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73045cfc-843d-43f2-9989-0830502838af",
        "cursor": {
          "ref": "8474dc21-ead7-4cb0-85b9-29a574fbd7c6",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "dd1485f7-c5af-4964-9cfa-f29b805ea370"
        },
        "item": {
          "id": "73045cfc-843d-43f2-9989-0830502838af",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f7d89a14-f544-4e84-baec-ec2e804b2d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73840543-0868-484f-a41a-847efc540858",
        "cursor": {
          "ref": "ab3bd288-3007-4c6b-b73d-45963e32019b",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a8285f24-53ab-4d62-a6a1-902e52945700"
        },
        "item": {
          "id": "73840543-0868-484f-a41a-847efc540858",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "cd4fe254-a3af-4700-b67a-376fc71e0505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25bb5f09-01ec-4d59-a7cb-9b3fc7cdd5ab",
        "cursor": {
          "ref": "98260dc2-764b-49bc-9c40-699eaac84f32",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2fc02423-69aa-4bf9-9da3-f907bcf61c3b"
        },
        "item": {
          "id": "25bb5f09-01ec-4d59-a7cb-9b3fc7cdd5ab",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e32e5fa0-70df-4730-97df-6fd6b9d745cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20484b3-5ae3-49b6-8fd6-20c0324292d4",
        "cursor": {
          "ref": "e3083f50-a999-4115-9f96-987cdd392828",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7ea190f2-406f-415d-b781-29c317b613a4"
        },
        "item": {
          "id": "f20484b3-5ae3-49b6-8fd6-20c0324292d4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "81f5c92d-a80e-496a-8e62-2cedcdb60ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38270069-0f7e-4447-991f-f290ce15bb35",
        "cursor": {
          "ref": "f0c72602-50bd-4435-8db3-3cedea4786bc",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f000650e-2e3d-4e80-a704-fd5f4a30e10a"
        },
        "item": {
          "id": "38270069-0f7e-4447-991f-f290ce15bb35",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "535c976c-f2ae-4b7c-964f-70c50bfc3e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315846af-2fa9-4ff4-8bb1-c34b461f7b92",
        "cursor": {
          "ref": "cf1a519e-3ef7-400b-9e94-b676927dd9fd",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1702211a-cac5-4123-ad71-f49c04ba2527"
        },
        "item": {
          "id": "315846af-2fa9-4ff4-8bb1-c34b461f7b92",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "202522c7-167d-4e03-9f5a-b024769b3a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28b1c56-299b-4ae8-8628-9ced7af063f8",
        "cursor": {
          "ref": "cd33c0c2-6798-47b1-b18b-3a3801c8c91e",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "76be8d7f-1bf9-45ba-a823-e4b54e583b7e"
        },
        "item": {
          "id": "e28b1c56-299b-4ae8-8628-9ced7af063f8",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "43d46a11-aa0b-4bbf-9f9e-aae4ee8fc08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d814045a-77d1-4a89-9c01-b634cc5e3114",
        "cursor": {
          "ref": "6456be51-11f3-4699-bf2b-e271a2922c84",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "16a42b0b-d360-4171-bd0d-47fe788c1951"
        },
        "item": {
          "id": "d814045a-77d1-4a89-9c01-b634cc5e3114",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5f07e4e3-f734-48bb-9ea7-c56599b0665b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13558150-ea3f-4db3-931b-83a13c242d27",
        "cursor": {
          "ref": "2b9d2216-c7d3-4e69-bb90-33cb9e416197",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e36d2c2a-4d98-4a37-b36f-04a412f6e04b"
        },
        "item": {
          "id": "13558150-ea3f-4db3-931b-83a13c242d27",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a4add238-d0e5-4418-bd04-dc04d691adeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed84871-f3ca-465b-a0ce-edee632fa9cf",
        "cursor": {
          "ref": "a3524a27-20d5-446a-8b78-d32cb85d05c0",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "447fa1c4-d0bf-4b72-bba9-f026657a5713"
        },
        "item": {
          "id": "0ed84871-f3ca-465b-a0ce-edee632fa9cf",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "19a77e03-b450-4247-a590-d26ab7365395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0193be60-99a8-403b-b287-9a1da6755b7f",
        "cursor": {
          "ref": "b2d3c26c-bcda-4674-86ac-9812dcfdbf39",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "40685dbc-ff1e-4a88-b547-fb39aa7c6483"
        },
        "item": {
          "id": "0193be60-99a8-403b-b287-9a1da6755b7f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "67c4316c-3fab-4869-b858-0abfabaf4950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74670a79-76a4-41e9-8115-6a430f1c887c",
        "cursor": {
          "ref": "3d6a699d-672f-4ce5-b62b-b5cdcbeb5332",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4609e303-4a1e-44cf-9d9b-331e28b2df70"
        },
        "item": {
          "id": "74670a79-76a4-41e9-8115-6a430f1c887c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "063d7945-0fa0-4daa-893f-756c8d0f23eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ff2dd7-238c-4614-a286-a3764e7fb95a",
        "cursor": {
          "ref": "831972cd-486a-48be-ac78-85623c0d76a1",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0015e2b1-4c96-4d8b-9d38-7d28bd43c255"
        },
        "item": {
          "id": "93ff2dd7-238c-4614-a286-a3764e7fb95a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6ab415d1-106e-4df9-bae5-2c983e06315e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e71bce-1d90-4734-94fc-b8c5150acc55",
        "cursor": {
          "ref": "e96ffd38-22fa-41c3-adc6-256e8e7a3a7c",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5e229a00-7c11-4c74-a4e3-add160affdc0"
        },
        "item": {
          "id": "98e71bce-1d90-4734-94fc-b8c5150acc55",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c34b8527-b035-47cc-af7d-b8dae2fe65b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3d7abf-e818-4034-ad92-e2f22ddc468b",
        "cursor": {
          "ref": "14f88f6c-4305-4393-ae76-e4d361e2c131",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a676913c-e009-47f4-9067-58bb10b508e5"
        },
        "item": {
          "id": "3d3d7abf-e818-4034-ad92-e2f22ddc468b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7cd5b940-d033-4783-977a-c84f193197aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d22e73-3df9-470e-9281-603e3ff85ff5",
        "cursor": {
          "ref": "d9bfb780-cbd2-47b6-9dfe-a88a33f99080",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "07ea752a-aacf-48d4-baea-f9eda60c74fc"
        },
        "item": {
          "id": "90d22e73-3df9-470e-9281-603e3ff85ff5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a052701b-d04f-44e0-9d5b-7d5336bd20be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8843cfef-300d-40c1-9baf-d6cf8c087a57",
        "cursor": {
          "ref": "9a01c6df-4eda-471a-940d-7395741b9a3f",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "bac5caf1-98e9-464b-9281-2e8ee00b6ad4"
        },
        "item": {
          "id": "8843cfef-300d-40c1-9baf-d6cf8c087a57",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5c42513b-5ce4-4d4d-bd0e-351d3dd4e579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3aeb792-90b8-49e2-ba4e-bf54b328a1bb",
        "cursor": {
          "ref": "88990f1f-b1e9-4802-9c91-da063df069ce",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "963a62f8-6852-49b2-a8a4-55001914f4a7"
        },
        "item": {
          "id": "e3aeb792-90b8-49e2-ba4e-bf54b328a1bb",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5b70669e-9445-46ac-ae4f-eab5c37fa61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9bab710-be6a-4832-abe7-d03c810a8cea",
        "cursor": {
          "ref": "9ce0a056-3538-4a91-833f-9bd9b2ae1d63",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c52df4e3-02e8-4a76-b254-647a291ec3f4"
        },
        "item": {
          "id": "d9bab710-be6a-4832-abe7-d03c810a8cea",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "aa9924b0-0108-4f81-a5fe-e64a51b56f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4fbaa6d-6dbc-430e-9146-33492a37c25f",
        "cursor": {
          "ref": "0c622e8b-c6ef-48fc-9408-3e5fc65deb15",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "56e02158-f4fb-4585-af97-deb3090053c6"
        },
        "item": {
          "id": "b4fbaa6d-6dbc-430e-9146-33492a37c25f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "170a2342-136c-472b-8f73-7192ab97bc10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dad14d9-b152-4417-b8c9-c2a61ef692c2",
        "cursor": {
          "ref": "7253704d-80d5-41dd-91ac-785f50a1f790",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0a892a61-e39c-438a-8122-21b2b6940d2a"
        },
        "item": {
          "id": "6dad14d9-b152-4417-b8c9-c2a61ef692c2",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5548c221-94b8-4a0b-94c4-b6d6593bbe1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf149669-bf98-45b5-8169-d4d2dab32b36",
        "cursor": {
          "ref": "ada881cf-7a7b-4019-9d18-7a078ba0c874",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e0463997-76a0-4aef-b497-ee3c56a8759f"
        },
        "item": {
          "id": "bf149669-bf98-45b5-8169-d4d2dab32b36",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7240777f-4b57-4e00-b332-5925e940f8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1064
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b19a1a-8cf0-40fa-b07f-c09aa133960a",
        "cursor": {
          "ref": "5d39fe72-2579-4018-b124-77606f3e27dc",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "65b9ce92-303a-4dbf-a36a-9ebbf67e6789"
        },
        "item": {
          "id": "32b19a1a-8cf0-40fa-b07f-c09aa133960a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a79d8bcf-41ff-453e-b114-7fa23f128f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d6d705-c9ac-4be1-8fe3-fc707e11676c",
        "cursor": {
          "ref": "8e45d35b-c31c-4d05-8399-c5c6c426599b",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "615ff389-b4bf-4e6c-9a90-5d4ea31b072e"
        },
        "item": {
          "id": "d6d6d705-c9ac-4be1-8fe3-fc707e11676c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "59b29c07-05cd-4e6e-9f24-9bbaaa52c955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60346e6c-857c-4c5e-9f79-61d7aaf322b5",
        "cursor": {
          "ref": "44c9c9d1-f75c-4042-9d4d-42c35ec19452",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "52224523-9485-40a7-aae8-f31ec1be3d07"
        },
        "item": {
          "id": "60346e6c-857c-4c5e-9f79-61d7aaf322b5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "8ca48415-96c2-4d8f-aa3b-1242538184ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ee8943-db5c-4eea-a4fa-8a96274120dc",
        "cursor": {
          "ref": "1053b70d-4064-4103-b084-b77e1c5865f7",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8aabadbb-0c3a-4cf7-b81a-65b60cb276ef"
        },
        "item": {
          "id": "81ee8943-db5c-4eea-a4fa-8a96274120dc",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0e808262-431e-4a8c-a3d8-3e75028c88c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1087
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c21ce8-d549-4905-8c45-eb0ad23f56e1",
        "cursor": {
          "ref": "4d944114-3577-476c-9307-1d0c6dac4eb0",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2747002b-f46a-47a1-a19c-aec241483414"
        },
        "item": {
          "id": "52c21ce8-d549-4905-8c45-eb0ad23f56e1",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "cee89def-e9eb-47dc-939c-952b3fe4a8c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760f4cb0-b4a1-4610-ac6c-490b15e4b9d8",
        "cursor": {
          "ref": "3469269e-230d-4789-8cff-69f121b29be5",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b0eef152-76d8-44b8-ad68-e3409f288a79"
        },
        "item": {
          "id": "760f4cb0-b4a1-4610-ac6c-490b15e4b9d8",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f5729e6b-7c5c-4911-8910-948e9ab51150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1086
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69be59d4-a604-4035-a63d-e59c6ce7e3d1",
        "cursor": {
          "ref": "d791d79d-6eae-4e5a-8c17-dd2d0e923cf0",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d8d24325-691e-4b8f-aa75-5f7b53ba468c"
        },
        "item": {
          "id": "69be59d4-a604-4035-a63d-e59c6ce7e3d1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "88e91bb2-ad6c-4ba1-8742-80163a6b50b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2811df24-49ba-42bb-9484-5521e938232b",
        "cursor": {
          "ref": "0fc278f7-7422-42a9-9e19-9ce2598afa1d",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4dbbf2af-52d1-4052-b045-e4a428279190"
        },
        "item": {
          "id": "2811df24-49ba-42bb-9484-5521e938232b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b700c780-a441-4512-a3ea-5a910900545b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3f2081-94b8-4a89-857f-47cb67e0e30c",
        "cursor": {
          "ref": "f343cd20-52ae-41f1-9dcf-a997fc5aaf22",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "cc8cb471-f08e-4161-8464-53ea5c8233d8"
        },
        "item": {
          "id": "bd3f2081-94b8-4a89-857f-47cb67e0e30c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2e609ba6-79bf-4130-a883-057e6f7744e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1379
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35b1c14-6c3a-4ce5-95c4-14d9ccc8b171",
        "cursor": {
          "ref": "50722a6d-5f80-4e86-be87-a3627f3b05cf",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f0f7fe38-381d-4f6d-8af3-0d9a48e00ae6"
        },
        "item": {
          "id": "d35b1c14-6c3a-4ce5-95c4-14d9ccc8b171",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2c8e90c7-dc87-4b9c-8eae-47b9e4e4e2bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29673e8-f802-4e1a-8d33-a5a5f7b7fabe",
        "cursor": {
          "ref": "8b745dc1-6f2b-4a0c-9568-aa75cb87da70",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "07fb4e47-d1cf-40ff-86f0-82f7a1eacff7"
        },
        "item": {
          "id": "c29673e8-f802-4e1a-8d33-a5a5f7b7fabe",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8a3b1861-6d36-438c-baeb-2197f5c0cda6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c964b9bc-9bd1-4d2f-ad99-ce6a9a5e59fa",
        "cursor": {
          "ref": "bb70e2ec-9e33-45c3-bf19-fa6ab6e714f7",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bdc01de6-8c4e-4336-9ded-c8a916dab1dc"
        },
        "item": {
          "id": "c964b9bc-9bd1-4d2f-ad99-ce6a9a5e59fa",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "34faa35e-73b0-4c22-b910-abd6d0cc5097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5e9370-51b6-484b-b1dd-1c1eee7e420c",
        "cursor": {
          "ref": "53ffe1ad-5014-4c57-99cf-c44d868403af",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3610a59b-ee1e-4153-af33-1703fac21803"
        },
        "item": {
          "id": "9f5e9370-51b6-484b-b1dd-1c1eee7e420c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2d5467e1-8404-4447-89af-610c1243468d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb18e19-20a7-4e99-99db-22369bd4afad",
        "cursor": {
          "ref": "78fef65d-8265-4b8b-a1fc-c1dea2f4325a",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b9b85b41-68a9-47b0-9963-5e642920ce52"
        },
        "item": {
          "id": "1cb18e19-20a7-4e99-99db-22369bd4afad",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "84e624b1-4d19-4ede-9f70-0b6159d28c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51cda500-6686-4eb4-906d-e29f939ec3cf",
        "cursor": {
          "ref": "59ff3d87-7e08-4642-b6dc-80c9491db4eb",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "aa3cbe2a-cc35-4eb4-bfcd-d5e58aa2a4e8"
        },
        "item": {
          "id": "51cda500-6686-4eb4-906d-e29f939ec3cf",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a6cd5fca-1aea-4375-b2ee-f5d1280accb4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf2e1c2-bd0c-49d6-a8fa-7cbfea7f0b6b",
        "cursor": {
          "ref": "bf148a04-c2af-4c39-939c-a0b3992bbef6",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "916b03d9-bf42-4d56-af98-c9769ebec8b7"
        },
        "item": {
          "id": "4cf2e1c2-bd0c-49d6-a8fa-7cbfea7f0b6b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d1b1b37f-42af-4426-b518-ba1e08a1e6d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:102)"
            }
          }
        ]
      },
      {
        "id": "b7c06433-170b-49db-978b-38561c4778e0",
        "cursor": {
          "ref": "0076dcd3-48b0-4d49-9eb9-a73a9006e2c5",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "83b978de-4c43-4e2e-9dee-8e015630df51"
        },
        "item": {
          "id": "b7c06433-170b-49db-978b-38561c4778e0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7c11ac40-0780-4e42-8dc4-e7953ad968e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "96e412f4-d5cb-411b-ad53-3927ef0ca40a",
        "cursor": {
          "ref": "1bc45523-f2f4-4b69-8b90-9312c4ad84ee",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f8c0208e-58bf-4814-b8cb-22f910906a7a"
        },
        "item": {
          "id": "96e412f4-d5cb-411b-ad53-3927ef0ca40a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7706d599-069a-4759-bf91-68efce6c13e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "ee7a2ed4-9782-42b0-bc32-a5b93d5dd0ec",
        "cursor": {
          "ref": "b5444846-f686-424a-9b63-e648deebbdec",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "72e1071b-3599-45a9-8230-5b25bc384975"
        },
        "item": {
          "id": "ee7a2ed4-9782-42b0-bc32-a5b93d5dd0ec",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7d9932d2-f38b-4745-be55-1e151b72193e",
          "status": "Created",
          "code": 201,
          "responseTime": 6486,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae2300f-9999-43d5-aadb-9b21359822b6",
        "cursor": {
          "ref": "f6812553-7a8f-4a8a-9c8e-9c6193113353",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f757a74c-c9d1-41f6-916d-ea36195d9ce0"
        },
        "item": {
          "id": "9ae2300f-9999-43d5-aadb-9b21359822b6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6b467a80-d05a-4063-afb8-b8d3664ae067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "a2faadf7-3ebc-4d78-9ad9-9821f7e61380",
        "cursor": {
          "ref": "9fdfd2e5-2ee0-4aa2-9062-15bc5d4d9f86",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6912b701-31b9-4e3c-a9bf-f7efa4a2fafc"
        },
        "item": {
          "id": "a2faadf7-3ebc-4d78-9ad9-9821f7e61380",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3987fe79-65cb-4de9-b29f-07c55fdef896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1190
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "98945111-f187-4710-b5ba-9eb6be75ced9",
        "cursor": {
          "ref": "bfad7be2-4153-4242-8ce0-9735b8c7fa44",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0519dae2-753e-4ff0-9b08-5b8cf359ce26"
        },
        "item": {
          "id": "98945111-f187-4710-b5ba-9eb6be75ced9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f37b5241-5505-4a79-a5bf-7cc4aff2ca90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168a9878-a06b-47f0-a16b-e2b0a51d695d",
        "cursor": {
          "ref": "a223e010-8234-44f9-ab1e-70b7342de8c4",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "853d6309-5839-4ad8-8adb-e20ee1576796"
        },
        "item": {
          "id": "168a9878-a06b-47f0-a16b-e2b0a51d695d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3533e53c-844d-4387-a63c-3f89f2ed6a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc70b7e-7561-43f8-8e63-f62ee4fe3f58",
        "cursor": {
          "ref": "5d5c704a-d65e-4596-8186-5ab5a94b630d",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "658ed68b-3c45-48da-8438-612458213031"
        },
        "item": {
          "id": "5dc70b7e-7561-43f8-8e63-f62ee4fe3f58",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ff01ed91-ae70-4dd5-b71a-f0737edf1b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8fab25e-87bd-4249-bfa4-24494caa637c",
        "cursor": {
          "ref": "19959df2-59fc-4013-bf10-5961917a35c7",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "bdf544b3-1f35-4f5b-ac84-0d348de8b729"
        },
        "item": {
          "id": "e8fab25e-87bd-4249-bfa4-24494caa637c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "710d0d45-a1b3-4339-bd29-8c068c543c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3945bc9b-d379-4e5b-b1a8-72b58ef3b204",
        "cursor": {
          "ref": "4b444fc8-6910-4b74-a470-f676c89758cf",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1947cad5-db3f-448b-b1cb-4fb79653297d"
        },
        "item": {
          "id": "3945bc9b-d379-4e5b-b1a8-72b58ef3b204",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "88d33459-3237-4539-a8bc-0e9b9473045a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0f5c7f-7370-4323-990a-932bc990fa4d",
        "cursor": {
          "ref": "857fae3d-ef23-44ea-893a-e42fc7cf9ae3",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6a801229-27aa-4156-980e-d120d0f0719f"
        },
        "item": {
          "id": "1e0f5c7f-7370-4323-990a-932bc990fa4d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8be152bc-48b6-49ec-9044-c7f644c3b6ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36bbee37-719c-4979-be21-b5564966f4ba",
        "cursor": {
          "ref": "e3a021ef-dce8-4fa4-8373-0a3631ad16db",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4cf92d3d-15dd-493a-8b97-1bc99853d03f"
        },
        "item": {
          "id": "36bbee37-719c-4979-be21-b5564966f4ba",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8ad0bdf2-55e0-47e3-9e78-9955b2267aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ad94f9-792e-46e6-b7e4-2be7d5d63a6f",
        "cursor": {
          "ref": "8c8f69b3-0a29-402d-ba28-3ece9e36791a",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bea5f05f-d36e-4eda-a5cc-1d746a3a16a3"
        },
        "item": {
          "id": "37ad94f9-792e-46e6-b7e4-2be7d5d63a6f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f8e5230d-4563-4ee7-8651-eda3d22bc2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c608b2fc-ba3e-4ab0-b293-35f42bbc1624",
        "cursor": {
          "ref": "85c38cbe-b907-45f0-bde8-29d073f58dd1",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "807c447d-f64c-42bd-986f-046a785611f1"
        },
        "item": {
          "id": "c608b2fc-ba3e-4ab0-b293-35f42bbc1624",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6e9d1549-5963-4f90-9a04-a51052af0852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ff7775-12c9-479e-911d-241ebcf987a9",
        "cursor": {
          "ref": "b3fc30c9-9bcf-4400-b9f2-dcf074bb50d4",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2de00081-37e2-41c3-a979-42c0fbc23195"
        },
        "item": {
          "id": "86ff7775-12c9-479e-911d-241ebcf987a9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ef50b13f-ebaf-458a-a985-3b1f7646a824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7d4605-d341-445a-bc5e-6b2685467f4d",
        "cursor": {
          "ref": "5db8da62-16ee-4fe2-b768-717db5bd228d",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "40b4c2b7-6b89-4728-99c3-8792c637d9bf"
        },
        "item": {
          "id": "5b7d4605-d341-445a-bc5e-6b2685467f4d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2f729cde-997f-41a4-8f76-58d330b65fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1fa6a7-85e9-431f-92ab-d24b8b8865b1",
        "cursor": {
          "ref": "9a33c989-ae20-4cd8-8523-145b502ec02c",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "03c239ce-3392-4052-aee0-37035b70144b"
        },
        "item": {
          "id": "1d1fa6a7-85e9-431f-92ab-d24b8b8865b1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9c3ce08a-e811-41de-9c05-480728475dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e06ec6-28a4-49d5-ba51-2b28e2fa662b",
        "cursor": {
          "ref": "b530cdd3-d991-416a-9f15-016df2d9988e",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "17d9d507-9f65-4860-bf19-ecdc639968b5"
        },
        "item": {
          "id": "f3e06ec6-28a4-49d5-ba51-2b28e2fa662b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "40d3b991-7e58-4a76-bad9-b1ce0bf5f98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8af9fc-9435-4eff-864f-6c1f6c765431",
        "cursor": {
          "ref": "a3217a41-27f5-46b2-bc64-9d6a59178656",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6cda2711-452e-4bd0-84d9-599215ffd24f"
        },
        "item": {
          "id": "7b8af9fc-9435-4eff-864f-6c1f6c765431",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8bdbeb0b-c505-4a3c-b89b-71a1e5bb947d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0e3b8c-99c0-413d-9bab-7eae1c94538e",
        "cursor": {
          "ref": "d260a6ac-f8f6-441a-aa5e-7134e0051d80",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0f60aed7-c07d-4fe4-a554-b1bd0bcd77cf"
        },
        "item": {
          "id": "0a0e3b8c-99c0-413d-9bab-7eae1c94538e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "25a95b53-79a1-4714-be3a-b8c0373bfe21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a074f2-fcdb-429c-906e-645b618505a3",
        "cursor": {
          "ref": "fea96df2-60b1-457e-8f12-2703fb8e277d",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "28584877-b82e-489c-80d8-40816459ef56"
        },
        "item": {
          "id": "54a074f2-fcdb-429c-906e-645b618505a3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "86791c1e-ed3b-4861-9e38-af389167540f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7054b28e-fda5-4f07-af69-5834dbe17c9c",
        "cursor": {
          "ref": "6456e35c-f6ea-4a7f-b559-1ab16cfe4e21",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ec436c93-9774-4b6a-994e-0a21493d578a"
        },
        "item": {
          "id": "7054b28e-fda5-4f07-af69-5834dbe17c9c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f62ff583-4c0d-4ec3-bb1f-e08193c60439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1371a581-2790-488c-9628-c0c0e9540a82",
        "cursor": {
          "ref": "c7dbeb2e-f405-4d87-b4bf-45aa918bf479",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9f7337c6-b5e0-4167-b008-11376f2fdcfe"
        },
        "item": {
          "id": "1371a581-2790-488c-9628-c0c0e9540a82",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c8440fd2-e2c4-45c2-998b-8908872c53b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f46dc5-3235-4bc2-afd6-72fdf306d140",
        "cursor": {
          "ref": "c6abacc4-95aa-427f-9f9b-1aa126301dce",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "99f63f5e-e7cb-4fc9-b4ec-59f4f8c1f122"
        },
        "item": {
          "id": "a1f46dc5-3235-4bc2-afd6-72fdf306d140",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e16d7836-0f73-4f8b-af6b-010fabfd4f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a00a4d-292b-42b6-80ec-1f14164b1648",
        "cursor": {
          "ref": "da2c1b80-f998-41ef-b4a1-5ee5de8e7075",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "69699879-8a0f-453c-bdca-a2fffb672248"
        },
        "item": {
          "id": "e6a00a4d-292b-42b6-80ec-1f14164b1648",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "572dedab-befd-4f93-ab7c-95e113895c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf1952e-348a-4300-8b86-9377c3ed124e",
        "cursor": {
          "ref": "2397dfa0-4932-4fe7-8c79-2df260a44283",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d3ea61a5-ec5e-4e4b-b82f-1a20cd9c9db6"
        },
        "item": {
          "id": "8cf1952e-348a-4300-8b86-9377c3ed124e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "624c48a3-b7be-4a09-b658-d72d11b3bcf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8841de-abd1-402a-9cca-c76bc534ab27",
        "cursor": {
          "ref": "c46c5632-798c-446b-a71b-064f7de25afc",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "003d466c-cd2e-4782-8a8d-e127df2cdec2"
        },
        "item": {
          "id": "bb8841de-abd1-402a-9cca-c76bc534ab27",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cd532d75-07d2-4e55-a84b-35b639d18f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99d83bf-db45-4035-a90a-3090b1666903",
        "cursor": {
          "ref": "1c452ebf-71e1-4cdc-8fed-3fdb3a432ec5",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "46bee3e1-d66f-489c-8167-da61462655be"
        },
        "item": {
          "id": "e99d83bf-db45-4035-a90a-3090b1666903",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "dc2654b7-1685-479e-9670-a67015d94a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69753b40-fd8c-4620-8621-a8c63edbdda1",
        "cursor": {
          "ref": "7a802457-2322-47bc-9b37-04c0c7558846",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ae913f2b-cbbf-4f84-9f00-ac3f4bcade3b"
        },
        "item": {
          "id": "69753b40-fd8c-4620-8621-a8c63edbdda1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ec24aafd-9a96-413c-8aa4-6ee20219cacd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c60c38-3f55-4c80-9108-edb41e4d675d",
        "cursor": {
          "ref": "4cc7e08e-4cf4-4170-bcdb-bf7a0f65c6ee",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9d636cb0-b120-4230-a8ef-d766c69da9e9"
        },
        "item": {
          "id": "b1c60c38-3f55-4c80-9108-edb41e4d675d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fe8ff73e-c04e-4a4d-92a0-d0dc55194427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6748967-7e29-4f25-856d-50142d7a8ec6",
        "cursor": {
          "ref": "9e894354-bbb2-4db1-8bde-a00db6fe5493",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6228e0be-5868-4b04-8f82-551e45e88b8b"
        },
        "item": {
          "id": "e6748967-7e29-4f25-856d-50142d7a8ec6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a60deea6-d911-4fd8-8a68-d50c2e0f9f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e4cc44-a84a-4c01-97f3-17fdc21d16d0",
        "cursor": {
          "ref": "c4a37a78-1218-45dd-8b5d-e36673ace61c",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "686452a7-4b1d-4016-aea5-8c35f1a8c7ff"
        },
        "item": {
          "id": "39e4cc44-a84a-4c01-97f3-17fdc21d16d0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c3ac87a2-4634-44ef-8da9-63e817b410bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95238e20-77ac-452e-a9ed-6bfa53133f44",
        "cursor": {
          "ref": "68743dcf-b46b-496d-a61a-95d72140dfe6",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0ccdf8f2-8115-4ead-8038-d676a1c55ffc"
        },
        "item": {
          "id": "95238e20-77ac-452e-a9ed-6bfa53133f44",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "196a78a3-75ad-4209-8a91-8d186f3e2948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c978c9c7-7578-495b-ae23-38ae0af747b6",
        "cursor": {
          "ref": "1829dd7c-7893-4fbe-b444-2466e196c8e5",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "59663ce1-db47-4cf1-adf5-3aadb61a0e80"
        },
        "item": {
          "id": "c978c9c7-7578-495b-ae23-38ae0af747b6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1bc13dd7-a547-428d-86d5-773b8db9945e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68fc95b1-a650-4951-a253-82680fde6ca8",
        "cursor": {
          "ref": "4356154b-cb3f-4a63-8990-f4c074ab0e3d",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "417e09e1-87f6-4000-a829-2c7751c68a07"
        },
        "item": {
          "id": "68fc95b1-a650-4951-a253-82680fde6ca8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "38463395-00f3-4484-9e25-8f4212f0ebd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b06618c-dc7e-41a6-b7a3-143f43014de7",
        "cursor": {
          "ref": "391daaa2-eed9-42f7-8ce2-6c33bd72d772",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "be1cba13-a8c9-46eb-8ea6-3ba867c5c415"
        },
        "item": {
          "id": "4b06618c-dc7e-41a6-b7a3-143f43014de7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "044ebd58-6d32-42cd-a47e-8832530d77b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f475436a-db86-49c0-847c-7543db1e8e72",
        "cursor": {
          "ref": "2f7e4044-df3b-4939-bb7f-9774e94096eb",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "10d72ea3-c267-443b-9ca7-e5545f6ff7f0"
        },
        "item": {
          "id": "f475436a-db86-49c0-847c-7543db1e8e72",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5c3ef02c-f907-4581-b6fa-8708ed419b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89bb24cc-5af0-4df7-aa9b-4cce2fe8439d",
        "cursor": {
          "ref": "cf6bdc9c-0c03-443c-9a57-54c68f43a00e",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8e6a3f9f-79c6-4110-bf65-3f0d80abbc8f"
        },
        "item": {
          "id": "89bb24cc-5af0-4df7-aa9b-4cce2fe8439d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "52d0dcb7-e4d5-47fd-b4d0-fbcba6cb94c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f48e8b-3d0c-452c-a4d8-698e8fbde102",
        "cursor": {
          "ref": "5d3951cd-2fb8-4534-9922-c00104c10491",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "48d7ab3b-f2d8-43a1-b6cd-37e16da7e45c"
        },
        "item": {
          "id": "32f48e8b-3d0c-452c-a4d8-698e8fbde102",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "88304ee1-43a6-4304-801e-d2030d527ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43aefce4-62cc-4eea-9e60-5a7f984a4503",
        "cursor": {
          "ref": "bf5a5d79-1976-4065-af8f-c924935d1f18",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2412291e-3210-4598-8950-6a23b77e5271"
        },
        "item": {
          "id": "43aefce4-62cc-4eea-9e60-5a7f984a4503",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "77bbb02b-95a5-458e-aac1-b4caa0591322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba54de0-0746-4d68-97e2-4c9490135c50",
        "cursor": {
          "ref": "4573cb59-bebb-40df-8fd7-cb5a32a5155b",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2abf5d88-affc-4632-b032-d6266c4a7f0a"
        },
        "item": {
          "id": "5ba54de0-0746-4d68-97e2-4c9490135c50",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "688a0677-c1fb-4811-9a42-b0c67767d60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d8b768-a5dc-44fe-b501-ffd365f5fbc3",
        "cursor": {
          "ref": "078849fc-d054-4d44-9bc8-9304f7c54e25",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "22815c5f-d3c8-408c-9438-58cf451a4610"
        },
        "item": {
          "id": "b3d8b768-a5dc-44fe-b501-ffd365f5fbc3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5ae1d5ae-f0ce-4dc0-91a8-1b7aa99698b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c655817-ed72-437a-a11a-a9b9d5b800a9",
        "cursor": {
          "ref": "a7045bed-ef8e-4b24-a279-cabdf211ce00",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "534a6972-b0df-4c1a-9413-1678d2d980a4"
        },
        "item": {
          "id": "7c655817-ed72-437a-a11a-a9b9d5b800a9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "168146b8-5c33-45f7-8455-2e5f12a66a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1c97fd-6309-47d9-bd0f-3c10833b0d72",
        "cursor": {
          "ref": "48c84140-c6fc-4a6b-b989-4d70b0504ed0",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "32368eac-2978-4f88-b4fd-c5ffabd0c409"
        },
        "item": {
          "id": "af1c97fd-6309-47d9-bd0f-3c10833b0d72",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f62ae2d4-3689-49c0-8991-f9619ad539d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfef1bf5-ff27-457f-809e-e7b50a756165",
        "cursor": {
          "ref": "582e962f-978c-4d7f-aa24-a1b2db7c40b6",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c6a29211-42e2-495a-8d7b-c5a923178cf5"
        },
        "item": {
          "id": "dfef1bf5-ff27-457f-809e-e7b50a756165",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ce425e20-1048-4634-925b-fe504a178cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758d296d-a4ed-4d40-be3a-5853c694f2b8",
        "cursor": {
          "ref": "0be62151-e982-4515-886c-9ab2aa1a05a9",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "cb80ff55-165c-4c14-8acd-a9267cf6e5bd"
        },
        "item": {
          "id": "758d296d-a4ed-4d40-be3a-5853c694f2b8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "57958bbc-8e66-4c06-9310-94059ff5b569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0687f5f0-9142-403a-b3bc-220516463617",
        "cursor": {
          "ref": "97161aa2-1753-4381-92b1-2e6f357f0593",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "214f6c97-04c9-4266-a4b3-55feb03f75c7"
        },
        "item": {
          "id": "0687f5f0-9142-403a-b3bc-220516463617",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4b149787-6032-46d3-b850-81fa9e1660a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d4df2a-5bc6-4f62-984b-6bab1ab7d3fb",
        "cursor": {
          "ref": "53ee528c-48b7-49cb-9e94-96484556c577",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "172de4dc-7a53-4ac1-a5a4-85bc58ac90ec"
        },
        "item": {
          "id": "f8d4df2a-5bc6-4f62-984b-6bab1ab7d3fb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2b8c834a-e4c0-4c16-abe9-111389cf31bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344fa9b9-42bc-4edd-ab7c-fbf315ed68d8",
        "cursor": {
          "ref": "68965447-ab0d-4037-abc5-457e10b4078e",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b5d0ce6a-e73f-43c9-a77f-b2f0756a3cbc"
        },
        "item": {
          "id": "344fa9b9-42bc-4edd-ab7c-fbf315ed68d8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a16f7e11-3c7c-400f-a5e2-8365de15f669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6b898a-e6da-4bce-ab74-834f689cbabc",
        "cursor": {
          "ref": "34c9d275-679f-4200-ab9c-c003e4c7d0ae",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1e0b6493-d300-4a3f-a991-ccca9047b3a1"
        },
        "item": {
          "id": "df6b898a-e6da-4bce-ab74-834f689cbabc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b5f02cf7-7370-4521-a76c-2f81d32901ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4e8454-588a-4f39-9e01-61eb79711e99",
        "cursor": {
          "ref": "cfd77fe0-5534-47bb-98e6-f3b825c357a9",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "dcf1bd80-b624-451d-8d0a-b46c5956c28c"
        },
        "item": {
          "id": "2c4e8454-588a-4f39-9e01-61eb79711e99",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5ae3eacd-8f32-4036-972a-8ca0c88857da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2097014-b7b3-4db2-8f63-bbea6f823dd3",
        "cursor": {
          "ref": "b6b7833e-17fd-440d-80de-0af2d71f6b58",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a2f0b58c-8ef9-45d9-865a-de40ab6f6a4a"
        },
        "item": {
          "id": "f2097014-b7b3-4db2-8f63-bbea6f823dd3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8c9ca0dc-4572-4575-93b5-fe9efc0d3d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4096c4c0-3dd2-4383-8be2-ce41e44705e7",
        "cursor": {
          "ref": "bae700d0-160e-4995-9130-d84a48e7a3d0",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "be637a95-82f6-40db-b10b-60325dedce85"
        },
        "item": {
          "id": "4096c4c0-3dd2-4383-8be2-ce41e44705e7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "795c0929-367d-4ffd-b309-9f9682c9d3b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77fcd535-ee7e-4c00-b70f-438fb36106a8",
        "cursor": {
          "ref": "f84dfc0a-2a22-4d98-90bf-79b662bb1795",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f04f15b4-0498-4b04-a786-791372319129"
        },
        "item": {
          "id": "77fcd535-ee7e-4c00-b70f-438fb36106a8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2ca85b9a-ee47-451f-b1a8-f68642f9a93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803b7225-6d17-44b0-b45e-5a10271d5e25",
        "cursor": {
          "ref": "0ca7074f-daa3-4da6-9396-06b26fa0aa12",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a32f74c4-ec21-4606-a2fc-c4af92783f5a"
        },
        "item": {
          "id": "803b7225-6d17-44b0-b45e-5a10271d5e25",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "609b6dbf-2e1f-43ba-a1b8-eb0537cc857f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a7bc16-fb72-4f41-8089-a83f0011bcbc",
        "cursor": {
          "ref": "de16e4bb-1d4f-46af-9017-5438781208c5",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d59397eb-62f1-48c9-84fb-c6cb8ff3f81e"
        },
        "item": {
          "id": "48a7bc16-fb72-4f41-8089-a83f0011bcbc",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2d2c77af-586d-4b95-b60a-3fca71019ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246e0313-b5eb-46a5-8ba3-d924b9b97d58",
        "cursor": {
          "ref": "62b1f55a-dd08-439f-bc88-f83ae0b197a8",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "68b58a9a-5129-4272-a324-8fc68da9a1f1"
        },
        "item": {
          "id": "246e0313-b5eb-46a5-8ba3-d924b9b97d58",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a46643cb-eb88-4328-8aef-e62714b096ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9aa922f-b50a-4cc2-8b95-f74ed97a6f12",
        "cursor": {
          "ref": "a6219045-6019-4590-8a56-82bee8cff143",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2a5a07ca-e042-4b9d-8772-28b46340b70e"
        },
        "item": {
          "id": "e9aa922f-b50a-4cc2-8b95-f74ed97a6f12",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b8270100-ceeb-48ce-aee3-3d658e9f8f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ec2fc1-5793-43af-85bc-02ca7a265f00",
        "cursor": {
          "ref": "0d6cff74-6a9f-4d72-bccc-b62d81f016c5",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c2a879b7-54a7-4f17-9347-34c25d7f80b7"
        },
        "item": {
          "id": "a4ec2fc1-5793-43af-85bc-02ca7a265f00",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5bf2c45f-6169-4873-890b-d4c11b4936a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1afd67f1-9b71-4454-b492-7e70c89979cb",
        "cursor": {
          "ref": "c992375e-7a8a-46ec-aa71-3997e92eaf45",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "338b25cf-63ea-4af0-aecf-6c8bfb0e4dc3"
        },
        "item": {
          "id": "1afd67f1-9b71-4454-b492-7e70c89979cb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "83e7c327-c4de-4b8c-af4b-e761866b1654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2a933f-11e8-4077-a681-44cb6bc3ccb9",
        "cursor": {
          "ref": "cfb95589-45b6-4f2b-8f85-d95789fcff32",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d5afc5b8-78ac-4b7c-b860-d96ea6a0614c"
        },
        "item": {
          "id": "8d2a933f-11e8-4077-a681-44cb6bc3ccb9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c7e3d2b7-a074-4d70-a8a9-962a01f33088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d9de46-c070-41fd-a67c-04f28c4f96ce",
        "cursor": {
          "ref": "cde10425-a169-4760-91ba-1e6d8998e94e",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ee9a2d53-01bb-4867-826b-57ef4d697c9c"
        },
        "item": {
          "id": "90d9de46-c070-41fd-a67c-04f28c4f96ce",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7f272342-098d-4bea-9370-7ed722e5683e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a78162-96e2-45ed-8d3a-7b10a7aeacfc",
        "cursor": {
          "ref": "58478972-063f-4098-8c79-eca1420d9763",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c7990e88-55e0-4e40-80ce-2921defbd74d"
        },
        "item": {
          "id": "b2a78162-96e2-45ed-8d3a-7b10a7aeacfc",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3ccb3014-3752-493f-ae1c-e88d28e307f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af19a41f-9ed3-4600-9908-453c24a337ca",
        "cursor": {
          "ref": "9a96f37f-46b9-49af-ac0b-ea61766b6eb0",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9498168e-a19f-45ad-bacc-a084ae25180e"
        },
        "item": {
          "id": "af19a41f-9ed3-4600-9908-453c24a337ca",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a4a07be5-5411-493b-a71f-a153431eecef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18735136-145e-4305-8ce0-229aa7b2cbb8",
        "cursor": {
          "ref": "89c888b6-8c25-43b7-a428-27ccd25b729a",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3a71516e-a9b9-4c1f-8b24-ed75c9d8b03d"
        },
        "item": {
          "id": "18735136-145e-4305-8ce0-229aa7b2cbb8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "64823c60-e77b-4773-baf8-41b6af643d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f73e90-e740-499c-b082-effbca65aa1a",
        "cursor": {
          "ref": "aecfb6ec-415d-48e9-820b-c73e375654a4",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "98197bc2-087d-495e-a0f2-8a89db0c754d"
        },
        "item": {
          "id": "31f73e90-e740-499c-b082-effbca65aa1a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2847ea55-0585-48cc-9a65-63f55663aae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8607df5-5732-4fe1-a5dd-7bcfcc9f1aff",
        "cursor": {
          "ref": "0d833391-1830-444d-81c9-9201e10a6a12",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "132fbf16-d23f-4f84-8c2a-ce3962a489c4"
        },
        "item": {
          "id": "a8607df5-5732-4fe1-a5dd-7bcfcc9f1aff",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7cddeacd-f6ef-4c8e-8028-b9e56e0447c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0cf703-8893-4970-b404-56fa3503942a",
        "cursor": {
          "ref": "c44c856f-89d1-44d4-9e99-8167cdc1e6a2",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "598b8524-9d94-45de-92af-b91ca7e8ff4f"
        },
        "item": {
          "id": "1f0cf703-8893-4970-b404-56fa3503942a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "dc5baa14-5937-483f-a999-40c7f6fb2845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2727c26-e83c-49bd-8b4b-86a7ee4611c6",
        "cursor": {
          "ref": "75200e9c-ddcd-4ef7-8596-08ad0a154d03",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b1bc7cef-4add-4702-b984-10393d3cd3b1"
        },
        "item": {
          "id": "f2727c26-e83c-49bd-8b4b-86a7ee4611c6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "efa07c5a-98c8-4bf2-b5d3-8b03c6fd0709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cdc0a29-16c5-43ce-9aff-390345c32852",
        "cursor": {
          "ref": "fadf04d0-e928-4873-8968-0fd5f2faf220",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f520e568-a48e-4afc-b9fd-311fdf0f6608"
        },
        "item": {
          "id": "4cdc0a29-16c5-43ce-9aff-390345c32852",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "47aa6711-5618-4988-b0c0-7434213c33ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ecd8ec1-4d46-470d-9586-a19de4d4fb85",
        "cursor": {
          "ref": "2232425b-5ad5-4c26-911d-d9cfcfe4bd6b",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7e301a30-3251-4f8a-9455-99465f08b443"
        },
        "item": {
          "id": "1ecd8ec1-4d46-470d-9586-a19de4d4fb85",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b672ae3d-2253-49a5-a829-7b149b703462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b709b6-259e-4f6a-bf9c-af8f4c93ec37",
        "cursor": {
          "ref": "acf556ee-231d-481b-9553-d0788bd9e2bb",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b9b1afef-b635-4344-bb8d-87d1aea0b8b2"
        },
        "item": {
          "id": "63b709b6-259e-4f6a-bf9c-af8f4c93ec37",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "22c51c60-c728-4675-b161-23e565f23e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec569a24-c2f1-479d-932a-c6cc622cb393",
        "cursor": {
          "ref": "c27b0885-c1ee-48d1-944a-f39e37adb068",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "30e794e9-6240-4087-a015-493918a3d5c8"
        },
        "item": {
          "id": "ec569a24-c2f1-479d-932a-c6cc622cb393",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "40cef2a4-1aa9-48de-b5c4-529552cf099a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118ddd4b-3da8-4ae1-9bd3-863f4e76afec",
        "cursor": {
          "ref": "feeb8898-82de-46f4-ae0f-ca214a7cd53d",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4482d8a1-47ab-4923-9d9d-bf68a61b3beb"
        },
        "item": {
          "id": "118ddd4b-3da8-4ae1-9bd3-863f4e76afec",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "89e407ea-e934-4b46-9be8-3e96b083803e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12484199-0a38-4417-bcf1-d35c4c0b7677",
        "cursor": {
          "ref": "3b130f92-1387-46af-8385-14ed67a0636f",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "298af42a-9828-463e-afbe-68184a539a84"
        },
        "item": {
          "id": "12484199-0a38-4417-bcf1-d35c4c0b7677",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "90b0f5dd-f01b-44b1-8c55-5def2dc2c392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25dd8715-0f6f-40f4-b689-95ec46edc993",
        "cursor": {
          "ref": "36d6ecbd-a99d-4cf1-818d-90b7e0f4d2f8",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "11c1a2b6-5015-4214-82cc-436791485283"
        },
        "item": {
          "id": "25dd8715-0f6f-40f4-b689-95ec46edc993",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6671d5f7-6b45-466f-949d-2a85af0c164c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210d61d4-aa94-4e49-b313-6f7281d3e8d4",
        "cursor": {
          "ref": "b0ba2c12-1dab-448a-9a75-1b6f37483630",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "06801e63-4453-409e-9daa-9b7bf0aff124"
        },
        "item": {
          "id": "210d61d4-aa94-4e49-b313-6f7281d3e8d4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d20ca6e7-4137-4d11-a3e2-814f562b409c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c51c177-c047-4a2a-892c-126e7a40a420",
        "cursor": {
          "ref": "b0fd63ab-79f7-4f49-8911-db40d0688829",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "78e93fef-db43-4092-a4da-73fede0c7641"
        },
        "item": {
          "id": "1c51c177-c047-4a2a-892c-126e7a40a420",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d5ffa354-423c-4229-8561-5a4f33c5de43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807aa737-f0f0-440c-b05d-49d1921ff4dc",
        "cursor": {
          "ref": "795f14f8-8321-4077-aeb4-0025ef3b3f78",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "bc426aef-b6e7-45de-bd71-e388e86962d8"
        },
        "item": {
          "id": "807aa737-f0f0-440c-b05d-49d1921ff4dc",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3a7a3010-faa6-4ff8-ab7e-4df34595547f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9255383d-8b12-443a-a48a-66415aa13a60",
        "cursor": {
          "ref": "38a0cdce-c6d5-469c-8417-2f461b037292",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "60ca69ef-8157-4acf-8103-aca975c76f95"
        },
        "item": {
          "id": "9255383d-8b12-443a-a48a-66415aa13a60",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "28cb7b70-d9e3-448a-a307-0b0e11267ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc609718-7210-4807-9038-162a9f58bc8f",
        "cursor": {
          "ref": "827ef4c2-1645-4bcb-bcd0-023a7aede3a4",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1342787f-1fa0-421c-8a19-c186ed77ecf8"
        },
        "item": {
          "id": "cc609718-7210-4807-9038-162a9f58bc8f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e7788b96-3086-40bc-8166-e4b35cfdf4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24162af2-d42b-49c5-a1f4-54282ad80d38",
        "cursor": {
          "ref": "9e90ab1b-81af-40b6-80d7-6e4fccef572c",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b7782c39-a3e0-4476-9edd-6bf91a1ad2a0"
        },
        "item": {
          "id": "24162af2-d42b-49c5-a1f4-54282ad80d38",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "702a85c8-92e4-4bc1-90b4-5283b95c915d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809548fb-101a-41f1-8ba2-06df4db40fb9",
        "cursor": {
          "ref": "1d708c67-743f-46ac-b872-74a34090f3f1",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "cd00a3ac-5aea-49f9-be47-959d1cc10f61"
        },
        "item": {
          "id": "809548fb-101a-41f1-8ba2-06df4db40fb9",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "620dd0b2-da29-4403-a03f-edcc265b1e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09c2221-3542-4fae-b563-688714655c61",
        "cursor": {
          "ref": "f6a42723-dfc1-4647-93a8-bb4e491cd269",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "eb34461d-f90e-4815-94c5-6cf8dd623e71"
        },
        "item": {
          "id": "f09c2221-3542-4fae-b563-688714655c61",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d6b98e7d-c394-40ce-9197-30b5ddc4598d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c953eb3f-1f96-480a-8ae4-15022fb859e1",
        "cursor": {
          "ref": "21d4b87d-7186-49fb-bac3-f111a2c1f6b7",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "df55b86d-44fa-400d-aed6-c274dcaf81b3"
        },
        "item": {
          "id": "c953eb3f-1f96-480a-8ae4-15022fb859e1",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0406628b-0a5c-4913-b599-b420998c283b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ee9fe2-4d48-46c8-8882-2cf65f418e72",
        "cursor": {
          "ref": "74f3fa4a-cf5a-4bf7-8fbc-a6b2b6a60903",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8b6b9080-c615-4f14-9e8a-2c3b823d7b1c"
        },
        "item": {
          "id": "b3ee9fe2-4d48-46c8-8882-2cf65f418e72",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8f51bcf2-f7f4-4e0d-a6d4-eafb2d500179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b79d9c-c78c-4761-a5ad-781dba938b94",
        "cursor": {
          "ref": "e5d2ad84-19ef-418e-b02a-12a088e562a6",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a0eb9ac6-9696-48f8-ad4d-2b15c93c5c55"
        },
        "item": {
          "id": "12b79d9c-c78c-4761-a5ad-781dba938b94",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "152bd7d5-7870-4e09-85d0-48994b625524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162ca8e9-ae14-4659-b3cb-6e0397ad0ea0",
        "cursor": {
          "ref": "6251e563-5a9e-485b-82fc-47a3d5af030d",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "78ebd7ff-b043-44f6-8c30-055119cc0b55"
        },
        "item": {
          "id": "162ca8e9-ae14-4659-b3cb-6e0397ad0ea0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "eae4e59c-4d60-4c3e-9682-159c49b420dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "812dd82d-555c-49bc-97db-ff956ebffa93",
        "cursor": {
          "ref": "a5752f9b-81ff-4fe2-be33-86268059702e",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7c32e07d-5053-4a87-a1e0-f3e18ab435ba"
        },
        "item": {
          "id": "812dd82d-555c-49bc-97db-ff956ebffa93",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6d9ca17b-5fa0-4bd8-9556-c40b7375fa9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aacd2808-9512-4e36-b7ff-82241f83e91b",
        "cursor": {
          "ref": "002d19f4-8549-4ab4-b61d-242a6e3eb8f2",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "54f37869-5b8e-4e58-8f6a-595d3daa2593"
        },
        "item": {
          "id": "aacd2808-9512-4e36-b7ff-82241f83e91b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "67b08ba8-4114-4211-916f-739b68be9e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff64a2c3-91cf-4c49-bead-d760fe420a2f",
        "cursor": {
          "ref": "bd5faec4-77e4-4986-a8bc-7fcc1e733118",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3dc29b44-501d-4453-885a-0d289f59fb19"
        },
        "item": {
          "id": "ff64a2c3-91cf-4c49-bead-d760fe420a2f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3bea27f7-1df6-42ed-a117-4f2c63b4ebfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a4fcbf-c554-4c5e-8603-5abd43c9c82c",
        "cursor": {
          "ref": "3f3ed7d1-0334-47a9-ab55-34ef8de0fb1c",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e2661629-9809-4972-8d4a-4fd199a404cd"
        },
        "item": {
          "id": "b3a4fcbf-c554-4c5e-8603-5abd43c9c82c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "261594ef-e2a7-41ca-b04d-7b1fb5c3d03b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d294fe8-85b8-4cc6-b747-73ab2ae5dc90",
        "cursor": {
          "ref": "0a1e1c5a-af9f-48d1-8a73-303b96ed2d2f",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "415c1c56-b9c1-4001-9da4-cf9e0afc9f3e"
        },
        "item": {
          "id": "2d294fe8-85b8-4cc6-b747-73ab2ae5dc90",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "49ade0b0-c3d6-490a-88af-a2c4f8934292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a4cddd-b11e-4a55-96c7-e673bdcade50",
        "cursor": {
          "ref": "70dba753-0e8f-4f88-b7da-cee227d0769b",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ce8df8bb-813a-4eff-ad2f-0bebb66ffa7d"
        },
        "item": {
          "id": "a5a4cddd-b11e-4a55-96c7-e673bdcade50",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "962357cf-a7cc-4a0d-af74-34f94de7db4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e6d7c6-ab87-4c2d-a66b-3077c583770e",
        "cursor": {
          "ref": "1ded306d-843c-41b2-b61d-b7f0ae25b983",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "af474036-1725-4144-baa5-19ab87cfa051"
        },
        "item": {
          "id": "57e6d7c6-ab87-4c2d-a66b-3077c583770e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "9fb84778-c8a4-4d12-b0b0-330783c8ed16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb20026-3dbe-436f-944d-8cf35978c4eb",
        "cursor": {
          "ref": "8b1345ba-3d4b-46ab-a314-90aee75b6049",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "656c9541-0f62-44a2-8143-4bcb6abaed5a"
        },
        "item": {
          "id": "fcb20026-3dbe-436f-944d-8cf35978c4eb",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8e1a6355-56d0-4db4-bcb6-557edffdbc75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6704eaea-7e20-4e4f-bd34-738a5e597d0c",
        "cursor": {
          "ref": "e6ed9daf-bb4e-4947-a6ad-d96131e6f1ae",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "84c317fd-a36f-4f58-9738-984271d8fbab"
        },
        "item": {
          "id": "6704eaea-7e20-4e4f-bd34-738a5e597d0c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e749f8f3-94ea-4678-8420-e7e485a0e814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86de351a-cbb7-448c-beeb-e2116cad83e2",
        "cursor": {
          "ref": "bc57c1cb-e8a8-4955-b830-f9dd5d0c209f",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "00b56685-056b-42c7-8e45-50b4b0676f48"
        },
        "item": {
          "id": "86de351a-cbb7-448c-beeb-e2116cad83e2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3463bd40-811e-4eb8-b755-44e4869e551d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56da445-49b1-48c5-a692-9591a92eafbe",
        "cursor": {
          "ref": "f2f48622-fa7e-4814-84a1-881689945b0e",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "6a8efb8f-c6f1-493d-ac68-1584b5f6a5f5"
        },
        "item": {
          "id": "d56da445-49b1-48c5-a692-9591a92eafbe",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c111e1b8-121c-4fc4-9017-3a6d88f5bd93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740c5547-b638-4bff-9b5e-18804d3c8734",
        "cursor": {
          "ref": "adb8c6d2-3222-4486-8b90-add7187e7a89",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "23142ea9-071f-43b2-b84b-a48f77b6e1d0"
        },
        "item": {
          "id": "740c5547-b638-4bff-9b5e-18804d3c8734",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7b094fb8-4ce8-4db0-918d-475982b0c388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c39230-fd43-4174-bba8-9c6496cef267",
        "cursor": {
          "ref": "7307a3c1-17fe-4c94-b27b-dd4cf4468cc6",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "89d4ac05-d1f9-4e09-85cf-681040cc39f0"
        },
        "item": {
          "id": "36c39230-fd43-4174-bba8-9c6496cef267",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "832e49d5-68cc-485f-b538-9cbcdf83ca82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8fca00-e9c1-4cb1-8276-36ed654a0656",
        "cursor": {
          "ref": "287e31af-a412-4baf-8425-eaea3ee038b4",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5fed2bc1-45e2-4fb9-a43b-3cd8298d9d38"
        },
        "item": {
          "id": "fb8fca00-e9c1-4cb1-8276-36ed654a0656",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c540c615-87ee-400b-8d43-aa92414566a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da17489d-a381-4fd6-b490-2aca9268bdb0",
        "cursor": {
          "ref": "eaea7328-e545-41bc-83eb-d0b1c6ded344",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "03fd8bc6-75a8-4d9d-8d7a-ed563a197a46"
        },
        "item": {
          "id": "da17489d-a381-4fd6-b490-2aca9268bdb0",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2b49e060-13ee-48a3-b063-38dbfb10d630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12eca0dc-d089-4ea7-b049-ccbd7235134b",
        "cursor": {
          "ref": "871ca610-809c-43ec-a912-28300b060c97",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "695b5fe0-78c3-4169-9dd8-9a18f417ef97"
        },
        "item": {
          "id": "12eca0dc-d089-4ea7-b049-ccbd7235134b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "fa526138-0509-4cb9-86e9-3e037e614b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651fc26f-9cec-40ef-8ace-291516f5683e",
        "cursor": {
          "ref": "221f9117-66a7-43f7-8f67-f7c0bd125a9d",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0e91d0b2-8995-4e73-aca3-5124aaedfc19"
        },
        "item": {
          "id": "651fc26f-9cec-40ef-8ace-291516f5683e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c85e88d4-fdce-4029-b2aa-3bc776427d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98798291-8cf0-40bd-ad3a-1164d1ef0ad2",
        "cursor": {
          "ref": "8465012c-7c2b-4837-bf0f-3472a0441306",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "eb8057eb-49ad-49c5-a6e8-96b98240fefa"
        },
        "item": {
          "id": "98798291-8cf0-40bd-ad3a-1164d1ef0ad2",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "41df51d4-f34d-4ffe-ab00-2e55afec27f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef342927-44da-4da3-82f3-e1f598dcaba8",
        "cursor": {
          "ref": "86c3191d-508c-4249-ac8d-f3da90f0a9ed",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8b420255-7733-4b39-aa8b-28194bdf50e5"
        },
        "item": {
          "id": "ef342927-44da-4da3-82f3-e1f598dcaba8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "0c9f8f6f-4c37-4468-adab-4977b17dcca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26cdd611-04d4-4a2d-b462-efd00ea29b72",
        "cursor": {
          "ref": "d4c1f30e-dfaa-46a3-8924-669309767dff",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "bcaa83c2-453a-495e-afc2-c41d4dfe2cdc"
        },
        "item": {
          "id": "26cdd611-04d4-4a2d-b462-efd00ea29b72",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9eac046d-ce7f-4b58-9aa1-1764b927036e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b9d31d7-d9b4-494d-b79e-c361b465d076",
        "cursor": {
          "ref": "1d775cf0-57f3-4047-a5da-3699a6fe491f",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "74440171-ef37-41e9-9553-708af193da0f"
        },
        "item": {
          "id": "7b9d31d7-d9b4-494d-b79e-c361b465d076",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "05787c80-f425-4715-b281-ac5442b17bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73035bef-cd0d-4cc8-91ff-1a25cda2e545",
        "cursor": {
          "ref": "856a013c-e80e-48f1-95d4-34963ca1f1a0",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "32ef8136-d446-46cb-8ceb-58a6ab2795da"
        },
        "item": {
          "id": "73035bef-cd0d-4cc8-91ff-1a25cda2e545",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f98d2074-e45d-46d9-b6e5-9c921e41914b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10c67a5-ee11-44c7-933c-e77b493707d3",
        "cursor": {
          "ref": "0a93a663-faa8-4ad1-a4b1-4665133381da",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "344d8ffc-1638-4738-90c7-82bebbdeb9c2"
        },
        "item": {
          "id": "e10c67a5-ee11-44c7-933c-e77b493707d3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b2fc8cad-1542-4720-a0f5-d262803f879c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c86c22-d77e-4e78-bf11-13b8d7bfb3b0",
        "cursor": {
          "ref": "a906af67-43f1-41ca-a00f-e83894020dcf",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d3d0825d-2dce-4440-af8c-faba34024470"
        },
        "item": {
          "id": "94c86c22-d77e-4e78-bf11-13b8d7bfb3b0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f5c8d7df-46e6-4978-951c-21538ffa715e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40cc388d-6d0e-483e-b532-6cf654da206e",
        "cursor": {
          "ref": "be671137-8ad7-4c30-a926-e4719f850327",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9fbf2db3-bb1b-4de4-aa34-647cd1b0ced7"
        },
        "item": {
          "id": "40cc388d-6d0e-483e-b532-6cf654da206e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "fa0a9c08-cae1-4215-8229-1e3ec2f85431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67c9a61-46d3-49e2-9cb5-c8e05708bcd9",
        "cursor": {
          "ref": "cbfeb0df-7153-4db6-810b-6f44322a6f94",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6b8504d6-7319-4837-b1bd-0e09bead10cd"
        },
        "item": {
          "id": "a67c9a61-46d3-49e2-9cb5-c8e05708bcd9",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "dfd3b50b-d87b-4f52-8181-9756b69dc691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8cc20dd-69eb-43a7-9aeb-9a093d556a3f",
        "cursor": {
          "ref": "61b1202f-e8b0-457f-8d6d-23c1ac9e0bee",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "71d05479-fc96-4c43-a4a8-9eff9f17f9ee"
        },
        "item": {
          "id": "b8cc20dd-69eb-43a7-9aeb-9a093d556a3f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1bddb4d1-b8ab-4db6-9966-bf7619b1f6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5786c994-b2d3-4bd0-a6f0-fdebb87ea9aa",
        "cursor": {
          "ref": "459d1b22-b0e4-4f90-9cbb-0d2d78ca129d",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ba46c229-09ff-473d-a5d2-35d7bdc0e525"
        },
        "item": {
          "id": "5786c994-b2d3-4bd0-a6f0-fdebb87ea9aa",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5ad01f71-e528-4eb7-81c7-8bbfcbf3a2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398434f5-49c7-4ab0-b2c0-cfd2179f7c1d",
        "cursor": {
          "ref": "7521e1e6-fc4d-4592-b9c0-5c2a67399d44",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3bf8ad55-4571-4607-b8af-1036ac90565a"
        },
        "item": {
          "id": "398434f5-49c7-4ab0-b2c0-cfd2179f7c1d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "af7b4044-0ebc-4f01-b181-efad4b6c2190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7269aa-ab57-4543-b840-21fa7e1139cf",
        "cursor": {
          "ref": "6b5635d4-d194-41be-bc9b-3f4fb231af77",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6778be7f-276c-4df2-994d-8a3374fdd12d"
        },
        "item": {
          "id": "2a7269aa-ab57-4543-b840-21fa7e1139cf",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c21185ff-18a7-41ca-b055-934a59b1bdc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a18d61a-ce32-4fd1-b806-cda85fa67e3d",
        "cursor": {
          "ref": "5e9e8190-02f0-4002-bb98-a8a2957c1907",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "486da714-a86f-46a4-96cf-5113543a4f72"
        },
        "item": {
          "id": "4a18d61a-ce32-4fd1-b806-cda85fa67e3d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "06bfdc51-67d2-4219-861d-7ae0e2380b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2866f041-8ed4-47f6-8252-5f2838051468",
        "cursor": {
          "ref": "3f1c92fb-ebed-4be6-96b9-c9e73f0fb0b6",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "839bc5ba-b55d-439c-8120-4fdfef1987ea"
        },
        "item": {
          "id": "2866f041-8ed4-47f6-8252-5f2838051468",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "60a44bad-1ca8-46e5-a42c-f610da290491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61817412-e8bf-4e74-8964-82cbfbd293ec",
        "cursor": {
          "ref": "f7b6e653-b4df-4cec-b886-84003d0adc18",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "915b304d-df41-4310-898d-b6d750e04e3e"
        },
        "item": {
          "id": "61817412-e8bf-4e74-8964-82cbfbd293ec",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "cf16ee2f-a2f6-4e5e-b1fe-283bb0a4a561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2504ac7-be4a-4ac6-9c3d-c5727a72d56b",
        "cursor": {
          "ref": "7651a2d3-194b-4c2c-b6dd-afb1f7315f2e",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "387dde10-1b80-4516-84e3-035dc65cb6e2"
        },
        "item": {
          "id": "d2504ac7-be4a-4ac6-9c3d-c5727a72d56b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "411bf044-8818-435c-8361-b53e0c237d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7021b3fc-e246-4407-9350-c96e2c256619",
        "cursor": {
          "ref": "bf4112c5-4f77-4c94-b284-6e835ee567aa",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ccef2dc5-6a6e-4215-a0da-0daf24572f06"
        },
        "item": {
          "id": "7021b3fc-e246-4407-9350-c96e2c256619",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2d67d88f-2292-40d3-946d-25a418ef477a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd10c67-c1ea-4734-a6f2-3e15768a8439",
        "cursor": {
          "ref": "7d7a46be-0f41-4f5f-9737-b4e4d46c8549",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ba5d3197-006e-441b-a8fe-aa675c742ab9"
        },
        "item": {
          "id": "2dd10c67-c1ea-4734-a6f2-3e15768a8439",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b30a6b1f-8981-4a60-aebf-d532f8b99416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d065ad-f31f-4b72-98ef-eb7adfaed77a",
        "cursor": {
          "ref": "1e89c1b3-f118-414a-bbd7-bd3ddac3a3f9",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "469531c1-a7e5-4ce4-b1f1-474d51565e2b"
        },
        "item": {
          "id": "e3d065ad-f31f-4b72-98ef-eb7adfaed77a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "dbc8b349-4c0c-442d-8693-a3ef69563e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41cdc5a8-f558-4129-b0b6-b3374570410b",
        "cursor": {
          "ref": "1ebb5a70-fd26-42a9-9b8c-fd8ffb506ff6",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "189804f7-995b-434a-bbd0-788991462c3f"
        },
        "item": {
          "id": "41cdc5a8-f558-4129-b0b6-b3374570410b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "33d30d15-bfc5-456b-8090-bf01af0d6a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e112fa9-926e-4cc4-9f11-945db6f0193b",
        "cursor": {
          "ref": "89458125-2616-485b-9629-43337596be7b",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "96b16bbd-37be-444d-b536-dab51cd29b06"
        },
        "item": {
          "id": "1e112fa9-926e-4cc4-9f11-945db6f0193b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5f8fe3e4-0020-4880-b3f0-153dea6ac73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474de1d1-beca-401c-88d4-e5bb86eac413",
        "cursor": {
          "ref": "515e2dcf-0842-47a1-aeeb-b0f7394dc367",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b9b4d0d0-7117-45c3-93a7-65851969652d"
        },
        "item": {
          "id": "474de1d1-beca-401c-88d4-e5bb86eac413",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8e0fd33f-f9a6-44b5-8d43-9246cf1f10de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66213355-66f6-405f-9fff-f34fc1f15756",
        "cursor": {
          "ref": "d0965930-4c1b-482f-8178-77ab92977b26",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "27a36abb-8fed-4184-8277-d9db178d6404"
        },
        "item": {
          "id": "66213355-66f6-405f-9fff-f34fc1f15756",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "7c15ce35-e800-464f-8bdb-8fc417597096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a30ee1-8074-433d-b310-0cf985e75b2c",
        "cursor": {
          "ref": "8fad9598-5fc9-4b7d-8518-8ff72fe9ac7b",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0399a5b2-3eca-43c3-9c8a-39ad70704798"
        },
        "item": {
          "id": "60a30ee1-8074-433d-b310-0cf985e75b2c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8ad79b08-fdd4-4ada-a66c-0ce0c7fed015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243c1039-8d13-4920-b5a7-1e4f9fcdc691",
        "cursor": {
          "ref": "e9446387-5820-4f2d-8c2c-5e9a69c17732",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2f237825-b36d-4db4-a175-8677e225eeda"
        },
        "item": {
          "id": "243c1039-8d13-4920-b5a7-1e4f9fcdc691",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0c24c8fc-7cdb-42fd-a374-16cb8db7b1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef1e888-fc0f-4dbf-ae02-ed4013cf397d",
        "cursor": {
          "ref": "c2cad8b6-e328-4adf-8649-446d52ecf85d",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2469b005-2a27-4d9a-a31f-682eba685a79"
        },
        "item": {
          "id": "5ef1e888-fc0f-4dbf-ae02-ed4013cf397d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c196de23-3156-4c9c-8651-bf65d80b3b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8390d143-e4cb-4840-a191-13023172cb12",
        "cursor": {
          "ref": "f622a50d-9a06-458b-999c-047aa229cee7",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0a15d36f-6688-48b0-80f9-bdc4b520b8d5"
        },
        "item": {
          "id": "8390d143-e4cb-4840-a191-13023172cb12",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "26e07953-8e10-41f2-b78b-ae7ab6c81ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1c9309-ae2a-4b43-84db-133d98316a24",
        "cursor": {
          "ref": "9249723f-ada5-4f6c-b5d0-c5d88351ad0c",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "52a4bc51-7e5c-42b7-8a25-6eaba599d8ac"
        },
        "item": {
          "id": "9f1c9309-ae2a-4b43-84db-133d98316a24",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "da69a542-4f5c-485f-87e7-b008b758829a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac0db45-627e-46a8-94ad-53841f72be7d",
        "cursor": {
          "ref": "4fc2f3a9-91ac-481b-bfce-405fd4255ab0",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "46baaa4a-79a3-4b92-bf7e-b7379277eac3"
        },
        "item": {
          "id": "bac0db45-627e-46a8-94ad-53841f72be7d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "93ba44eb-4eef-44fc-b85a-9a69171b4c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce71583-46f3-4fa1-a349-e880f74af56c",
        "cursor": {
          "ref": "a29b2102-26b3-4af5-be5f-9bd3d2a6a654",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "039ada48-3676-4c91-a362-d32119f63e03"
        },
        "item": {
          "id": "bce71583-46f3-4fa1-a349-e880f74af56c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9a2b0342-7bc8-430d-bfc6-cfa5384e5793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ee457f-fde7-46a8-abd4-a5b1d68624c9",
        "cursor": {
          "ref": "8e79cd8e-578c-4233-9c5b-bdbf1149e809",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "7a47c42b-885f-4c1e-929f-f5cf68ae0bbc"
        },
        "item": {
          "id": "60ee457f-fde7-46a8-abd4-a5b1d68624c9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1570b9c0-f376-4357-a96e-783556deee49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f8b2cb-b2d6-41c1-8e6f-ed4b0187c900",
        "cursor": {
          "ref": "9783cc21-3bf7-43df-a792-f51485b8666a",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a7f9e94b-997b-4b03-bdfd-5393ea6f1680"
        },
        "item": {
          "id": "45f8b2cb-b2d6-41c1-8e6f-ed4b0187c900",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0b2945dc-368f-4cb3-98e5-4eb52939222f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ecc48eb-aeaf-4149-8606-7d0f5f1fa5f5",
        "cursor": {
          "ref": "ee549bd4-072c-47b3-834c-e29e43c82a21",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a321a0e3-499e-4a7c-98cb-f2046f68f8dc"
        },
        "item": {
          "id": "9ecc48eb-aeaf-4149-8606-7d0f5f1fa5f5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7e1e2c04-cc5c-48b5-8e71-8281f1ebdec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934ae48c-c033-4a30-b0c1-4c57a21fd7d6",
        "cursor": {
          "ref": "27a2125a-6cf7-4a43-8f99-21c2e7f2a30a",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "86268cb7-49c8-46d5-ae8b-b29f7b8eba9d"
        },
        "item": {
          "id": "934ae48c-c033-4a30-b0c1-4c57a21fd7d6",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c1acfe94-b2d5-46a5-b67b-c161be560e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60008b57-4247-419c-b9ab-e23692e5ebbb",
        "cursor": {
          "ref": "e691404c-80b7-4dee-b0ce-d5e128f668a5",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0994bf54-67f3-4010-b2aa-6d252f98e229"
        },
        "item": {
          "id": "60008b57-4247-419c-b9ab-e23692e5ebbb",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2a619aff-c970-40f7-bbec-642a90db78a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce599e71-2dbe-4c36-b817-d8fc7bc21a56",
        "cursor": {
          "ref": "e64f2fc5-3079-4b79-bd74-6af6d43ba29e",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6a750fb9-ce38-48b2-bddf-b7747887a109"
        },
        "item": {
          "id": "ce599e71-2dbe-4c36-b817-d8fc7bc21a56",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6d186b7e-158e-42cd-b6c4-36478e864d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e3d25d-2f5e-481b-a095-4fc6b89ae068",
        "cursor": {
          "ref": "fcb68afc-f52b-4ac8-aaf6-2cde8c62deba",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "63a2c7d3-89ad-464d-82e0-8694b7c50094"
        },
        "item": {
          "id": "37e3d25d-2f5e-481b-a095-4fc6b89ae068",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "06843f66-9c20-4557-956b-c86502e557f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7a3256-9fef-4e07-8163-db544942e939",
        "cursor": {
          "ref": "364730bb-8d5e-4ffb-add3-7659abe5a39e",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bf3dcfbf-d49f-4a23-b0c5-1ed1338e1256"
        },
        "item": {
          "id": "7f7a3256-9fef-4e07-8163-db544942e939",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9912aa46-a55c-4b5c-8b83-2c8b279331d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78be4148-6466-427c-bbc3-a6c6706ce984",
        "cursor": {
          "ref": "c00384e6-384c-426d-8c18-5de345aa90ab",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4d37c02f-cc44-43d8-9ac0-3ebdddbdad87"
        },
        "item": {
          "id": "78be4148-6466-427c-bbc3-a6c6706ce984",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "25efd27a-84db-46af-9bea-1a858095e10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd41bbee-1b7b-4204-a1a6-a43df2c6ac1b",
        "cursor": {
          "ref": "cb904051-1eda-4642-abd3-eca3c5b32c0a",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6d7ffce3-efff-4886-bfcd-81a1b6e1060a"
        },
        "item": {
          "id": "dd41bbee-1b7b-4204-a1a6-a43df2c6ac1b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d95fb061-9f3f-4caa-b395-6e53cd1b0d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b079fc80-b43e-4b52-83fb-0c45ddbadf26",
        "cursor": {
          "ref": "f79368eb-edbc-4b72-a058-4f8394d30d77",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "02cb12e1-c36b-4fa5-a6ef-629682924e6a"
        },
        "item": {
          "id": "b079fc80-b43e-4b52-83fb-0c45ddbadf26",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6a998543-1568-4088-99b9-0b4886f96eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ed4ea9-a272-4d0d-b9c0-3a675de218aa",
        "cursor": {
          "ref": "1211c4b7-3b9c-412d-9ffa-9b7c2906e4b4",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2c2b53d2-84f5-4fc7-ba83-7dec60cd64a9"
        },
        "item": {
          "id": "89ed4ea9-a272-4d0d-b9c0-3a675de218aa",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a24e2cd7-7807-4680-829b-3f2025a68bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed5ade6-f645-44e7-bb65-89ecddb16d3a",
        "cursor": {
          "ref": "e68c7b46-d416-43ad-9210-a9a8010035a8",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1ec08c41-9d17-4e8a-b6af-ef11794e62c9"
        },
        "item": {
          "id": "9ed5ade6-f645-44e7-bb65-89ecddb16d3a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7adf5df5-68ae-40b0-8433-0b601eece440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e5c26f-0105-4b2c-b989-b4e8dcfdaa18",
        "cursor": {
          "ref": "4ec8b322-8ce6-46df-8ff6-aae99aa4a3c2",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "06112fc7-9805-43a9-be46-c14aafa18f69"
        },
        "item": {
          "id": "b9e5c26f-0105-4b2c-b989-b4e8dcfdaa18",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "82aa2c81-acaa-4fa8-8140-bc9b5888dd3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a81126-f0e8-4f61-b79f-670cd0bd05ae",
        "cursor": {
          "ref": "37c1f5a6-bb26-47f1-a970-b2672ef11ffa",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "cdbd7024-fdf2-4d1a-b54a-d01a4adfa993"
        },
        "item": {
          "id": "e8a81126-f0e8-4f61-b79f-670cd0bd05ae",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "eb487c0b-ce1b-4a0a-bc01-98d4bef1f017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59febbd4-5789-4985-a749-2b236b45da88",
        "cursor": {
          "ref": "ff96c0c8-5974-4034-a26b-c5298ee70629",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "bbfa2ae9-36c1-4669-9713-0b2051e63020"
        },
        "item": {
          "id": "59febbd4-5789-4985-a749-2b236b45da88",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ec7b8154-37ae-4714-acc8-a8df118c7350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311cf264-dd33-49ac-8e41-7f80201894c1",
        "cursor": {
          "ref": "434e611d-693b-44a7-85cd-8722da8a8869",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "17e15118-7871-44d7-8eee-b1992ab7d724"
        },
        "item": {
          "id": "311cf264-dd33-49ac-8e41-7f80201894c1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "40eb3e13-4589-4e1e-916d-151f9588f7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a39fb2-149d-43ef-a263-031bbc79c353",
        "cursor": {
          "ref": "548f38fe-20dd-4495-b50b-705d48a374a4",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "34cf85af-e201-4f68-ba71-d0ab5d19991d"
        },
        "item": {
          "id": "e6a39fb2-149d-43ef-a263-031bbc79c353",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d3d4f8af-d33f-41ea-9b60-6695b001179b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc83f81-4eed-4168-8c94-2876609c74df",
        "cursor": {
          "ref": "23543396-dd51-43b6-9df7-8fa4ed420748",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "b45078d6-5ca7-4932-9127-50d21f093765"
        },
        "item": {
          "id": "edc83f81-4eed-4168-8c94-2876609c74df",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "60b6042a-3189-48b1-b93b-30afce2f121c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3d92d4-3b31-45d9-87c3-23e1241e9821",
        "cursor": {
          "ref": "575db29a-222c-4419-88ef-46fb6b686c22",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "76df9ee8-e347-454e-9daa-32d7e4dbffd4"
        },
        "item": {
          "id": "4c3d92d4-3b31-45d9-87c3-23e1241e9821",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "015fafe7-46b8-47ea-87f0-8f6d152ccc6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c46aa2-991c-4b9b-ba98-804538aec017",
        "cursor": {
          "ref": "69fb9400-1d25-4553-ac22-7420ad85cf10",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "e167565d-df10-4145-b366-380fcd1962c2"
        },
        "item": {
          "id": "c2c46aa2-991c-4b9b-ba98-804538aec017",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2cbf0320-7d9e-4ab9-97ec-ecd76ad9b300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7f5cdc-d83d-44c9-9f1c-b601094bbf0d",
        "cursor": {
          "ref": "de214634-8583-46e3-a182-b6cd8682204e",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "3dbb69dd-2e50-451d-bb2c-456a2231077c"
        },
        "item": {
          "id": "4b7f5cdc-d83d-44c9-9f1c-b601094bbf0d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7237b64c-9a07-4f75-832b-03c8ab6edbe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf722922-0751-4deb-b35d-75b647c6a104",
        "cursor": {
          "ref": "4b300c95-45e7-433a-8fac-e8eb4cb9deeb",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "259c1a78-c12c-4cd4-b68b-db803a4c6b0f"
        },
        "item": {
          "id": "bf722922-0751-4deb-b35d-75b647c6a104",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0df72465-a41f-425d-8036-8bec6aed3aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49bcab44-10bd-49aa-97a8-0d8111009322",
        "cursor": {
          "ref": "e9cbaf50-c62e-48cc-868c-26b9464d4fa7",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "851157e0-b4ba-4678-af10-bad192875ffc"
        },
        "item": {
          "id": "49bcab44-10bd-49aa-97a8-0d8111009322",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b7b3b1a3-fe74-4ab1-b747-72159330b0d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2024f75-411a-46ad-85f5-59bde7064925",
        "cursor": {
          "ref": "2d805ae8-7ff0-47f2-986f-5822029888ef",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "151ef875-1e63-4131-afbf-59710b1dbdda"
        },
        "item": {
          "id": "d2024f75-411a-46ad-85f5-59bde7064925",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f4ea55c9-389b-45cd-82e1-24a7badb43d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6c8cd8-de5a-47b8-8cd9-2c1e10615a73",
        "cursor": {
          "ref": "00d29057-31a5-4ccd-8fad-bb27413d878d",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "f708a6e0-3be1-4bbf-909f-46500640e56e"
        },
        "item": {
          "id": "cf6c8cd8-de5a-47b8-8cd9-2c1e10615a73",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "842c50a7-a6d7-4c1d-af6c-194151fbff30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59832595-8a75-4745-b765-47af4c1c7353",
        "cursor": {
          "ref": "5eb5cf4a-6d51-4523-8556-7baeb3e98098",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d73f048c-ac3c-4056-b5c3-05040808f31c"
        },
        "item": {
          "id": "59832595-8a75-4745-b765-47af4c1c7353",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8654fa58-97f3-4d16-ae3d-c696e1ff9ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae66336-ce15-4e03-96dc-6a0cd96e6ac4",
        "cursor": {
          "ref": "ad468d41-4d0e-4107-aeb5-af04c07352a9",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f244f941-69e5-4232-a531-ccdb6a1700fc"
        },
        "item": {
          "id": "5ae66336-ce15-4e03-96dc-6a0cd96e6ac4",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d34272bd-7947-4bb9-9f9e-5de2a34728f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d99543-08a6-4fcd-81d6-1d4039ba4581",
        "cursor": {
          "ref": "70520633-b741-4094-953c-046a5072a446",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "8026ffc2-613c-4caf-bb42-2c5ca238e1ed"
        },
        "item": {
          "id": "b9d99543-08a6-4fcd-81d6-1d4039ba4581",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e5313cb9-4acb-4a30-8336-8a1f6f98951d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17abd21c-46bb-4bc7-95b2-8d69508ef1d0",
        "cursor": {
          "ref": "040ea6ff-f849-46fa-8339-ddbec1723a21",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "8742b885-1f36-4dbc-afa2-d23fa98518af"
        },
        "item": {
          "id": "17abd21c-46bb-4bc7-95b2-8d69508ef1d0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b5fad7aa-d858-47c0-8a64-73f230d14365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7135b59-14f6-475d-b291-5bc8e0e6cc66",
        "cursor": {
          "ref": "38e2213e-8b5f-405b-b2db-007e9aeb9b81",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "83e1a5ac-8810-419e-8100-b35f13785aa9"
        },
        "item": {
          "id": "c7135b59-14f6-475d-b291-5bc8e0e6cc66",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9b3812e5-3c5f-426d-aee5-9cc77c47c34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41a9fa5-2f92-447b-a354-ea1001201306",
        "cursor": {
          "ref": "38d4013a-8256-49da-83ee-8c9a926aa15b",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "223ae0b8-070f-447b-b602-2768d380a319"
        },
        "item": {
          "id": "c41a9fa5-2f92-447b-a354-ea1001201306",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "29f1177b-a4d6-4d8f-9eb1-5f6392579e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b0ad76-e140-4a50-aeb7-a19f1c143661",
        "cursor": {
          "ref": "917e471e-a7a2-432c-a39a-ccc8d1d289a3",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "cc51dabe-f514-4913-bcf5-31571f6933d9"
        },
        "item": {
          "id": "f4b0ad76-e140-4a50-aeb7-a19f1c143661",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c7520c0c-de1b-4f15-83af-9e502e8550f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d31e06c-0e42-4e70-87cb-e089594f4e9e",
        "cursor": {
          "ref": "dfa2ea22-edc1-4047-add0-156ced738394",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "9d0e11b2-a6b6-4490-a8ac-a84b1488fa7f"
        },
        "item": {
          "id": "8d31e06c-0e42-4e70-87cb-e089594f4e9e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3ca35b49-1573-4f77-8428-7c002ef59ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4095f6a6-8a32-43e0-852b-95f533145bc6",
        "cursor": {
          "ref": "08192c00-e8ee-4482-bf1a-7cab73f057f3",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ee9e51f8-906b-4a90-8e41-59e88019bb12"
        },
        "item": {
          "id": "4095f6a6-8a32-43e0-852b-95f533145bc6",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4910711c-0569-4edc-9008-d75995131603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8faa152a-0d47-456a-a989-d9546e733453",
        "cursor": {
          "ref": "eebb153a-465c-4cb2-b88c-b08595148c7c",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "183ef709-4c57-4ecf-900c-45dfcdb5ef9f"
        },
        "item": {
          "id": "8faa152a-0d47-456a-a989-d9546e733453",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "896136c0-9e2c-43f3-850a-905a787a6483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7797ed65-5a95-4bbf-be7a-6c5381c142b6",
        "cursor": {
          "ref": "65730449-2920-4fc1-92f5-5e3a75e86682",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "4dc5dd70-ffab-48e6-9936-365a876baeaf"
        },
        "item": {
          "id": "7797ed65-5a95-4bbf-be7a-6c5381c142b6",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "50c2939f-e038-4801-84b7-07663685ac7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f148c6-5b8b-4021-9aa7-85a4348f94e9",
        "cursor": {
          "ref": "a076a7fc-4c2d-42c7-8c11-025dff1393ac",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "6d7b5ff3-635c-4b04-aee9-dc90a84856ec"
        },
        "item": {
          "id": "20f148c6-5b8b-4021-9aa7-85a4348f94e9",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d3f8cbaf-9e6e-483f-b553-dde417710c82",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5279a53c-798d-44bc-822f-5fb2707dd8c7",
        "cursor": {
          "ref": "898a53be-55b7-4030-8be9-f66402156b2c",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "3ffba937-5101-4048-90fd-f51fe0ff7731"
        },
        "item": {
          "id": "5279a53c-798d-44bc-822f-5fb2707dd8c7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "accfb2a2-ad89-4ec6-8fe8-0045c1e9ae37",
          "status": "OK",
          "code": 200,
          "responseTime": 115,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb57bd3-9c07-4e99-aa82-8d2ca5a389ca",
        "cursor": {
          "ref": "7fbc30d0-fbb8-49c6-89c8-097197b61bca",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "ad803500-a726-4c85-8ca5-64e6950f0adc"
        },
        "item": {
          "id": "9bb57bd3-9c07-4e99-aa82-8d2ca5a389ca",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6fbc9ef4-6477-4ade-a2fa-45971657ca12",
          "status": "OK",
          "code": 200,
          "responseTime": 1341,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e33607-6222-4f94-919b-f6a9c84def4d",
        "cursor": {
          "ref": "b1858b4c-52c4-4904-9875-2da8dc1451b3",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b3dda570-12dd-4eee-a1f3-fae4002a7fc8"
        },
        "item": {
          "id": "a4e33607-6222-4f94-919b-f6a9c84def4d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5d0d8ce1-dac9-432f-9b47-84fa2bd22d2c",
          "status": "OK",
          "code": 200,
          "responseTime": 1150,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "83dda266-622a-4cad-b61a-6247885c53da",
        "cursor": {
          "ref": "6f0b106f-10cb-4eec-b217-d05ac0a4c928",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "28090754-8135-4b07-9750-ab45d6e9de23"
        },
        "item": {
          "id": "83dda266-622a-4cad-b61a-6247885c53da",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "485e32e8-8cec-4955-b6aa-c06c901d5ec7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83dda266-622a-4cad-b61a-6247885c53da",
        "cursor": {
          "ref": "6f0b106f-10cb-4eec-b217-d05ac0a4c928",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "28090754-8135-4b07-9750-ab45d6e9de23"
        },
        "item": {
          "id": "83dda266-622a-4cad-b61a-6247885c53da",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "485e32e8-8cec-4955-b6aa-c06c901d5ec7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8333ac2c-5170-4039-aa3a-d7c44623c3fd",
        "cursor": {
          "ref": "571f47a0-1351-4862-ad2f-14ae8893fe2c",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "fc456072-dc2c-4deb-ae44-3e949a8df9e0"
        },
        "item": {
          "id": "8333ac2c-5170-4039-aa3a-d7c44623c3fd",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c3a168b7-f9b0-4144-8740-0aaab9d20308",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2bfd9d-f289-439c-ba58-9c737376757a",
        "cursor": {
          "ref": "05d18522-e79e-48ab-9d0d-cd9aaede4302",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "fdf1b3fc-9388-4150-92ec-7fea8929cab9"
        },
        "item": {
          "id": "4e2bfd9d-f289-439c-ba58-9c737376757a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e6a35687-e5d6-4bb3-be0b-fab4bbdd0fff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}