{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e734b45f-5f1f-461f-8fa8-b616791fe9e4",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2ae7efae-0c9d-4a57-8bdc-cccdaf4d0c10",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fcf9ee0a-72a7-4059-80ae-83462640c7a1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "caf429ae-7b9b-4544-bfc0-9ccfb40ce216"
                }
              }
            ]
          },
          {
            "id": "ad137b35-122e-4630-850b-db4f3b6cb65a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7585570e-9769-419b-a7be-de4fefe8c9d7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c912983c-2ee8-4214-9218-907b32a19798"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3cf3ca29-f5c8-4eda-9bfa-d06047c551fe",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9e52617e-c205-4a66-8c12-099d394ff2d7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cb752c06-922a-48c0-b923-6de75fe05e25",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4007b689-07da-4360-9dd3-10a0e210719a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cc961547-6bfd-4c9f-8e92-0c4443beffce"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5ac558d3-26ea-4d98-894d-8be8ff87146c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3ceeb788-7b03-4081-8a25-20172226e182"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5ebe8c78-6071-4ded-aae6-1d2b3bf443cc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cd354b6c-4907-46a2-acad-e4a5b9affed1"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8041175-6e08-4d2c-ab30-63ddf1b3abbc",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "cdecbefb-73a6-4d98-8f5f-f6309991921c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d361bfa1-7e5d-473d-922e-bde36c727f22",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "750a93bb-d9cc-4b0e-a1f3-b37bdccda6cb"
            }
          }
        ]
      },
      {
        "id": "11bbb457-11e0-48ba-bcb4-0a9358821ecb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "afffe77b-2649-41a3-807c-6f94762f6f5a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bf410f6f-6e5c-4002-b648-a72fc3f379f0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4070f704-0432-484e-ad6b-70ad91b721b8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab22956-6fae-44f2-b60b-a0abaec8895c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "77502e78-a0aa-4c5b-a89f-bc8abee99676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7517e6e1-97ae-4028-9cf5-62571589a518",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9505815-09fc-44fe-a92a-e942578db180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78f938c1-0afb-448d-882a-87ed84acbbf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7fe4815-dce2-468d-bfd8-1d19cec21cd2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58556e98-0b64-4edb-83f6-eab4ee11518a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d73c32d-ed3c-440b-a97e-e200c7c74d52"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5ba308e0-2720-4f4e-b2cc-9d94a9a3bcc5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ed4a31a1-1699-4948-9e7e-f7bb79208476",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ec6ca7-3c00-4fde-a9d7-cae4d62bf444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e836327-2146-4d1a-8c11-62827bdc1980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5476dff1-fb5d-4a8f-9f87-5f0ce8d2c8a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d90db6e5-4d51-41f0-b9f0-08c6a73869d7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d4c0b9b9-837e-4076-bc88-963a5c0fdc8a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0c5f8cc6-4f8c-49d1-9492-ff04c4b70f0a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "549950e9-8b62-49f5-8d59-75c54db2d239",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4faa25f9-3598-4edc-9edc-06f7f8b22a95"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b94baa6b-3c34-4d99-aaf7-0cf9e9ecbc68",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ecd8325a-dac9-4880-9bb4-59077fec3b5d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "194b6640-aeab-44ee-bd4e-0b35949d47b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21eb5f52-041b-44f0-bda7-aca0c660ae5b"
            }
          }
        ]
      },
      {
        "id": "922faad0-5351-4dd0-8179-7bf46fe918b2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f5f651be-509f-4763-8e13-ab28e2529e03",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ceb7e61b-9e11-4760-8e1f-2e6989e5acb6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5fd306ab-7adb-4aed-99ae-a33ab492727b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa31935d-c0ab-4895-9f40-807ec3925b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89eab7fc-c788-4475-9fe0-9dcb1443343d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5abfc64-fbd6-45aa-9ec2-8aef158657e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c4190f7-29b1-47c9-9548-ccdaa834c84b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96e33b6-e16e-4b7f-b214-87322c6b9511",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f9b5e8-6c62-422a-b1b1-8fc945aec6d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e04e1f45-e417-4d5d-92f2-72f38f52c2f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebba5308-4827-46dd-92b9-a549aefda4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f00009d-5c46-439a-b8f7-71f7b5c5b42b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa005cd-6f9c-4db2-89cd-744bfc17c626",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a89051-5e01-403a-92ad-132ac308aabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c571b3-211b-4520-b831-f6445c58d9d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7312c9-e4aa-4912-a702-611bb6f92136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7eb4775d-7729-40b3-ac49-443d22e96b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5077b3e4-1699-4286-a027-9514a9849f83",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27912177-535f-4701-81e5-6e61a6e11834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8da864ca-73d5-4d00-85f5-d49ad0a5ba97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3bfa48-3ac2-4043-9542-3f90f3d75d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8204bef8-1d7d-42a5-8050-84c606dc75e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1438a1-bfe4-469f-944f-9f0dd7f36afc",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a7146e-8a68-4a3c-b7ad-3efc0189018a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee35701a-1fb1-41d9-96d6-09940adc0b53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8357e3-1463-4f56-b765-d9df2b71f9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "125c71fa-9643-481e-bfaf-d030596d77aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf6f888-d3a2-4e7e-8d0c-a991593f8b27",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a0dea7-7a50-478e-8f4b-e292da7f9ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbb06eae-c94d-41a3-b3d5-94feb42b2c28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456c5f52-07f9-442e-98b2-10b983b09a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e19b4313-ec0c-48e9-a453-522716f40166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814aec3d-8594-43e0-b0a1-abb8d0819416",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af92a3c-aaa5-4ae5-98b0-1947cee3fdb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cdb89e6-1071-4115-a9d6-fedefc6191d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c22ae327-6d10-4377-beac-557223aebbe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05adc3e0-9c1f-4ed2-9e88-1137cef9e268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a10abe-e92f-4729-9e4f-2d0610965f27",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c90e36-4dcd-4440-a3c2-cf8d8d1a0d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0575f61d-4aac-463f-bde7-96a9feabbe07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ff979f-2c17-4fe2-8b94-9eff48394cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8642d5cb-54de-4d80-a542-33bbf8d7d63a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d393671-d481-45f1-82a0-71e3f9dc9185",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "408a622c-d254-41f2-914b-531c9559e7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e96b4332-09e1-4f26-8839-2382163c40a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5322962d-1130-4940-b0d4-fa33a4ed4f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b05e9de-3eab-4f87-b0aa-7d4e245910fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7e2891-65e5-4a70-81c2-49fb3cee43fe",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f565cb-8931-4247-9617-16855b1e4e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a461d9-8b2c-4b60-be1d-21bedbb8b9bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0576d0c3-9efe-4622-869c-65cf43c62ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f494dbea-38a7-463f-95cf-11d521c0b9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea860ca-35e8-42a9-8991-cad4a81e3f07",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ade9f91-9953-4af1-af03-dd705f7b2ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6620d65-e96c-4ac0-a1c1-cb6c6147bfa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52037fd0-b235-4337-a714-fb64772d8821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37342cb1-8a17-423f-8139-3a30aa27817a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e405d152-da02-4f9f-ab03-d3630be4c9b0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "234942bd-cf02-443c-bd6c-c7851d002660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ec7420-f7bd-447b-b97b-a07cd76dea6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0db428e-cc73-46a9-a40e-a1dd9058abad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f28dde9-516b-4e0a-969b-7a7f798b5550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ffc529e-fb09-4fec-8338-0e63dfa76751",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26312a71-eb26-4cf4-b2f1-7b3c46cb3181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70fd900f-2bb0-40a0-ba17-51bdcccf3b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64460f9b-61bf-41f7-b1b0-6825e468d9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d69baf2-a972-4467-87fa-2f388242704c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36f8a91-2108-43fd-9db0-c213222112eb",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d9f3a6-2ee1-436d-bdc6-d9ad72444632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96066473-911a-405a-80bf-7dda9e625e78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2780db8a-a810-4045-b7de-19ab21935dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3def2465-5693-4335-900b-462b4890848f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd1c2b7-5e0a-4fbf-ace5-033bdde6d381",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2268ec84-5a5d-4390-bfb5-6bdb8b491e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "938e65a5-5b46-4c44-bc70-61e5c96f3a29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a85d70-e18c-47fb-82ff-0d8ed886d455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d18b389-481e-4037-8446-a20c018c212a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08ba5fe-43a5-43e2-bfb4-58a7f10b2f87",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027aed28-6dc6-41bd-a93f-96356d89bfb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d90ad64-7654-4e6e-9cd2-ca1ae639863d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd5a258-df28-4ccc-97a7-beebb615d086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e1cc9ef-6901-4fb6-9fcc-ce94e65a91e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84411a66-09ed-46da-af7d-25b7aa4661ee",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2cc7c7-f00c-4273-b953-ab942ba6bc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a497894d-b16c-432a-9041-e61679d24ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67180aa-0dd3-4ef6-aae4-f4b019f3f5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "115a19c7-b343-45c7-963b-261457e737f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f9f57b-b98e-4cc0-87ba-f098d74a4d37",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2467429-835c-467a-9a1a-41fa4d2bee01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d767c6-fe67-46a3-bcac-edfc0616c6b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109fce07-ea15-43e3-b009-1efc3ac7653b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7367cf5-9765-4347-bef8-cab5fcf9b8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a2d6f3-1c37-42ec-8aa7-ca6261ce9301",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee051ff-fb36-4c9f-a940-9a785eb89267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cdefc02-f0bc-4877-bd4b-5ebea0c98388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303d78a0-c715-4cf1-8d31-3c796117a026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c71530cb-91fb-490a-9946-495e9434f8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e0d1f3-2ee1-4442-866f-8bc2b5ac4d88",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c65c73-7f1b-4c90-8648-ef69f7d4dd98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71802169-3f5b-440d-b034-363d6155a27d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f70693b-e887-4b27-b2fb-76749cbfe085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b63557ab-0926-4d37-96d4-b551f97a2e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd9ba6f9-fd87-479e-853c-c4074e852725",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38623a7c-1834-4635-b6f8-1b0bfb09e970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb7c17e-9835-47b7-94f6-62d00f8cefbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474993ee-cc9d-48dd-9c2c-947374dc2a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f90bee6-b693-4dbf-974c-e8603cf36898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa56c9c5-77c1-4c3f-9bc9-26a4614abb96",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb0a3ec-2200-4ad1-91c1-1561a99a5cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e265091a-96c2-4f4e-80c2-9807ffb7bf45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332cdde5-ab5f-4bd5-9f2b-5b791fc9add6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "23e2e6e3-ceb5-4a8b-b01a-352edccea0d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00af0328-3a99-4706-b51b-72ac16df8b73",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48283ea2-5b24-4b8d-b031-bb14d200ae4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51de2927-0796-4145-b37e-ae3676c1b748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474ad4ed-1df8-4cfd-bb84-0b7c6f634814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c18f53bb-806c-43d8-af53-10de3b82ac35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a80341-2b31-4925-b264-249247e8cdb7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90cb3db2-7f7a-493d-b301-5f080dcdb117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a66ca9a3-b41f-4f70-af72-ada6d14a741e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6e5213-e2d0-4b01-a6d2-211806d8a8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d78b684d-0a98-4e00-a840-e845d74194cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59d25dd-755a-4cbc-b6ea-89519e139d39",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3338c7-dcd0-4191-8819-d881e9848da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56859609-e259-4d49-bfa4-b8de7cc1402a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d2dbac1-77df-4def-800f-ab298dfe5fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "401f88aa-5555-440a-8f26-307550871f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0f3933-8f96-4672-9698-890e709deab0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71149c81-19f5-426a-9e0b-3312b1397c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a15cbcea-b030-40fc-ab45-6b57f0501066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2067861-485f-42f1-88fa-cf60fd0bf109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "753fb5dc-e9c7-4672-8612-4b72e3b28229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd70ef4e-b887-4d93-a82f-87dd2a39c86a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e218ff-2f37-414c-8c66-7906b41200d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef6eab28-4ab9-4bd2-bbaa-3252e57bfd6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df334d1e-456e-457f-bbeb-32ed2d4d70db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5da1cd2-a02b-43fc-a052-4ceecee8dc2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce99632-bb5a-4ba2-8839-003cc42b40cf",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a961b3ca-9401-4db0-ab30-0a0dcb8eadf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58043f28-ddad-4014-8069-bc4a0eb07549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c96992-f6c6-45ef-8c37-3e33ee51fa69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "613a1c87-f26a-4027-8244-1253606ce3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3088560-522c-4408-909c-cb6a95f897ff",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b48cfa-db21-4658-9463-7c9268ce84ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b5330fc-f413-452f-890f-0db03cecb3e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daaa7683-a600-42bf-87a5-3e9e09ec6a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e6b69be-fa0b-4d8a-b6fa-983c41d8cc88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ff0725-be54-46ad-b217-5ef710a74c9e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b0e171-cd5c-4bf9-9651-2ac5e18d8549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5b4ec07-2230-47e7-a007-cbf29a2baf37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bba4d03-23bc-47d4-abee-a8a9889e8744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd0f7355-ef2e-4abe-a6bf-664ff8163415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c802ed3d-6665-4b49-8dba-e32d25993fae",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b222e19-369a-4de2-95f7-de23c8919583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bff3c4e-1786-4168-aee3-f932d6c1d2af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02dab7bf-8f82-42e1-9d06-de19a34b9422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9eb4d43a-e739-44b2-80b4-453f456ab557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0439dc76-a855-4cce-b4fa-539b21c66be1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc759ec-ba84-4733-8496-25b806ae9729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e87834-bce0-4096-b8ac-36bfa109e251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e56086-3f41-4d56-bb6c-3412e372b9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbafed7b-f418-4808-8fe3-13d474c72288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c89459-f6d6-4943-8f57-6e430c12dc66",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80443854-a85b-41dc-ae3d-eb7741147fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0223857d-a590-42c3-8804-d154bbac2685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0410e0e8-b61d-4777-a484-24188daf6e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ff2b3c7-17a4-40a4-a16b-8c933d6971c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e2ef51-baa7-442d-8bf3-78d9d5b7fa2e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5cd67b5-fb5a-4d97-a642-70d9a8021411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "708ae8a4-a32e-4001-833d-a85cf11d03fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd59b3f5-8479-4945-acc9-83bd8ff4c86b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4372ca7-2788-4886-9a2f-1d682f060570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c37bce-3887-4171-8f64-298507bf9639",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "539d2bbe-a9ee-4aea-9447-9ba5cf6db219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "542b4755-732e-4082-9bfc-3e49c7350879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6124c1-c602-4b78-b5fe-701437b630db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8d34701b-1203-48c9-ae11-6ee04af5261e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3413f87b-07a6-40db-896c-8bc836367cb3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc11c18-d43f-4cf9-9eae-8ff1e78f49da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "48851bcc-0506-44a8-b451-6daf1cb7daa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6f7512-48b0-422d-b9bd-4576a6d020a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "34b5bfa2-d921-41b8-a5e3-c128183d29ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "039ea5eb-c5c9-4f2f-a2e5-82434d692797",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "783a5daf-87ab-44af-a9e2-3153d53b7230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b760382e-cb8a-46d0-8b98-df4d759ecf04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4688e56a-1c9d-4973-964e-8d1f28552c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad5e8775-a832-4659-b2dd-72c7be092245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118c6ef4-1fab-4014-bf93-512bd905990a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83dfab6c-111d-46c8-8eeb-d71497fce18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fadb8f7-8f41-4bda-a919-9a6633b626c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b46a66a-7bcf-41e3-89a8-216309847257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a244f6a6-3666-4642-9b13-07dadb6898aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6efd352f-10dd-4fed-a237-429368f91ae5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86aac28f-41ac-42ef-ba37-c7ca884972db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd118ce-384a-42f0-84c7-1e15b057f394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602d336c-a587-495e-94d6-c36c9f93a7fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3aa3dce7-84ac-4933-9879-b452530a9982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7fa3d4a-a65b-43b2-a4e1-93adb2c5133c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ab07d5-4681-4430-9a7c-51d87ea5853e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee725285-cd9c-4c31-8764-fbe6e7126185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b512237-2953-4ef7-a381-e1d15a521db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "409bcae2-9f8e-42b8-9a76-768722147204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641987ed-9fb1-47dd-88f6-075486d65259",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b8a60d-0b39-4d6f-aec2-55f3969eb02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f9b5da5-8022-43ba-a058-00639cf9a20a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12de7bde-66ac-48e7-b166-09e80cbd2760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3091506f-83a4-4ea2-8b34-55b485b17efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5aa7c9b-6c99-47b1-b394-83cf6e401b79",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d87aa9a-07ff-4006-bdec-715994f53ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9369db3-e38d-40b2-bda4-a8f2a302dc92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ffeb03-5bda-4c48-aaf5-136d228dbff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "92ccbf90-d16d-449f-a5f1-ccea624d9544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b458b2-3263-420c-a5c1-1ef5137bbb92",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dccb6057-4e6e-4259-aeff-9059c9c0f23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4373e16b-8b79-45e2-8eba-24dc43d8d58a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d26e868-aa09-45b5-b67c-18d9d0dde9c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "22deba68-4fde-4907-885c-50bd5dc69182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa12b889-87e7-47ff-8c8e-aec9770e291a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4b355b-cf2c-438e-93ee-d5cc13632ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac639f77-da6c-4804-ac5f-77599611ee28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07954b40-cd61-413f-9103-20258be890a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a595a0c4-a234-4f6b-a9a0-d15fc37efe19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ba56ee-2ecd-4ba4-b780-5502b563f8b3",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25238bfb-7cc8-42fd-a988-f6cffb19bce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57e9fd4e-b88c-49ee-869b-0135d3902df7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b268244a-b783-4b6a-a8d5-888ca9a9a408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b126e807-68d9-40aa-9db9-b066a62e8265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533458c1-e4c7-4422-ab39-d20ac119066e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b00c90-18a7-4c59-940d-2c8993ae8526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eec506bc-4eea-47d6-a367-4e3ed2acdf90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2022126-b440-4d90-9675-fc214f906a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d374dde-3145-4e2a-b694-995b901fdde3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782e0b1e-c735-4aa7-943c-08058625391b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43fe2a71-21dc-4bc1-bf27-30711edac504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "617418bd-882a-4adb-8e43-e324b1615711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee54729-d765-4e27-b4ac-42c641ba9f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04ae64ac-ddea-43ea-ab73-2aa3efdc75a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ece8a49-03d6-4146-afb4-9aee1b443a02",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a612e2-dd26-435a-b36a-6dbbc3baa3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d694ec38-e39f-4631-91ff-1dbacb39ef3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874b509b-06b6-41e5-9a78-4e265ddb09a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0d062c5-3925-4073-a6eb-ed3004211af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33fea8b5-cedb-49ea-9117-b022d77ec9a9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c712a6d-ce86-4c75-ae72-9e36d680e19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbc8f803-a90e-4baa-80eb-fe6d5c474c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446634bd-4fdd-4fbc-b780-64fce7e0da67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "105ef2d0-53e8-4ab3-8094-59fabd4da973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8fe7e9-6365-4c9d-bcb1-fc6df7261fde",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10c5b82-dac6-4d2b-aaf5-41973cbeb115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "883c8cc3-0efc-4191-88b1-beddaa7eb93d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3c655a-1fbb-4a56-af27-314ee3d5ea20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "497fafdc-5da2-4d03-a7c5-ca695094a4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc19731d-82ff-4429-9cb6-516c541cf36b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e21633a-7d12-4552-996a-cb7bdc4161ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb75789-de78-4ee3-956c-08c5d743547c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76c23ba-a776-4f36-b887-ba7c30d07105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4910191-f6a6-4147-b1a8-f50355bbe5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff910718-c3d8-4b0a-9f75-1d3bde0b641f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4768960-263e-4a65-acd6-3c4ecab44b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd2e9cc-72a5-49f1-b1db-9024fe2cbbe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9242a397-715c-4b5d-9d47-7e1cbb6d8dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab202dc-5a9e-4286-80b2-97ecd0b129c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "954e9136-c5ba-4360-aaf8-5c98232bf1de",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea75b43-aa2b-49d2-be23-e8f055c94f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41f59bcd-e6d8-4ca2-8962-8af70dd4c256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587cc4ee-dee1-43f1-908b-4617ded643d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df89a67d-9ac5-4009-a0b2-a7b184eb8f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7812298c-a8cb-449d-9760-b9f3e3e68baa",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63dcbe61-b87a-45e1-a3e9-2451368b4f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c206edc2-9635-4d25-be08-9df2af6108da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a081636-92cb-4572-a3d1-8195561882fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "def48a4a-0936-473b-b928-372d4c50bfb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f145c6ee-5c5b-43cf-a89b-21b6e244ca7e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f15d540-8a12-49cd-898f-22df33d93327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efcb88fa-b4c2-4366-a19d-8ec4c90055d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7fedc6-b4d5-4938-916d-8b2e462a9e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3805eefd-251a-4363-91ee-529e9c35e38c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098ae411-0b8e-4d8c-af1c-d4d73491991d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df89baed-5c18-4501-afd2-947a4bc81b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e5884db-4b2a-44a3-a9ca-89d04398aec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46674e9e-7575-44d1-bc1a-125d1eca009b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "05346c48-2326-4060-a18e-592cfe03ae3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f628238b-5064-437b-ac47-e96c02d84097",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4f6cab-088f-47a2-b55a-de3ac39fa2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1c008e0-9199-4d20-97d9-eeabfbbcb124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b283e5ca-18e6-4f43-b6c7-c214ae7a112e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d99c7a72-2d72-4237-90d7-0ffda039b70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52dcbc3c-2937-4573-a90c-f3b3d04ea248",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d522ca-32b3-475b-800f-5b885ccad4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2181bef2-0597-4bc5-84d5-a7e48c07a09c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d091c2bc-01ad-4d45-8bbe-04462cdf89ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3beac7d1-07f0-4637-80e3-a69454ee7303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3d1b1b-1741-41f0-89e8-9e6685aefea5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4339737-e4ff-44c9-84f3-701eaa95eb39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f968ad5b-ad1d-4c85-98d8-c27a460da136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2d302f-a770-4591-a95b-571c90f09ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa0abfbc-93a8-4841-9985-c387edf16718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf9e1c3-e8ba-4229-9983-969f9fba4b8a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "818ebef5-7d26-4875-b460-4b265adef76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df79426-5f28-4080-92e5-f9004edd75a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02afc74-5141-42cf-bcdd-7358d701b229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d253256-d082-424a-9885-bf22751009ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0676424-d4c5-44e3-a3ba-8cf7550da18c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "787f233e-310d-4913-b2e4-64427ca2c2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "528472b6-ac9c-44e4-8dfd-c81092edae2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ef383c-3b81-4652-a387-c132a2c02af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7cedb2c9-9c3e-4c86-89d7-cafec57394ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc81120-dedb-4051-8818-58e53bd6289e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f816f2d7-3f40-4c96-8aed-47c3b92b49e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eb7ccae-d173-4ff7-8566-3a7eedb9c1ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721d3659-2c38-4194-9a5b-3aa13b172947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "12b6d678-6e54-494d-87af-bc87c44aca05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc38ddf-7512-4ab2-ba1c-fef0089e9e74",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f124ed78-9b4a-445e-94e8-e7686aaa87f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a2f5b85-28f5-4d01-a098-ea600e7d9813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22bea422-702a-4d0f-a049-4c8ff7a854c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "62bcadd5-a015-411b-b212-a33ab3a032d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483f6ff5-753e-42d9-ba3a-e7e119819503",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "730cd104-9ade-4b18-bf02-8b9cc26b7a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b429d9e3-9046-4853-a4ac-63a566f859f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce13e327-2782-4dcd-b559-4e19a6bead67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f19e013-3345-4340-8fb8-0fca5cf5d598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d507371-ba44-42a5-b12f-b75adcf5a04e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8acec8-eea8-46c9-b5a4-cf884fa2abd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd04924-94f7-4b55-a0a7-a64c8038fb60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598fdde8-8d9a-4f96-885f-bcdf040e91cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "149e7310-db2a-45a8-9dd4-35155b1d2a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ea5bc4-0472-47f1-9e97-a99a95ca93fe",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e80831d-63c4-4943-aa6e-8dd45f3f80b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f16ed4-0ca1-4819-83ee-d1c5d0c159e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8969ad-0ee1-46e6-bce6-edb27b111359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "189ec853-fb31-4edd-a8b0-65aee06a33ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1e882b-e776-4ad9-8298-20a9a07c5828",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe2285da-d9c9-42b5-98f4-b0bde00ced5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1732dd65-57b5-4ae9-8315-14c9696eca32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e2f747-deb0-45a1-aee5-28d55673987d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2bbe34f2-8cc6-430a-86af-c93d3601303a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f92894b-e751-4120-939d-84240c58e573",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d70ff73-72e3-4c54-a4e7-36e737b4a7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c47e79b-bf53-48a1-bf54-092f74d4673b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c689d3-7b94-45d0-baaf-6373ca3117a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c137c64-b570-488e-93ec-094b376a742c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e256cfc1-9918-4c22-a664-5e7acbd1921c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8aed544-62fe-4a91-b46a-b0946d78162e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51c5d746-6fdf-432c-8860-63f9ecb578c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e94101-21e6-4ef6-bc1c-9d60a3ea2bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd8df4b-7431-4164-b9f6-29c7ff29f099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f531fb3d-2051-4a95-9166-ed0a2a1d8adf",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a07f71-5387-47eb-b52c-931552fbb8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb34f00d-c75a-48a6-82d2-d9fbceff7080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3157fc-ba5b-4f96-bc9a-35b2b2ceaea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd8de8c-ec7e-4d66-9db4-aacd159a047b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0e46fe-fc40-48ab-a353-f28c188e2314",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb6b172-da5e-4824-af52-bfcf488b603d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b2823e-7796-477f-b8d2-744e1e8a03dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0046a9f-8437-4355-a1a3-31e910f756ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f3e35a-3478-4056-b27f-b1b008df4277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0166363-a1df-484d-b2b5-71e623062d52",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "414e0934-7abb-44c8-964a-c55113bf2703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08751469-e3b7-4c9e-8aa5-cae501c29df2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89fce0d1-dc6e-4b91-898b-b5b6ba64d477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9230c492-e9e6-4c26-9be1-583310ea0c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3975594d-1105-47e9-9a93-a5fa829de4d6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7553c27d-1cd1-4a25-95d8-c1a8ce19f301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78309504-5d47-4108-b6fe-3efb06a59708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb664d1f-d5a5-4680-8fab-8aafc18def7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c8bb726-36df-40cf-a192-6ae093e20dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2815b6a1-2fe4-42a4-83ab-a85ff5c57355",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb1e6da-188c-4ef8-aa6c-23b3af039c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f80a6402-04d3-47c5-89b4-00851119053f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eebf052-7cf6-43de-8bb2-d8fa3bee0c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9630fed1-e2ce-4430-a216-14e2cafdb257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f9b7bc-66cc-4441-983d-575710f59ba5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "686873b9-31da-4ac4-8dcd-c36c6f21f803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "816239a1-5d6b-4b9e-af34-a5cf27a3754a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f102b56-ef9e-4295-8336-6a8d7b776435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "28ead553-57ca-44d5-be16-e867e4d83a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11fdd6f-9bde-4176-a751-3ecc3b7706be",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c29d289-b6cc-49c8-a299-c83991496493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a254dd3e-6dc6-439e-bebc-456140d75fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "939460ea-eca2-48fb-adae-cf1da1e3f917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "581c92de-4d5a-42d1-a2e1-a74d7cef202b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d680f725-0a5d-47b5-97a3-f76ee3c24dab",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e53295b-02f7-4e14-855f-41ae1b752549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "394f5a52-4745-4752-ac3d-c40d01e59d12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba64711-6e1a-42f7-8aca-86f6cffc0333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f70ea96f-e0d8-4932-8f3c-7fc3eb9eb00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f232de4e-6b73-4736-9d04-156d302ecb47",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8ae6ff-daf2-4b76-9e26-05aa9f600827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86710777-1649-48d3-9294-f6ddc49a3dc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5fc35b-2d93-4dd4-aba8-a793a5fcd1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7fbec63-10b5-4fa7-b1e3-1975effe8bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549edcfa-fb31-44c7-942b-9c7ea846d9d7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6390d7a-8fd9-4779-9f39-c7ad8b7fbd90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6783d7e2-d78d-4e02-8d28-a502751a2187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1555a5b-40f4-428f-9ef9-c92d1cbcef74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "430607c5-4e26-43c4-b7d0-5fe69365be8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8d5998-79eb-4005-ae1d-0a320db2f1ea",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8859046-61fe-4848-bca2-e58702cc629f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "592710fb-d347-4292-9ecc-e6d16d9a964c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2e1152-4e63-4af1-89ca-9654a1a615db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "42eae424-a91e-4404-8f3c-94c34b0fe8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a212be-455a-4ab0-bf7a-347b3e357ffd",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2745f9e-ff5a-474d-908e-25328726cc1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d54b1fc-7dbf-4ca2-be75-30d135977626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1dafd31-974d-4e9c-b9ae-47cd49eac4f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "20cbc487-0c2b-413f-b752-1c7858fca5cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "715ee4a4-5613-4c7c-bf8f-9aa25600b143",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "279ee403-17b9-46da-b4c4-b630aa6e4847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e06e29f-9f9d-4771-a2bf-818436002efd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4269b65a-dbab-4913-8fb2-d67e7894418e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "894d9bca-48f6-4564-ac9d-79bb8ffe3fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63222a61-4562-4fa9-90f4-21eb2f944366",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "979d5308-db60-422b-b450-a750fa992df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b9622b6-a440-4815-b4bf-280d0d221c05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627570f7-d433-4464-9357-efec98ef6b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "452c2e2d-1764-4021-ac8c-e86465e7891d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f74d9c-613c-4c92-98e1-75b8ceac5e05",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "615cb5c7-aa7b-4147-8e4c-9b1e1a219b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "060a713e-f974-44a8-868a-9e34bef6c3fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493b8a4e-be22-44e2-b242-d0d941f36a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97ef747c-b50d-4ddf-a208-cd5b5390fd69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1065341b-7cc0-463f-b623-8b7f73c7f608",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54cd0ec-c42b-48ac-8e67-7ccc5d7ad658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1475d4fb-f49f-47e3-822f-950bd6051666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef1d188-6040-4258-a13a-d3f3eeaf0c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3d18f9fd-316f-4e35-ab26-596d57422ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b72a43d-8f4a-4f79-854f-9eb81a7ebd31",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f4c162-6fe1-497f-b471-4106a05beab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f09e975b-6f66-4af8-9bed-55d173a98720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27306ab6-5bdf-47c5-8b5d-7cc2751ec29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "07bb9118-9818-4f29-8606-b08ee5b26cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97b1707-492c-4e1a-9fe0-8e33b2e80c56",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b47644-a69d-4ec3-9ff9-977d100cdaef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bfaf32f-96d8-4175-8607-f24e838be74a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3746403d-d323-4be8-811f-54f6f8f457b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "876a42a2-57e1-4e1f-8879-37ba843a909e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5a2a8d-27e5-4c0f-ae11-50a053c86936",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70851978-c915-4cf5-9a4a-50d4e7a9bf73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0f7b683-138d-44ab-b2d9-d27bbb27d787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14567e38-2158-47da-b59c-08968abca4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bde1575-c0cc-42e5-ae2f-3776eb5c42c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db7b709-59fb-4678-9c74-aeb908478478",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7d69b2-c839-4130-a806-d7bdc233e46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b566237-411b-4bfb-bd20-7f00109a27e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e164c8-04ee-4868-9a9a-4800f882bd08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ca148d9-ad15-41ef-9b3e-bb94939d2b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41fff26-17b1-42ad-841d-c36a347d1905",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc45183-fe2c-4980-a0c7-697d0c1ac50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c745aa47-3966-44f3-9165-8bdd267e96cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9782db02-0849-473d-84ba-350e3864adba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c4100b4-f749-4999-bb81-26fabdd14a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649e3667-5d6e-49df-9285-6c18c0b7eb60",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16936402-6f17-470e-84f7-50cfcfbe70d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "000735f7-ca6b-42ab-adcc-37150c122da9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180ccf7a-c5fb-4dff-a6eb-2a6b225cc2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7971b0c-6232-4038-a47e-d6006b818dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a64d64e-867d-4487-b41e-da6e0ca2a6d3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb2267b-f2b3-48bd-916f-546c2bfc9769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8e969b9a-fc18-4747-addf-ab81f8a11eaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74653046-9e40-45d9-ba16-11cb67935d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8762c301-2c9f-401a-8546-4393eeb2cba7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5a0c9de5-ff45-43b2-bbb2-d600d36f2595",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4e2ea8cd-261d-4b56-95b9-1df40d9cd8c0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9f5d5d-3375-485d-a314-26eef6e4000a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "004893cb-848a-4287-9f93-282d3c39bbea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7755db10-f9dc-4ab4-93fc-b539602f0082",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c94d594-17d0-4f31-9319-420d4e8de680"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3278c650-83a8-475d-b37c-34ed253f9b2a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c038b5d-e9ae-4161-b736-2edaa893e026"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "470066d8-6a07-4bba-bc0b-4158dfc672d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d91f27f-b3b2-453b-951c-4de999c4d352"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6e35dcd8-3edf-47e6-90c9-3020f2ebe1bc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9e33c4c4-6af3-4562-bc2e-3ec753dde395"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bff73da2-2e4c-4b98-b357-33e78e63036c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0acb5290-7f2a-4b04-8a8b-7b95233a633a"
                }
              }
            ]
          },
          {
            "id": "2ac3e926-e1a9-443c-95c4-ba7d81b27622",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6bb49ec5-e2e4-4a46-8f42-a134be450eb7",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "96543946-d0f1-48fa-8e23-6dd4ed49fc61",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee27bef-3b61-4b7e-b319-b8ee17b7ac50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9ea779d2-f27a-429a-a2dd-10abfc654e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668a7abe-69b1-4003-afad-bf0e4843f318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7908d2-13a4-4c44-b624-fed34ba8d805"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9d84e406-5d3e-4bb5-9338-747034ec3436",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "966ef088-be7e-4926-b62c-8891033a4042",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "390226e0-095a-4fbf-99d0-52587e782504"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b739d619-3772-430b-88a8-71aabf258e2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ef04f905-24ec-43a9-ba2b-56c87119cd68"
                    }
                  }
                ]
              },
              {
                "id": "3feb20bf-c868-4349-bb0e-1528d8758cd3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a8211b2-17f9-4e64-87eb-61fcd713479d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c354006f-b164-4152-9a50-6cd0ed33d92e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a2ea541-4284-4af8-8b03-70882ef5b9eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2b0b11a1-22fe-4ace-a1fd-422e03fe4fea"
                    }
                  }
                ]
              },
              {
                "id": "62023153-3695-4c5e-816c-4539d479f04f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "63850722-d4a8-4d4f-b617-6eec28826a54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "16f8e3d9-9964-45d6-a87b-4baeec2d4341"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c7f6c56-1b3b-4fbe-9a9a-ad2214dbbbb8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cb097f14-dce1-4f1c-aa7e-e2867915dfbf"
                    }
                  }
                ]
              },
              {
                "id": "3d914046-044d-4ebf-b00e-a25cd9696628",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "245ec7fc-ec4d-41a6-a92b-4ef798becf64",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6458bdce-66cf-4f5b-818c-4b6f523e634d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22cb2201-2964-4194-827b-474d8cc5576f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f5212c39-fb8b-46a0-be22-5ce5f6c425d1"
                    }
                  }
                ]
              },
              {
                "id": "c49390fa-7b85-41fd-b737-c1f1d06d5b8e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef3b327e-6d2b-47ec-8d14-fd69f15d9609",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "562b6c2d-62ac-4c9b-8cd1-da62bf104c12"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "482f85d1-e4bb-468f-ae8f-4399f2427c10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b83b7960-820e-4b57-9430-7c309d99ca58"
                    }
                  }
                ]
              },
              {
                "id": "b0bfdfe7-d7e8-4861-8042-e3d79a703a3d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "751c76f9-50bc-43c9-9f01-aa5f4aa99a9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a6ae7d6-13f3-42f9-8d5d-dcb592f3c0a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97f073ee-8edc-463c-a596-22910b7f80e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "df214718-997a-4fb3-874c-46fe7f5bf172"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bab1e261-31c9-48cb-ac24-415637ebec91",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e0cf1872-cebb-47e6-a3a5-7379d0e6a839"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2e7c3002-26b4-4ce1-850f-13f99dc0e663",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a4a54a2a-670a-4d0c-85d6-0544d48b8c9c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4befe68a-c4b9-4c57-8d96-c04e0e65e559",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "966a5b59-e6ff-4418-9405-93f9e6c823ec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74972e63-3d2d-42f4-b124-02031e96bb4c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e9d30486-83f1-4737-9317-f1a6f2f54032"
            }
          }
        ]
      },
      {
        "id": "779723e7-f7eb-4af1-acfd-77b2d2bb105b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f72b5d79-814e-47e1-a525-21d19099ba97",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9b93d5c7-5ee9-463b-b5a2-9294fbc9d6d0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "53f068a0-60bc-49d2-99e4-9aa0a8a4371e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b67cfaf-0303-4162-8cec-53d7898c6ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "284c0626-e9c7-4fdb-a60f-c0a465a3dac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31599f19-a7c2-4214-96cd-531bdda80c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "627da7cc-5f1e-4a16-a4dc-d4ff37be8988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1ec911-f827-483c-936a-62128c2e60c8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2acd8db-ff83-45bd-89f9-644e7c2f6c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f13100-6b83-4ad7-acc0-027d9e8bfaa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce46745-4379-4ee3-af90-de2b6640b8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e6d617f-6ca4-47d4-9774-909a49fccf39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9cad10c-ea7e-4b51-8f3e-55981ddb12c6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "870f4f0c-fa3c-4d89-bf69-98e7e9d4e324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b126cfb1-982c-47b0-b96f-2767d23fc50f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c2cc31-c056-42ca-9a9e-49be67f3ab3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fab36375-7834-428b-9a40-527aa3ebb994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83603e11-c887-4ce5-8c79-326500a722f6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98460087-d20b-4e86-88a3-b0ae68821865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a20293-30c8-472a-8bd6-43717ef7c30c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab4ddd2-3055-46e6-bed0-3424d6311678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a402002-4aef-4314-911a-ec119c600988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb699ad-aab2-4433-98f9-6e8f514ee87c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1e2dbd-afb5-4071-b990-0d61373ce63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f063e8a6-9911-42f1-8ef3-1f477af52e4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78069004-24d4-44df-8449-101be192c362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb38b26-fc2d-4805-a582-27ef53a5217e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad974aaa-1f0e-463b-852e-347dd2506cc6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "094d0b47-c136-4548-99ff-30a023ae043a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf6969a-8279-4eb8-b7a3-9bba25d50f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18dce6b1-563c-4f19-b5d2-56bbde634fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8a3b99f-253f-4ecf-a37e-6a746c9c54c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320528d4-b381-4ca3-973e-c6a8b2e0cdab",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beba6f5b-4fd4-437b-9803-4a10629003d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55663c02-f5ee-4028-b4ad-3e43ba715eee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861fae01-84b8-47b9-b5f7-fc389b606bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5085fe91-63cb-412f-be2d-bf5c8afbf0eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27de9c24-a711-41e1-ba2c-1b4d976dd9bc",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ac6dca-e6b7-4121-998c-c8d42817e544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3e625aa-e864-4aa5-a35c-2dad92707e71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e968a7-aea3-4c8f-874f-decdbed54ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a58a69ac-2d3a-4014-8fc4-e5cc53ef9e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d7a0e9-c930-4ffe-baf6-966b7942335b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c2464f-b69c-43a5-a7aa-96715a99ec54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2569fdf0-2ace-436f-9386-dd2792a671cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9867df49-f65e-4429-8c69-9c4a1e40b408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "abc1bcbd-bcd3-4e3e-b1f1-3454dcecc9d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c83f81-39b5-448b-b2cc-ee5c6d62e7ce",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7464b96-e7a5-4f4f-8793-4435322f80cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f405a17-850f-497c-a506-79f4c195e212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72bdb19b-cafd-46b7-b3ad-a5fc5692cda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6438057f-f885-4224-a108-5769bbccbd93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1217d8a0-d853-45cb-8c3d-323169999bc8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b72aea-9224-4593-a713-144078d848e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80e236f2-a92d-473a-acd8-1c87c12dab90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb90022-f408-45fb-af40-de06577be2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8a18269a-4394-4193-9d7c-70eb8fa08a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0786a5-d851-461b-b374-281fd2c849e3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64349848-b9e6-47a2-848a-46606e731d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "603a082c-cb10-49e0-9f76-580d946639c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d58cf09-d328-4c91-bb3f-b8aa6b645016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "11cf8adc-6602-4aeb-850f-37f1def426e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aecc5cb-c4fd-4753-b77d-a1a138f6e579",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91642a4b-9e60-4189-9097-261b1154fabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "667fe3e7-0754-4738-941b-235bd17d8749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bddba942-3cc5-4809-a7cc-c18fd3bab1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "70cccf3d-0f91-41f8-95b0-af55f6be797c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cacd92f4-ced0-4376-a810-a52504721e97",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa9a216-425a-4891-b1c9-0dcda7b67081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b93eea-7792-4948-bc0f-b7f60efdd183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "033987e9-96ec-48d6-b910-df11d1cf6049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "350cf775-853f-4cdf-ad57-0f2a27e4b6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e69769-160a-410c-ab16-326f43b04f65",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82bf1368-c4eb-4bf9-9a97-504bc826bb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d700a98-d667-48dd-979d-7a031645dc50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd7bc20-3e18-42ec-ba2e-fa89adbd96c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "43d29c80-57b4-4b5c-acee-4357925d9759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb98d5e-3698-4e47-9407-e15dd33329a0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "283c5578-8a61-42b3-8b8b-1741bb76837a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1759e1e1-c5a0-40c8-9c7f-b92424065943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b02280-20e3-4cf1-a3bb-91192bfc9905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b07e0c5b-bb68-4f3f-8ab4-2e2d5035f64f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00db3cb6-7722-4c60-8050-67a6112f15c9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e47f9f8-74ce-49ac-a3d0-0a74460a7ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f383982e-b12e-4b55-bc81-f8744f158458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effff534-ecb5-4464-a9d4-edb4da3c0921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c48abc9-d569-4c6e-bdd1-e24cab59fa2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc82fce5-c86f-4731-a23e-3357e71d795c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94504caa-a132-4eda-9686-d70796f25755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a02c09a3-df3f-4d18-a93b-51c9d2fcfe33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134744b6-8ed5-4e6a-81f0-773380013e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f9bb41d-122b-4568-83a6-68686d74710b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6badb4a7-ee3d-4328-a05e-c53fa3127955",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ff8ab9-9bf4-4744-adb2-73b6d06615e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77743e79-2ccc-4b75-b030-54a979962bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a45c383-08e0-47ec-82e8-2c2747b6d269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ac8e855-99ce-4e45-86b4-33dc69f2d01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceaeb4f4-e312-4bfd-b271-63f219619618",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f78fb69-2fcf-4d8d-b4fd-ab8905e2e0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d59348d7-de27-4fb0-9eb3-dff3763b54f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6be3402-b139-451c-9ec8-0c5e737e9a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b41390d-923e-4d56-98eb-ed4a67430799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e505005b-bebc-4f74-b86a-227b3c8b863a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a891d1e-735c-4170-a0f1-b6fe59544e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75a9cec5-cbfb-4c3d-9500-6770b070e013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699a0582-c69b-4f29-9b5d-3a580f56d0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66b90b37-1afc-4143-be92-5371d73e28fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce18098c-636a-401a-96c0-124502f9f8b4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "066d8fb7-23b3-4fcc-b0eb-f8c3421983c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d022487-de70-406a-8c78-d92409ff8e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ce0aef-70e0-4f8c-883a-4c91d82f3eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90c5b08b-7c65-4aa0-930d-cafe784b6f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d02957-f03c-40f0-a97d-eef1719234bf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14dd70de-93b0-4522-8867-f21d240c04d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ccb7786-94aa-4f1c-9de9-e2854b012990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238b76cc-a488-4a32-a8c2-8efed861759a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "372f4239-1968-4f50-a8d5-0ec0d83b9d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ad451a-ee38-4f26-8fbb-9548294554a7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2191c970-05ec-4dd2-ba72-591a25f034dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8552c3c-1bfb-4b64-bb87-d848d2b95b4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95bfec6c-c9e8-4914-8379-1a5481030e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96abb69a-8719-4178-95a7-109c722ae560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d246ae7-bfcd-4b02-a488-836b3538d9bb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00963d6-3b63-4af6-b9e2-5a1b1bcf9528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "398b2911-2eec-4258-949c-33285b41d185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e15e6af-412a-4c3e-ab08-6cf1dee486fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8f22e25-e080-4aa0-8e20-c8b65a3a75af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "140a7592-e667-4b73-b90a-d80361922dad",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb028f6-fc22-43f7-b7c9-01f671845c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb9018b4-39e7-47df-8fcf-8ee2c602a450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a60eade-be68-4d89-a760-25e7da458457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29dffc29-007e-4ff1-a426-71a7b08f73ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43287fc-01ef-48db-b997-24881354821b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d3251b-ad94-4a51-82c0-85ac56d7c606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "079612aa-52a6-4572-95c4-9ceaa3073496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca41ba3-7635-4896-8cf8-893edce80b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "562e906a-76cf-4a5b-9fd1-5c78e3230458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa9663b-f4b3-4b3e-a4cb-36aefe75f6a1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "456e57f6-eb21-45eb-99e4-9d66dc0f2fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcf2fa49-5a3a-43a7-a5fa-7a29f013ce6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9171a201-e3b4-4e61-a0eb-9adebddf608b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93411793-d5a9-4ce6-87f2-29dcb238e45b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67fa7231-d2e6-4d14-8ac8-2387eebceec5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "986722cb-c11b-4f2b-b0d7-62b332274485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8132440c-fe6e-43ba-81bc-a11eb44b4b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b870cf-62c2-43b4-a909-a3e75492fb41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1717293d-732e-4e63-87df-e5cf229ec012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cbfd083-4e02-46ca-8543-fb03821c5084",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada87d7b-aae7-4d68-8592-19e8fbce009e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a90a1ca9-75ce-4f29-a98b-6b1e8a7969f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce779aea-71df-4b01-bc57-d5e2f6b60644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c8c1f6f-e08d-4f38-9d4d-9f1acdf572ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a2db58-82c1-4d7f-b228-169d051f78e7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db743f49-eebb-4ac2-bd08-8adaef609326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1aa01ab-9cc1-4e0b-8a84-2b57167b0720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41a6f54-10b2-4a8c-b5ee-7b6dd7a525f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5662af10-bf71-49ff-bd13-5ee777e86bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e82a55-7d5d-494c-ab43-d2d925c584e0",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0584fe-9d54-4f65-99f7-a53516863c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3bc389c-4ef7-47f6-b456-e6c00b64cda8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beeff14b-7c2e-41a3-be27-fd85209a9d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebcf61a3-e21b-482a-8bf4-fe728f246529"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0d9223fe-1782-4887-9fe3-0497995664d0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "12dedb8c-e972-465e-96e1-883f97e62454",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc69ab4-148c-4252-8ba8-f9828c5c78e9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "beecb696-49fa-4842-b885-ef67a8789fd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74fac86-dd08-4da5-8f84-131cfbcc203f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "497db87d-378f-4bc7-ae88-d74bd5742fea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c6ed4bc-7afe-4947-a0f5-718f7c0f1262",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f92231d5-e6d4-4f35-988b-aa275297768d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "09b8115e-66b2-46e2-a63c-55351562010b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d9b971b-6f52-4735-904b-5ac6726258be"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4295cf2a-8e62-4036-808c-488508f0b1dc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "60ee3c6a-f089-4c41-9ab1-7f1cc5410596"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fcefaaec-d10e-40ca-b521-4987e5cd8632",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf394ccf-9006-4505-a7c8-69720247c374"
            }
          }
        ]
      },
      {
        "id": "b58abfd4-aab8-4132-bc05-851022a1945a",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "af6a4c80-1b2f-40a8-9c12-64a2fba638f0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b86886d4-5644-479f-9ab1-5c73d3390ec3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b0795a9c-4ee4-4cb4-a378-374789492b94",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8c029e-5804-4c39-985b-158ad5ea5366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a883c851-1d53-4425-9910-179b08d8f17e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a85493-a171-444a-a5c8-e076c8970e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b3f5424-5d2d-43c0-af5f-703939001998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844a3467-37d4-442c-be7e-0558f3afa6db",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4209af-a4f6-45e0-8fd3-6a3f71a78432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c58227e6-60be-4883-9ff0-b69a2db7cebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed858014-6440-48ce-8c55-8b0699d6d5fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "281223c5-07f4-43d2-bfd4-fed74c79d62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b650d21-191c-4185-8b6c-90f2711fb44f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fecf637-cbd6-45ee-8943-9fedbfe04a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0518e912-fb94-43a6-a20c-8164d920d084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89e6026-df69-48ba-814f-464cd2958842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "88d3f449-8c94-47dd-aea0-73279dd4c0e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3981cdda-c6c3-40f5-88af-2b01ebb3c6f3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03210ef5-11a2-4fce-9144-87aba019ec35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097947bd-e6ed-4988-93aa-0927b8194d14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ba0695-10fe-4fff-a071-7a89e938f98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "941d98f8-63f2-4ff7-af2e-3f2d2ab52710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91db5519-d318-43b3-89a2-2ad52da1cdb8",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86af072-6edc-4a2d-9c37-bc24ce0159ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f74e232-7864-4986-9402-5c70b06d7a78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adeae799-43b8-473a-ae49-a70ac9e7e321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75de0d93-7d7e-4bde-9eaa-47e8eb4878d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3411e6a-b916-48dc-9bc0-efd18e3d6beb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed408a59-1f03-454b-8a13-90dd75233abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65dafd0d-3bd5-4e54-8d7f-43af0d77531e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d751851-0e8e-4ec3-8580-0a06ac921add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e2517fe-487b-46ed-adba-fe08cf4f5ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5dd46e4-d918-4e10-a13d-c5e9f5398076",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96492239-13ef-4e9f-b82f-788f454ca3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b5ccf10-8b75-4bab-920d-07d672f049d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a83201e-2e6c-4b16-8c4c-05c3859fa962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a24604aa-7d9a-4f59-8dce-18159b777af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733b1462-f8ba-418e-9d12-9b09c5157116",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3026e66d-b0b6-4cb7-80da-38bfe060c9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c489db8f-0965-4d1e-971b-ffd09f8254a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca871f1-d031-41ac-9d72-090c0921fe3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "947df58f-02d0-4f17-88af-459631b9724a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46254cbe-0e93-409a-88f2-a52719861f6e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d940020c-aff6-4185-89ee-23995160efa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9de3d1a5-c165-4685-b2f9-bc0697ea4706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2336536-3a3d-41e7-be5a-0e7cef60f5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "439f56fa-9e31-4778-8d4f-1cd576d70b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3dab599-abbb-48a4-ad1d-5788604a4bab",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a98a261-fc17-48bf-af9e-a5aa0ccda304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "139ab105-c68b-4540-8039-bd0c69483148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3e45ec-107a-4495-ad5a-1ed603f611a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6227f04-307c-46d1-8326-885f6cf1fe39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2347ad1f-2e5e-457b-bb71-3c38ebcfd2da",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2944e0-302e-4197-87b7-48a0486e2f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00dd2e28-85d9-43f7-beaa-b17c330c6135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322d8edb-f4e2-4925-b707-8bf16bc4ec0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "68a11b82-b9db-4249-a10c-f87a2bbc642d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d93b598-08f0-43a4-aad4-c9a152dda504",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9cd8bb-aaef-44dd-8b4c-1dc28bbb3d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b024de-d281-401b-b579-0f8cf6cb8489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18dba511-986a-4bb1-94c3-1a2618f624df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bd99c313-bfc0-4827-a226-eafc7ca0e1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b358c48-084a-4717-82d8-5f2115402d08",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74eabef-a9bc-42c4-86b6-321aefffe2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41de223d-bfa2-4529-a813-11190b934032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52245fbe-55b3-4f93-a430-e2efa84b1f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "323d084b-764d-42ab-8515-e3c3452d71f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640f7813-a568-41a8-a448-4296e1a6a0c8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89fc718-50c8-49e5-9308-93592a2c0416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2914f3d3-17b9-4b8b-bb05-02463e9a565a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48cd05a-74e3-4618-9195-d46bfd7f55f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "acdb65a1-bcf9-4e80-9ed1-b2f0cb98a1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a04f00-406d-43ac-8f75-8a6929dca385",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d886e5-c2e2-424c-aa87-5f994ba97567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2790dcd5-96a9-4d7b-87cd-437720af6d75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466f541e-d100-4d8f-a257-30a6afd40319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5da1ca3d-fe69-4a21-9f67-4465089098fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562d3256-e54f-4f5b-9b7e-1556b9bb5d45",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95a53c6-c95b-4df5-904b-41cc3746a656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "581f5491-b725-410b-8134-857cf53cc3e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95432394-fd51-4f9b-b11e-a559f97f44cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5782462-3d5e-4a19-b71d-76944bd06bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1b319c-b921-4909-bc94-8147fd9724f8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ec4b7d-c0a1-433f-ae3c-1b35f803a988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dee0760c-4adf-46f4-8086-272cba06a4eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8f4912-f173-48dd-a200-edb107a3edf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c106f243-e8c1-4686-85d4-16074dc18c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d8a711-c201-4c2e-aaad-b9471b3cdd70",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "716e6cb6-96ed-44e6-8061-b730b6e12b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f4c8b37-1d81-4163-8d2f-f1ff3b989cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151cc6ce-8d97-4bb3-b9a5-454b35c75eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "359d32f4-bd05-4152-aa4d-87b6ac111671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4b8dfd-4930-43d9-a860-b286dbdf1675",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48618a1f-263f-45b4-a60e-4229dfb7684e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4d3b27e-9250-4377-8ea1-42f5458a5d68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e925c8-6613-41a9-91ae-110fae814a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65478bee-e6af-4ba2-91b4-e2fbca827fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9e8f1b-24bc-4b81-ac1e-2f36da951297",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad07a6e-e4c1-4a9b-b27c-4e046a881f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47bcd387-b2ca-44e8-a31d-ca00eab5fae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c637f39c-aaf0-4372-9edd-860a245819df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d4fd334-47ef-47a3-914b-13bd005d77ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8913decc-d7ff-48c0-98c8-3aa91084f060",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c726300b-8c95-4920-b5a6-34cd6e8c82d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12e12838-c87b-4a51-a912-6f692f02a90c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a634050-4bd3-430b-91a0-99f46c36d4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b2848c6-79bc-4604-a5ec-35b071e46038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6299d33b-09d0-43e3-a52c-99b2c612840d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d581a8-557c-41fe-a78e-63a8ce710b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2a19f3-2e4a-4ce7-bb00-5fbc15c0ae6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330630ac-cfc5-4873-a98e-4ca4152ae170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d36276a-31e3-4daa-b749-709627295269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab8d40c-6cd8-4af9-9581-ff418e1a62f7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d77eea-c0e8-48ff-ab56-ad11bd831a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b32cbf4-513f-4290-b87b-56944f435b92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09927202-d8af-4451-9353-3d43271bb405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "682bd9e3-d4f4-46c6-b530-93c86be4f591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a1a977-0af7-4391-9df5-66b7c5c45f09",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d047e2d-a3f4-43ca-945c-87260856841b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "477fae1c-7e37-4abe-b2ef-0c12680fb1a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c825f225-4de9-4df0-913a-328ecfdc6c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd57a05-fcee-4579-8846-1d8269b57487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7732c1-7dd2-4449-81ef-8d2dc1edc947",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1367a2-4a79-4bc5-888c-2f90827d348c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a0284b-1ad8-407a-9b62-6c49f80d53b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bee755c-1213-4cb8-966d-34b6f5701f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77edd439-a671-4992-979e-e7e8749b5a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "613fbb66-ff77-44a2-b4e0-551809e06272",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a18e32-5297-4425-95a9-bac7e3bd79f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b68bef20-b3f8-498f-b939-c0f96002f988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35749adc-18f9-47b6-a038-83785aea9a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b6c0ead-1277-4c0f-b515-00150696cb83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534430bc-17e5-4161-b351-b917f00af592",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388ab4c8-030f-4317-a76a-c0c8cc84b7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29723bc0-46c1-4a40-bed5-786ff1f738a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464c9171-2edf-4b3c-8ccd-99f61000f369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52fc0655-f95a-41a5-879e-bab214ff479f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb45c643-6ce9-4636-a828-3e8828068789",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c5e596-c8d0-4abb-8a33-13b97c66dba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cbc8e18-b551-461a-9dd1-a8f7d1154c6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be1c048-8f4a-4b81-8aaa-e486cf3cf438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23211dc9-af97-4eb2-ba2b-2ed064d3d90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd1afa8-ea7b-46bd-b886-2fc315ed9825",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1156187-2703-4450-98a1-662322eec038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e48767b8-b22c-4b8b-af7c-8adbcd9e8639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad604e3-023f-4dd9-b6e5-00895928e1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95c50c81-5a6d-4939-b235-7b5ad9c1316a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5707bae9-511c-4366-9606-478500770c85",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9c772e-9f55-4bdb-8d89-380daf53384b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c4ac42-be13-4861-a218-dcb6619fdda6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0fd99dd-6a6e-4225-8823-3731e384434a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3150f1a7-8e8e-4b22-8d77-bdd6b42252f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0052d179-1da6-436e-a434-7cba43bfd4c4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d0e0ee-c99e-460a-ac8b-f0d41ca9ce08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b94a338-1d2a-4792-87a8-793e7416ea69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90b9275-5e68-44d6-aa6d-0066bb746505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80f8220e-5dc1-4c15-b4dc-26a677af0ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b35dbbb-823d-44db-8d46-35cf4072f7b4",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b640a426-c036-498b-9c39-7c286614c6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dfa9047-a935-4744-bf38-e503a873f2ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6241464b-bc8c-4f3f-9ee0-0d447458b3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfd97f0f-0cb2-41c1-ba7a-96e0f2826ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f195cb-aa8f-460f-b1ce-23e91c211fd9",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5e28c6-7fb3-4bce-8180-8f8195dfc24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94627524-1dbd-46f4-b540-62d77a943a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ecb6dc-f16a-4ecf-9ea3-d9fa627dc3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "245b83bd-4362-4cbf-815e-3c2c63c95dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1febb0f-a7da-4e15-9e39-6aa59b6be760",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d12f1f-de64-48fc-a4a7-691edaae5799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d21b5d-4024-4eae-8ee3-0c925924c5bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4543054f-da94-4b0f-a127-5b5e74b3791c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33acb58a-d8d5-4ee2-ba0d-246609641d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a471757-c6f0-408f-a91e-a14c88269172",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40649b26-88f4-4aff-9773-78ba9b4dfed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60bba135-547f-4326-a59c-abd76ae5a2e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8548d1a2-c571-4d39-8f6a-fff283984d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65f311a1-25ed-4734-a433-a356738a41c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d274cd36-9d14-4c25-b58e-284a148823a0",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c558e1-a5da-417b-acde-5ed8d9389bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfc16af2-15e4-4848-9eb9-59f4ab61b10d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177a508e-b283-4321-aa70-993b08cd5a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b9b6999-df58-4605-a791-a295813fbe38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2d1c10-c0de-45b1-b928-25b653f6118d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ecdc21-c8dd-43a1-80d1-3e32f4ff34f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8434973a-18cd-47f1-8930-157bed761bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0215dc2-21ab-4d48-bf5d-5bbddebe4be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf49885-f164-42ce-88fd-5b37dca3aa56"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4ddc84ba-bdca-4188-a700-9e68aaf64663",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1e2f2537-1919-497c-856a-a97ac0aa1039",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923beb08-7894-4494-8e10-ff9f36461be1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "25316f22-35a9-45ef-bff5-3b2e5961abda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4749ac9e-d957-4b32-84ec-7e0b764d9e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9c7e24b-cb80-4e60-95aa-328d8acb9d9a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f9af249-1086-4b59-ab24-52843f3fff59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23e32fd1-26c6-4788-8ade-145e676c32b5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a479d40e-1ff6-4155-a635-d1d4a32174c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b11d5d67-4334-4f20-b01f-e875110863b5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3f488b8-b44c-4610-bdbc-c08aa7fcb399",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "153b5dce-990b-4998-b426-3c1034d43478"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "27977d78-04ce-4838-bd71-106066fa412d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "19921899-06e1-4f52-9814-48e0b2eef6ad"
            }
          }
        ]
      },
      {
        "id": "3517ecee-8e06-4895-8715-3e2bc7f65a22",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "aa4739fb-20dc-43ef-b06d-cfa00ff35732",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7e022b7e-ce6c-4dcf-8f79-785f3dcb5d30",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "55882935-37f1-4bdb-a011-df20be85f75c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5ab1fb-dfbc-4729-8881-3c260a016afe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1febc779-6fd7-4b31-8553-090813058825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8f6cd3-8479-4835-b9b0-33100b2947b2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a89154-c3f2-4b7b-bf9e-b04d97ad3261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0794a7c8-9f27-44af-8d73-aaa46ff2201e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0f8be0-d916-414e-a097-582397194385",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97981e2b-6add-49b8-bcf4-c291d66546ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f7ba0be-a625-4809-8622-6d31fdc03fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7f34ea-c2d4-4559-a5ad-95ab7e6c1fd8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a46cca-21de-4b40-8f7f-44b8df32224a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4303fa13-dda9-4e50-b704-4f1644b9eff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0706e9-b9a2-40e6-9479-fe0ee4a91c5a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "594d4f51-3a3b-4df6-811d-37654d7b8826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eb8a469-b254-4688-a8df-f7430f091fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133eeb70-fbb7-43aa-8e19-2c3a707c3aee",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ccfbb4-0961-4654-8b6a-eeab7908bdc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe421589-1ba4-44ff-831d-0e7dc66d3a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74ac84e-4e82-4ed6-8e57-4396ac524b68",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359dc8d6-4eed-4a43-9843-23f4a4438402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eba991ad-ef09-4dd5-b0d0-3af0116283d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11900621-5b8c-45ca-89d3-4ae050c58a30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d47fe7a2-a144-430b-9378-d96ea68ad620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b124b236-b626-4a52-a82c-611e89203a79",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92654451-aeab-48b3-85b2-7297bb9f019b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ffa1f51-55e2-4ae9-bd69-4dfaeaa112da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85892fef-d6b0-4c5e-a220-fb3e66b21686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcbf03c7-844e-43e1-a6f1-2d921e64c6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e315776-addb-4f2a-a06e-8feae6b012b3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a495e09-fcbb-40e2-9703-bd16167e44ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b11c5a5-7f98-4f42-b1ea-247c75798d5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d7dd13-c7f8-48f3-b999-198e189f31fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d47fabe7-e426-4546-bc3b-f2863812a2a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d212cc4-80e0-4618-8608-fffa0e52b7af",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22fae8ae-4368-4e8e-8db0-bfc01f83b7d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "651a06c3-c3e8-4801-a744-746210c3bbe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff7adfb-5034-4323-8eee-0dd1e0251a67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "751a5fff-101a-4ada-b139-c3eccdb66bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab91c82c-ce62-41df-b95b-d3954ed2455c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8226fab-b6a9-4e5c-9997-cb7a5dc81afe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a25c201d-5821-4ee7-bc5f-2cdbfc9e4f3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "608916d1-6d1e-4422-8848-3982f4e5264a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1825e4f9-c7aa-4146-ae36-72573af9c3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d759dd-ee64-4d91-ae0a-0523148758e9",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d75563a-39d2-48a4-b15e-dd8e5baefcd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af7e48ff-b482-4b56-b8c3-4be422ef13f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7648d1ac-6394-41ea-92ed-fb3c81e8c387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4357812-5f72-494e-95c7-5205eb28e16a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d32d339-dc94-4186-b46d-8c0d81f14dff",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2aeb94-b722-44a4-83ac-b9ccf237786b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7afcbb2e-c2b1-419e-b0d1-53e2035316cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f83dfd2-7eb0-42ba-9b20-928f5caee9d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e50fe5e-6106-483b-b056-8190dd91a3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3068e7b2-348d-4b9c-a5ff-4ded2957d738",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4d0607-1dfa-4fb1-872d-28836d11fb49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fce05c73-b480-4fac-baef-e40ec94332ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1bae57e-6fff-4eda-bc73-0c0a55996dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc191f6d-c6da-43f6-9ee3-f66e33915d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ac52fa-60ce-4b64-839b-c3b2f79199cd",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08711bec-aa74-44b2-9f5c-6323dc3214cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4652b874-c483-4a19-b130-ed2ae890591a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d39b50-a09d-4cb4-9f24-49dea73d7aa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd95e906-b21a-4dbb-ada3-57099ac87833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead43dc7-e65e-408e-8f8a-5fac9e4841d5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2556405-198a-4c38-b42d-9a0fefc006dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab5da98c-0464-4aff-a188-09fdfbb7c4af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e878c279-3a73-431d-8f10-82a2a521c23c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00ffbe3e-f4e1-4c10-acfb-8c51f0ac6bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c928c710-ee8f-4b32-8574-cc601caea716",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb16f38-770b-4614-b5ca-0509304fdbec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "367d884e-4158-4e6a-bebb-65fdedc2994c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8c1ab7-250a-48c1-924a-564300e4f424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6101835d-5ab4-4e21-a0d1-43a8d4090755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910a1415-ab11-4f26-b170-aa112bde5fd3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f8315d-7a99-4c83-beb8-7b310b309be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd5dd8c-2b2f-4c54-9538-a54fd5816e03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f656c2-d57a-4ca2-a3d4-18f93562007f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09373f68-69fa-4cc3-a9f6-04182be1a9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31ba8a3-4c31-42b8-a6a3-0ee20abdabb7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a82f6b-3e04-459d-a995-e8076555594e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deff47b8-ccc9-41a4-afb2-5514218c1ddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb81fa11-0cf9-4ff3-acd6-ca4322a4d551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58eaeea8-3853-40d3-90ed-1bde832be034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f8372d-5be2-4246-ad75-0a50a5b278db",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a591e5-fab0-45d3-8cae-7772eb7fe44e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7547787-dd51-41f9-a886-8529540c0be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca8d156-c0ff-481c-a067-764ef6ad3261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b13edba2-8d3d-40b5-bec4-bd3b40424243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d54e633-86fb-423f-8195-3e2da75b3e0f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af94f643-6d17-4c96-9cb1-4e9df441b632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0093f039-e445-4edf-ac6a-8f41e267d99c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d865b91a-b81e-4583-8656-2395b04978d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ff1ffc-110e-494c-bac9-88376344d7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95bdedd-28e7-4659-acd6-1e952ac246e2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c72970-49a7-4922-b941-9047b0dbf84f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13d2efd1-1bc7-4894-a7fa-4a72f80c7d90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e4ef5f-090e-4fea-9686-7730b77877d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "780e8d5d-a7cb-4e9b-9f1d-2155c8f5646b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b040e6-a8f4-428c-8261-570f80f42ae3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f596e164-d56f-412e-a660-e29020886dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecb39c2e-e12e-42bc-a778-ae0f8fd590b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4402906-f0a4-473d-bbba-e4ec475d6bc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "342aaca3-da46-48ec-8eb9-25d582bb6f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70dbc902-3ddb-470b-bf25-d6faa804033d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c986d0-4dff-4263-b713-3136bab127a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fbd99d0-5eb6-4e41-8af7-373e2bb62554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "552acc95-1485-46d5-a254-6556efa91440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17a53103-e229-467d-80a2-5cb8f76f18a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0d9147-7dce-4f24-8bf6-86fd713570ce",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4617951d-11d8-4c1c-95c5-4fea8828aa66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53d42d2d-eff2-4492-a55d-86699fc9d5e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0df6cf-ba97-40ca-9d52-ce468777248f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdb5297b-e489-4bd5-ae89-8013ef4fc47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1edde9c-2425-447c-9020-d0038e28f433",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5936c1f9-d1a4-44b0-a723-c86ac544c29a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df442a58-c32b-4fbe-97c1-d8ca67ed7467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95190c65-95dc-4d27-9d74-802c4e5bae97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25d49c35-ff2f-4c48-a65d-97b49e6d47bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6fc4c88-9382-4934-affc-9fc674b0a541",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6db5723-8282-4bb4-b1f5-29c3af21e3fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dbdfece-f065-41c5-8cb0-248029db44f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37271d1-55a7-4341-ad2b-77eb9f380f12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e74c469-df81-41f9-86f4-f1f4d95e65dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48c1c26-ab98-4d01-b5fc-099ea0837264",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb6b98b-490f-4d02-bf7e-74720be76f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73828339-79b6-4c95-9227-19e7d2c25343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e3c2e1-74e9-4ada-b934-666b5612170b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0445e194-5129-4eb3-a2ea-5b267b40670e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773f3cb2-a599-4d6d-87c7-2cb081fe2e8d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50f654d-97f9-4509-a900-4bf387ca98b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "210997da-71ee-4132-802a-82ccaa2f1762"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c8be90-4cc3-4534-9dd4-e3d6f100ee6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f096895f-5f6c-4d9d-a208-b1fa2e3cea6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e676fd43-e1a1-48cd-b581-ace7016f67db",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963fb30a-1a81-46d5-a4b1-30942049d896",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aff2a3c-8320-44c4-9569-12592568f3bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08834028-1cdb-4004-9e36-97cecb4652ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72ad6b98-2c8d-429d-80ec-284f0b3aadd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e8d8ec-df27-45f8-b12a-2b74aa3316b6",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24bb900d-8e8d-48b2-a5bb-fbdb6776793f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b3f5c2b-825e-4f08-9667-533de1d11b13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25043976-dce0-43a0-a920-0dfeec770bb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27dc7564-b7dc-4955-ae38-bc9330ee7916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2cc9f8b-f12c-4631-ab86-18aa249e10bc",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b53cae2-00e0-4594-9509-a9257d00fd00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8f33c42-8429-4618-9db9-202c6e72d721"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e262caac-61c6-43b0-8537-5783a9dcf1fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bac3f49-2229-4224-a961-78ddbc144182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1df1b6b-3e23-4764-a43f-4f3c719f8cbb",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9389d0d1-f62c-4261-999d-28988b7abc8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa2f11c9-0e10-4681-8ab1-e3a82f84425e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3361c4-cce8-4ad1-a88b-e6c32303a6c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b8f8e82-5eac-4ef7-af30-4f46af873cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1f17f5-9be5-45e7-9cd8-b6fcd0c11d36",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2bb28e2-8c2d-46ea-9493-8bc9b95836ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aeaea388-6c7f-48d8-bf39-ee0a79bb400b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c5c9d0-a74e-4bbf-b385-3199258b39f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1df255-099a-4e31-8e10-e14a649613da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9ba469-3df0-4b37-8238-6503535772b5",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc5033c-e40c-4be1-a04c-6071af28bf6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c19f4b8-3818-4334-9424-5c5c426e27f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbbcd96-c4b5-482b-be12-1cb9675fc3a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c642d8d2-82fc-410a-87cf-166513c6e945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691f0412-f3b6-432b-957f-21c74977db8d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82cdc3d-a69e-48fe-991c-d255d7ad7b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1bb51f2-a57a-46bf-995d-ed7ad22249fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d813bc7e-e9b7-45bf-a4de-167b0d69e2c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ca44d87-05cf-4064-9b9e-43b0e103a674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86be8681-5d50-43c1-93a6-6d4cb7cbc26b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed9cca8-57e3-41fc-8d6c-443e5072a4c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96bdc2ab-d776-4240-8fd9-5dd8b5b604d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89636af0-cf4c-43a4-9c8c-fb7c999e1beb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20e03dd1-5767-49c0-88bc-1378e3b33510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b86583-aa3b-498c-adf1-4ec7c47c3cee",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9207b4-183d-4088-afb8-c3d3dfefb54a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc40d92e-59a6-45f3-89ec-ac8f6bc5b11b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "658a1d34-80aa-44d6-a04e-4d84fcc9d2ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3319b971-e253-44f7-a9eb-13814bb47caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4298e274-19bb-47d3-a49a-39d8af2ae0bb",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b63a331-8fe2-4e7f-a480-79885be8deee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15c59450-3781-4e7a-a687-a100953ab40f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5617fc1-eca2-43cf-bf2b-75fcd235f8ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be7a201-cb3e-4462-91c9-2b51ba1e3245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6b10e1-a572-4775-adaa-7d9606ce0f14",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574d3bd6-403c-4094-ba65-f38183085cb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f71da9-93e3-49cb-900f-0f5937528074"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4a4c3e-77e2-460f-90a5-c275c5ac49c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11363782-a783-4e99-bbe2-ae2d68406560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2eae2f-becf-4afe-87f8-df34f229744c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46d149a-e1c1-4d40-8dd1-15baa7c601fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93fcd01b-07b2-4ca2-87bd-2e6c182dff19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9639baf0-6303-40ca-b433-780a916b1296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "193449ee-7187-4619-ab74-30ab4e5cbf01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b49fe94-bc8d-4029-b6c1-3cccb3f4af3d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2cdca7-312f-4934-8fda-05c2a3b6196b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4091255d-dd4f-4ef2-96c8-b039c29d6ce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "646320f9-5dd3-4db1-9c0a-24718208ee31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88e223b3-ff62-4a98-b892-a7a9e1262510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17875a13-b662-4095-b614-e5c05a07581a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99badbe0-c925-466f-bee5-7e071026a5aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e7ae673-29a4-40c2-bb0f-cf85ba0b9d87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "195004cc-f593-4c1d-af97-06f30ee3436d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "310335ed-6913-4f68-bbbc-1b64b908905f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1ec8a0-2447-44be-8669-7e62ba80e06e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3345ba4-8580-495d-a7d6-2b38029ed42b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1551f48-cd7c-4ead-b164-74f9ff04a8da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22e21bd-4731-4695-8ffa-f133054e64c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4544457-65fd-46f0-ab71-0e88dfc32334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362e71e2-a155-49bd-a1ed-d88da189bee9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f781fabd-45d1-455b-bb62-c494e05d75ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d60c736-8faa-4bc0-8f25-61dd0bf8220d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc6d65b-d95c-467f-8c46-8ddfa9d13521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e236427-3c42-4df9-b547-0262a1460762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dedfffc-efe4-464a-8cc3-5c1b81893195",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e16260-92b5-4532-ac74-c23d9b3483ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0a5e830-4da8-4304-b21e-4deb86635c12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4bd19c-804f-43d9-9454-b754e310f8ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec542c7e-b69c-4370-bbbb-e7040a6a6f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b80c56a-c694-458f-9cbb-40587971aa9e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca704315-382c-43a4-b8b0-d7353ad5140d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2675f807-8897-4524-a826-400e70f2b580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "effdad7b-7bb9-47aa-803d-06900f3afc06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a28e982c-62ed-42b1-b1dd-3286bd1926eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d06cf6-7674-4702-b57f-548ff682eab1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f58f19-51b0-4de9-9ac9-aa832588421c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "153ea534-d7cb-4ab0-a454-deb59186295e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3980fc36-2a6b-4992-a9d9-3c7d0bc27271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c30859ef-8cd9-4044-8bfe-e7870f42e4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5317975-884f-46f0-846f-45b01fa459f8",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4bea20c-0d7c-423b-b5ef-a7536d46223d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "458b169d-c32a-48c0-8c88-38b6b687e1d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "113e1ffe-ee5b-4153-8312-38e54bd4914b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "088653d2-1c60-4638-95c9-1c7830332737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d71e3b2-9a8f-40a2-9382-f36b07cfcf7e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89dc75a-5892-4f5d-95e6-7e22995e7ed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a167568-2c13-4063-8a9d-0ce4f098ab6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6f3395-abd9-409d-a004-21c0c4cfc587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "215a3bbe-d6dd-4f5e-b66d-0748c475ddf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c9b49b-f314-456a-b6ea-07a25a684103",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed39447b-ac91-4aad-886c-a4558bcf0997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b9df15b-36be-4f69-b0ea-1143556d0822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2a2530-204d-433b-941f-50ee1fb5f57a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1d96405-41b5-4f25-80be-4bb2ae6cebd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a93de44-8a70-4e9c-a141-d0d68c9009b9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a65c0f-5067-4b5a-a90e-15f9c6bc395f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5997ed5-d9f0-4d9b-8a01-a09d48df7b1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44853401-587e-4f99-983d-ee73fd2d5399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3c8a45c-935e-4e61-a240-04ae683b0ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb20b5f-30e4-4f7c-9c5a-54f840a0e9a9",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aded2f90-2341-487b-aea7-3725cc4fe070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7898f90a-261b-4db0-9a70-cba4d80f2847"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "692f8a04-bbbb-48db-975f-fe3229f2a5d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f60862b-f18c-4461-90bc-b4e8789fb349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2124b60b-0329-4be7-abfa-774efe69ecdd",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7236e83d-4f39-467b-9047-3db1271f1c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "badc5f65-c547-491c-8a64-19545fc28376"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c576edec-4865-4550-b7bf-62fe07feff70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6b1fc17-55d0-4891-8ff2-af4544a0a230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc90567-70a1-4012-911a-95e00107514a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69fc683b-124a-4bb9-ad19-59349fff82fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f850bc15-9df3-4607-9558-9ef5a82c1672"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d91ddf-85a1-437f-a516-0fc12d571031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf7d0f2c-c07d-4656-b693-ff6a3a686540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a6c7d9-25c7-4702-9e2e-ee46650c2d7b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c337e016-6423-48df-b8b2-18a9373faa60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c51245d1-2bec-4d89-900c-360ee3ad4324"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05ea98e-e731-4053-8954-135be45db9fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a1bda7d-154e-464e-98ff-99b92b007ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d977055-9bfa-4e78-922a-a5e64811a75f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6470777e-0182-4a36-81cc-a1952b78df43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f45babea-bc88-4148-bc8c-bd7317f55e90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde5bdb0-e838-456e-856d-f110148c8e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b013cc44-ab93-425b-bb40-6144637840a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6ffc50-2c90-4b77-9cb1-e535e25c1e65",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763db1a8-f06f-46c2-988a-aeec586c1bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76737a48-06a2-40e9-bb64-629fd78d0e7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a840d34e-0b40-4c27-9016-cfcbbb5d43ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaa9868c-e442-4510-97e1-cf0f237222ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63983ce-7570-4469-8238-28ad4e027c32",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26fa9689-b165-498f-a545-ff12220c60fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04870803-2770-4fd1-bf6a-30261d44f3ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3611d820-6a5f-4878-bdd9-fb959851855f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5590f8b0-5cdf-4472-beb2-d9a50b5f2ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33e8cae-9fc6-4435-98ae-7d1a9e6fc2cd",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503a90ad-6113-4883-86bf-5d31f12608c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44eb858b-5b93-40e5-959f-937740f48e98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ad2bad-41a4-4ac1-979a-e0c88cfb272b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec705268-8df5-4e68-be22-854815d11b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6e704c-8974-4fab-b62d-0d3b8f7c99e1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6b7bdb-de04-44f5-910c-c233b8475150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bce5a90b-8126-49c1-8f57-61ac8f941b75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28f48ac-de5e-4911-8f5f-55ed15d0f77c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6a5e1be-a0ba-4b49-bd24-37ae7f76493f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a5f368-9a59-4d73-9ba5-f6e8282f69eb",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951ed1ab-8662-4689-8d28-e968944ffba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98639c92-440c-48e6-95af-bf777648d3da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "186aab0b-dbc2-48a9-a551-2162c21951a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f76828-a349-430c-b1ed-7647e29a2966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64da9f59-9325-44e7-9b88-5635e305768d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8c6c21-d985-4896-be78-9bbc78fb5b4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a05bdd6-ef23-4c2b-bd4d-0d4324a5ff18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "893e47f1-6a05-4c39-bf62-795429e11448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2665e41-7130-4669-9709-b11b63997b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec818a5-ca88-48b6-840e-45612537de2e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8dcfe8-f29b-465b-999a-23043ce4638c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2779a425-617c-42bb-ac61-bee6f7764ef7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde1a358-0646-479d-b7a3-44ca7765206d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1eee4a2-4f8c-43ee-a1e8-1da8761d491f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc25d11a-f904-407f-8802-430038182c36",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f885ae05-b592-4fe5-8447-e8eb48da5a05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebe2f580-fd28-4067-a5f0-db286456d1d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b36af7-111c-4206-a9f1-774092a9acbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b369c143-ab6e-4252-a062-8de28abb870a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01303abc-85b3-4390-ab3e-3d1f7880eda4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bad7eb6-a1ae-4470-b28e-64cc2a8e637a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "103c1647-2c31-4123-ba47-6bc8eb833899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba91a41-40ad-4c77-b15f-718ce872a574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4230567f-40c9-41d6-b396-a84c4079d077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6cfddd-9f02-49f9-9b34-fab100095bce",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6fd5384-b26b-4fff-8a05-97b5b49352a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8de3f6c8-0dc5-4e30-9b87-4e37a99663e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da82672a-c90a-4937-bbf2-81032fa186a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a183e27a-193e-4f5e-b04c-c606c254cad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc0b940-6aa3-49e2-b6ee-7799423f1cf6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598e7ddd-6d0f-442d-81f0-f04e4647f8b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63178a11-9c2c-4078-b5a6-044bccc3fe38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "669db583-3521-4007-abb6-4f6a338e94be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "848ae104-68af-4295-a22f-c97c83aef716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829070c4-5453-4a6f-91b0-c9792bf5b738",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd62024-3f15-4c5d-bd86-b6e14e212693",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaf9ac9e-e9fc-4682-896b-116871dee6e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c3ad44-2fcc-4d74-9487-eed54744f22d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa27748-1228-40dc-92cd-5bdbc20dc846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d870d565-fb57-4483-8c8a-2a4982a85aad",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe00e3b-8675-45b4-b93d-da4ccc4d822a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6588b1a-ad62-4f2b-80b1-6a2e9d9406d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b90648-670d-4b53-8a0b-210cc1d14f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cba7c74c-8cf0-4f62-bab8-4d9b9748bda1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598c97d1-57f6-4ae4-9604-1236f551e033",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2c3f8f-fca3-4058-8933-fbe637c7fa18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8a7c31f-341c-499f-a391-f983b917f61a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1836b65-f3be-4c09-af5b-547069faad0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "100d608f-dfca-49fe-b83f-6029994a77e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca08094-1733-48ae-836e-5b63b88905a5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2365a9cc-9510-4ede-bd70-c8bdc9ddeabf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "351ffc88-a536-43ca-a84f-4f85c051f192"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "602d83ab-c5b1-4ec4-bf4f-bfbf0c630834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f0033ef-b48b-4dd0-8457-107ab7db0866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1c5040-e481-4f81-881d-af6d0f5d4eaa",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4761b54d-60ea-44dc-b90e-d7b01f203b15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41da6475-7266-4bc7-a379-017f06fe73a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6066b370-857a-45d3-b7d1-d8d93b1b36f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9398d6aa-88aa-4dee-b2bf-0c353c579206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf5c687-1089-4aae-8f2b-92e8f8e3a60e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d66f49-0b15-4052-a975-870d5b3bef20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf0e6ce5-a773-4df6-8055-7f246b011a3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b676cf30-98d6-4c10-848b-9bb7210a70bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0acaed98-867d-4190-985c-f46e99e32a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219ab691-2965-4c1e-87a8-5d054efe5bf5",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063d9f50-baaa-45b0-9ec1-c6024074a7e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8df7109-027f-434b-ae1a-e0661c3e1ef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b9f449-597e-43b6-8b9b-d6953cba04d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4096fc7-075a-4b69-86a2-d558a958c9f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e79369-d55f-4f69-941e-ea32fbd94427",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ff80cb-826f-481e-821c-fd57b0b361a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f76c9dc8-8535-4821-aee8-df4594b5a189"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10130cc-618b-48ed-9770-6b0fdfaeb24a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63040c76-88cf-424e-897b-b6a781085196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683335f8-6f4c-46df-8762-529467311d84",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e98957f-bc36-473a-a9cc-900891608a3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ed55858-ba13-41ca-aa8d-e9b8ba186916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4977b0-8316-4e3e-b2b6-a67a64f7e99f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61abd867-1641-4068-b3fa-789d6b995342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce55826-42ea-47f6-b990-dac367b76a4c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1689f390-4283-4ee8-8e20-a2721631416e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee051256-d728-4b61-8f5e-0953e5e41052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c02a855-5755-4e5c-ae73-6ce0b99eb077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0814f76f-80f0-4f0b-9907-ac5c08deb809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e842f9c9-8e79-4d19-a37b-f857770955cd",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d9e2fc3-1a02-46a4-9127-aeb6403e70c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31cf5806-d64b-4f9d-b5ec-a67035d9a2b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f1f7ae-6880-4104-8348-5de8faaf443f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "900fe77c-ff43-44db-ad84-2ec9d8fbe5ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd6bfcf-9f22-422d-9e2c-c0ae41c043ef",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce7bed2-1ef7-4196-a7dc-2d3e640f43ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22fdf264-acd8-41c9-8c20-a02f4e08b0f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3549f9-a2d0-4c3f-8b9b-00a1061092d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34e60b9e-f33a-4013-97a4-ec320fd63c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528eff22-2936-41cf-af73-c8064363f882",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27acb36b-7663-4310-8e47-50d8804644a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d7436f9-c385-4c4f-99d5-b0f4af87a400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4bacc8-010f-47b7-8ebd-6463d36a6ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e4e569f-2c65-40bb-929f-25fd26b74d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f29347e-ab80-4899-bde8-9129b5052925",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2826e64b-2f9d-427c-ac2a-d18ac25a4043",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4b340ef-23a9-45b1-8c6b-4f44711f9a69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e1a826-1a13-4e0c-a31c-7e6a728b8cdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "969aab86-3327-4ac2-9d35-5dc6ecfd6884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdfaa0f0-bc11-4528-a1bb-f68e9e7efb8d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131edb76-279d-4941-a6b7-b3f2967145ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e62a64b-389a-44a8-b23a-f71cc54ca3bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21f44ae-2a6f-40ee-a231-206a3942f137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "993e768b-9367-47c2-839a-6534cb5fdb12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f20ff67-aadc-4ea9-a0bf-45b3a98817b0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d733186-1d1e-48ee-86a0-4059f985f3ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2e31799-9d66-4ea5-b019-6ff75b1fc542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd55dd1-9c06-44a9-82b7-1ded7b790168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da209dd8-7627-420c-9ecf-95a7b25bc3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32be838-d5fd-4c24-afcf-a406174a87b9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fae6bf-92a5-44e9-8938-415260b158c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "925bb441-c478-4968-84a5-934028658db4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3737b04c-ba6e-4984-a13f-9ce02ab8c5c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d73b3f65-a54a-471e-a9eb-69ce0834def4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f174a8b4-e329-44ff-bb3e-d05b0116fced",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbddd632-812c-4103-a671-3ff3dc59c417",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04de4680-a8bf-4db0-94c2-5d2b62506b15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91803e07-b755-4776-a7b8-3036f33a824e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "961f57da-8761-47a3-9a44-e65ddc19b11a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6f13bb-807c-4b0c-8ae3-c0a8b8c250ed",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37e8e5b-1f63-424a-b1d4-2d39750305ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b694efca-b189-4425-8bc9-08aad05f6898"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "602ff3cd-4ea5-4525-851e-e756b9ed4a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6da3019-50cc-4f84-981a-2caddda4bca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346b56a9-da62-42ce-8e69-e8a4b39ce5fe",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a745f6-37f9-4b61-97d8-66b49435c24a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6178d41e-e95a-478d-95ef-a1c8d0921f81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a81366-cfa1-475e-8074-3dae8bde40df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf746b9-4769-4da4-b2c2-7c79dad31c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94de2262-807f-4a4b-976d-aff4c80d61a5",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b994868-ec83-431d-9bd9-c453e84c49f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a5e454b-ca8f-49db-8695-37ea8586f106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a2c9a2-2b5f-45f1-ab9b-c2122d0a6a78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b575b847-c5c5-47ce-a76f-8b1621564130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1575fbd-b069-4ae8-9eca-18c655a6d046",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274c28be-1101-4cf8-b2df-c52d913cbf98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b863127-0b40-4424-8a73-ddc6fcf28180"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac2a01a-515f-4978-8456-f4c6a1c7aca7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13c3a1a2-bdbb-46f9-a4f6-7663014a79cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80293b18-b937-47ba-bd70-0bc817866b39",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af44f8d3-a57a-4019-8093-cfa1491db784",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6881a450-7f95-4037-a896-ef5f7eab4b29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde1731e-21b1-48b3-bee5-a3e5ac1b744e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "310a0695-454a-4896-9ebd-d114f7a8953f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a32fc25-b34b-48fa-ad7a-3f1baa25400a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6011ddd0-20e3-4f51-8766-12c4c93ee6e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba048c2f-ceb1-49fe-90e8-0f59e65c494f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9169eb28-cc66-4872-a617-6eddf39c2a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afae7cb6-5a2f-47d6-a496-eb104af9a4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecdc40d1-2758-4291-948d-83aa22803f77",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45166fad-8601-451d-a214-05d4c77fb4bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d30f8a9-68d5-457c-8ef8-ae5dc2db1374"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6bd462-0562-4ffe-8bc4-260a3e494bc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8260673a-4ae0-4839-8ed3-31863fc974e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df49b174-ad39-472d-ab85-a4430cf5eb32",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d37a14-c7b2-402f-a6f9-f905d705f600",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6d473eb-d2b2-422b-81c7-8353c9bca842"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24db8e8-5bd7-435a-b080-1d6ac0a687f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d919ad0-1459-4029-9232-0095e797e587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0c0db5-398f-488b-bcc3-484883d270d5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56f5d87-65ac-4981-ab39-4a1ba574d9ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d04a704-6dcc-49ab-99e4-55c3fbe7eb94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0c21d8-c775-4b22-8504-58a3cb64e7cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d00a49cf-f1de-4341-abfd-65d7eccd1efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f227441-7ef9-4099-ab23-9e51e0fd6c2b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae2dfb4-a19a-48cb-b7da-5b40772ce7fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f3af7a4-6b7f-4ac9-b4e6-51a9817e1355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e406ccd5-a9d1-4602-8f21-ef3e903269f2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "151e07d6-2459-4c2a-b94e-baca809b90a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d380c3-d858-46c0-9f60-df4de18604f2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2b13a0-22f7-4de8-8047-666ab442f07b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d46dde28-01b3-49cc-8488-1d2738c31de2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb946f7-6f28-42fe-a847-65e8a0413cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d4de1e-082b-4580-8424-bb976eb6c26f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a5493a7-82af-428b-87a9-9e15c3f1e0fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5e4d04f-3661-4585-ac7b-b00e0dfc7bd2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "182583ba-39d7-454f-8620-ada0dcef7a8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c767e78e-72c5-4f2a-99cc-9b21f1db5ee5"
                    }
                  }
                ]
              },
              {
                "id": "3d2d4de7-7eff-41a6-9b75-0e7730090796",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f3c9e065-f552-4c1d-ae64-12d07dcc592f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc043c4e-ea12-43ed-9abb-1ba02d35f73d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "feec9581-1267-4320-a8f0-2c1e863d55a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38883f6a-b5fd-4f36-99c2-6d026f78bc3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d320808-f731-428b-b6d3-cfcaa69a504f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78282c99-5e17-4bea-8a16-b10524d3eb70",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e7a3d7d-2e60-4ac3-bd34-740a0f378b06"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d72c8c3f-3dca-497b-baa6-e543e61812af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2aab00d-ce87-489b-bb9a-549dd89c4aa3"
                    }
                  }
                ]
              },
              {
                "id": "93782b99-9b68-4d58-bfe7-3d34bc5e1e14",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "02ba609a-d6cd-4c8f-bc5c-477821a63a5a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06829398-7f46-468d-9d27-2b35d3f27ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a9842b50-5d05-4cb2-b633-7f361c4f6cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13def87-ca20-458b-bfeb-1d33ea935b90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9251f3c4-b8f2-45df-ba74-69d636dacd79"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "00dd91ce-c248-40d3-92a3-a5233fbcba82",
            "name": "Positive Testing",
            "item": [
              {
                "id": "15c72ee7-89c3-43e8-8dce-3f1ddb8d421d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a751e647-fc81-4875-8bed-58f5f725767f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "46277ec8-c461-4051-a218-ff13bab26eb8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31d73c6e-9e33-4732-b2d5-c62da5d84139",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e532c03d-d33c-4978-b56a-e4451f3969ff"
                    }
                  }
                ]
              },
              {
                "id": "affc1f49-bd61-48a7-9718-7de202544f8b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "228e67d8-7f89-43da-85cf-bf4560a92604",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "899fabfb-9ee8-40f0-a50f-8f3e03bc92a4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1346eda-3654-41eb-a378-4b68c2c7a8ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aba435b4-0d78-48bc-adc7-e6d3294e647b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "562e8a98-e4fb-4e55-8392-6c94bd9f5f5c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5b8da7a1-7353-456a-b992-1d407dd64143"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf42c26a-9c16-43b6-9320-e4ff8c6e6b3a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6884a48c-43a9-402c-b90f-651045503925"
            }
          }
        ]
      },
      {
        "id": "96fd6999-837f-4bf8-b65c-e1acdb12fa49",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c37ae721-e35f-4d64-acb9-a08019819866",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ba9a7d1f-a31d-49a5-a5c5-d3f6688c87a6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6ffdfc32-bada-4fc3-8c09-099562b1a3b4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff511534-9034-4cd0-ae0f-150e4cf9317d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e1a982a7-7780-48d6-a1d8-e6ca42864ffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "102dc00a-eff9-4558-afe1-5085f7b8512f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02b5deb0-3863-4836-948d-c967decade17"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22fddea0-ab17-4382-91e6-0cc117997447",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "867136ea-347e-44db-b99e-93c90fcafd38"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e66b905-e390-42d9-9e2f-e7082aa409b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "045ba720-15ae-48e3-a577-0dc9526364f4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a3adc9a-2d59-4575-948a-6d97d98ffd98",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7c1d7aaa-dd89-4f2b-9019-c0a120948aa2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04029254-a797-4f61-ab45-fb78735c44b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9e728c83-6d78-45ab-b855-15170670e744"
            }
          }
        ]
      },
      {
        "id": "b837e03a-194d-45fc-a1df-e072d848fe62",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a3a853de-75ea-4665-ab5f-7eb856dcca94",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f174a106-8b14-444b-b8da-a62791e04f4a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3585b405-bba5-452d-b5d4-6bd8e6c5013f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d837e2ba-cfea-40ad-a249-2269cbddf5f1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "960ba231-f796-4b47-b9a6-a6acbfb8618b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61012647-9bcb-4d4b-93ce-c97a861e627a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bdb795a9-19d3-45d7-9518-476288a7c5da"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef3b5bb9-568f-4ae2-8beb-2826691c8da7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e7581da-472d-4738-8f70-e2862279a031"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "709a6db4-c79d-4bdb-add5-842095cd7a22",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40380fb0-6517-4ea9-81bc-26bbcb63d202"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fbd8f7bb-4e2d-47de-ac96-1ddd88470cd0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a78f4088-3007-42e2-ad56-a910f05c96d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21db070e-7193-4c0d-a934-e5890eb98e9f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7b1f683f-a3c7-4b00-a6ff-b77707c74772"
            }
          }
        ]
      },
      {
        "id": "2e9bbd07-5f31-4694-9365-826b5caffd37",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f13fac8b-ef02-441e-8035-59191d29ff40",
            "name": "Negative Testing",
            "item": [
              {
                "id": "91cd0a02-e55c-4b22-9f21-b7d76c60b593",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ac3cdb61-acd4-49a2-a20d-796811913ce0",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ff4d72-c0d3-42dc-bd16-4c0626a57d71",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95120e30-e6f0-4e9f-a65e-b9ac1f4de26f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ba494c-dea6-4638-862e-2b7907a34984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d797a0dd-69f1-4091-aab0-74ed1124b0c6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf121685-9252-4ced-aa4f-bbb2b5cd33b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54cd8b94-4d7b-4bc4-b62a-884102c6f8a1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe8b8fb7-70e6-4d00-bf6d-b1b320d1acf6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "610c35b2-cfbd-498c-8a49-85b19273d4b5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e86242f-a67d-4dfd-9a5a-467618390426",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "36238008-1ac7-458c-b3fc-165aa9378a59"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc8ad932-06cf-4b7a-8e12-107c2c221e43",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c21be00-df23-48b3-855a-03f1a588d276"
            }
          }
        ]
      },
      {
        "id": "141ae030-db42-41ff-8a1d-ca8751e59917",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8fe74b8-1f0b-425c-bb1f-6f762e2b5e7d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f8f3b40-76f7-4894-a901-42d1a113e057",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b47d6375-70e9-4c3d-ae1c-ba5016e1c407",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c959389-6c0d-4731-95d7-923912720a4e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f2af1a8-f81f-4e80-9693-e9846ab86aa6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 34.91228070175438,
      "responseMin": 19,
      "responseMax": 308,
      "responseSd": 21.89198419493729,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698539759696,
      "completed": 1698539781302
    },
    "executions": [
      {
        "id": "2ae7efae-0c9d-4a57-8bdc-cccdaf4d0c10",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e10021c3-a8f0-4403-8f50-f0a6cc307789",
          "httpRequestId": "2229a33d-fcfd-45cb-a818-4bfa4c3686bc"
        },
        "item": {
          "id": "2ae7efae-0c9d-4a57-8bdc-cccdaf4d0c10",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d04ee109-125e-4728-acec-4eb37f9cf79e",
          "status": "OK",
          "code": 200,
          "responseTime": 113,
          "responseSize": 0
        }
      },
      {
        "id": "ad137b35-122e-4630-850b-db4f3b6cb65a",
        "cursor": {
          "ref": "5f74586e-0d8d-4f18-8410-bfb5986f9215",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1fd0efe6-4496-471a-aac8-0c89d85a5268"
        },
        "item": {
          "id": "ad137b35-122e-4630-850b-db4f3b6cb65a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e3ef021d-18db-449d-8bc5-504fc7baa7bc",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "cb752c06-922a-48c0-b923-6de75fe05e25",
        "cursor": {
          "ref": "285cd919-af9e-48d2-897b-450a81c99979",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d9bd81fe-55aa-4d3f-9785-56c46fd83ccf"
        },
        "item": {
          "id": "cb752c06-922a-48c0-b923-6de75fe05e25",
          "name": "did_json"
        },
        "response": {
          "id": "2c764520-cad4-4538-b2ab-ac3f281835f6",
          "status": "OK",
          "code": 200,
          "responseTime": 150,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4070f704-0432-484e-ad6b-70ad91b721b8",
        "cursor": {
          "ref": "020c7156-7ebe-477f-b5ea-5b7990ca9f9e",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e01e2c48-4c3a-4110-8b70-3a463a8b7a73"
        },
        "item": {
          "id": "4070f704-0432-484e-ad6b-70ad91b721b8",
          "name": "did:invalid"
        },
        "response": {
          "id": "aee01e58-745d-452d-8457-b7c23e94c3a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4070f704-0432-484e-ad6b-70ad91b721b8",
        "cursor": {
          "ref": "020c7156-7ebe-477f-b5ea-5b7990ca9f9e",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e01e2c48-4c3a-4110-8b70-3a463a8b7a73"
        },
        "item": {
          "id": "4070f704-0432-484e-ad6b-70ad91b721b8",
          "name": "did:invalid"
        },
        "response": {
          "id": "aee01e58-745d-452d-8457-b7c23e94c3a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7517e6e1-97ae-4028-9cf5-62571589a518",
        "cursor": {
          "ref": "4bdfe92e-43fe-4d91-83e8-71fc5aa94e31",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "dbc2d130-94c7-40c4-83c0-78ea7f5fe47d"
        },
        "item": {
          "id": "7517e6e1-97ae-4028-9cf5-62571589a518",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0eac62cb-3004-42aa-8f35-50e1dea176db",
          "status": "Not Found",
          "code": 404,
          "responseTime": 69,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7fe4815-dce2-468d-bfd8-1d19cec21cd2",
        "cursor": {
          "ref": "979a8079-5b25-4b8d-8da7-ec0e65a6a8eb",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ce6559ea-8afb-48eb-8833-2766e7449023"
        },
        "item": {
          "id": "f7fe4815-dce2-468d-bfd8-1d19cec21cd2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "de49e804-1aea-4f99-9b8d-8b5dc1116002",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4a31a1-1699-4948-9e7e-f7bb79208476",
        "cursor": {
          "ref": "9e2b1ac6-5673-4dff-b3ee-793727db62cf",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "bb8aa31f-2b38-4220-b5cc-63bd9e510e31"
        },
        "item": {
          "id": "ed4a31a1-1699-4948-9e7e-f7bb79208476",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1a190fa5-7ad7-4280-8746-d05b928b2aad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5f8cc6-4f8c-49d1-9492-ff04c4b70f0a",
        "cursor": {
          "ref": "ac66b081-12b3-4f14-bcbf-a1ba6410329c",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "681cd707-b6b7-426e-ad1b-9c69db058e1b"
        },
        "item": {
          "id": "0c5f8cc6-4f8c-49d1-9492-ff04c4b70f0a",
          "name": "identifiers"
        },
        "response": {
          "id": "b15e8fde-e5b8-4549-9053-e8cf30ba7eb6",
          "status": "OK",
          "code": 200,
          "responseTime": 95,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd306ab-7adb-4aed-99ae-a33ab492727b",
        "cursor": {
          "ref": "d55a4839-29c8-48f4-92f0-a4dddabb3d44",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0935597b-530b-4852-80cf-71fb98e6d28f"
        },
        "item": {
          "id": "5fd306ab-7adb-4aed-99ae-a33ab492727b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "382b1631-d7c5-471c-a6fc-14e52e97c3cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96e33b6-e16e-4b7f-b214-87322c6b9511",
        "cursor": {
          "ref": "0115a199-7923-454f-8f15-3f2c03548b3a",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "06ec27c9-9d53-4ce9-8134-6f2f0b359ea9"
        },
        "item": {
          "id": "a96e33b6-e16e-4b7f-b214-87322c6b9511",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2ccb17e7-3d37-4df5-9b2b-97bc3c16d088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa005cd-6f9c-4db2-89cd-744bfc17c626",
        "cursor": {
          "ref": "7f735b57-4195-4a63-8c65-7220d7447d2b",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0f80af4d-43c9-4da9-878d-77c399d65eac"
        },
        "item": {
          "id": "eaa005cd-6f9c-4db2-89cd-744bfc17c626",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "81ffe855-23ef-44b7-af3c-a4296f5aad85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5077b3e4-1699-4286-a027-9514a9849f83",
        "cursor": {
          "ref": "44dd4e59-7c8d-4b9f-937f-c0827c7bfa61",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "02e01008-700e-4389-8605-d9dde949e915"
        },
        "item": {
          "id": "5077b3e4-1699-4286-a027-9514a9849f83",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0f5daadc-d1c6-42cd-a7d7-bb6599d6fe78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1438a1-bfe4-469f-944f-9f0dd7f36afc",
        "cursor": {
          "ref": "87162666-04e2-4a31-a01c-0b9d4b69ae25",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "092d086e-93bb-4f13-8b3e-5ea876d8b98d"
        },
        "item": {
          "id": "6e1438a1-bfe4-469f-944f-9f0dd7f36afc",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "58b5f243-785e-4102-92fa-74216334a3e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf6f888-d3a2-4e7e-8d0c-a991593f8b27",
        "cursor": {
          "ref": "f6ae4033-ae77-4487-8bdd-e9438052612d",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e1b78e08-7292-46a0-a335-cf312c8f356e"
        },
        "item": {
          "id": "fcf6f888-d3a2-4e7e-8d0c-a991593f8b27",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "bdaa6c11-bb7a-49a7-a46f-594ab818b998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814aec3d-8594-43e0-b0a1-abb8d0819416",
        "cursor": {
          "ref": "40c91a71-1dd9-4c96-9d83-46dd06530e3f",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b6752855-f81f-4fa3-b82c-0692d9d03a5e"
        },
        "item": {
          "id": "814aec3d-8594-43e0-b0a1-abb8d0819416",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "dd2b4adc-17c1-4031-af5a-4065848e8cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a10abe-e92f-4729-9e4f-2d0610965f27",
        "cursor": {
          "ref": "7878cc76-a412-4d22-b270-f9337fc00d9a",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e132387a-1f29-4ddf-872d-a3eb1f8269b1"
        },
        "item": {
          "id": "65a10abe-e92f-4729-9e4f-2d0610965f27",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e203dcb0-8aff-4024-9c85-9278c9c4b219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d393671-d481-45f1-82a0-71e3f9dc9185",
        "cursor": {
          "ref": "478beae0-77e7-489b-af35-d0550b303957",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2dcb178b-746c-429d-81ce-d144eaf043c0"
        },
        "item": {
          "id": "0d393671-d481-45f1-82a0-71e3f9dc9185",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ddcd291f-83a7-4abe-ba9e-abd08889303a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7e2891-65e5-4a70-81c2-49fb3cee43fe",
        "cursor": {
          "ref": "38bc21cb-ec89-4c96-8f29-5be95eb4714c",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "52b7697a-cd76-4b84-a433-7e5569069bda"
        },
        "item": {
          "id": "ab7e2891-65e5-4a70-81c2-49fb3cee43fe",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "95f2dfb1-f6bf-4887-9ff8-02a274fce52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea860ca-35e8-42a9-8991-cad4a81e3f07",
        "cursor": {
          "ref": "3d57ce15-f9cf-449d-9404-761abbfbc1b1",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3dc6ebc5-ae2c-4ba1-9873-f2c04effc9b3"
        },
        "item": {
          "id": "6ea860ca-35e8-42a9-8991-cad4a81e3f07",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "cd4f426a-c2ea-4273-bd32-4dc380c9c75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e405d152-da02-4f9f-ab03-d3630be4c9b0",
        "cursor": {
          "ref": "97ae7ad9-f495-4254-b287-0a1f91091e85",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1b69b893-f02f-4851-bc91-a6d98faa455f"
        },
        "item": {
          "id": "e405d152-da02-4f9f-ab03-d3630be4c9b0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e0c08362-02d1-4fdb-b27b-829d2fce3c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ffc529e-fb09-4fec-8338-0e63dfa76751",
        "cursor": {
          "ref": "c49d97d1-248b-4376-b91a-b0b17303e07b",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9e7d6cf7-e6e6-4761-93db-65376a630e04"
        },
        "item": {
          "id": "4ffc529e-fb09-4fec-8338-0e63dfa76751",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "560c28dc-1e55-40b8-90bc-3fc632353803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36f8a91-2108-43fd-9db0-c213222112eb",
        "cursor": {
          "ref": "bc467e65-b7f2-4d6b-993b-ce7ab8e77fc5",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "35e3ac8c-0a8b-4fd0-843b-405d94408da2"
        },
        "item": {
          "id": "d36f8a91-2108-43fd-9db0-c213222112eb",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b18af753-2f46-437d-a490-bdb18b36d2a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd1c2b7-5e0a-4fbf-ace5-033bdde6d381",
        "cursor": {
          "ref": "0e915207-9bcb-4e7d-bb9b-789e9cc80b5f",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "dcb506a1-994a-4068-aabc-5a78b0b64886"
        },
        "item": {
          "id": "fcd1c2b7-5e0a-4fbf-ace5-033bdde6d381",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "07ca9070-51b6-42d2-ac1f-ddad13d57da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08ba5fe-43a5-43e2-bfb4-58a7f10b2f87",
        "cursor": {
          "ref": "8d65e07a-7208-4ed3-803f-a4fb768c7fe7",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ead20e40-aba5-4d18-8da5-64549d21bfbd"
        },
        "item": {
          "id": "b08ba5fe-43a5-43e2-bfb4-58a7f10b2f87",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5d9bd2a6-74dd-48ef-87af-e9067f19321b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84411a66-09ed-46da-af7d-25b7aa4661ee",
        "cursor": {
          "ref": "d32d9807-3d2e-448f-8b18-ca88ebebcefb",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f4da3b23-5644-4ff0-b732-a110cfa308a7"
        },
        "item": {
          "id": "84411a66-09ed-46da-af7d-25b7aa4661ee",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "15f81dee-262b-4373-ba47-6eff019e61dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f9f57b-b98e-4cc0-87ba-f098d74a4d37",
        "cursor": {
          "ref": "6c4a915f-c24e-4e89-b7e8-1240491670f8",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d9dd5835-7312-496f-98b1-3c8fc45d179d"
        },
        "item": {
          "id": "e3f9f57b-b98e-4cc0-87ba-f098d74a4d37",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "789226ec-df5b-43d0-a32b-207570180293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a2d6f3-1c37-42ec-8aa7-ca6261ce9301",
        "cursor": {
          "ref": "e9da1341-82e4-49ad-8ae1-73a12c6d43cb",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "23dcf5ba-941c-41b1-81f0-1ce8ca6e632b"
        },
        "item": {
          "id": "44a2d6f3-1c37-42ec-8aa7-ca6261ce9301",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3870a14c-d87f-456d-971a-657375fd1035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e0d1f3-2ee1-4442-866f-8bc2b5ac4d88",
        "cursor": {
          "ref": "f46b44cd-d118-451d-a04b-5e37ee7c0fff",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "65d07ce2-5f5c-48a5-b639-386cc28487f0"
        },
        "item": {
          "id": "b9e0d1f3-2ee1-4442-866f-8bc2b5ac4d88",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "72025d4a-228f-4d82-8ec5-67f2f91e7e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9ba6f9-fd87-479e-853c-c4074e852725",
        "cursor": {
          "ref": "b04a64e1-030d-447b-8923-e8235de5eb47",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "873c05b4-c8c4-45a0-b375-bbafe9ee9aa9"
        },
        "item": {
          "id": "fd9ba6f9-fd87-479e-853c-c4074e852725",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7dc48983-5319-47de-b629-d41080d81e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa56c9c5-77c1-4c3f-9bc9-26a4614abb96",
        "cursor": {
          "ref": "c79f1b21-ab41-489d-b577-ee0ced845b71",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0fd39f67-9a81-4bcb-a5da-f2e308899179"
        },
        "item": {
          "id": "fa56c9c5-77c1-4c3f-9bc9-26a4614abb96",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "85c8c458-8684-4905-89aa-4fc031fff443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00af0328-3a99-4706-b51b-72ac16df8b73",
        "cursor": {
          "ref": "5bfb5e4f-9062-4000-abb5-3603613eaa6b",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "82a7555c-ec2f-4a77-9c0c-6cbb04cd91b7"
        },
        "item": {
          "id": "00af0328-3a99-4706-b51b-72ac16df8b73",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ca0fbbbd-57a6-4bf0-8dd8-d1ac98b1aad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a80341-2b31-4925-b264-249247e8cdb7",
        "cursor": {
          "ref": "28c56d76-6c4e-465c-aaae-fc41e2e48160",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b5da56ab-fdfa-49d9-8e74-8d04a1822969"
        },
        "item": {
          "id": "89a80341-2b31-4925-b264-249247e8cdb7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "84e3a532-5e77-4f0f-8838-dafb2699b434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59d25dd-755a-4cbc-b6ea-89519e139d39",
        "cursor": {
          "ref": "78a602a9-bb67-47c5-a287-57dd23d66afb",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7da41097-7066-4dcb-84c8-01ad060e242c"
        },
        "item": {
          "id": "a59d25dd-755a-4cbc-b6ea-89519e139d39",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "51a78109-e17b-4ef1-bba5-01c4dbcdca38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0f3933-8f96-4672-9698-890e709deab0",
        "cursor": {
          "ref": "efffd597-4bc6-47ac-8ba3-8335432f573d",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e6308762-6612-4cd5-b003-b89fae9f2f51"
        },
        "item": {
          "id": "4f0f3933-8f96-4672-9698-890e709deab0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "91ae6c8e-44e4-44a5-87cc-89b7790aedc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd70ef4e-b887-4d93-a82f-87dd2a39c86a",
        "cursor": {
          "ref": "dc59b137-f0eb-42b9-94eb-f30eb8c027ab",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a85488f0-82e2-4654-99b2-34f2691e1032"
        },
        "item": {
          "id": "fd70ef4e-b887-4d93-a82f-87dd2a39c86a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "cb9fa474-e115-4b38-bbf8-d278b7160c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce99632-bb5a-4ba2-8839-003cc42b40cf",
        "cursor": {
          "ref": "29e43239-0399-4cfb-a5af-a876de5a23fb",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "af56f27f-85b5-49ee-8591-74f1f8eb71b5"
        },
        "item": {
          "id": "0ce99632-bb5a-4ba2-8839-003cc42b40cf",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c864bbd8-5664-4eb8-8546-11c70236b8cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3088560-522c-4408-909c-cb6a95f897ff",
        "cursor": {
          "ref": "6bb96485-2f0a-47c1-89c8-83b0ddebd872",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "81ae9327-c0c6-40b6-909a-b11216247d70"
        },
        "item": {
          "id": "f3088560-522c-4408-909c-cb6a95f897ff",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "42374be4-690e-4cfd-90a4-347d80471190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ff0725-be54-46ad-b217-5ef710a74c9e",
        "cursor": {
          "ref": "65f816b2-0401-4b5b-8dbe-392b1e16dc57",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d675e37f-9bc8-4676-8fdf-209da421fb26"
        },
        "item": {
          "id": "b8ff0725-be54-46ad-b217-5ef710a74c9e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "40fe2169-2456-4b0c-8a0e-01ceb873afe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c802ed3d-6665-4b49-8dba-e32d25993fae",
        "cursor": {
          "ref": "133d6950-b46d-4c99-b89a-4ba75bc31e5c",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2e5d1928-79ce-4424-9ead-91f22be162c5"
        },
        "item": {
          "id": "c802ed3d-6665-4b49-8dba-e32d25993fae",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "09666f37-168c-4305-a70a-7524dbb7173b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0439dc76-a855-4cce-b4fa-539b21c66be1",
        "cursor": {
          "ref": "0a050939-0f63-4641-acdb-fffa02a08177",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "462163a1-552b-421f-9fd1-54c8c7591629"
        },
        "item": {
          "id": "0439dc76-a855-4cce-b4fa-539b21c66be1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f8b5816a-c950-41d9-afa3-d7af41d83c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c89459-f6d6-4943-8f57-6e430c12dc66",
        "cursor": {
          "ref": "7605298a-46f8-4c30-8fc0-65fc2abf8a6c",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0f71da42-8afb-4c13-abc3-e3ba6c4250f6"
        },
        "item": {
          "id": "97c89459-f6d6-4943-8f57-6e430c12dc66",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "24ee3a08-cf53-46f4-bd98-9bdcd5d467df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e2ef51-baa7-442d-8bf3-78d9d5b7fa2e",
        "cursor": {
          "ref": "30a5787b-91e8-4295-8d34-47f27a203b08",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "71a90de5-09bc-4788-a267-e097c3ec4034"
        },
        "item": {
          "id": "89e2ef51-baa7-442d-8bf3-78d9d5b7fa2e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e922b552-dfd0-4136-b11f-08d71bcba21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c37bce-3887-4171-8f64-298507bf9639",
        "cursor": {
          "ref": "97472d0b-0e6c-4ee2-b8c2-dec1cfccf6a0",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "21679d09-d7bf-4e13-88bf-be4ca9c04ea7"
        },
        "item": {
          "id": "88c37bce-3887-4171-8f64-298507bf9639",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9c1e36d2-8b53-4688-a73b-411a45c3ff20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3413f87b-07a6-40db-896c-8bc836367cb3",
        "cursor": {
          "ref": "6946fe68-5132-4401-b9f9-3af1ecb14255",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3f322c90-a1ee-4d7a-8b75-6ac2dd6cf666"
        },
        "item": {
          "id": "3413f87b-07a6-40db-896c-8bc836367cb3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f86de693-701b-4779-aa07-326dd396b693",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 54,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039ea5eb-c5c9-4f2f-a2e5-82434d692797",
        "cursor": {
          "ref": "940a75da-8242-47f9-9da3-aa0d1d18d2f0",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5af61822-b4e2-432b-93f0-f5c9cab23580"
        },
        "item": {
          "id": "039ea5eb-c5c9-4f2f-a2e5-82434d692797",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "df3a57ca-577a-4084-b28b-d7e6129f680c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118c6ef4-1fab-4014-bf93-512bd905990a",
        "cursor": {
          "ref": "7ca72603-9ef6-49a0-8745-8ef5e7cb5187",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "14cf5f8b-caa1-4295-b00d-5d50969821d3"
        },
        "item": {
          "id": "118c6ef4-1fab-4014-bf93-512bd905990a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "13e4f75c-cddd-419a-9b13-0006a526b441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6efd352f-10dd-4fed-a237-429368f91ae5",
        "cursor": {
          "ref": "17d64bce-91de-466e-bf10-2d580bdec1d4",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5db878e4-6dbd-43b9-9125-b3680740e0bc"
        },
        "item": {
          "id": "6efd352f-10dd-4fed-a237-429368f91ae5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c1882653-dda4-4c99-9c32-766d47cbb0e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7fa3d4a-a65b-43b2-a4e1-93adb2c5133c",
        "cursor": {
          "ref": "1c2932d0-e063-4879-994e-27672aa70c18",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5d5ce007-61e9-49e4-b398-bb98444afc61"
        },
        "item": {
          "id": "a7fa3d4a-a65b-43b2-a4e1-93adb2c5133c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "200ed6e4-22cb-4b3b-914e-28a166a96c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641987ed-9fb1-47dd-88f6-075486d65259",
        "cursor": {
          "ref": "de187701-dcde-46b1-a1bb-a8d7be9a5027",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9f1aa9dc-1d69-473a-850e-07aa90b72119"
        },
        "item": {
          "id": "641987ed-9fb1-47dd-88f6-075486d65259",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "43a89a1a-5156-458d-9fed-8f2a6ef43a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5aa7c9b-6c99-47b1-b394-83cf6e401b79",
        "cursor": {
          "ref": "23944215-429c-43f5-a474-7d8a4b0bc587",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ece3e7b5-7d27-4914-a79c-f4bfa54215a1"
        },
        "item": {
          "id": "f5aa7c9b-6c99-47b1-b394-83cf6e401b79",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "34c0a6b4-6f6d-4d0b-9a61-c5324b1d9804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b458b2-3263-420c-a5c1-1ef5137bbb92",
        "cursor": {
          "ref": "1ed54f5c-2930-4356-85aa-66fd72ba8d3b",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "abe3133f-fbe0-41f1-af54-bef29a959d3b"
        },
        "item": {
          "id": "14b458b2-3263-420c-a5c1-1ef5137bbb92",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a83c4285-7e91-40da-9b78-270266bd2920",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 46,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa12b889-87e7-47ff-8c8e-aec9770e291a",
        "cursor": {
          "ref": "4cac430f-51c5-4916-99cc-a435285dd5e4",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d2ad7c8e-7b9a-40ad-85a0-3dfef7e9be24"
        },
        "item": {
          "id": "fa12b889-87e7-47ff-8c8e-aec9770e291a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e0bd9cb4-3ea1-4231-b797-6ede3fdfb35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ba56ee-2ecd-4ba4-b780-5502b563f8b3",
        "cursor": {
          "ref": "18d77002-72b4-493b-b2ec-a61605b6d092",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c2bc1f56-f783-43f5-af2e-2c12f9aa6eab"
        },
        "item": {
          "id": "e8ba56ee-2ecd-4ba4-b780-5502b563f8b3",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ebc3a01d-7f98-4ff4-8e35-caad208cb0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533458c1-e4c7-4422-ab39-d20ac119066e",
        "cursor": {
          "ref": "1e3edfed-6b2a-4d87-b2d7-8c46cf8567cc",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "dacfbccc-e8e7-4a33-a00d-37931005f5cb"
        },
        "item": {
          "id": "533458c1-e4c7-4422-ab39-d20ac119066e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d119ce5f-7cb1-40e6-98d6-6bab4bc949d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782e0b1e-c735-4aa7-943c-08058625391b",
        "cursor": {
          "ref": "89a5064a-9389-4f2f-9cf0-cd243d575bd1",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4d44e58f-4154-4c45-b8e3-e8b7d78d1789"
        },
        "item": {
          "id": "782e0b1e-c735-4aa7-943c-08058625391b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b281b99d-2acb-418d-88a1-406a569d43ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ece8a49-03d6-4146-afb4-9aee1b443a02",
        "cursor": {
          "ref": "289c7fb4-b7fc-44be-a19a-9d85a93ebcce",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f77c4b6e-521e-4544-bd13-21095a167538"
        },
        "item": {
          "id": "8ece8a49-03d6-4146-afb4-9aee1b443a02",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3398b466-70d9-41a7-b396-bc24a5f5217c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33fea8b5-cedb-49ea-9117-b022d77ec9a9",
        "cursor": {
          "ref": "c297afc2-28f2-494b-8c72-f884cdb3f947",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f3e98d79-6336-456c-933a-10fd4108868d"
        },
        "item": {
          "id": "33fea8b5-cedb-49ea-9117-b022d77ec9a9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3e90641c-83f3-47f2-89ae-3344e23ee3da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8fe7e9-6365-4c9d-bcb1-fc6df7261fde",
        "cursor": {
          "ref": "b1b59ed6-e25c-413e-be18-378d5c3d68d5",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c68c569b-541e-45a4-8035-047499f36e4a"
        },
        "item": {
          "id": "fc8fe7e9-6365-4c9d-bcb1-fc6df7261fde",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "fbc69651-1551-43ae-8664-8196dbc6cabe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc19731d-82ff-4429-9cb6-516c541cf36b",
        "cursor": {
          "ref": "a40aa0be-5930-48b1-a6c6-555bc735b7e5",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4a9b4384-f9d8-4844-a189-764e60f77f06"
        },
        "item": {
          "id": "fc19731d-82ff-4429-9cb6-516c541cf36b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "db94a55f-9747-4d47-91ce-25d1c1d484af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff910718-c3d8-4b0a-9f75-1d3bde0b641f",
        "cursor": {
          "ref": "5b433a4f-ebb7-482a-87fb-66e6b0d3e50d",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b25b62d6-b62c-437b-a31d-8ddcd6187077"
        },
        "item": {
          "id": "ff910718-c3d8-4b0a-9f75-1d3bde0b641f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1418ee35-e244-4d1d-99b1-ad92a6b3f653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954e9136-c5ba-4360-aaf8-5c98232bf1de",
        "cursor": {
          "ref": "7ec075d8-3bc9-4ac8-ad9b-ac1035fa2d06",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "23ed9e99-bad2-43b0-ad73-82cd0e72fccb"
        },
        "item": {
          "id": "954e9136-c5ba-4360-aaf8-5c98232bf1de",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "dfb10e44-eca4-4a4f-9c41-efd5fd7c8fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7812298c-a8cb-449d-9760-b9f3e3e68baa",
        "cursor": {
          "ref": "3ee4f8a5-a480-4058-a8cf-5016d3c8d544",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b822a0c2-0d3b-42bf-a65d-5bc33e902e0c"
        },
        "item": {
          "id": "7812298c-a8cb-449d-9760-b9f3e3e68baa",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "72678856-69be-4bf2-b1ab-716305e01a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f145c6ee-5c5b-43cf-a89b-21b6e244ca7e",
        "cursor": {
          "ref": "13f8c3c3-41e3-4412-98d0-97a0e61aabf1",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c94ea95f-5d4d-4f66-9aad-bde54de04dd7"
        },
        "item": {
          "id": "f145c6ee-5c5b-43cf-a89b-21b6e244ca7e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "89055878-12a6-4e95-af75-4b82ffa85791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098ae411-0b8e-4d8c-af1c-d4d73491991d",
        "cursor": {
          "ref": "79f44376-50c1-4573-9f34-a25c8735d4a5",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1be56883-0982-4a90-83c6-9ef03539d1af"
        },
        "item": {
          "id": "098ae411-0b8e-4d8c-af1c-d4d73491991d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4795d7d4-2fb3-4f51-94b1-1f8842ffa5e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f628238b-5064-437b-ac47-e96c02d84097",
        "cursor": {
          "ref": "3d314716-b72c-47ac-86ed-49d7f072ff33",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8b1c1226-51ff-43f9-b9c9-ebde132add22"
        },
        "item": {
          "id": "f628238b-5064-437b-ac47-e96c02d84097",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4c4d6f2f-45c7-4b3b-a5b2-7e7b75217b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52dcbc3c-2937-4573-a90c-f3b3d04ea248",
        "cursor": {
          "ref": "5635766e-e252-4474-b463-9ed2ff7baaac",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "586969bd-3d5c-4302-b315-609a1bf2cc49"
        },
        "item": {
          "id": "52dcbc3c-2937-4573-a90c-f3b3d04ea248",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4899c996-f5c1-4065-aa5d-dd21f889745e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3d1b1b-1741-41f0-89e8-9e6685aefea5",
        "cursor": {
          "ref": "26889434-cc6f-433e-8c48-c53bf91820fc",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1e811cda-145e-4534-a104-ca40264c33ac"
        },
        "item": {
          "id": "6d3d1b1b-1741-41f0-89e8-9e6685aefea5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "10f87edf-5219-4be2-9b1c-f8f01f1558e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf9e1c3-e8ba-4229-9983-969f9fba4b8a",
        "cursor": {
          "ref": "38807c79-9e4e-4acd-8c53-a5d2ee7a6e1d",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c4539979-1769-4ed9-a442-1078eb0f2464"
        },
        "item": {
          "id": "ddf9e1c3-e8ba-4229-9983-969f9fba4b8a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "be1aba8c-b06d-41d7-8191-e9818c5de6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0676424-d4c5-44e3-a3ba-8cf7550da18c",
        "cursor": {
          "ref": "0e56de28-cb84-4cdc-9a6f-99b6cf20b858",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a41f83c7-cb3b-499a-b5b8-bbfad8e9e9f9"
        },
        "item": {
          "id": "b0676424-d4c5-44e3-a3ba-8cf7550da18c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b8786ce9-118b-45d7-bd13-18afc37c296e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc81120-dedb-4051-8818-58e53bd6289e",
        "cursor": {
          "ref": "34b8a52b-ad8a-4170-822e-99dda6583879",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "bc36bfc6-8129-431d-a856-b93048332c6a"
        },
        "item": {
          "id": "dcc81120-dedb-4051-8818-58e53bd6289e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5a5785fa-05ca-4e1a-8590-ae9ade540eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc38ddf-7512-4ab2-ba1c-fef0089e9e74",
        "cursor": {
          "ref": "2f58f101-9ba7-4ff3-b2e7-85115455ad54",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "27d6e650-bd02-497f-bcb8-aeba92727524"
        },
        "item": {
          "id": "2cc38ddf-7512-4ab2-ba1c-fef0089e9e74",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d26fbd50-dc64-467f-b6a0-39aefe3a69ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483f6ff5-753e-42d9-ba3a-e7e119819503",
        "cursor": {
          "ref": "2e11a50f-49d7-401e-a60a-f307cf81351a",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fb18af25-7f98-4a33-a33a-e7191ca3dfbb"
        },
        "item": {
          "id": "483f6ff5-753e-42d9-ba3a-e7e119819503",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9157b623-1912-479e-87ee-e7fb10d11f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d507371-ba44-42a5-b12f-b75adcf5a04e",
        "cursor": {
          "ref": "0a207e88-87a0-464d-9119-2baf2d479caf",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4da04bb5-2da6-4774-8ab1-60940a1d876d"
        },
        "item": {
          "id": "0d507371-ba44-42a5-b12f-b75adcf5a04e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ad332979-9398-4232-a966-b5732f77ca84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ea5bc4-0472-47f1-9e97-a99a95ca93fe",
        "cursor": {
          "ref": "2c9dc7f1-d817-4236-8625-d936e8a57c55",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5e950d5b-5e5a-478d-96a4-381e82af5d85"
        },
        "item": {
          "id": "53ea5bc4-0472-47f1-9e97-a99a95ca93fe",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f6fbb8e4-a8c5-4907-b1c3-c9598cb8a994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1e882b-e776-4ad9-8298-20a9a07c5828",
        "cursor": {
          "ref": "ca3e3316-98b3-4d70-9de3-b53bb52ebbea",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6899b644-7369-4866-99bd-d4df7be58ae9"
        },
        "item": {
          "id": "7b1e882b-e776-4ad9-8298-20a9a07c5828",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "9870e3de-ed71-45d5-bd08-4d0000f5de39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f92894b-e751-4120-939d-84240c58e573",
        "cursor": {
          "ref": "46b65c3f-fdf8-4eac-a70e-ab61bbe9da54",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "dae6f08c-20d5-4b74-835a-8cb74e275265"
        },
        "item": {
          "id": "5f92894b-e751-4120-939d-84240c58e573",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d9dd886c-4505-4439-9090-bb855991cc28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e256cfc1-9918-4c22-a664-5e7acbd1921c",
        "cursor": {
          "ref": "478878dd-e518-4f1d-8e4d-c7f6586dc9c1",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "922cc3fb-b04d-41cd-9c3f-90f2fd676c11"
        },
        "item": {
          "id": "e256cfc1-9918-4c22-a664-5e7acbd1921c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2b96881c-0ea0-4185-a238-1e2edf51dba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f531fb3d-2051-4a95-9166-ed0a2a1d8adf",
        "cursor": {
          "ref": "f5fa8d67-164c-4648-b9fc-ceabfe721e5d",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e69366bc-9ed9-4843-a3fd-42a8db02d639"
        },
        "item": {
          "id": "f531fb3d-2051-4a95-9166-ed0a2a1d8adf",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d7851ce0-cee2-4b4d-b61c-061b7dd5c738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0e46fe-fc40-48ab-a353-f28c188e2314",
        "cursor": {
          "ref": "af8b5e1a-ae39-49db-8dce-7fdffb4940fd",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "bba29652-4efd-46c9-ace0-3ea7aa5e3d4e"
        },
        "item": {
          "id": "0e0e46fe-fc40-48ab-a353-f28c188e2314",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ea9f35f9-ada2-4f5f-b4f9-58a4ecd922b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0166363-a1df-484d-b2b5-71e623062d52",
        "cursor": {
          "ref": "0b1feccd-7b19-43b7-8309-b377db8016b9",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "85d3403a-1e34-46bb-b622-ce395af81bc6"
        },
        "item": {
          "id": "c0166363-a1df-484d-b2b5-71e623062d52",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "07e72668-49d4-43ec-b6e0-928a9df3beda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3975594d-1105-47e9-9a93-a5fa829de4d6",
        "cursor": {
          "ref": "c07f5db4-42c2-4757-934f-ad4706798019",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "aad08887-1d68-435c-83e5-32e1347cfb80"
        },
        "item": {
          "id": "3975594d-1105-47e9-9a93-a5fa829de4d6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9c20012c-ca36-4598-94ab-699a840979a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2815b6a1-2fe4-42a4-83ab-a85ff5c57355",
        "cursor": {
          "ref": "201dd4b4-638e-41af-9ca8-425f9f952797",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7e2e1988-d1fe-4ee5-b52b-680fee772cdd"
        },
        "item": {
          "id": "2815b6a1-2fe4-42a4-83ab-a85ff5c57355",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1417c6dc-1ad4-4ef0-ac7e-b27c406d24da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f9b7bc-66cc-4441-983d-575710f59ba5",
        "cursor": {
          "ref": "25e072c8-3744-44d7-8015-53116b925c75",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "eaf7ba80-e7e2-46b4-9fe0-6fdf01703ab3"
        },
        "item": {
          "id": "d8f9b7bc-66cc-4441-983d-575710f59ba5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c188c6dd-532b-4e8b-ad00-d3bd4353e91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11fdd6f-9bde-4176-a751-3ecc3b7706be",
        "cursor": {
          "ref": "ada07c43-7d9b-4ff0-b7d9-a702f2f25348",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "549565fc-2c96-4962-addb-0a5922c5a26a"
        },
        "item": {
          "id": "b11fdd6f-9bde-4176-a751-3ecc3b7706be",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a70baad2-caf9-4060-a8d7-c3306e2e60ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d680f725-0a5d-47b5-97a3-f76ee3c24dab",
        "cursor": {
          "ref": "49b4a635-35b1-4f0d-9ce1-f3bb8b77d5f2",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "32189ef8-2e08-472f-a382-5a78c3407822"
        },
        "item": {
          "id": "d680f725-0a5d-47b5-97a3-f76ee3c24dab",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d25204ad-7db0-490d-9a94-88723d0a45d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f232de4e-6b73-4736-9d04-156d302ecb47",
        "cursor": {
          "ref": "fae31ab1-73ee-4cca-977f-c1eda5233f4d",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "90c013b4-c17f-4a59-ac0d-986a73dab8c3"
        },
        "item": {
          "id": "f232de4e-6b73-4736-9d04-156d302ecb47",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7ad8cd7f-5869-45b3-a4a7-2a9d11ede254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549edcfa-fb31-44c7-942b-9c7ea846d9d7",
        "cursor": {
          "ref": "5c16d1c5-9ced-428e-b933-51ede4524c67",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "32e1fbf1-020c-4a6a-b13a-847c38c2ef0b"
        },
        "item": {
          "id": "549edcfa-fb31-44c7-942b-9c7ea846d9d7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "200236bd-24ae-4d07-a88f-6542f5ba057e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8d5998-79eb-4005-ae1d-0a320db2f1ea",
        "cursor": {
          "ref": "f92f85df-8e0d-48f4-8195-c610d5ac4d44",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ee9a9dc4-8c48-4256-a3a9-08f9bb379273"
        },
        "item": {
          "id": "7c8d5998-79eb-4005-ae1d-0a320db2f1ea",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "3928d283-6b96-4db6-85fe-4030867a23bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a212be-455a-4ab0-bf7a-347b3e357ffd",
        "cursor": {
          "ref": "9937ce46-3fc7-46b7-8a45-b435377b7afd",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1508c59e-b895-41e8-8542-581ad0697cdb"
        },
        "item": {
          "id": "99a212be-455a-4ab0-bf7a-347b3e357ffd",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7be3e7aa-d3ab-46f8-a90c-474f0034ae21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "715ee4a4-5613-4c7c-bf8f-9aa25600b143",
        "cursor": {
          "ref": "f8d6cc32-b02b-4f3e-bbe3-4d826d1c35f4",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ca674967-850a-4660-af35-956e1c7f1f8d"
        },
        "item": {
          "id": "715ee4a4-5613-4c7c-bf8f-9aa25600b143",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "250de576-9850-4a86-8f3d-35ce032b944a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63222a61-4562-4fa9-90f4-21eb2f944366",
        "cursor": {
          "ref": "e88845f7-dab0-4815-a758-6e2cd9eff0f3",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "200cbfc8-e8cd-4fc9-9644-5a6ddf9d1bb7"
        },
        "item": {
          "id": "63222a61-4562-4fa9-90f4-21eb2f944366",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "73906b6f-6104-4df0-ae88-b7be7a67e97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f74d9c-613c-4c92-98e1-75b8ceac5e05",
        "cursor": {
          "ref": "90195722-c7bb-4b7f-849e-31e9bdb7dd78",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7139dee7-ca76-44a0-9e3b-18d25ccdc012"
        },
        "item": {
          "id": "b5f74d9c-613c-4c92-98e1-75b8ceac5e05",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "bd0e81c2-6c9f-4ae2-9429-15618decda90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1065341b-7cc0-463f-b623-8b7f73c7f608",
        "cursor": {
          "ref": "e3434636-ca8f-4ad2-bfa5-98a5f866fb18",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "80de37f4-9670-48b0-9c19-fe40038ac725"
        },
        "item": {
          "id": "1065341b-7cc0-463f-b623-8b7f73c7f608",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4ed2313c-814b-426a-a245-d4d452623f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b72a43d-8f4a-4f79-854f-9eb81a7ebd31",
        "cursor": {
          "ref": "7cde9f90-562c-4b06-8648-29a42cba6a9b",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f1bed578-21d9-4376-a0ca-217ef0388640"
        },
        "item": {
          "id": "0b72a43d-8f4a-4f79-854f-9eb81a7ebd31",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "16caf7ae-9ae3-496a-9332-2618fe54d2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97b1707-492c-4e1a-9fe0-8e33b2e80c56",
        "cursor": {
          "ref": "cb9f174c-2ada-4096-af93-688c4b4063f1",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1b09aec6-c16a-4042-a1ef-f725032f3b0e"
        },
        "item": {
          "id": "f97b1707-492c-4e1a-9fe0-8e33b2e80c56",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a51c2d24-2460-4a5a-8890-f39b92a81fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5a2a8d-27e5-4c0f-ae11-50a053c86936",
        "cursor": {
          "ref": "91bc0773-a6c4-4cc5-a4b6-40ecc483294d",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f110974b-d0e6-48a7-b7d7-c2bd887dcd83"
        },
        "item": {
          "id": "7f5a2a8d-27e5-4c0f-ae11-50a053c86936",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "291904c8-351c-45de-90be-538ac888b524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db7b709-59fb-4678-9c74-aeb908478478",
        "cursor": {
          "ref": "e9aa0454-d7e8-48d1-8744-d88276b68f0f",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5b969606-26e3-4735-9932-1ad539c9c026"
        },
        "item": {
          "id": "9db7b709-59fb-4678-9c74-aeb908478478",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b5a753fb-31a4-4c37-bcb6-dc74a0297970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41fff26-17b1-42ad-841d-c36a347d1905",
        "cursor": {
          "ref": "00b905c9-e06c-4cf1-be2d-07df8eefa8da",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "53613904-8834-438e-a91e-f924e8d7525c"
        },
        "item": {
          "id": "c41fff26-17b1-42ad-841d-c36a347d1905",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e4356ef6-ab6e-447a-8ad9-2df0ce416fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649e3667-5d6e-49df-9285-6c18c0b7eb60",
        "cursor": {
          "ref": "4b672132-8df3-489a-bc4b-f467b2dec5a3",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4d957fde-0fc2-4790-b4be-63f7ec9d7216"
        },
        "item": {
          "id": "649e3667-5d6e-49df-9285-6c18c0b7eb60",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e66ed50d-b95d-4258-bcc6-f484dc0b8472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a64d64e-867d-4487-b41e-da6e0ca2a6d3",
        "cursor": {
          "ref": "072e1061-7efe-4a62-8b08-c2ac51c22f25",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9ea7abb5-11b9-4a12-a8e6-c24815167fd5"
        },
        "item": {
          "id": "4a64d64e-867d-4487-b41e-da6e0ca2a6d3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d87a2e64-d9d4-48a4-8951-ba4d7d773234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2ea8cd-261d-4b56-95b9-1df40d9cd8c0",
        "cursor": {
          "ref": "17692cb3-94bf-41a3-ab90-70066eed1e76",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6f9c15a2-053f-4d49-a1fb-98f7b5e7edf4"
        },
        "item": {
          "id": "4e2ea8cd-261d-4b56-95b9-1df40d9cd8c0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "99a693a0-4792-471d-ad70-64d30833c873",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96543946-d0f1-48fa-8e23-6dd4ed49fc61",
        "cursor": {
          "ref": "d6c3cba7-f3ab-4b1c-89a4-0c1fd39a92fc",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f91aa5c4-4c90-4b99-adb0-60cc0dc9d51c"
        },
        "item": {
          "id": "96543946-d0f1-48fa-8e23-6dd4ed49fc61",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "d0f67520-6299-4698-b03a-3a70529ce5ff",
          "status": "Created",
          "code": 201,
          "responseTime": 71,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d84e406-5d3e-4bb5-9338-747034ec3436",
        "cursor": {
          "ref": "d26a55aa-6b53-479c-a621-ad07a1fd5f67",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "df503660-89d0-4a41-9ba7-70b512bcfd40"
        },
        "item": {
          "id": "9d84e406-5d3e-4bb5-9338-747034ec3436",
          "name": "credentials_issue"
        },
        "response": {
          "id": "79193f47-5aef-4d3a-b3ca-8f41ca7c93a7",
          "status": "Created",
          "code": 201,
          "responseTime": 164,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "3feb20bf-c868-4349-bb0e-1528d8758cd3",
        "cursor": {
          "ref": "b2ae5da2-8c53-4459-8c68-c1cf92a1da24",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "24155285-48a2-43cc-8a4e-b8d12c56fb2b"
        },
        "item": {
          "id": "3feb20bf-c868-4349-bb0e-1528d8758cd3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4b84bd4c-300c-4174-89db-ed3186ca5afd",
          "status": "Created",
          "code": 201,
          "responseTime": 85,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "62023153-3695-4c5e-816c-4539d479f04f",
        "cursor": {
          "ref": "5af72614-1cab-469b-9f74-2c1d435533f8",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d10b431e-a77b-46e9-b587-55befe61c062"
        },
        "item": {
          "id": "62023153-3695-4c5e-816c-4539d479f04f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d5da1151-cdaa-47f8-ad28-afcced210076",
          "status": "Created",
          "code": 201,
          "responseTime": 55,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d914046-044d-4ebf-b00e-a25cd9696628",
        "cursor": {
          "ref": "9eb0434d-ed3e-4c82-a20c-2ca4a76a6a1e",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "5164e477-7ea1-499a-acb2-e07b93922594"
        },
        "item": {
          "id": "3d914046-044d-4ebf-b00e-a25cd9696628",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "449dafb3-68ed-4703-80cc-306131ed0a3d",
          "status": "Created",
          "code": 201,
          "responseTime": 55,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49390fa-7b85-41fd-b737-c1f1d06d5b8e",
        "cursor": {
          "ref": "5cb6e373-0d6d-465d-9948-d86ab60c91a7",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ad2e39f9-771e-495a-8bb8-ae2f8e70d9a9"
        },
        "item": {
          "id": "c49390fa-7b85-41fd-b737-c1f1d06d5b8e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "81c67340-9aee-44a5-aec2-0a56213fa795",
          "status": "Created",
          "code": 201,
          "responseTime": 55,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bfdfe7-d7e8-4861-8042-e3d79a703a3d",
        "cursor": {
          "ref": "b24e11dd-fb21-4827-8bb1-53aef7d6fa7e",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "fa8f3c24-5162-4953-9123-dffdcdbdaab0"
        },
        "item": {
          "id": "b0bfdfe7-d7e8-4861-8042-e3d79a703a3d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c6bcae51-c995-482d-a620-b962713ed95d",
          "status": "Created",
          "code": 201,
          "responseTime": 64,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f068a0-60bc-49d2-99e4-9aa0a8a4371e",
        "cursor": {
          "ref": "48fc4c40-8bd2-4d9b-9cd4-089bce8d05d1",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4e67ba77-0ff0-4617-8885-cc4798f9c204"
        },
        "item": {
          "id": "53f068a0-60bc-49d2-99e4-9aa0a8a4371e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d5ff89af-4e1a-4f70-9b1f-28be8c8d906b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1ec911-f827-483c-936a-62128c2e60c8",
        "cursor": {
          "ref": "b4c07353-ba7e-4e26-9988-06e082f6667e",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "937be702-44dd-44e3-8156-65a8011ddf0c"
        },
        "item": {
          "id": "8d1ec911-f827-483c-936a-62128c2e60c8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "491ad522-0c0f-4ae7-a8f2-1ea26a80e32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9cad10c-ea7e-4b51-8f3e-55981ddb12c6",
        "cursor": {
          "ref": "a999083d-59ad-4b42-b11b-08f37116a4c8",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "68850ae5-03bd-4126-8f35-e7c4a465e3f8"
        },
        "item": {
          "id": "e9cad10c-ea7e-4b51-8f3e-55981ddb12c6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d7433e31-2975-4e84-b037-2c2abfc0325b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83603e11-c887-4ce5-8c79-326500a722f6",
        "cursor": {
          "ref": "4533214b-d96c-4d3a-8305-6bf708876cee",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2ec3c095-bc60-4415-9f50-bcbb0693b1d2"
        },
        "item": {
          "id": "83603e11-c887-4ce5-8c79-326500a722f6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8e023839-3fc5-42d8-930f-654c992078d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb699ad-aab2-4433-98f9-6e8f514ee87c",
        "cursor": {
          "ref": "1fb2e56d-4b9a-4a87-b7ab-2ad3ac6184ca",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ed313d00-aa9e-4d29-9247-5087e97d14f6"
        },
        "item": {
          "id": "fdb699ad-aab2-4433-98f9-6e8f514ee87c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cf739d74-7237-442a-b749-8ab844493ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad974aaa-1f0e-463b-852e-347dd2506cc6",
        "cursor": {
          "ref": "ee93111b-f3cd-4c89-a685-3b67e9ce2943",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a60f36d7-d0ad-44c6-8b66-90c2351c02ec"
        },
        "item": {
          "id": "ad974aaa-1f0e-463b-852e-347dd2506cc6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8dc70b32-b629-45a1-b65a-1c5d762ff3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320528d4-b381-4ca3-973e-c6a8b2e0cdab",
        "cursor": {
          "ref": "ccc6467a-6019-4ebb-a524-74395555e3ab",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "aa3d039a-b88e-4b5f-b060-8de9c2f67727"
        },
        "item": {
          "id": "320528d4-b381-4ca3-973e-c6a8b2e0cdab",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9e8eca6d-19d2-4c76-afd1-4a623270e5e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27de9c24-a711-41e1-ba2c-1b4d976dd9bc",
        "cursor": {
          "ref": "5e56579c-9382-4117-a807-6604c4e3ace2",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "807e0df0-0249-4320-8965-420a7d63f381"
        },
        "item": {
          "id": "27de9c24-a711-41e1-ba2c-1b4d976dd9bc",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7c9a9ff7-6489-4514-8d58-cc38576ab5c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d7a0e9-c930-4ffe-baf6-966b7942335b",
        "cursor": {
          "ref": "69fd7a25-b554-4428-acc4-e73235e711cd",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7ffb40f0-0822-455c-adcc-251d43bb1d22"
        },
        "item": {
          "id": "e1d7a0e9-c930-4ffe-baf6-966b7942335b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "23341d38-5ce5-45e6-b9f5-3068df3643a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c83f81-39b5-448b-b2cc-ee5c6d62e7ce",
        "cursor": {
          "ref": "1b4e81cb-b181-41f5-9884-2cce70b3d609",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "50c3170b-a857-47a9-9ab7-dfc8e124cbda"
        },
        "item": {
          "id": "00c83f81-39b5-448b-b2cc-ee5c6d62e7ce",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "179b5a14-f194-4b24-ae43-0bd92564ab6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1217d8a0-d853-45cb-8c3d-323169999bc8",
        "cursor": {
          "ref": "62927260-53f9-41ba-8404-16965b1d9dde",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1c2d456a-3d4d-49e4-bd59-a1ca25ed8501"
        },
        "item": {
          "id": "1217d8a0-d853-45cb-8c3d-323169999bc8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a455ca5e-c3a1-4dd4-8c5b-7630377c3385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0786a5-d851-461b-b374-281fd2c849e3",
        "cursor": {
          "ref": "bcd3b185-afc6-404a-a1a0-4f322a294898",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "94fdb1f3-5eac-4a06-acc2-fd2c77c49cee"
        },
        "item": {
          "id": "ce0786a5-d851-461b-b374-281fd2c849e3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ae0c8499-32cf-4d49-80ca-955de01e9c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aecc5cb-c4fd-4753-b77d-a1a138f6e579",
        "cursor": {
          "ref": "bac9e7fb-7ccc-4299-8038-821b04663a8a",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a10f084e-0f7b-4920-a761-948c6ea2bf30"
        },
        "item": {
          "id": "5aecc5cb-c4fd-4753-b77d-a1a138f6e579",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2833bfd9-ee75-4f2d-80fd-d59038c5162a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacd92f4-ced0-4376-a810-a52504721e97",
        "cursor": {
          "ref": "423e7222-d414-4af0-8a4c-cba7a6dee7cf",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9efa0323-1725-421e-bf8d-628fecdcb2fc"
        },
        "item": {
          "id": "cacd92f4-ced0-4376-a810-a52504721e97",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "42aa9cba-a42d-4f36-805e-bb35df87df8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e69769-160a-410c-ab16-326f43b04f65",
        "cursor": {
          "ref": "9fe64dfc-c998-4879-ae1a-fa017ce691f1",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f3bbd172-7743-4b1e-983a-c3230948ccd3"
        },
        "item": {
          "id": "e2e69769-160a-410c-ab16-326f43b04f65",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9718cda6-ee47-4524-a931-53514b7b3524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb98d5e-3698-4e47-9407-e15dd33329a0",
        "cursor": {
          "ref": "6153ca72-db23-4668-b567-7e9d6d9bcad2",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6bc61220-f398-4fdb-866a-d57334362d06"
        },
        "item": {
          "id": "7cb98d5e-3698-4e47-9407-e15dd33329a0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "542ec3e6-9155-474d-8694-d3e287ef6e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00db3cb6-7722-4c60-8050-67a6112f15c9",
        "cursor": {
          "ref": "8905799d-99c3-4015-8fe7-edbf7cee01ac",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4d3db74c-ef22-4bed-b56e-b37fe7161567"
        },
        "item": {
          "id": "00db3cb6-7722-4c60-8050-67a6112f15c9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "01b56727-4b33-4783-b130-9bb43a586d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc82fce5-c86f-4731-a23e-3357e71d795c",
        "cursor": {
          "ref": "85cb142a-30e4-4fdf-82fb-b004a8c081f7",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "abf7dfe0-0e31-4254-826e-709c03ebe089"
        },
        "item": {
          "id": "bc82fce5-c86f-4731-a23e-3357e71d795c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1f97eedf-1feb-48e1-bdfd-674ac0b2e6ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6badb4a7-ee3d-4328-a05e-c53fa3127955",
        "cursor": {
          "ref": "e3ecc585-b788-4a6c-9298-58c647209eaf",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5778e5a2-a5fc-48ce-97af-44b34b92de86"
        },
        "item": {
          "id": "6badb4a7-ee3d-4328-a05e-c53fa3127955",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "517e8445-2997-4a82-881f-672a0fd9f93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceaeb4f4-e312-4bfd-b271-63f219619618",
        "cursor": {
          "ref": "8df79a87-61cc-4354-af6d-39e90e988984",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "bc792209-3dc0-4ecd-9f41-7d032ee7d547"
        },
        "item": {
          "id": "ceaeb4f4-e312-4bfd-b271-63f219619618",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fe7b1ca1-8394-43f6-9b29-09873b67a793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e505005b-bebc-4f74-b86a-227b3c8b863a",
        "cursor": {
          "ref": "015d8914-0d97-4ddd-bb60-b16c92c9392c",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "822d86df-1f98-48cf-b7e4-fc189a4a455e"
        },
        "item": {
          "id": "e505005b-bebc-4f74-b86a-227b3c8b863a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ee143444-b6a2-4034-90eb-c694a4d2e25e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce18098c-636a-401a-96c0-124502f9f8b4",
        "cursor": {
          "ref": "bf38280b-9154-426a-bcba-bb89ad4035d3",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8ab1f45e-24a5-4a37-83fc-744911adfb40"
        },
        "item": {
          "id": "ce18098c-636a-401a-96c0-124502f9f8b4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7b3b9e97-2ca5-4926-b979-44869b301ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d02957-f03c-40f0-a97d-eef1719234bf",
        "cursor": {
          "ref": "b350bd0e-9e79-497c-9de5-ceb68e718988",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "feeff22f-8b37-4ad0-9615-59abf269897f"
        },
        "item": {
          "id": "c4d02957-f03c-40f0-a97d-eef1719234bf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "314afca9-eb5b-45a8-bf7e-9fac21339015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ad451a-ee38-4f26-8fbb-9548294554a7",
        "cursor": {
          "ref": "990483a9-2ed4-47ba-87cf-6d6c0e034976",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4ae1869b-0e77-4117-b515-b944118e744d"
        },
        "item": {
          "id": "c1ad451a-ee38-4f26-8fbb-9548294554a7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c9d02e14-45a8-456b-b7f0-73ef3d2a28c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d246ae7-bfcd-4b02-a488-836b3538d9bb",
        "cursor": {
          "ref": "4ce6802d-b6b9-4068-99b7-930a2dc78c11",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f8a10029-b531-4a8f-a582-553da168b53b"
        },
        "item": {
          "id": "6d246ae7-bfcd-4b02-a488-836b3538d9bb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "877db09b-0e10-43cf-98a6-173915547fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "140a7592-e667-4b73-b90a-d80361922dad",
        "cursor": {
          "ref": "b510c198-f63f-4e4d-be86-d750c1c1b599",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d037e58d-f687-4ef6-8f37-3d1c4a46f78c"
        },
        "item": {
          "id": "140a7592-e667-4b73-b90a-d80361922dad",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d06cffad-f58b-4d88-9254-837a298a6252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43287fc-01ef-48db-b997-24881354821b",
        "cursor": {
          "ref": "34ff5951-e42a-49e2-b5ab-b7ff58ae33b2",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "92e3dc6b-998e-49b1-95dc-775b87db9196"
        },
        "item": {
          "id": "b43287fc-01ef-48db-b997-24881354821b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1a73c91a-5eb9-4473-aa37-745459c12361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa9663b-f4b3-4b3e-a4cb-36aefe75f6a1",
        "cursor": {
          "ref": "dc46d728-3091-4fb1-aa14-4f557dd65750",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "98781093-d131-4234-844e-74cda7727c76"
        },
        "item": {
          "id": "ffa9663b-f4b3-4b3e-a4cb-36aefe75f6a1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "256b17e4-baf7-4bcd-a354-d285d487386f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fa7231-d2e6-4d14-8ac8-2387eebceec5",
        "cursor": {
          "ref": "50d530a6-fda1-4b42-9ee9-8f9cd0849d3b",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "94e4b5a5-c983-4633-bb45-8cf619f882bd"
        },
        "item": {
          "id": "67fa7231-d2e6-4d14-8ac8-2387eebceec5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8a5739f9-e929-4c15-bcd5-ee2f6deb62ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cbfd083-4e02-46ca-8543-fb03821c5084",
        "cursor": {
          "ref": "1d4f60a9-d01d-48c8-b01b-6507807666bf",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "47132482-8ace-4ab3-bb98-199cb6f079d1"
        },
        "item": {
          "id": "6cbfd083-4e02-46ca-8543-fb03821c5084",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "930e5aba-dfc5-4121-b01c-8e2100a931a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a2db58-82c1-4d7f-b228-169d051f78e7",
        "cursor": {
          "ref": "cd3ebc0d-e1d8-479a-be7c-cea15169b0b8",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "15443e05-ca66-46a5-a122-7dfe3b95b3cb"
        },
        "item": {
          "id": "e6a2db58-82c1-4d7f-b228-169d051f78e7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b5149bac-d899-43d3-989e-5a2a81f1a52b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e82a55-7d5d-494c-ab43-d2d925c584e0",
        "cursor": {
          "ref": "79728885-7363-4990-b864-e4f0f366c013",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9fae528a-86c9-40bb-803f-ed645f9b7f8e"
        },
        "item": {
          "id": "f5e82a55-7d5d-494c-ab43-d2d925c584e0",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ca9ce022-70a9-4113-beee-294e89d10694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12dedb8c-e972-465e-96e1-883f97e62454",
        "cursor": {
          "ref": "6ac9a823-e83b-49b9-a7c3-52d07e1b4585",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "773e3de0-3cd8-4f1c-b562-1f37639ff74e"
        },
        "item": {
          "id": "12dedb8c-e972-465e-96e1-883f97e62454",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f58c2fe6-40fb-4763-bfb6-25affa620ae4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0795a9c-4ee4-4cb4-a378-374789492b94",
        "cursor": {
          "ref": "fb4c998d-ea85-4bca-a3d2-735c586c76ba",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6ec000e5-9331-4f51-885c-6ea6fbbc5881"
        },
        "item": {
          "id": "b0795a9c-4ee4-4cb4-a378-374789492b94",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5ed8d0c8-4c08-4128-8cf0-561cf046d167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844a3467-37d4-442c-be7e-0558f3afa6db",
        "cursor": {
          "ref": "bc9ce995-da32-47cc-ac30-dd2d2d0e1def",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b28163b0-a77d-4b85-b606-bde54ef8637c"
        },
        "item": {
          "id": "844a3467-37d4-442c-be7e-0558f3afa6db",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "954fd987-3537-471a-ab57-2a303c92c85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b650d21-191c-4185-8b6c-90f2711fb44f",
        "cursor": {
          "ref": "7b967b26-869b-42ba-8928-106b9c528c9c",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f7a89398-5262-4c23-a76d-31ef5dca4f93"
        },
        "item": {
          "id": "6b650d21-191c-4185-8b6c-90f2711fb44f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ca1aba3a-58b6-43cf-be31-433c1f24460e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3981cdda-c6c3-40f5-88af-2b01ebb3c6f3",
        "cursor": {
          "ref": "7dcd1e35-c169-4d0d-9205-4b3849de5d05",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "91d0ec74-5d08-4e09-aafc-ec016bef9753"
        },
        "item": {
          "id": "3981cdda-c6c3-40f5-88af-2b01ebb3c6f3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "513d056b-0893-4104-9465-6c7883ec10b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91db5519-d318-43b3-89a2-2ad52da1cdb8",
        "cursor": {
          "ref": "b378c0ef-db16-433d-a574-fddf34a6f0bb",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f48794d3-1542-4f5e-80b6-5409ff1513eb"
        },
        "item": {
          "id": "91db5519-d318-43b3-89a2-2ad52da1cdb8",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "158a7a3a-bdb3-4a6e-8eca-7ceabe508d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3411e6a-b916-48dc-9bc0-efd18e3d6beb",
        "cursor": {
          "ref": "193465f4-3b33-44d3-8185-385c16d126ec",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2b0212f9-e504-40cb-9c0c-72856b9d01a4"
        },
        "item": {
          "id": "c3411e6a-b916-48dc-9bc0-efd18e3d6beb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d3eb2dc7-46b0-46af-8f5a-1412e018adc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5dd46e4-d918-4e10-a13d-c5e9f5398076",
        "cursor": {
          "ref": "8289ddef-acad-43f6-8534-e0799a297045",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "42e1aa7d-2a8b-4cce-a66e-a0fe7f4a2b9f"
        },
        "item": {
          "id": "c5dd46e4-d918-4e10-a13d-c5e9f5398076",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6def96a1-90f2-49e3-9bb9-256443336bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733b1462-f8ba-418e-9d12-9b09c5157116",
        "cursor": {
          "ref": "18855955-9ea7-4fdc-92ce-01478c8b829e",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "7280be75-c268-4326-8db7-edd6e48c9322"
        },
        "item": {
          "id": "733b1462-f8ba-418e-9d12-9b09c5157116",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a25fd7b1-ebf7-4088-8e38-94ed7b82f47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46254cbe-0e93-409a-88f2-a52719861f6e",
        "cursor": {
          "ref": "4aaeab93-8843-46d2-9e28-535cf7dc7070",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "11f7d6a2-4645-42c3-86a8-4de13127b56f"
        },
        "item": {
          "id": "46254cbe-0e93-409a-88f2-a52719861f6e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4400cf1b-bd90-4989-a6e1-91e42e3423cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3dab599-abbb-48a4-ad1d-5788604a4bab",
        "cursor": {
          "ref": "8c2065c9-e6a7-41d4-b4ac-ee36eaa4d20d",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f793290f-44f0-4cb1-8d03-b29b1ba7cab3"
        },
        "item": {
          "id": "f3dab599-abbb-48a4-ad1d-5788604a4bab",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e0292ff4-821a-44d9-81dd-bb8e89ea4388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2347ad1f-2e5e-457b-bb71-3c38ebcfd2da",
        "cursor": {
          "ref": "49aef1db-91c1-48b4-b7fe-bdae1797dfa3",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f9dabaeb-44a6-4763-9b78-d43fa4c23176"
        },
        "item": {
          "id": "2347ad1f-2e5e-457b-bb71-3c38ebcfd2da",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4211acfe-0d4d-4da7-95bc-ce2fe3649cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d93b598-08f0-43a4-aad4-c9a152dda504",
        "cursor": {
          "ref": "ae7c61fc-2b84-411e-879d-3f0db04e52cd",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "27ead1bc-552e-46d2-b54d-561b2be6ce2f"
        },
        "item": {
          "id": "0d93b598-08f0-43a4-aad4-c9a152dda504",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d102e3d7-e7cb-4551-91e1-c65417c12ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b358c48-084a-4717-82d8-5f2115402d08",
        "cursor": {
          "ref": "6fb33692-c8a7-42cc-8f4d-e0c1a26a3cf1",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3b723e6b-0186-49b3-a919-71b4de0e7c8f"
        },
        "item": {
          "id": "1b358c48-084a-4717-82d8-5f2115402d08",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9c374b00-ee10-4dbb-b4eb-29115588272a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640f7813-a568-41a8-a448-4296e1a6a0c8",
        "cursor": {
          "ref": "5b5a8877-d7d6-4475-82d6-d3f25b2a9712",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "fd465588-6de2-412b-a81c-b9df22289ce5"
        },
        "item": {
          "id": "640f7813-a568-41a8-a448-4296e1a6a0c8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8e975889-cfc1-4637-9345-8a6bc21785af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a04f00-406d-43ac-8f75-8a6929dca385",
        "cursor": {
          "ref": "dcf9e640-1804-499e-98d2-40cc90c470d8",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "432e749d-6689-485b-b136-410df821a8b9"
        },
        "item": {
          "id": "31a04f00-406d-43ac-8f75-8a6929dca385",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6c6547d3-3a59-4f43-a078-7cc738306571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562d3256-e54f-4f5b-9b7e-1556b9bb5d45",
        "cursor": {
          "ref": "a2e7a10d-691a-447b-8756-39d7f604c372",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f547868e-8839-487a-921a-2b692b7ba5b8"
        },
        "item": {
          "id": "562d3256-e54f-4f5b-9b7e-1556b9bb5d45",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7b55a0f9-2d2f-4c4e-a03c-178ccad8e5c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1b319c-b921-4909-bc94-8147fd9724f8",
        "cursor": {
          "ref": "bf4a81ee-71fb-410e-a709-7005fee0aec7",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "201896c6-8fc6-46ad-a792-914bf10759a3"
        },
        "item": {
          "id": "6d1b319c-b921-4909-bc94-8147fd9724f8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "da3ef3b3-3cf6-416c-a997-fb5981abef51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d8a711-c201-4c2e-aaad-b9471b3cdd70",
        "cursor": {
          "ref": "ded3b71a-c0c3-4e92-a6c1-9d7e97f08559",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "4a2bbffb-2d5d-44f8-b30c-c129c8fdb26d"
        },
        "item": {
          "id": "09d8a711-c201-4c2e-aaad-b9471b3cdd70",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "949770fd-5c21-4f4f-a23f-c7ca7f73e2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4b8dfd-4930-43d9-a860-b286dbdf1675",
        "cursor": {
          "ref": "86359931-1a69-41ef-807b-953aef8c09c0",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0947dad4-3e12-4bed-81e8-dd0f46cac781"
        },
        "item": {
          "id": "0f4b8dfd-4930-43d9-a860-b286dbdf1675",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2e1f3349-893d-4eea-9bca-2377f8a06605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9e8f1b-24bc-4b81-ac1e-2f36da951297",
        "cursor": {
          "ref": "e74cf988-c867-4693-9f2c-d4aba5486bc9",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "25ab0d14-0a49-41e6-b205-466e03284644"
        },
        "item": {
          "id": "3b9e8f1b-24bc-4b81-ac1e-2f36da951297",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "aab14ff7-f220-4527-a698-5b0f6b26eb3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8913decc-d7ff-48c0-98c8-3aa91084f060",
        "cursor": {
          "ref": "64d66058-f377-4a37-bc39-31d23978543d",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e8ae99f7-fbe8-4eba-8ec1-5a3ea5c6a14d"
        },
        "item": {
          "id": "8913decc-d7ff-48c0-98c8-3aa91084f060",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a6d7f08f-600e-4940-b271-c02795e4979b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6299d33b-09d0-43e3-a52c-99b2c612840d",
        "cursor": {
          "ref": "8ee4cb0f-28cc-4c60-819b-dd5cc06e0ec9",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e8de489f-ca0f-497b-8c9a-eebd95efdc5f"
        },
        "item": {
          "id": "6299d33b-09d0-43e3-a52c-99b2c612840d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "38e58cb7-9b5c-411f-9516-c5222427ee85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab8d40c-6cd8-4af9-9581-ff418e1a62f7",
        "cursor": {
          "ref": "472be0f3-32dc-4769-bb59-64a435eb27e3",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a06a9128-0f5d-43b4-a64c-8a24a8c9ccf8"
        },
        "item": {
          "id": "2ab8d40c-6cd8-4af9-9581-ff418e1a62f7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "55ebc354-163f-4dcb-8c0e-c781a0737b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a1a977-0af7-4391-9df5-66b7c5c45f09",
        "cursor": {
          "ref": "154f7db6-9dc3-475f-b616-ecce68288fec",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "64e7788b-2536-4846-85d4-a53f15a92efb"
        },
        "item": {
          "id": "d2a1a977-0af7-4391-9df5-66b7c5c45f09",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "daf36d02-7a43-4de9-bb04-f46d174ebaa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7732c1-7dd2-4449-81ef-8d2dc1edc947",
        "cursor": {
          "ref": "bed8708b-ffcc-4fa5-a5d7-7314fa702d65",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "07446fe9-6d3c-4f94-826d-87d847841e2d"
        },
        "item": {
          "id": "ab7732c1-7dd2-4449-81ef-8d2dc1edc947",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4fb07765-f02f-4a3d-82fd-667a1b1662b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613fbb66-ff77-44a2-b4e0-551809e06272",
        "cursor": {
          "ref": "c02d0fdf-951d-426d-8b11-43a2636ad25e",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "87c263cb-c1ac-44cd-bc31-16dd4f154bd8"
        },
        "item": {
          "id": "613fbb66-ff77-44a2-b4e0-551809e06272",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bccf2003-a0e2-4985-84c5-27dc010bf2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534430bc-17e5-4161-b351-b917f00af592",
        "cursor": {
          "ref": "f849e7f6-260e-43d8-889e-5dc563bd0ca9",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e45ed3d8-3b65-462a-aefc-1a5f45eebb04"
        },
        "item": {
          "id": "534430bc-17e5-4161-b351-b917f00af592",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1df922e5-158c-4253-ab77-4039dc886cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb45c643-6ce9-4636-a828-3e8828068789",
        "cursor": {
          "ref": "d644ec7c-72a4-4995-b273-5f0b43ecf3af",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a0221a98-9e26-4899-bdc1-b715ff1b670f"
        },
        "item": {
          "id": "bb45c643-6ce9-4636-a828-3e8828068789",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "effea00a-0a20-42e3-aefb-deaaaab9810e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd1afa8-ea7b-46bd-b886-2fc315ed9825",
        "cursor": {
          "ref": "06461eff-70d1-465a-85c5-a7c96815eb9b",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5218f8ad-89b8-4d50-b938-10325fd1dbc2"
        },
        "item": {
          "id": "acd1afa8-ea7b-46bd-b886-2fc315ed9825",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "abd3d4bc-3ceb-4410-83e8-01c25021560a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5707bae9-511c-4366-9606-478500770c85",
        "cursor": {
          "ref": "07999023-b518-47bb-b00f-c4e83c67ff91",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "db42bfba-e626-40e6-bacb-161fa2626089"
        },
        "item": {
          "id": "5707bae9-511c-4366-9606-478500770c85",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "99de79e9-2021-4166-9399-a6afcedb1e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0052d179-1da6-436e-a434-7cba43bfd4c4",
        "cursor": {
          "ref": "19c45353-96ef-4a3b-9209-11d86eb80edf",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b67fc845-c023-4cdb-b637-5659c155cd36"
        },
        "item": {
          "id": "0052d179-1da6-436e-a434-7cba43bfd4c4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c51bb02f-097e-4457-97c3-f1ce25c63fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b35dbbb-823d-44db-8d46-35cf4072f7b4",
        "cursor": {
          "ref": "501ad20f-545d-48b6-8a90-ab4c6abc2292",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ccf61c28-047c-40a9-b1c9-1bf151a6114a"
        },
        "item": {
          "id": "5b35dbbb-823d-44db-8d46-35cf4072f7b4",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "46a4e990-0d10-4f0e-bd38-c9b740f15db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f195cb-aa8f-460f-b1ce-23e91c211fd9",
        "cursor": {
          "ref": "646f48ce-cece-4651-9ad8-5c45a0e11a71",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "682b4198-1633-4686-a152-05476f994882"
        },
        "item": {
          "id": "e7f195cb-aa8f-460f-b1ce-23e91c211fd9",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d98b7f61-be85-4af0-8657-e957626d5d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1febb0f-a7da-4e15-9e39-6aa59b6be760",
        "cursor": {
          "ref": "2f9d4da4-35f3-4ae3-b636-cd8e12815494",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "fddeefd8-9101-4186-b55a-fbc52b43335e"
        },
        "item": {
          "id": "d1febb0f-a7da-4e15-9e39-6aa59b6be760",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "92b679e6-615a-47d8-927b-c4858bf64471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a471757-c6f0-408f-a91e-a14c88269172",
        "cursor": {
          "ref": "c9760f84-32c5-404e-bcfc-f52f44884b66",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1194e7d3-9b0a-4b49-8967-67307891cc74"
        },
        "item": {
          "id": "9a471757-c6f0-408f-a91e-a14c88269172",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2f8af814-98b5-4575-bbbe-b8210b62150f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d274cd36-9d14-4c25-b58e-284a148823a0",
        "cursor": {
          "ref": "f12110b4-8881-476d-9f14-6ee62c619ef4",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6590a732-dad9-409b-a6bd-9a1e28e7cea9"
        },
        "item": {
          "id": "d274cd36-9d14-4c25-b58e-284a148823a0",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "fcae2f97-cae7-4cf7-8ce2-0a2b654fca87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2d1c10-c0de-45b1-b928-25b653f6118d",
        "cursor": {
          "ref": "c152bbdf-17a2-4d08-9a96-728a4bf02346",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "769d2c3d-d045-4712-a5c6-46a5e1548e56"
        },
        "item": {
          "id": "8a2d1c10-c0de-45b1-b928-25b653f6118d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e38a5c92-e019-46f4-a191-1492e0176a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2f2537-1919-497c-856a-a97ac0aa1039",
        "cursor": {
          "ref": "fc3efe69-9fcb-4ee3-9795-9583170f4b37",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3d3d24d4-e4fb-4209-abaa-54b9fac0289f"
        },
        "item": {
          "id": "1e2f2537-1919-497c-856a-a97ac0aa1039",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "569fd061-182c-4594-957b-b9aea5c41d75",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55882935-37f1-4bdb-a011-df20be85f75c",
        "cursor": {
          "ref": "39c70a20-5d8e-4453-9ca1-925c4f48448c",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6d7ac165-af1a-4c2a-a64c-dc157892fa29"
        },
        "item": {
          "id": "55882935-37f1-4bdb-a011-df20be85f75c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "153a22e7-76c5-4e3d-bbbc-7a04297e0150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8f6cd3-8479-4835-b9b0-33100b2947b2",
        "cursor": {
          "ref": "5ab3a6b4-925d-470f-8a10-005361be6b53",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "35d4cdc1-cb57-425c-ade1-a73b68210921"
        },
        "item": {
          "id": "3d8f6cd3-8479-4835-b9b0-33100b2947b2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ea6a864f-ec83-4378-9085-d238bf6b20de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0f8be0-d916-414e-a097-582397194385",
        "cursor": {
          "ref": "40a1fae2-2896-4e11-9e0d-f271df4e0d61",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8c739a41-7902-4828-9554-a1c1966f788d"
        },
        "item": {
          "id": "be0f8be0-d916-414e-a097-582397194385",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1d4717d4-f16c-4943-83fa-783aaf9b38c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7f34ea-c2d4-4559-a5ad-95ab7e6c1fd8",
        "cursor": {
          "ref": "1616d676-7459-464d-85c2-76ea7cb5e621",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1b522a18-b9c5-44e8-9233-174f8298133f"
        },
        "item": {
          "id": "0e7f34ea-c2d4-4559-a5ad-95ab7e6c1fd8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "03e0d9a5-86e7-41f0-8bfa-fc05d41c85d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0706e9-b9a2-40e6-9479-fe0ee4a91c5a",
        "cursor": {
          "ref": "ad1d2171-aa78-4a43-ba58-86d00c1ec34f",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e3355f96-7b7b-45a8-944f-d91481225ea2"
        },
        "item": {
          "id": "ad0706e9-b9a2-40e6-9479-fe0ee4a91c5a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "337b69d1-5982-482a-8e22-28d04607a116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133eeb70-fbb7-43aa-8e19-2c3a707c3aee",
        "cursor": {
          "ref": "b4b00cb0-f98d-4609-adaf-9e3a307e3f83",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b3809416-e464-44f9-97d8-4e6b862a4836"
        },
        "item": {
          "id": "133eeb70-fbb7-43aa-8e19-2c3a707c3aee",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3f25a092-1f52-4f50-9522-e7efbfc44d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74ac84e-4e82-4ed6-8e57-4396ac524b68",
        "cursor": {
          "ref": "425b485a-a7d3-47cc-8e9b-0a4632ecfa2f",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4da2ed27-13ad-428c-8c96-b1c4feb7c252"
        },
        "item": {
          "id": "b74ac84e-4e82-4ed6-8e57-4396ac524b68",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c5334705-a689-43fc-94e4-d6c02cfa978a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b124b236-b626-4a52-a82c-611e89203a79",
        "cursor": {
          "ref": "38f93bdd-c628-4783-869e-314cf8aae42e",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b7ca1393-e122-43f2-b23a-bb78b420f154"
        },
        "item": {
          "id": "b124b236-b626-4a52-a82c-611e89203a79",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6ffb26c9-0f8a-4a74-b5c1-edec8a17c35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e315776-addb-4f2a-a06e-8feae6b012b3",
        "cursor": {
          "ref": "36ef7e72-f961-4752-9907-da1e62c477c2",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e8fce8d6-1d1f-4086-ba9f-ed80f750eb80"
        },
        "item": {
          "id": "8e315776-addb-4f2a-a06e-8feae6b012b3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9e25769d-1750-4120-9d14-7c82f0737a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d212cc4-80e0-4618-8608-fffa0e52b7af",
        "cursor": {
          "ref": "a777d473-5779-42af-b60c-9cb17fae4c90",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ccac6f29-78d5-4849-82cb-e00fbbce1e0a"
        },
        "item": {
          "id": "0d212cc4-80e0-4618-8608-fffa0e52b7af",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4be04fd1-729f-4ec7-856e-d677a44295f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab91c82c-ce62-41df-b95b-d3954ed2455c",
        "cursor": {
          "ref": "a4721012-6796-4245-9b9c-fbd77c002435",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1fcd8bd4-2e1c-41dd-8984-ac6fc2b932e8"
        },
        "item": {
          "id": "ab91c82c-ce62-41df-b95b-d3954ed2455c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ef5d8c30-1af9-42a9-ac4c-f5fbeceb1854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d759dd-ee64-4d91-ae0a-0523148758e9",
        "cursor": {
          "ref": "14789f31-ae85-4198-8c0e-45b3e0393ec0",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "17da1570-7dd9-4418-bf33-ed91390c4373"
        },
        "item": {
          "id": "55d759dd-ee64-4d91-ae0a-0523148758e9",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c72af51a-75c2-4e2c-bfb0-99074b42d7d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d32d339-dc94-4186-b46d-8c0d81f14dff",
        "cursor": {
          "ref": "2b8d9a99-7b0e-4fda-9da5-ae60cb23e293",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "909c3530-2c02-47e0-af66-1ae37f7821e6"
        },
        "item": {
          "id": "2d32d339-dc94-4186-b46d-8c0d81f14dff",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ff4f71aa-d7e7-4737-8204-133f40ce615f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3068e7b2-348d-4b9c-a5ff-4ded2957d738",
        "cursor": {
          "ref": "fc25b9a8-a370-450e-a822-d0bf8e1077ee",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "fd2d52ac-17e8-4468-bfd7-8cc59ad5a95b"
        },
        "item": {
          "id": "3068e7b2-348d-4b9c-a5ff-4ded2957d738",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "099db310-e5cd-46d0-98c6-906ebd28c159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ac52fa-60ce-4b64-839b-c3b2f79199cd",
        "cursor": {
          "ref": "c6c178ee-e2e0-45e4-8c2a-ec2a5527dbb3",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a6fd5277-ee33-4e2e-aa88-5afdb5c2fc17"
        },
        "item": {
          "id": "96ac52fa-60ce-4b64-839b-c3b2f79199cd",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "103a6fae-25b6-450b-8be2-3bf00dd33791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead43dc7-e65e-408e-8f8a-5fac9e4841d5",
        "cursor": {
          "ref": "ea8e0b62-fecd-497c-9944-e1b6aaf975a0",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f9d8211e-70e9-4a5e-8fbc-931926db1797"
        },
        "item": {
          "id": "ead43dc7-e65e-408e-8f8a-5fac9e4841d5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "55b04206-49ed-4f8d-9d5c-c39c95932613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c928c710-ee8f-4b32-8574-cc601caea716",
        "cursor": {
          "ref": "074fdc5c-5aee-4816-8493-1952a84ad09f",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "daa64f78-b711-4a66-93cc-268bab1d3b48"
        },
        "item": {
          "id": "c928c710-ee8f-4b32-8574-cc601caea716",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7e0d8251-01a0-4677-bf1f-f6bfe1272dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910a1415-ab11-4f26-b170-aa112bde5fd3",
        "cursor": {
          "ref": "68904db5-b135-42aa-bc73-df05ecd52926",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "625f5f13-9294-4347-b4b7-2b5e4cf182c2"
        },
        "item": {
          "id": "910a1415-ab11-4f26-b170-aa112bde5fd3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e8325234-8bee-4ae2-aa47-513f02b42254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31ba8a3-4c31-42b8-a6a3-0ee20abdabb7",
        "cursor": {
          "ref": "302abe1b-c801-47b9-9042-04d257243760",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9a73863b-c6d7-42d9-aabe-bd0736e624ee"
        },
        "item": {
          "id": "b31ba8a3-4c31-42b8-a6a3-0ee20abdabb7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6ab1ab4b-5152-45bf-9bda-7f4e355b5681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f8372d-5be2-4246-ad75-0a50a5b278db",
        "cursor": {
          "ref": "ef857388-5548-47dc-9acd-60be92f3ef68",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d4bd5043-9a99-4e53-bf0d-f3f9a45dce2c"
        },
        "item": {
          "id": "47f8372d-5be2-4246-ad75-0a50a5b278db",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a123e478-f2b7-47b4-9fc1-cec85827ef6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d54e633-86fb-423f-8195-3e2da75b3e0f",
        "cursor": {
          "ref": "0623a187-e382-4819-9772-9d2306965065",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1b2b2613-b00c-46b9-9627-f40dca952718"
        },
        "item": {
          "id": "9d54e633-86fb-423f-8195-3e2da75b3e0f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1ffec47b-a8c7-4b7e-b743-c2750d029210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95bdedd-28e7-4659-acd6-1e952ac246e2",
        "cursor": {
          "ref": "7683ed93-ebe2-4560-9bc7-00357536b7d2",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "10799ece-ff10-44f7-be3f-d8ad5b52c682"
        },
        "item": {
          "id": "e95bdedd-28e7-4659-acd6-1e952ac246e2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3ddbb0b8-f38f-4884-835f-2a2ad6fa5641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b040e6-a8f4-428c-8261-570f80f42ae3",
        "cursor": {
          "ref": "24cf87b0-c206-48c0-b09e-37a7bfb9c61c",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b64f868a-2a96-4b6b-b8c3-da6f6cacdb6b"
        },
        "item": {
          "id": "a8b040e6-a8f4-428c-8261-570f80f42ae3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "85ffce4c-7c2f-4094-97ef-9b4b89a95faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70dbc902-3ddb-470b-bf25-d6faa804033d",
        "cursor": {
          "ref": "84199fc0-ac42-40dd-ad64-2a2851766d68",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "638e1f56-bb81-42f2-b543-2eff0f7f411b"
        },
        "item": {
          "id": "70dbc902-3ddb-470b-bf25-d6faa804033d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5c793696-212c-410b-b4f3-0459b53f0b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0d9147-7dce-4f24-8bf6-86fd713570ce",
        "cursor": {
          "ref": "e51c40f6-2a2c-46b0-972e-ef8eb87b1e4f",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2e1c39ac-124a-4dd2-88ae-44cb62eb7d14"
        },
        "item": {
          "id": "6d0d9147-7dce-4f24-8bf6-86fd713570ce",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "67d207fe-1c34-4ae3-a207-5887951bc24e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1edde9c-2425-447c-9020-d0038e28f433",
        "cursor": {
          "ref": "cdbdc8ea-c430-485d-b276-d0e949233d88",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "28207340-24c7-4b61-8e58-4b19acb0ffca"
        },
        "item": {
          "id": "c1edde9c-2425-447c-9020-d0038e28f433",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d10a4d13-ddfe-48e2-a9cd-3ad3aa9c59d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6fc4c88-9382-4934-affc-9fc674b0a541",
        "cursor": {
          "ref": "92352d88-e432-40fc-ade6-7e7f1258d1fb",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a1589e8b-0fad-4cc0-b885-b7fd80a63e95"
        },
        "item": {
          "id": "b6fc4c88-9382-4934-affc-9fc674b0a541",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c050e453-76f5-4418-a959-552c076b353e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48c1c26-ab98-4d01-b5fc-099ea0837264",
        "cursor": {
          "ref": "fec54c59-6389-4ae7-a31b-c9e0095ba739",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "65653901-8d73-44e9-a361-1ba4b782774b"
        },
        "item": {
          "id": "d48c1c26-ab98-4d01-b5fc-099ea0837264",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3f71f5ac-c71c-4b7d-9ed1-e6f990002b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773f3cb2-a599-4d6d-87c7-2cb081fe2e8d",
        "cursor": {
          "ref": "db1ef7f3-13d6-493d-b2bb-31679dea35e2",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e1bc5ac2-d675-4ca9-916e-9012632ac67c"
        },
        "item": {
          "id": "773f3cb2-a599-4d6d-87c7-2cb081fe2e8d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "898f1c8a-59f5-4b5f-95eb-0aebfa1a8ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e676fd43-e1a1-48cd-b581-ace7016f67db",
        "cursor": {
          "ref": "be482dec-488e-44f6-ad08-3a8949cfb656",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "29a738c2-cf11-46b0-bc9f-9d6c52ce8713"
        },
        "item": {
          "id": "e676fd43-e1a1-48cd-b581-ace7016f67db",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8f614b1e-d3f0-4046-80a4-01e2afad92ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e8d8ec-df27-45f8-b12a-2b74aa3316b6",
        "cursor": {
          "ref": "a4e2e5a9-83f3-4792-961f-6a790cd2c082",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e83f4257-a721-4b5f-9b5a-ef705bf8338d"
        },
        "item": {
          "id": "59e8d8ec-df27-45f8-b12a-2b74aa3316b6",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1afb3c21-3eee-4a80-a8f1-46a7a7d90d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2cc9f8b-f12c-4631-ab86-18aa249e10bc",
        "cursor": {
          "ref": "8dddb774-13c3-4280-af63-ace63fb7fc8d",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3f74ba45-8f09-422b-9fbb-f51aa53fbae3"
        },
        "item": {
          "id": "f2cc9f8b-f12c-4631-ab86-18aa249e10bc",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "11c9c152-bf93-48da-bca6-b8ce501eec9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1df1b6b-3e23-4764-a43f-4f3c719f8cbb",
        "cursor": {
          "ref": "ef13b520-d48d-4cfd-b744-ca369b6c0a87",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1802d54c-dd06-4ecb-b5c6-0ede724170d6"
        },
        "item": {
          "id": "d1df1b6b-3e23-4764-a43f-4f3c719f8cbb",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "81aec9f4-25e8-491b-9a8d-96d83fbd358a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1f17f5-9be5-45e7-9cd8-b6fcd0c11d36",
        "cursor": {
          "ref": "0b3f4a55-2d6d-4e24-a2ca-9dab5d955fd5",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "030613a9-0edf-4b77-9e78-58743685166f"
        },
        "item": {
          "id": "fa1f17f5-9be5-45e7-9cd8-b6fcd0c11d36",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8e495e69-9b5e-4e8c-aef6-2462210b1667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9ba469-3df0-4b37-8238-6503535772b5",
        "cursor": {
          "ref": "1915ba27-b4d7-4ba3-9464-6e3d4ac88a77",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a1462007-e21e-4f9b-840e-3ab3adee6fca"
        },
        "item": {
          "id": "fb9ba469-3df0-4b37-8238-6503535772b5",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "dda1ec08-ac6a-4ce5-b594-80ae5356982e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691f0412-f3b6-432b-957f-21c74977db8d",
        "cursor": {
          "ref": "79ba76bd-be0a-4253-bf87-46e853c304b7",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f6fb482f-96c4-4148-a0aa-3b8e2d5e223e"
        },
        "item": {
          "id": "691f0412-f3b6-432b-957f-21c74977db8d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4fa5a1db-7573-4fdb-86b4-3e1b56078424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86be8681-5d50-43c1-93a6-6d4cb7cbc26b",
        "cursor": {
          "ref": "406df2d0-e26c-4031-bc9e-341e8bece1be",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8fc59902-9fbc-49c2-8862-ff5698926daa"
        },
        "item": {
          "id": "86be8681-5d50-43c1-93a6-6d4cb7cbc26b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "750cc896-225e-4015-bb98-a731c6700061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b86583-aa3b-498c-adf1-4ec7c47c3cee",
        "cursor": {
          "ref": "272edf29-467f-4483-ac18-0bf855b7a600",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "41ee67d5-158c-4b12-963e-fa828b155619"
        },
        "item": {
          "id": "41b86583-aa3b-498c-adf1-4ec7c47c3cee",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f3e487e1-8883-46b0-a5cd-b567113fd24c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4298e274-19bb-47d3-a49a-39d8af2ae0bb",
        "cursor": {
          "ref": "1ef19087-9fb7-47e5-a4f2-f4c318b73a9d",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d00e30f6-be6b-444a-9e6c-f49d75e52bec"
        },
        "item": {
          "id": "4298e274-19bb-47d3-a49a-39d8af2ae0bb",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5840e630-3c00-452b-b039-1e3223382202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6b10e1-a572-4775-adaa-7d9606ce0f14",
        "cursor": {
          "ref": "c122fe17-d0b2-42c4-829e-52b547bf3ad7",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "af8c4c79-0158-4343-8749-eb51bb81c25f"
        },
        "item": {
          "id": "cf6b10e1-a572-4775-adaa-7d9606ce0f14",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "43c5b150-89b8-4dcd-8764-3c78ab5fe383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2eae2f-becf-4afe-87f8-df34f229744c",
        "cursor": {
          "ref": "c21bd12d-ae7e-4a64-a36d-b18e9608ca56",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9d046a84-7cf1-4cc1-9ca0-9e1752ded1b4"
        },
        "item": {
          "id": "4a2eae2f-becf-4afe-87f8-df34f229744c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a7e6a8ff-74dd-4470-b369-7f405f8931b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b49fe94-bc8d-4029-b6c1-3cccb3f4af3d",
        "cursor": {
          "ref": "acd2f866-8c85-4768-a414-029a345cc4a4",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4c5ff250-9011-4c06-b145-b0014635cf2c"
        },
        "item": {
          "id": "3b49fe94-bc8d-4029-b6c1-3cccb3f4af3d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "076e70d8-980b-4a23-a39e-d970f3503bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17875a13-b662-4095-b614-e5c05a07581a",
        "cursor": {
          "ref": "1a48fd72-e324-4547-9682-c0dcc2077761",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b65c6cd2-4d33-4fd2-8b93-b15c8a34580a"
        },
        "item": {
          "id": "17875a13-b662-4095-b614-e5c05a07581a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c19276f8-9af3-419a-a9fc-5b4963b0d83d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1ec8a0-2447-44be-8669-7e62ba80e06e",
        "cursor": {
          "ref": "aa09497f-2f2a-41df-80f0-2bf3f617db80",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9b39d66d-9f6e-4a4d-a486-7ceb55806aec"
        },
        "item": {
          "id": "6e1ec8a0-2447-44be-8669-7e62ba80e06e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "00d9d000-aaa6-4537-89c7-4c1474e74d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362e71e2-a155-49bd-a1ed-d88da189bee9",
        "cursor": {
          "ref": "997fefce-06b3-42b3-a985-7c8a5053e61d",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1137a19d-51bc-47c8-b259-f7e52e308122"
        },
        "item": {
          "id": "362e71e2-a155-49bd-a1ed-d88da189bee9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "fd9d85b0-543b-409d-98d0-beaa1ffc9d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dedfffc-efe4-464a-8cc3-5c1b81893195",
        "cursor": {
          "ref": "614d9c7e-5318-4f8d-b1a2-402fa6075c54",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b7ef0391-55da-4c53-bfd8-50b543b33153"
        },
        "item": {
          "id": "5dedfffc-efe4-464a-8cc3-5c1b81893195",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "710cadbe-79da-43be-95d3-c623185ae302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b80c56a-c694-458f-9cbb-40587971aa9e",
        "cursor": {
          "ref": "9877fa87-e96e-48ba-b28f-a1750d6060fb",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4df0f9df-f8f1-45ad-b895-278ba97576a1"
        },
        "item": {
          "id": "6b80c56a-c694-458f-9cbb-40587971aa9e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f15115a0-17c8-4419-94f4-5cb8a3240fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d06cf6-7674-4702-b57f-548ff682eab1",
        "cursor": {
          "ref": "29d0040f-69a1-470d-92f3-9fcea113d737",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5393340d-1d3a-4fcb-85b9-99e9b84db825"
        },
        "item": {
          "id": "01d06cf6-7674-4702-b57f-548ff682eab1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "972cf107-2da3-4ada-97a1-feca4bc5845d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5317975-884f-46f0-846f-45b01fa459f8",
        "cursor": {
          "ref": "9011512c-d929-44b3-a2af-941faf3bd91a",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c323a6c6-e0b0-4dea-86ae-f88e2d693baf"
        },
        "item": {
          "id": "e5317975-884f-46f0-846f-45b01fa459f8",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1f2360ba-9c1d-46c9-bc6d-7a360a3d7d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d71e3b2-9a8f-40a2-9382-f36b07cfcf7e",
        "cursor": {
          "ref": "a5d9db80-2a12-43cb-ada0-cbc945fc2891",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6ce6e276-348b-420a-9bac-2f38d7313fd0"
        },
        "item": {
          "id": "1d71e3b2-9a8f-40a2-9382-f36b07cfcf7e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "11ef9a0b-2085-46c7-8836-821f4f126703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c9b49b-f314-456a-b6ea-07a25a684103",
        "cursor": {
          "ref": "21c4a7c7-528b-44f6-a52a-aeb61bc67980",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1ef2df21-74ee-42ee-a513-6ee110b7276f"
        },
        "item": {
          "id": "b8c9b49b-f314-456a-b6ea-07a25a684103",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "cdb8749f-4787-4cbd-99ab-2f2b3c11a9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a93de44-8a70-4e9c-a141-d0d68c9009b9",
        "cursor": {
          "ref": "f13fc5d0-0b00-41f7-a4a0-fb5dc50d93cc",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "96d71fa9-9fb9-4d51-807b-97e4cb98af3f"
        },
        "item": {
          "id": "1a93de44-8a70-4e9c-a141-d0d68c9009b9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a5e85e23-fc46-4b8f-8a4e-88c2370bb335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb20b5f-30e4-4f7c-9c5a-54f840a0e9a9",
        "cursor": {
          "ref": "5ea4822e-5bf6-4108-bcfd-b296f75c0ee6",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "637d3353-32d3-49dd-b787-b8e13a5a512f"
        },
        "item": {
          "id": "afb20b5f-30e4-4f7c-9c5a-54f840a0e9a9",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9caacc59-f3ee-4aae-9ce5-d84edfea6137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2124b60b-0329-4be7-abfa-774efe69ecdd",
        "cursor": {
          "ref": "bea8d1cf-a9c4-4ad7-a6f2-e54904bcba7c",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b89bbd4c-08ff-44a5-b582-9364b40c4f1b"
        },
        "item": {
          "id": "2124b60b-0329-4be7-abfa-774efe69ecdd",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b0d75deb-ab14-4878-9128-6a1617775c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc90567-70a1-4012-911a-95e00107514a",
        "cursor": {
          "ref": "17b3e913-0652-407d-824a-c46b6393a919",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1e3b7b10-474e-46b4-a01c-2f367c8fbaad"
        },
        "item": {
          "id": "bfc90567-70a1-4012-911a-95e00107514a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f6267b9c-3785-481c-ad83-bbb3b67df064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a6c7d9-25c7-4702-9e2e-ee46650c2d7b",
        "cursor": {
          "ref": "e55e88b6-c60c-4a7c-aa14-ef34a0fa6c1b",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "413699a3-e8e6-4e58-802d-f07b5304b3c4"
        },
        "item": {
          "id": "30a6c7d9-25c7-4702-9e2e-ee46650c2d7b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f8719886-f02a-480d-88a3-d3e6c9042743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d977055-9bfa-4e78-922a-a5e64811a75f",
        "cursor": {
          "ref": "1f6e1451-e44d-4919-a85e-4615e1532401",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f8f5cd78-683a-4d62-92b1-b1ce5faad62d"
        },
        "item": {
          "id": "6d977055-9bfa-4e78-922a-a5e64811a75f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1061b06c-0b8b-42ef-b50f-4f3d3a65f156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6ffc50-2c90-4b77-9cb1-e535e25c1e65",
        "cursor": {
          "ref": "09b98a8b-ce34-4bc0-910a-43230ebbc1b2",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "78729138-9dcc-44ba-9bdc-d533133def71"
        },
        "item": {
          "id": "fe6ffc50-2c90-4b77-9cb1-e535e25c1e65",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5cabfbe9-fb28-455f-bc2c-cdf6c83e06a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63983ce-7570-4469-8238-28ad4e027c32",
        "cursor": {
          "ref": "b4c4cd7f-ee86-4a94-9505-abd45de91404",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f141a1a6-bb4e-4e8e-b3eb-59f5a548ebfc"
        },
        "item": {
          "id": "c63983ce-7570-4469-8238-28ad4e027c32",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "61896bff-ee4b-46f7-a607-16262a94c4e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33e8cae-9fc6-4435-98ae-7d1a9e6fc2cd",
        "cursor": {
          "ref": "a095fa16-25d6-463d-acf5-330aaf0a812e",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "461a297d-2e74-4553-80bf-b174783aa3bc"
        },
        "item": {
          "id": "e33e8cae-9fc6-4435-98ae-7d1a9e6fc2cd",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "18cfb87e-68a4-4956-bf31-2d0986592797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6e704c-8974-4fab-b62d-0d3b8f7c99e1",
        "cursor": {
          "ref": "d6a71164-f4ad-42ed-afb9-196c586f40de",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "191d0023-b35d-4913-abc1-5548f2720810"
        },
        "item": {
          "id": "db6e704c-8974-4fab-b62d-0d3b8f7c99e1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0201ec54-47f6-4b5a-b27e-dacef2e52f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a5f368-9a59-4d73-9ba5-f6e8282f69eb",
        "cursor": {
          "ref": "dbf21512-c0c9-409b-9190-b28a2baa966a",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "12214f0d-9a78-4596-8157-7ab6c490b33f"
        },
        "item": {
          "id": "c3a5f368-9a59-4d73-9ba5-f6e8282f69eb",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9ece2168-6089-470a-bdc6-342fc4af0540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64da9f59-9325-44e7-9b88-5635e305768d",
        "cursor": {
          "ref": "99f98bec-013d-4582-88ea-e8f2783cf53b",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c576c908-b582-44ab-9e4b-11eee5dc2214"
        },
        "item": {
          "id": "64da9f59-9325-44e7-9b88-5635e305768d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d7daa81a-63c1-46b0-b949-3fb34541a5a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec818a5-ca88-48b6-840e-45612537de2e",
        "cursor": {
          "ref": "f25cc86c-33e0-4a3a-b855-ff6548eac34d",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "15624e01-9b5e-432f-8c5c-2850c491f1ae"
        },
        "item": {
          "id": "eec818a5-ca88-48b6-840e-45612537de2e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "67b8bc1e-1aad-4ecf-bb2c-5910b24b404d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc25d11a-f904-407f-8802-430038182c36",
        "cursor": {
          "ref": "a7ee0598-15a6-41d7-9c52-c5c859cc57b4",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b2209648-a707-4b94-8010-399a22f741a5"
        },
        "item": {
          "id": "cc25d11a-f904-407f-8802-430038182c36",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "18eb6aa5-444a-4132-8f43-984c5ba27881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01303abc-85b3-4390-ab3e-3d1f7880eda4",
        "cursor": {
          "ref": "d6b0f629-13b0-48f0-a25f-252b11e4565b",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9e624b4f-4bd2-4011-95ad-b3445302a33d"
        },
        "item": {
          "id": "01303abc-85b3-4390-ab3e-3d1f7880eda4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "83e90c3f-8ae5-4c22-baaa-ff4d51e4f93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6cfddd-9f02-49f9-9b34-fab100095bce",
        "cursor": {
          "ref": "2f40e851-13a6-474c-98f6-174da9dbcce2",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "65b76526-275b-4a63-8a1a-06dbfe3b5a80"
        },
        "item": {
          "id": "3a6cfddd-9f02-49f9-9b34-fab100095bce",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6f453c5a-a549-49c6-b7b0-50f4ac97eca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc0b940-6aa3-49e2-b6ee-7799423f1cf6",
        "cursor": {
          "ref": "4cd80d9e-f25e-4b0e-b034-78a3864865ff",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ea57e202-014d-402f-bea2-6c3e66e604cc"
        },
        "item": {
          "id": "5fc0b940-6aa3-49e2-b6ee-7799423f1cf6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4ad434c2-ad61-4a5e-9290-27fd68fffbc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829070c4-5453-4a6f-91b0-c9792bf5b738",
        "cursor": {
          "ref": "b8685209-bf23-42e5-8e11-4ae418f84c8b",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a2974a2f-e43a-4fc6-a228-2ae4757a72b2"
        },
        "item": {
          "id": "829070c4-5453-4a6f-91b0-c9792bf5b738",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1e40c226-025c-4fd0-89ee-fa8651a0e105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d870d565-fb57-4483-8c8a-2a4982a85aad",
        "cursor": {
          "ref": "cdd47f20-fb08-4266-adf7-5f7fc03049d8",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8ed8929a-97ac-4b91-a373-0a2dfca2dc7d"
        },
        "item": {
          "id": "d870d565-fb57-4483-8c8a-2a4982a85aad",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "620ad7e9-8458-465f-9bfc-8ec7a370249d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598c97d1-57f6-4ae4-9604-1236f551e033",
        "cursor": {
          "ref": "b09a5423-8d8b-4695-9f06-49d312753dc5",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a69a1922-d7c9-476a-9618-6173a5732a1c"
        },
        "item": {
          "id": "598c97d1-57f6-4ae4-9604-1236f551e033",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7faf5df2-4a6b-4e52-9536-5942622edccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca08094-1733-48ae-836e-5b63b88905a5",
        "cursor": {
          "ref": "89ba4f28-5b9b-4ebc-81a5-f724c4b284c9",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a6dc20d3-3371-4c50-a990-a21fe4bc8076"
        },
        "item": {
          "id": "4ca08094-1733-48ae-836e-5b63b88905a5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5533c3ae-3165-4744-baed-1596e42922df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1c5040-e481-4f81-881d-af6d0f5d4eaa",
        "cursor": {
          "ref": "93f8158c-d34c-4256-8413-84c8cef596c3",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6a409913-4546-4bf1-a589-92611d956fef"
        },
        "item": {
          "id": "df1c5040-e481-4f81-881d-af6d0f5d4eaa",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2c1a5031-a7c2-427b-84ee-5a3774f17e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf5c687-1089-4aae-8f2b-92e8f8e3a60e",
        "cursor": {
          "ref": "b323ded2-ef34-4cee-b4ad-5a656112b34e",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "4b69f5cf-dd72-41b7-9132-93533e19f7f2"
        },
        "item": {
          "id": "abf5c687-1089-4aae-8f2b-92e8f8e3a60e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e5a95790-0f6a-4d7b-a033-dfe8cd63237d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219ab691-2965-4c1e-87a8-5d054efe5bf5",
        "cursor": {
          "ref": "1be54848-ed30-4559-a7da-eb835125a3c4",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "b8adf6ed-eabd-4b0b-a85c-18ed9e5a6c8a"
        },
        "item": {
          "id": "219ab691-2965-4c1e-87a8-5d054efe5bf5",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6c174db6-429d-406d-8fd9-09d812fd4d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e79369-d55f-4f69-941e-ea32fbd94427",
        "cursor": {
          "ref": "780d8f4d-6437-44ee-9104-75aea55130f1",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "efa96195-a475-47db-9760-a9df7bf73cc8"
        },
        "item": {
          "id": "16e79369-d55f-4f69-941e-ea32fbd94427",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "087b2256-0549-4bef-8234-7d7c838d7828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683335f8-6f4c-46df-8762-529467311d84",
        "cursor": {
          "ref": "c03e970f-5101-42f8-8e35-be035a1274d9",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "f613b912-7db7-4a21-adb4-ec6350084f5c"
        },
        "item": {
          "id": "683335f8-6f4c-46df-8762-529467311d84",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2996c79b-20af-4b09-824f-f1e2f6b3213a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce55826-42ea-47f6-b990-dac367b76a4c",
        "cursor": {
          "ref": "16280432-c239-4770-b549-a8db90e150da",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "9ab111db-d66c-426b-9921-90b182c719db"
        },
        "item": {
          "id": "0ce55826-42ea-47f6-b990-dac367b76a4c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d148f671-7d5d-4d39-80ef-b0f0c9dd8561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e842f9c9-8e79-4d19-a37b-f857770955cd",
        "cursor": {
          "ref": "80fdf885-001b-4859-8021-e3fc9ba677f4",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "8d37405d-55af-45b1-9c04-e802dbf4e892"
        },
        "item": {
          "id": "e842f9c9-8e79-4d19-a37b-f857770955cd",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9b82d837-9acf-42cf-9e85-4a0613071a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd6bfcf-9f22-422d-9e2c-c0ae41c043ef",
        "cursor": {
          "ref": "c1d659df-ff7c-42ca-9507-c7ffb36559b5",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "004075bb-e495-4f14-95c5-7212bd4d1e58"
        },
        "item": {
          "id": "bbd6bfcf-9f22-422d-9e2c-c0ae41c043ef",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d84af4de-d6f8-48d9-8023-4d07b3ac2db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528eff22-2936-41cf-af73-c8064363f882",
        "cursor": {
          "ref": "3dc2557a-a60c-4a6b-8629-ff6382d5bf50",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "4ae7c206-06bd-4504-aed3-cd642dbc4a33"
        },
        "item": {
          "id": "528eff22-2936-41cf-af73-c8064363f882",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c6635dd6-7aeb-42bc-bd35-1b3d24377fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f29347e-ab80-4899-bde8-9129b5052925",
        "cursor": {
          "ref": "4985b1db-420e-45da-abbc-0848edcd4e5e",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "1df14a12-4dcb-4441-b53b-cd5a0f24a36e"
        },
        "item": {
          "id": "5f29347e-ab80-4899-bde8-9129b5052925",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "779a75d7-d16d-4437-ade4-8b237f8a275a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdfaa0f0-bc11-4528-a1bb-f68e9e7efb8d",
        "cursor": {
          "ref": "ecf75170-5967-4d66-8d13-307016b12196",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "9e68bd68-1aeb-4ec7-b82e-c26e2779d631"
        },
        "item": {
          "id": "cdfaa0f0-bc11-4528-a1bb-f68e9e7efb8d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2b05746e-b4a7-427d-8799-d781d1261de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f20ff67-aadc-4ea9-a0bf-45b3a98817b0",
        "cursor": {
          "ref": "3168bd2a-5206-445c-b2a9-25fad8856e35",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "7f0dfcae-c503-41b9-8117-b36f4f887e12"
        },
        "item": {
          "id": "7f20ff67-aadc-4ea9-a0bf-45b3a98817b0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "350ffe37-9871-4976-b1e2-3ce04ecd01ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32be838-d5fd-4c24-afcf-a406174a87b9",
        "cursor": {
          "ref": "72b9e7ca-8e3e-43f5-a0bd-d229611ea34d",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "762e1a0e-5876-45de-8b64-11681d6f3640"
        },
        "item": {
          "id": "c32be838-d5fd-4c24-afcf-a406174a87b9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "347a2059-5a58-4caa-8f4e-6e5b91ce594a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f174a8b4-e329-44ff-bb3e-d05b0116fced",
        "cursor": {
          "ref": "ebfaa68e-0e38-460a-ba09-f7739e759b78",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "c88a38ea-2e8d-4738-b822-18bb0ed25984"
        },
        "item": {
          "id": "f174a8b4-e329-44ff-bb3e-d05b0116fced",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1de055cd-3dae-4946-b337-3eb350af9482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6f13bb-807c-4b0c-8ae3-c0a8b8c250ed",
        "cursor": {
          "ref": "234d27bb-e350-4bc5-9e93-bc63aeeae9ce",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "2d4fa4e5-0b1a-4abd-8b79-7f565d5746f5"
        },
        "item": {
          "id": "2a6f13bb-807c-4b0c-8ae3-c0a8b8c250ed",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "87b0fe7b-a775-4e40-b824-1ed4e666f9a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346b56a9-da62-42ce-8e69-e8a4b39ce5fe",
        "cursor": {
          "ref": "13f47103-d860-46d3-bffb-00fa72f8014b",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "c7a03b8b-e962-4f13-b3e0-8338ab1cbc2a"
        },
        "item": {
          "id": "346b56a9-da62-42ce-8e69-e8a4b39ce5fe",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "96967ae6-c2f1-424a-a603-4e7e163b9554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94de2262-807f-4a4b-976d-aff4c80d61a5",
        "cursor": {
          "ref": "51770526-0f34-4003-b123-a1ab4a00c1bd",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "fe68839e-9d72-4463-b602-c4db284f0d1e"
        },
        "item": {
          "id": "94de2262-807f-4a4b-976d-aff4c80d61a5",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "876cb8b4-a456-4fa5-9b0c-4a3abea7a4e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1575fbd-b069-4ae8-9eca-18c655a6d046",
        "cursor": {
          "ref": "f50b4dbd-5282-46d3-825f-19898209b242",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "10b7c488-edf2-4b8d-b524-e1a3dd4f3dfe"
        },
        "item": {
          "id": "b1575fbd-b069-4ae8-9eca-18c655a6d046",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "050fb9f2-e8cf-46f0-b7d8-9ea1f1e5fd00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80293b18-b937-47ba-bd70-0bc817866b39",
        "cursor": {
          "ref": "8b5613b7-201d-4d02-8d70-8c6af3ab0f97",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "83171709-a17f-4d28-a3e3-060a8b3d0d70"
        },
        "item": {
          "id": "80293b18-b937-47ba-bd70-0bc817866b39",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0f3a52ac-ef4b-4c36-840c-8681b2a6a503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a32fc25-b34b-48fa-ad7a-3f1baa25400a",
        "cursor": {
          "ref": "a871ea6a-29f3-44b4-87eb-34c0ff814818",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "5b6215c0-ab94-49ce-8df5-c68e6b03b194"
        },
        "item": {
          "id": "6a32fc25-b34b-48fa-ad7a-3f1baa25400a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4a4d4012-4623-4333-806d-2cee8762dd60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecdc40d1-2758-4291-948d-83aa22803f77",
        "cursor": {
          "ref": "6b7b0233-3c74-4673-a665-f04c5dd931f8",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "e4d576af-1ecb-4504-a080-b8aa41f26704"
        },
        "item": {
          "id": "ecdc40d1-2758-4291-948d-83aa22803f77",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "fc064483-f5e8-4460-a131-076952701364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df49b174-ad39-472d-ab85-a4430cf5eb32",
        "cursor": {
          "ref": "8e930d8f-1b1e-4dff-8ba3-7630dc2e3716",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "77e0e585-88fc-4c8b-be88-28fd76f88cdd"
        },
        "item": {
          "id": "df49b174-ad39-472d-ab85-a4430cf5eb32",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "81f43084-95f8-4275-a3d8-45678210c1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0c0db5-398f-488b-bcc3-484883d270d5",
        "cursor": {
          "ref": "0d1492f8-e9d2-455c-8be8-33aea6a46b10",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "22502f41-0513-4ec9-902e-c2400d4863c6"
        },
        "item": {
          "id": "9e0c0db5-398f-488b-bcc3-484883d270d5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8afd0461-6a1a-4949-bf6b-bcaea7428945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f227441-7ef9-4099-ab23-9e51e0fd6c2b",
        "cursor": {
          "ref": "186a0a8d-313e-4b3c-9748-4bc64bb6b5ee",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "327216e2-7ba3-4e18-a07e-06d0779a27e6"
        },
        "item": {
          "id": "6f227441-7ef9-4099-ab23-9e51e0fd6c2b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "cfb81438-4c5e-4550-97f3-640515d47a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d380c3-d858-46c0-9f60-df4de18604f2",
        "cursor": {
          "ref": "2a559669-c080-491d-a266-36953fa6c29b",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "1da405d5-bf1b-4254-a165-89c3089fd805"
        },
        "item": {
          "id": "a3d380c3-d858-46c0-9f60-df4de18604f2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "fde472a8-fdff-454a-8b3c-e199aee78733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c9e065-f552-4c1d-ae64-12d07dcc592f",
        "cursor": {
          "ref": "a1f852f8-c538-4570-b373-735cae7dd8d9",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "e1b8bccf-997c-452a-9d3c-cb1072654799"
        },
        "item": {
          "id": "f3c9e065-f552-4c1d-ae64-12d07dcc592f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "eacf4c4a-3c32-472a-a7ce-d522b78894b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ba609a-d6cd-4c8f-bc5c-477821a63a5a",
        "cursor": {
          "ref": "7ecdf08a-4a4c-4728-99c5-3b69b2e7f4ab",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "3f7bde2e-e21c-46d3-afa4-4ebf9b1f7a6f"
        },
        "item": {
          "id": "02ba609a-d6cd-4c8f-bc5c-477821a63a5a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "acd866da-f5f7-455f-8498-fce0b8e0c9e8",
          "status": "OK",
          "code": 200,
          "responseTime": 30,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c72ee7-89c3-43e8-8dce-3f1ddb8d421d",
        "cursor": {
          "ref": "f350b5ff-911d-4fb6-b375-8b2f82219681",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "f8ed7704-68d1-469a-8042-f30fed46c8d2"
        },
        "item": {
          "id": "15c72ee7-89c3-43e8-8dce-3f1ddb8d421d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4b524364-359d-4a58-9748-452ac4d597a7",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "affc1f49-bd61-48a7-9718-7de202544f8b",
        "cursor": {
          "ref": "f7fc82bf-f00a-42dd-8f9b-9fc3abe030ca",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e5eae38b-a831-426d-8886-52e37af34dba"
        },
        "item": {
          "id": "affc1f49-bd61-48a7-9718-7de202544f8b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "78c0393f-1d2d-46cf-b35b-b5056b5d9536",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffdfc32-bada-4fc3-8c09-099562b1a3b4",
        "cursor": {
          "ref": "27ca5e26-0ae5-4762-93ea-7cb93c0e0d7f",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "bdd708eb-f684-495f-9caf-2e75da1a8277"
        },
        "item": {
          "id": "6ffdfc32-bada-4fc3-8c09-099562b1a3b4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7ff5de1e-33ba-43df-b44e-864d065c4d61",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffdfc32-bada-4fc3-8c09-099562b1a3b4",
        "cursor": {
          "ref": "27ca5e26-0ae5-4762-93ea-7cb93c0e0d7f",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "bdd708eb-f684-495f-9caf-2e75da1a8277"
        },
        "item": {
          "id": "6ffdfc32-bada-4fc3-8c09-099562b1a3b4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7ff5de1e-33ba-43df-b44e-864d065c4d61",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3585b405-bba5-452d-b5d4-6bd8e6c5013f",
        "cursor": {
          "ref": "08221cf8-e7ef-4874-8381-b43e0aaadec1",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "de9e739e-e8f5-43b1-a506-7de9db724061"
        },
        "item": {
          "id": "3585b405-bba5-452d-b5d4-6bd8e6c5013f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4fba6af5-8388-4b27-bb7c-5bd229b6539c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3cdb61-acd4-49a2-a20d-796811913ce0",
        "cursor": {
          "ref": "bf988789-2fd4-4d31-86c9-72c0decb4abd",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "ef04010e-f151-491f-a6f7-e84b952160dd"
        },
        "item": {
          "id": "ac3cdb61-acd4-49a2-a20d-796811913ce0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3ad07568-06fb-469b-aa5d-f665f995ec02",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}