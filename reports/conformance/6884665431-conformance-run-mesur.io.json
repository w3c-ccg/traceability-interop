{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "cc3a0fc7-79ee-46dc-b3e2-1b48f8e81ce3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "dc6f1baa-e8d5-4b74-b1be-df250e911fca",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ee461804-c194-41fe-9767-e913ad47d2da",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "687b13d4-0493-46e9-9faf-6a63f3174b9b"
                }
              }
            ]
          },
          {
            "id": "8349e7e1-e211-4964-82d2-66e6ee5077fd",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "40cd252b-cd33-40d4-a07c-6f7d282488a8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "71b1828a-e13a-4634-8915-58caa0fb747e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e1aba1e6-66b0-4c3b-bec9-4a4c1646fed3",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "82bbf422-c717-44f3-a2dd-f1955d9f149c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2397becf-a7b3-4f1c-845d-65295d320ecb",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "46ffc479-2b7e-4303-9c20-1f4810207cd9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "42130c88-da5d-4765-ae34-5698ce24886a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "59944f18-66ab-468f-8040-ef37b805b1ce",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ddaac0be-006b-4647-a0c2-508810787d95"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7038911d-fb04-4b62-88f8-89931f9037d9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cde6a378-7a7e-4f80-b0d5-6b31a8991cc4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc76b2f7-9116-43a2-af77-602ce6b4f4cd",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "92e079a9-7552-4638-bf75-744db7f558d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b963a84-719e-47e1-9c8f-ba4f6a3a7720",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "17b4f4e9-3419-41e2-bb48-a8e570887a64"
            }
          }
        ]
      },
      {
        "id": "d65fe373-01e0-4406-b3a9-bcc1cec3790f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "168d33e4-ac33-446b-86df-efd4a8cd47dd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "371df1d1-57e0-46a1-8424-fa4daf3b2594",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "90c79ab9-7ce6-4a01-b813-f596232c785a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7006ca47-1222-439c-a692-2b7a276887cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1881342b-db1f-4b84-8c0d-0f2d95b446c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3c4ede-16e2-4545-a7cf-47ed38c67d6f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf06a0b4-812f-48b9-bc37-c44924abfdf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a1f5592-b985-4cd0-b604-ecb094a68d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a145fea5-8514-4fda-bd56-b658c0850298",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d41bac-94ec-4843-9d41-7c08b6ed68bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73373c4d-e5b2-4f2a-9151-70c36dd0e276"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "724fd69f-1b58-402b-9a68-9e5d3ac22773",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d0b5fbac-72d7-4d44-9405-99929a6685e2",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0155d23d-126e-4012-9366-d6c7c5f60aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4570642a-2b80-4c01-b6c6-da0f1f32b1b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2fe33e-91b3-42d7-97d6-4ac4a26e9070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d86f69d-be84-405a-ae00-a5c605553732"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8fa0944e-5b68-40ac-8511-e5a4d230d2be",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4048ac8a-2521-4e04-903c-501720cf2949",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59e73ba8-e036-4a91-9b8a-80797fbb2717",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9a79c30b-2103-4f30-b013-d0d2aebe4a19"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8a7d590d-edd0-408f-9b3e-a22fa9a779ce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f968575c-caf6-4029-99f6-ced315f7592c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9381fe80-2c56-4eff-8b40-ecb3be614081",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c66762a-02bc-4cf4-8f33-cabbd4c82dda"
            }
          }
        ]
      },
      {
        "id": "9433d53e-b129-45c2-b036-2a0e8be8a081",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "47277057-c114-4c14-982d-caba9dafbbed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3741386d-9785-4ac5-a05d-42dc5d0c606b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9dcffb25-7ba8-4b8a-8e3b-b9b2ff22767f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96cc9f84-77e8-48d1-bd11-6ef83ddab119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696525b0-148c-4894-b08f-a0aca92d4c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658ad3fc-d4b0-4483-ad3a-77428072da9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed968177-39b1-4495-a425-a6b45ffd28f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42508071-2b6c-46a6-84f1-747cb84a3904",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1111d26d-6dbf-4d3f-99ff-db73c5b5a84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "386131ec-b629-4bd7-8893-74a042af1027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d8c597-acc9-45cc-a1b3-2a060010cf9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57c013cc-f7eb-4e78-81c4-850ca3940f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e18a7ca-3f21-4a3b-91f2-61ed5c2078bd",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57f2b3e-2b25-49d7-a6ec-c0099386d3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5328c081-fcdf-4fca-8dd3-0b84a53c4658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7041239-e97d-4e46-9f78-51942ad064d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a069e6a-886e-4075-9df0-029d8a9de585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beecfd35-7ca9-4254-bab9-0e88d331e069",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab762d4-70fe-4466-9ed0-fff82cb945e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81093eb9-1f91-453f-a0fc-c7e9f5b19093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2250be3c-d0c3-4c9f-b833-31b7c189945b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93fb0d44-0b73-430e-ae72-df30ccdba3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa85af5-d297-4031-bc69-a37a68e2f42e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92e38d9-d38f-4004-a7e5-94dcea0777b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce4391a7-730e-440f-9cb0-ee603c08b32d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e90b884-a46f-418c-863e-fa5d3b58e4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf2e3d37-4a63-4d85-af38-553d2fe87de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efc306f-12e8-403b-a3c4-e51754bfc316",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e07585-daa6-41f5-a16c-5272b159badc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf5babc9-f4f3-4bf3-9890-d18cad690ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e62a23a-3720-41fa-8d22-fc97b77b7872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "916495da-be89-48cc-80f4-6efc12ff7d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407e2666-12fd-4552-baf8-fd2cf2cb723a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "facaf40f-0b3f-4110-b875-44c48377ecc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2bd269a-c451-4f18-93b1-7530774c2a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9947c8b-21eb-4843-8585-90bb5660f587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfa1597d-e374-43ed-9c70-bb017caffef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e201ed25-0578-46bb-bc29-7989b26c1976",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62f64c1-b1cb-4141-a344-51a13d6c3322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b2134a-a59a-4fa3-8407-2f9a227de90d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c8e6f1b-4c63-4207-a873-d54c256ad1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d26ba20-625a-48af-a8cb-48f774142cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59839da3-01d1-485c-941b-467ec6455c20",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "192d8c90-66b3-4b55-9193-b418ead73171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ad05bf-2c6c-4b02-93d9-e90cc2a1df99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be408502-d23e-4321-84d9-fac080131c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9e94b26-3cef-43d6-b26b-f4752980a3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3803be1-a560-421f-8970-8e0abdfd7cb6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ffaad8b-a4c5-46ca-974b-f9eb669819f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d215d6a-d788-4581-8661-0468dc2b58d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87708f6a-52e9-4829-96ee-3aee15465244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa342628-84e7-4b9b-8203-ce918d46be62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192a4f78-5419-4544-8f15-2c8606bd21e1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e28a896-57e6-4d10-9887-fe6c75a6f114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33b9cf6f-7e33-4c2d-b01a-6c507755fdaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507b96b2-666a-40b9-9359-994a29fad8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8890ef1d-2514-4986-b2e2-25ac541ee16a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772b43e2-c2cc-42dd-973b-706bc7657605",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd90cfa-de2c-49db-bd09-23e0c512e136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "340d2376-475c-4079-9816-a41555810131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "348bbade-d8c8-4238-bce1-f6627e25ee93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79b783be-159e-4006-9929-06e59467ac9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475935a7-50e1-4f96-ab86-e5daa4f0a29d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dedd64fb-6ee7-4bf2-b9ca-0bd97c06dcfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8a3deb6-5089-4129-909e-66d1f3952f18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ebe938-07da-4260-86e0-fe99b5f4907f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88fb3c1e-6e11-4b43-b0bf-620fddca5b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a977abd1-189a-47f6-8da7-a1182b95c808",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d39f618-4b1f-4547-8b56-b626c6a4e6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd041dd0-c650-4972-b847-2aa7db956cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95861987-7786-4c36-9e19-a6b248082c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a9b7f8a-e5d0-4360-8f4c-22a8b03b6c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d6ef63-8c9c-4eb7-ae12-eb34bf033f9f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73efa029-c589-4259-8f1c-64dfb6dbc11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7485f0ae-c6dd-451d-a7af-2aa0f4174721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7952a620-f48f-4cd7-b4b9-ef742be4fba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "277d3295-e2c5-4cfa-a180-d6cc4daa90d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e748e8b0-d8d4-426f-9993-4c3ca3a0ab8a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a552c0-ca05-4ac6-a154-32f66e9ca0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85678fc-1507-4d84-b317-694f1a68b6a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116bf955-b9cc-49c9-b437-76b9322901d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b6e3656-00b1-42fe-b6b0-5632231aae59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3734d6d1-0b89-4317-99b8-f32827446b5e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c41f690-4b57-427e-9f07-a3d4f06b5732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f35cc547-070d-4ec9-b7e7-bf1e7a248b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8760626-7b74-4202-9799-787c4eb4168b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ef62fac-9d50-4e65-8d31-a123de01384e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ee781d-8b45-485e-8f0d-30979abe2e4d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "022fc35f-c48a-445f-aa07-1a039181501d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97c308df-8d18-42e7-8009-36e73f98af1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c43a8f-caee-4c93-b590-8a4fb6e5d47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4639985-3881-44fd-af0b-8063dba886b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efadc093-7e4f-48d6-bffe-a5799e70e25a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2676c7-e606-4232-90f0-d48708a66e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61585ae8-44a1-43fd-b282-045697ca6714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c031a92d-b92e-4cc2-a578-b392aef0bf14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da5b4c3b-4a90-4dda-95b4-d326d8220336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4f22c4-2175-49fe-8719-cf004389fc88",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d7280d-57cd-45b9-9355-29a19b096c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0fd2714-2448-4463-813f-1213d12551dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b9214a-e00a-4e6c-83b1-897e4cfa553a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "082ddf17-1e0f-496b-8fc1-c809dae02f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4616c6c4-50e1-4f46-8238-112f3f7a2a3f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e07dd0-ae45-46b2-ba94-1aacd8b04cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5b7412-e178-4a79-aa5c-4c26d93427f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a1bd70-4303-4247-a292-f77f6fe296ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de504555-6e27-4e8f-abe5-9cee87978caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5678c931-aacb-41a9-af5a-294c5258ffe5",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa96d119-cc53-49eb-9a18-0bb79273bfbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d9cdf8f-ea6c-4c74-8032-ef41715207e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb4b83a-e1e2-4c5a-9a74-8e450e0aff5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e328017d-a318-4c3d-9e03-50974beef015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea939f2-67eb-4254-8da9-766e4c49d19a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23e1c3e-d442-473f-b351-a113c4e452d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4851fb65-1ba6-4282-b6e7-d77d373a05b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370c39f1-f755-4f9b-a064-05e4fe5dd1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a03838a4-4fc2-42ca-b34e-3599bc271773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8fed54-a773-49cb-99fc-298290d562ad",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "124c6ec9-868a-46aa-a649-3d3f7d54c41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3588e96a-20dd-40c6-a1f8-31b1a2e1e2d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2849fc19-f113-471c-a3cf-df98536f628f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9912099a-e0bd-4f8b-ae7e-5ffa237c824a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9fed0e0-4377-4092-84b4-0fe0f64f3f67",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ba3620-d8a2-447b-8b4a-ae2ce499df40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ec100f-ea97-4b60-83d2-f12a90b58935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e110088e-8a93-4c7b-8490-62339336c66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b70731ee-c354-429e-a88e-87a465c10093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab8caae-09e2-4616-8e3c-8aa649721477",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4faf78e-6cfc-40bd-9f0e-65573282986d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c4ee5aa-9cb4-450e-86ec-7995e9b85402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e9f60b-5090-43a9-b5ed-a4ed6704292a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5500d0c-9cc0-4cc3-9d97-2fbcc60b681c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c88bb58-182c-47e3-b762-8d631d6b208d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e6f005-4634-47dc-95eb-a13b33868f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17989cb7-bcbe-4b49-84c2-e6d0fe0e6b20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9a6938-a197-41f2-a251-ae1e95dab01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "df3cae51-9466-45d5-bd49-96e4c9fde5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77579c9d-57f8-4d63-98cc-ef3863df9d15",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f462c6fc-d7ee-4671-98d9-780595856273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39ead141-1c66-4910-9e03-c3e5984796d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdca395a-cadb-42a2-8918-6b4cc062d622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "43ffb2d1-585b-4b57-9d1a-ef0d46b9cdc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66f0cbd-e8e2-4a81-a927-d0714c3ddd9e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eace4976-60cc-4793-8a37-39e1620b4e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eba344d0-081e-4a8a-ad97-d9621821fc95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3bd1a4b-c923-4750-907c-48d2d8f84184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a41cde6-3b89-4777-b7ec-c8fc09931465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef669a40-711d-49cf-9695-2ffcaaff12d8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da200ba-1e3b-4e51-97ba-b0624dc6f2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6882eee0-5314-48e3-8bc6-46a3ae83a094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a48647a-f62b-4fb9-be09-aae7f5650e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b83499b2-530e-4fa9-91b5-58baaed1a1db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca29323-c589-49e1-9640-2c265c3c2250",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0bb9fc-37f5-4d49-aff5-7e1cfca8c2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "814adf98-8308-40cb-b22a-1348f4c50d55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9045b940-ecc2-4b29-96fa-a6653cf73111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b4a43a7-04ab-43a6-b4db-aaecfddde1f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95c16f4-7b06-4a99-8e20-55cb955e78de",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff265d1-0c8b-420c-be7b-a67fb48d80df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f464592c-83ae-4834-9d72-ad51704d61c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9833af-ec0e-4811-80de-47e1a62d34eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "621e38f2-f143-4414-ad9c-20fd9ebc32e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5d38aa-458f-4eb1-a664-adf1c1c82276",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f171db-57ce-47d7-bc7f-b0b23eddf8a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da88496f-bef4-4f71-b097-10b45f251f5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0a9140-0494-4cf3-97f6-4457937a579e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84e8a7ba-0ac8-47ee-8a14-afc28ea5ecc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2e9427-af22-45c3-ad4a-b8a74ce1271e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94314d2a-0b6e-4cf7-98a6-2a7701ee74a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c75a7260-06a0-4922-ab98-d9177d2498a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a87640-9bc3-4a8d-a0f9-684a80d58426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa263a32-e004-4065-ba47-81ea65791cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c86d5d9-b268-4ad2-bbc6-1e81688f80c1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb5dc26-00d4-4c71-a686-13d72fdefa0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06455759-6507-4fd7-a051-edb53aab97d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763eb73d-2742-4943-80dc-958fb98728ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c1b99fbf-0300-460a-a2c2-2728858abb8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f72ecad-0b8f-4446-b9b3-691bb6033115",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74927845-7447-4238-9293-de0a8bc0aba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1362b2d7-dfad-4306-95b5-d730d5e6b7b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f7d7bf-8b1e-4f58-982b-ee156cc1b9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "678d12fe-0603-46c6-ba1f-b83060a609d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb364a3-9cc8-4459-833f-4380d9fa1e3e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91561a26-5001-4c57-8a06-0db7f50919e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d84b77a-9afc-4df3-8914-c1cc1f75504f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4504ec92-44b2-482e-a667-ce44de0d438e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d246d7f-2eca-4fa3-849c-1c6859ea9ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24831b3-16ca-41a1-83e0-f4c398c945b7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3be61ad-a114-4948-9899-f4cb778e8f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "052c2ce8-5dc7-42ac-b254-27397ac6434a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8d49e0-6fe3-4bd8-8a28-19f6f0fc29fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8191c5f6-857c-45d1-aadc-5e12e9e17775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ce41d9-63bc-43c0-8a2f-0303c7a6eaa8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87729530-c016-42c6-b7dd-79a3b5e34b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf3e465e-1dba-459e-8206-4259a836f90f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb8a159-9fc6-4b21-b15a-01b5b0f73ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f15d562c-ca77-4733-b93c-809ddebe0ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2eef1f8-19ae-4823-a9a5-138533ffb424",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffb4cc9-c929-4bff-a1f7-ad731238d68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "844edba5-983a-48b3-861a-7ef8bd2276ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b503446-1327-4f04-b967-c14700c482a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "51274702-4f02-4b56-89f4-a5a0a0c654ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a51108-0d52-46b1-8829-261aeffbce85",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8d9393-fc36-4699-a0d3-618aef1ef57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e76cbafb-9cfd-4298-9709-5bc088482810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6170c314-94e0-4de1-830c-4f612494ac68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8563b18b-e1ec-4bdf-a8a3-00cd9bdf07ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af48fdd9-19ce-40e8-9ffa-7d6f1824bcdf",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfbd48ca-d525-4873-8bef-479a59f7aa1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "219bd2a7-82cd-4538-b22f-fee2fd79b484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978c5df9-41ab-4589-b31b-ec9b0d867fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3b239cec-fa21-454e-9b62-faf700feb22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833fa9b3-23b5-4503-8f87-78bdaf6cbc56",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d4b6449-44e8-4025-9653-a74a12b4e90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "434a1485-4a15-4a6a-af6c-cf9652a94b7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6ccb91-7cf1-4f30-bc90-0077f99a65c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "98eca21d-0069-47de-9e70-1ecdd9aca342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f585e3ac-f885-4d03-b224-458ee900cc30",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df01ddf-a5a9-40b4-8906-956e14a254e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36a5e8ca-620f-4ee0-8e31-c55285a1c25f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3713cb6f-2ec5-4892-8cf0-d956e9e7f56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "de8943b6-953f-4a1f-99f0-95c31bce41ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b91179-32c2-4f2d-9622-966a9db7c7ec",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9feccc-a6e4-4863-a57f-b63f2e875c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd012f0e-c948-43f3-9454-6fa1e9b3643c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72130d7f-f55b-4b0b-80e5-c20b8d20095c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "13236955-64c5-4848-8cbc-8b8315b1b757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f762ae6-f312-4201-abd5-a48e22b2b4f2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "019945f8-8510-48ae-a757-40ec710f7ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdf79fd5-fd4d-45bd-9574-33dc9e8804f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d391afc-1946-4469-8a66-c8ca12781380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "17b9de13-844e-407c-936e-22ceaf882416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c547394-3bf6-4939-9b33-bbd44e36a6b5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a402724-fbbb-4a56-b104-0667ef7ca70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f8f2c5-3d7a-48e8-9bda-e317dc4eb466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e617f6b-1a18-4ed4-ad42-0ef445ca5f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84e2c58a-8be5-4622-8f35-105cf0e707f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96810f88-d14c-4738-9534-350763f3831f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb3663e-f947-4091-a586-5d2e2970ee14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df19759-c01f-4cf2-a722-e84cd15c6244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a156bd08-5448-41b8-8bc5-bcbf7d852c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d220416d-0d54-4f62-b5f2-e3f6b7b75358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f653f5-6579-4cdd-a187-98a183c537fe",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd31ec60-95b0-4537-9381-9837b39b5cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b93d984-944a-4d13-b343-c2a5d1fd60cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c87357-dbc3-4991-9eb5-22bc157fe86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "91644186-d36f-4d78-bb5f-dd2f6e6af635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f987b00-17c7-43aa-9a41-1baf1b84b54b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25a944e-7667-4f16-b28c-0165ce434b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59aa414f-309a-4b20-9a0f-1d0c7f0ff154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0fb70b-9f38-4907-887a-8b704eb20d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a4dbd5-8014-4a4c-b5f6-678c3b7f89e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b0bb34-ae76-45af-9650-7dade26fac7d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7dc547f-115f-45e6-beee-2ecf7005914a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ac61cb-9385-4fc6-85ca-b90d37fbba94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68faf9c0-3ee4-43dd-abfd-668cfb185c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "460f3234-56b9-41b4-ab2f-1f6b2b3c0c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84795ef3-9b03-4eb0-a8d1-dbf728f721cb",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adacef1c-e0c8-4287-a633-cb5c830c8dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2913433d-4641-4696-b425-dd9295e81508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d14f41-c535-4275-98fd-ed747771a1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1190b1c7-caa6-4308-b485-57e4e9f0fe47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ebf5e3-4bae-47c0-a05d-8159e808039e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb444ab-adae-4771-9d2e-773f329d62c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd21198-f01c-4fa5-98be-a8c0fc482f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04974d6c-dc1f-4c54-b2f3-afce3ef4b939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed39f0a-ae7f-4e74-9399-28779961e5e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf885117-d689-48b4-b6a9-1ba75c5a0bfb",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ba8fdf-86f1-4082-add9-b2fbae956a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99c110d0-89e2-4ad4-806b-17796170462f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40078ac7-43d0-4d98-9fbc-dc863141b238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60b8183a-b89c-4892-b452-f9031859fbfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5e3b0d-1be2-4863-bf2f-64b12f7b4b1c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8564ab60-8760-44dd-bffd-11f9dbd32e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36e1162a-8c9d-4008-bb13-185b70506b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8409aa7-c873-4337-b8ff-542227a41191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c70d614-d6dc-4c06-b31e-cce58f4d814a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd4eed0-2978-4444-b7f9-e0bb62d764ee",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60071e4f-68c9-4d0c-b6dd-55dc89feae8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63285371-ff58-4c24-9556-8f404d6a1fe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01295d73-e347-4a6a-9be6-8b90da986021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "21b2acac-c388-44e1-b608-5f013fdd93c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fc7e6b-eb1e-4fde-8d26-00821ca73256",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7246e1-ef47-44b4-a0a8-2ded53c0797f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa6cb64e-5f18-40c0-a17c-a764df1ba881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b169ec-a20b-495f-b044-d840678f630e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "36b0c7e5-028d-4ff0-a04b-5db506a1b44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bceac932-b4a5-4e38-808b-1b1392b988d4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49027451-a29c-44dd-a919-a1d73c558a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b92a90d-5a58-4168-a672-c764c8d8b444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e578fa-d2ac-4b4b-8531-9460c7d1f8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ab96c83-c539-4250-98d5-6168b1743a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca600117-0e57-4044-9734-a30ff28b6403",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21ad8fa-143b-463f-8737-f4a07b109554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d6c20eb-2d9e-46d3-83c4-9e3da26dd338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e07591-bacf-417a-b923-e32dc92641d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b5d8a2e-5603-426a-9a09-527ff56b1241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2591ac6e-e0c3-4751-8c59-1e3c7174d083",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05af6ad-0ae6-4031-8d5b-f8d9cca91bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a7dd1d-d6b6-4252-9f21-f31853b69d88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51c8916-5a5e-4118-8078-5bfa25201207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "723eae91-2a6d-4b0f-aef6-29a06a6770eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f7afdc-3efa-469c-a91d-8eba2555a416",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fefbbaba-8cdd-4ad9-8e4f-a66d1b86c13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d4c4d94-ec71-45e4-99f8-93990eea1778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44de533-77d2-46df-a6b1-3e5348d1cfa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "01df77f6-01ee-4621-993f-4b7c92ef5d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928d926b-8d4f-4eed-b732-b2ab357e5c03",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1f3ffd-d7d4-46f0-9169-128e09804ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58ba7950-2587-4967-8d9e-9a2a5915dab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10fb158a-c115-45ba-978c-6a8c1c5de507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b9812d3-1bbb-4ce8-9051-c3b074ebdefd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99769247-a1e3-4247-b8b5-1b93232c6133",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef63945c-c52b-443f-a41e-064e481f06ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "586973a8-062c-417b-aaef-928623a9d917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5d1c44-b4d0-4d8d-964b-3e97649606df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd612f62-5e6e-4386-960c-8ed9c6245d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e271874-239f-40a2-bb8d-fcd4101d257e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd562f1-4c52-409f-8d0e-c5b098f0292d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce1cd891-afdf-4190-b3fe-bc8310d0d64f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d15048d-4a70-453e-9910-0041134b0e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35d3aaa8-05fa-4a56-b14e-2767c0cab848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a07bc70-9c69-4821-a08f-2b0149de9392",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5de8abb-8a9f-431a-bfb8-9f571441c23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89ffe61c-ba07-440f-a647-4fbd4b297c78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a386c441-ae79-46dc-b647-093cae73c8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "892c9c41-9d0b-4d92-9bb7-5f51f1802c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e6e3112-8bd1-4874-b05e-040d59fa7a73",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973cc15b-5085-4b90-bd46-6ceb7cdae835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e5a96a-c470-4108-91df-4e5cbaf2e5d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf4d502-cc71-46f2-8c5c-f0f71b59cccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e95968d-dfb2-4682-a09a-098ec6cbdb5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae551404-4dd4-4682-836c-63c36621ab59",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21eb179-c0e1-4812-98d8-a5015d7d6cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "943a76b1-f4c2-4092-a9b6-703972b6adff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391b12e9-c8ef-40eb-ad16-c7bdd99e651b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "14899af3-cb5b-4220-a487-e87288e0d5fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04465d89-5de7-4460-a14b-8ac2b0f61195",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ada13ef-5958-4877-82e3-112e7e919b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d52e3cfd-08e3-449e-aea6-c3d665032ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c43dfd0-b2a7-4a24-b86a-870af2e740e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "649d2878-e726-4c16-be60-025828026f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e7d79e-28f2-4f35-98f4-9786a3d6ca9f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "457e5a46-9957-4ee9-b222-09978ed0c215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26ff17cf-4aa6-4331-8ea7-ab22951d7558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57b907c-f1f2-4801-a950-e7ff65eae0fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa6fc3a5-2024-4503-991b-ca7f756df82e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ffcc03f-c853-46d8-a50f-f86416f9a26e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a998410-9cdb-44fb-8d09-6d1a70b80bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b1ea27e-b06e-4001-b9ff-5098cb406e03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1fda727-1e8a-4f3e-8f1f-86d00afeb5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27357e96-496f-4977-9c34-9a4cce7beea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00f46e1-1946-40a5-be0d-bc93d18bf410",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe16ea01-7aec-40ff-af41-552705958470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "655f102f-09a5-4b58-ab63-3bfda467d13b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f64102-37b2-4178-a89b-a7d5a0887ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9639264e-30c4-49a4-9e9c-e78f634307ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a11cca0-74b8-41d3-ba66-b80720c6950b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69101872-2c9f-4294-b066-5d8851954d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0c5a65-92a8-49d5-a2d0-fe0a0d085b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1f3785-44d9-4961-8884-dd964c8a9540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0bdd2a6-e759-4c73-9553-7405c73d496f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d6ade4-7e71-4b62-ba7c-928244412ef1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ddb5e50-1a07-404a-8c7c-5fe58a991951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc00f8b2-5d3f-4950-b38f-9d25199d769b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ae8bd8-dae0-4d0f-928c-235a58174537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "857d6473-7656-47da-9044-dbdd8fc1ca12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85f72b8-f477-4b88-8a5b-8cefcb4954ef",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af691f3c-4884-4c66-974c-31d7be44e2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c358b22b-9899-40b9-a616-c6b09bd73ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b84eb56-efa4-4d53-9050-00068e1d802a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f0e99078-99c1-4517-b365-5b11937ea1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e70ccd4-61ad-4157-b0d1-900ea1bf06bf",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee40dea6-755a-447a-9313-3d5503304b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f420b8-6038-4fbc-aba7-3613edb32f24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e3d841-d539-47e7-8f75-94fdea87b4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "37bdd412-bae1-4d51-9074-b9082bd7ac28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb30ee6-027f-4402-a184-694cae5a4e73",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "051b2379-3e68-4b05-8cfa-d495c956f252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a965e2d0-fc8d-46d2-9382-0dd4e9927609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "417fe14e-c6cc-4f64-b745-2e7973e4fa9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95fb597c-e55b-4b1d-9a4b-0bc22bc0b02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62574488-ec34-4090-8dcc-10790ec2ebd7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef9e5d5-cdc0-4aca-a335-d2565524963f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f28d6b-28db-4d06-adef-f00a541856a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a7906d-2509-4acc-ae89-3a6d0cf355c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "41dbd539-4377-4d24-9407-5d07cb8a6cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ca1f57-0e65-4ac7-aede-a7f6177b6d6f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3800ef-eab9-40b8-b08b-600458600ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc8e843c-a5cb-44aa-8eef-60b6cf7cb2cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466109df-e049-49c4-bf6c-99511d2e3b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "145699be-fd0d-446c-ac18-a0862da24151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5872d2-244a-47f1-a648-c4add18dfe9d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5a3eba-b237-491a-ba23-b1f591147793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edccb9c2-e847-4c22-a9cf-e59a12ecf3cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6bb598c-7ed0-4939-a8fc-ac939529fcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "310cbd24-2692-48b0-bfcf-0fde7a43acbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052e6b87-d082-483e-982f-ca80d207ee23",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7550d03-cc2d-486c-81dd-056fa6a6342c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f290a8b-5f6d-4df1-97e1-49a2121b0976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3619a633-baf6-4660-9276-331447759681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "725a45d8-5e04-4a73-8341-267488e422d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494c536b-899d-4041-997c-6ba85384d9b7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7262cc6a-f9b1-4e16-992a-d0c4acaa82fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bf587dd-8810-4294-8ae9-1f61676380f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da643ff-ca64-46ae-803b-dc59d5df4a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2ff32c7-c66a-4cc7-af43-fd790a910d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dae71f6-0961-471b-a820-5f4053201ca9",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad82197f-155c-498e-926e-e1ffb35cdc22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "660f254a-a5ba-48f2-bd7c-f5f73438d224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5971fa9c-0399-430c-a258-7bb271aa8082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b41940-808f-4d85-84df-729f2532a424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1748839-025b-4fa9-b6e8-8b2a3ab61cb8",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed247a2-e16d-4488-a550-a5969a962547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f00fce9-2b97-4a01-b0a0-91837ee4ef7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15cd3f9c-2ded-4a1c-bb3a-bb04b99327ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ddc3e1f-df04-456f-898d-f4b5ca44d9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c85091-732a-4754-8b87-f37d4502cf00",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9ac9f3-3cef-4480-a121-07ef29e30dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c049be05-cf6c-4f10-ad0c-27a0dbc8e833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3646ff-1a19-442c-b1c7-07b3800df0cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c946651a-6aa8-483c-9a66-106ad789af75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71208f85-0bfe-45b8-a093-5916ad150040",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad10b30a-afba-4809-9255-7b4ec97d8140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b44c52-01e7-439f-b998-5901ee1601c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "facefeae-2a18-48be-afe7-a2ab0dec7a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9cc31cc2-46ea-4ab7-bd60-76f00e88394b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c527132-3790-4dc7-bc91-67163f1e42ef",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e348c4-35e5-432c-b263-0509c0a16b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65770db2-b667-41a9-918f-00a11af4b3f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3749d48d-6b7e-4bdb-989a-70a6b496016e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cccf3371-6d1a-4a70-8ef3-fad494aadce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed522b74-d070-43e1-a3ba-2df511641289",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77219c96-e3a9-4d8b-828a-1eef4f941de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7ce5afd-4665-4f05-860e-54a88674fd2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f725fbb1-4985-4d19-b607-5f0ca535714e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "077fc1af-30b7-45f6-82be-58e864f27e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b556979-d174-4ac3-ab2c-95cc4a4377ff",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d15e05-c96e-47fe-ad92-2faaedc5de13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3172b38-92e1-4f2d-abb8-f8bfe3b82364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f207008e-7f77-433a-8cb8-02a7f57b9c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "923a9736-5ee2-41a8-bb9b-bab663eb26cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30daf2e8-38aa-4f4a-9ac7-e79dc90ee1e3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3133c47-1953-4f82-8019-9e9914211fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "459e82c0-ee8a-4e42-8b63-3cda3df325ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257888d6-6b54-4101-b2b7-44c237bead5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f11f4c3c-6727-474d-887e-4c44cd71eaea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e1af0a-1007-4347-95ba-ad3ce000eea3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "133c56bd-156b-4e4b-a166-49e7394b231e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b86ae7c-0b38-434a-8dd9-d118fe4b4eda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afaea82f-c687-426e-b372-2643beacccc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9b00c13-d8ed-420f-97d7-f52b85f2334e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a570b004-025d-4239-affc-b50c30b5df78",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bac01d5-259f-487d-bc07-fe2965fd7271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d13ba16c-8ca4-4013-820d-e0eb931b3a83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0587a52e-9553-4411-9f08-332d4f26a8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fcaac5d-aa8a-4365-b186-5a7f5b769093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c704fca-3761-477d-ab98-97ee49a4c747",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f71c474-a3f2-4745-8fb0-8adc808f7b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "643cfce3-df1c-4bd1-8ac2-c093edd95825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfabffda-2bdf-40dc-be8f-b7dd9fdbc904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "48fb6a1e-d0f8-4230-820a-efc72929db30"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f974cba1-a220-4e89-8d3d-a77602909096",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "59d85638-30a1-49ba-af6e-e96f10a5cc3d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54bed6e-c1ab-4812-a1d1-139f364a46e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "716ba58f-679e-4217-80b1-b6faf4401893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e3fa99-1ee2-4d03-9b07-aea55222dcc1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1293178-396f-46b8-9735-5ccc97412096"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e1e357c-d206-4ec2-bd7b-f0055a21765f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "777af598-b3d8-4897-916c-7b486d266ff8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5218db4a-1781-4230-8e0f-8946ee69b274",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2f25361-6b6e-4cb2-99f3-f320340bd256"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e5457ecb-9f23-4491-8908-ee3e623f17c8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "08b0d057-49e3-435c-b24f-a2520ada8112"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7ffa45ba-cd89-422a-b80c-cdd4e3bbf713",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "837d89d1-e30c-42d7-b080-5147642226be"
                }
              }
            ]
          },
          {
            "id": "d280b92f-5c9f-470d-921a-e07ccdad8c1d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1004d2db-8df4-4267-9051-3e322445285d",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "0271a75c-a8a0-447d-acef-a2d72aca4081",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e39fecb-0483-4fd0-9687-f795abe056e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "84ec2c44-fab4-45be-aa42-f80a438d6b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b727b498-4601-4d6a-a2d6-db1671b3ae68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed7de0b4-68db-4475-be3d-4afe083e3b6b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fc023381-77a5-4c03-ba22-7ef4ea1cd4f7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "18e8de5c-7492-41a5-8b82-67c46601fce6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "87c2742f-6b78-4f36-9d49-f694e6005656"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a077b19-2cf8-4f57-9ecc-1e9079baec75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "49dfb892-8feb-44e9-8d32-1c7fdb6af3c2"
                    }
                  }
                ]
              },
              {
                "id": "f60105b3-3ef0-461a-b604-bc57cdf5c4f8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b421ef0c-9793-4fae-887b-0cad3833355e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "23b07ab9-c4bc-4e5b-9c39-0341cb687d20"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07ae29e0-7328-4811-98db-d735482ac33b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a9e72187-242d-4ea3-9a12-5bdf21058d3d"
                    }
                  }
                ]
              },
              {
                "id": "6506b3ee-3799-4baf-a6bc-1e4b273f474d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95a04520-ff72-4177-9489-55255a7f38b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "48175ffe-678d-4265-99dd-8e020113cda7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fac11ef8-c7be-4faa-ae46-e4ce67822dc1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d8d9bef2-a144-49c6-aec3-1c23da0407d7"
                    }
                  }
                ]
              },
              {
                "id": "e286e433-3cc0-4762-9bd7-b9b1cc216202",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e857380c-1e21-4238-8773-e6fa56126086",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b6137ef3-8d87-45ea-ac25-591037525c30"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f42970d3-186c-479c-b9a7-4d36a3b5ba7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "31b7e189-386d-4c08-8dc2-8314003e701f"
                    }
                  }
                ]
              },
              {
                "id": "9221165e-97b9-49ff-932d-feaf5f4ecd14",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "83fbf0b3-1d35-49f8-b131-517acfd3852d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "87001d2f-9a32-4472-97f8-1f7f97b67ab0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d7bccf3-947f-48c7-b10e-2b5dfe73484e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3c73a837-b298-4bf7-adea-255b6d9cf436"
                    }
                  }
                ]
              },
              {
                "id": "3e98beda-74df-49d7-ad36-948ffaebdbf0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "538589a9-65a1-47c2-9cb5-d15ccde5a74d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "741a8338-3719-4125-84c1-d062fb35bb0c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e25a54a4-2bdd-4fa7-a530-d03460176ac3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "62b8c775-3ae3-41a0-9737-08690bffa41a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5b5e357e-17f4-4350-87bc-752eec0624a6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dff7aaf7-83e3-4866-82a7-967494f7e31a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2b184b51-18e3-449e-92d0-b5a9acba4086",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d95a4147-28e1-4bb8-b27a-665873a29c36"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5dd03f8a-80ba-45c5-a804-452c7a7152d6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0d612866-7b82-4898-8c8b-0f0c28227bd8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5d552d2-3d23-40b5-827c-34c6ec60ecda",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b9c542a7-8736-4d59-b9a8-e47cf9509886"
            }
          }
        ]
      },
      {
        "id": "484b790a-b875-4e3f-ae38-ad71d40a3ca0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "02d69c2c-e69e-4c58-ba46-57d9470e7f9a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "579fdfe0-ed1e-43a0-a557-2f039708b288",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8b10bff8-7a1b-4bb9-8370-09623b20f4c6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571112ef-0f54-4d46-a48b-4cad879d367e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3316f543-4003-4068-9977-6d98d1d4a054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5fbf3e-e5e5-40bf-b2a2-ebacfc9dfe70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "af48a5b4-0c3a-4876-bdfe-3fb4c8f3104f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae7eb2b-c291-41ce-a347-2d5269f24fd7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2b62b6-2eae-4f89-a3da-5c0b56f044ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f1223d-2236-4c2c-a8ca-f55cb05ed911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a0c08c-3604-4451-b23c-18c028a6793c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a08f253-60d3-476d-945f-52b5d0c623dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c861eee-ef7b-4309-8325-79a0ecd46634",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac57b0d-70c0-4ab0-b437-d0e93f341d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a158e1b4-3966-4fa3-be60-0add7222e826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16cb613-60e3-41a1-83bd-e99d462bc78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b986ac52-8487-4825-9106-fd56ade9971d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b143540e-19db-4311-9271-0283fbefb9cb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05dc945a-3785-4326-8b12-d20c4fc2cc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c45f2ab-41d4-4294-ac2e-10da65241e7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb275569-0e28-4a11-a0dc-0d0e526efcba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05f034db-bf82-4ceb-8c47-bdeba6fc1714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a5c2ba-a589-4adc-bc73-adc8d3e8e6b9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83cfa6f7-d13b-40ea-be8b-56449477350f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e9ac6d-1084-4fd5-9b7d-0031f3d37284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2961ee42-a28e-442b-94bf-cfc40e22ceda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "582fe187-94c3-4fa0-b48d-627e82d0f662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bdb2c83-5711-4005-a6eb-ff5f3798a696",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fea1672-bf3f-42fb-a50d-a9b9d1d5a99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af035eb3-dc3d-4459-abcb-d06fa6098596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92647e83-561c-49ca-9dfb-3adcc2880416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd66d12b-61f5-41e2-8437-34c14e8c9c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f396a96c-ee3d-4bac-9941-b47f2d21d755",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ccfcb4-3f8f-484c-83a2-53e557110920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc1f18e-ca1f-4de3-a3b4-634bfb55fb7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "538b6021-180c-45c0-902a-996bf2249da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "96e02ea4-ad00-4292-8533-cbacc1876f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6fb7137-b86d-4962-a0b2-a21bea268d83",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "541865f4-a55d-4203-bf31-3ba9ff02249e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "514b0a76-0c94-4feb-a2db-ca75a6d7c2fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c13cf81-0523-4c4b-b246-bab6f26c42f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e41ffd75-9d05-4b88-9321-e7b2868e0a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab351aa6-d31f-470d-b4a3-78c2b05e1c8e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d699d2-1064-46ab-acc9-5c82c7dc569c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb1bd40b-d32c-4b10-aa76-60d49bff0539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c82b8e0-de59-4b98-9137-0c0debd927ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f19dfb1-73ca-4b1b-a02d-e700fc4dceae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b740ae6-a310-4200-b480-49678a2def19",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd976b1b-ed37-48d7-8301-bedb2c10fe23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8b7000e-6078-4af8-8a80-02004ff5397c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e57ebf9-e6d5-4ab7-b45c-493810be3747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "125a6064-fcf0-41c5-bb6d-4085243e25e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42f199f-d94a-489d-9e86-76bfd9ea6f21",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35374cf-450b-411a-ae2f-f6b2fe3b1c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "905c71d8-ee9c-438c-adea-67fd2fc28659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11286b0-3afa-444e-94aa-32d259ad08c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c0cfaaab-d0a9-4eca-8ae1-98121e976328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a719eec-4f34-48d1-ac0e-009bc474557b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88833cc8-eb0f-4477-b0b5-a5167ce9e2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "966ba12a-660e-413f-97f1-46d4368599f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd37221-0f21-4835-a6cd-1ea70659d893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b2a0b285-9925-4558-a7e2-1ead92fb68d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1810b910-077a-475f-9673-c91673308b67",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d58aeb-5956-413a-9878-1643f06ff6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14fd9e8c-bea4-4a85-b959-64c16a8beaeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843a0300-1cd1-4a0f-bf54-941cff778c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "70376737-c9c0-46b2-a0fb-7b44ebd2ffea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303c74f2-96c6-4301-bd66-ac7a5636f8b2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d68c6b4-a5ff-45f6-bd62-0e1affd4978e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e02de217-e1d8-4c83-8c68-f3607cdec9aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f74b77-2682-45bb-b2c1-9fad197693ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce15be5f-f3af-49aa-b8ca-eb757c9c38ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf148c90-b5b6-4a2c-97ed-6a206c0708d9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8588da-d9f7-404e-8f7f-eb04d4f621a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cad1e68-115f-4b49-bd02-d5efc48e16df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99941c00-93f7-4609-a484-595666587a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e12c4e8-957a-4cc5-8ba7-5d0132cee9a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325a3a64-201c-4ac5-8c6d-a9b47ee11c34",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9414bf-cc2a-431f-836c-b00b65a1b622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39332397-d4b4-4ef9-96dd-1032f2864507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb465e9-0eef-4f3a-8201-07984014cdc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "59539024-511f-4eae-8ff1-2aef8806bbf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8d8ded-51e8-4cde-9eb7-3ba1cc90a761",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd7ad6d-340c-4c96-91d9-5fe6c2fc0c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3048c794-bead-4c5b-8aa9-909afb5d74ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0206cee5-ebe4-46e2-95f3-ca2b464bfa40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b72c05d-9b41-4637-9875-dab99e839a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11ce68f-f51a-4893-ae94-0ebc02bf7716",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40368e5-6bc9-4066-9a46-8a6965d6da0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "233986b2-2cdc-4059-a066-b99102d29c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2f6b7f-b3e4-40f7-83d5-1051a8d5ea30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba1b3185-a442-4f3a-b131-1e3f014eb479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ae3de3-7805-47b0-8e66-175fca83b78d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "331333b0-2f07-4543-b1de-dcf45793a3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4255cf3c-da28-498f-9336-23f44e9f8ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5faf493a-bc5a-4c4a-9070-19b1019e02c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "694298ac-e46b-4923-948b-9fd31a50d8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d708e1c2-88d5-439f-bdf0-6927725feaf1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "510ba478-4bd5-4a7c-b986-40eb8a4d5f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c59ff4c-0ef0-4f27-b2d1-ddfa73a0970c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e26c62e-b9c4-4147-8f48-914cc2718fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58c6b1ba-6eb3-4157-8136-619936719cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5cf1ca-3c04-49ea-a483-d1b6f6ebe213",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d119b68-99fd-4f3d-a369-c3f2997ebb15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca8a5ff0-dae5-478e-a070-7015eca4c344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1693e185-dfb9-4ca4-8e01-8f31c3976fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b14e529-dbe4-4a94-a649-4ed5476a0bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daca8811-343b-4b0b-b4c8-e26a8fd11a4e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "691828ad-ce2e-4666-b554-d3c72fc82c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06226990-5807-4374-bb25-d26cb7334174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd5b0b5-1cb4-4f20-83f0-8c4f0a3e38ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "077ba9b0-ff0a-44ed-8c35-2477bdfc0d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade29c8d-e15b-46d3-bce5-8eac78e165c3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "071cab8f-20a0-4166-8d00-d563e9c73016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01760c28-a353-4b50-9205-ff45e8e10bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c822969-a675-4969-b76a-0606eb7110d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7b3b3f9-5558-46a8-810a-910e96fef616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "393c6092-4289-4097-a95e-f489436c5128",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "924edcbe-59ea-482f-92c8-4ed644b847fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c99c9c-d70f-480c-af4e-787c57626cdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d4a635-41f6-40f0-bad5-4cc2abddc900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ce885ed-73c9-460b-8e9e-38e49e721638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539d4d3b-6d72-48e5-88e0-a2eba4da3a7c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a751641f-ce69-4734-b273-9282963b58d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a1f583-15c1-4cc3-b39f-fce6d3ae3456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5f1c64-e1d7-4bb7-8d38-9a09dd911f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c950ad4-3e7a-4627-85fa-9506bedd7376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df84e1e4-d475-40ee-bfd3-a277ee9689b8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "261d766d-6537-4254-825b-fdbefb8a00ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51e633e6-aab9-4bd5-b615-883eeb95538b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1b4e63-0476-4d78-bd71-11b272e67ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3999bfa0-c459-42c1-82d0-5caf5df07755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9def5cb3-0c99-43ea-b429-d581195ab351",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d1e51a-8fd9-43e5-8333-c8b6c90f43a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4826c8c8-3f44-4eb9-bf8f-84cb27ec2d86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9370b5b4-eed2-458f-a6d1-80f69d5e27bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7eea3df4-97cc-43e5-8556-03ddcf0f38aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c265e8bb-019f-4b76-b5cb-7599707e0fd6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e488152-07dc-4cea-b78a-f3c31f144717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1af8d895-3038-4a28-80f3-8f0b6d9d14b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515f110f-563a-4ba7-9c43-a221568ee581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d465a13-7e4e-4a6c-8843-61f04ef1d69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea3eaba-0b98-4732-ae7f-d67591002925",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c9827a-7fb8-46b9-abc6-8609a6ab3d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0df2153f-3d5f-424e-b2ea-b334832c7f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f90772f-2205-44f8-bba1-5e616c2af1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac426288-eb73-4f05-9de1-c8f40c503928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c79f201-8432-42f1-b049-815ab18cd99e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a49bb7-47a9-4aa4-b863-5717c006b971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "accc5db9-dea4-4429-acb5-1a2887f99490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05658049-aca0-4de1-8299-03182364c651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be6919f8-fb15-425a-ab43-9695889d020a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f4a06af-61ed-43fc-bfb4-363fccb4dbdc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8518b491-5971-4915-88b1-da40aa1b78fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb8b5d39-f48a-44e9-960f-6a51ea4d2c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe309754-f83b-484c-93b8-125b0a6ef9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c3575cb-56a9-4b78-b20c-d7023895a747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5142854d-d2b3-4a93-82f1-b873742b2d28",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df6531d-2083-4f29-bed1-6ec81c112c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f76a6684-750b-4cf5-bbfe-0f8b1fef8a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7a017f-164f-4707-8fd4-5dc3652eb81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34944886-87dc-4fdf-8364-c5c96bd86dc0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b3fc7a32-c6f7-4cc7-b8f2-4b6843f5cfe3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "24b11c5f-ebb5-4a05-993d-c4fa0e85a50c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92be0bc8-c10a-4e14-81d6-79ca6c1f5cf6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "92806b9b-9860-4b01-8b0e-1e60c2782ffe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2680f720-8026-4b3e-8297-8ff1beb8a72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da32c314-db6e-4180-972b-53e62d41f5d4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcbeb822-528c-4331-aff1-8d18a0b2ea19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb8e0239-1bdf-40e3-af46-fca47ee7a16e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "57748f3e-d0fe-46e5-9ec0-06ade605b36c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0c02324-2f7c-437b-a151-f03a0057fb91"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa914d1f-e325-4875-9149-10a0e55a8aa5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e4fa2aea-f9d5-42f6-83fb-5f845b35f412"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f741a560-e142-45d7-913a-fe29f97431ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a9d397ea-b460-4fd4-8f50-1260b1410cff"
            }
          }
        ]
      },
      {
        "id": "5d86d18f-70b4-4a24-8a0d-766371e9e642",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "b72abbd1-9fa5-4f84-8309-8187625cf3ff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "96dc0cd0-d3f1-41c8-a081-759a9243364e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3dfbf402-ad5a-431b-92ab-9539524bb0c7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8457dce-4a99-4e2e-969a-37b1f64e4bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe657a59-adb9-4b40-bdc6-874f0bc3d4c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c8e1ec-ebe9-4b7d-aece-b2b8188089f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e25a7b49-7b4d-4fc4-8e7f-95dc544c68cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c9a694-460a-4915-971d-fc8aafe1f229",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b03c190-2718-440c-9dca-c9c8a2f939d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ad4520-bdb8-4dd0-8e10-1b7cb54c3f41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30621982-776c-41e2-873b-29880a0fed0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ee22e84-be92-40c2-8918-6f6967c6c92e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9570a5f-d6b1-40d2-9182-97275fff2655",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce629fcd-e2e1-483b-8d20-d81a9ced50ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44be48f8-cfb0-4cfc-9522-ca68e6dd4802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b75d02-ff9a-48cd-9b0a-fbb99a585b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "204cc6b7-a10e-4346-a1b8-3d2a06652bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460f85ef-6db9-4dd7-832a-3aa08676dd56",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "401b2b9d-05e4-4e0f-9c22-f48c57031c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30a9d6c7-d4ac-442d-804b-6debc2009f9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7353e13c-8482-428c-a935-4c95cf2f77ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cef41689-d071-46ad-b7a9-22c28e8651ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03294460-3230-4602-ab2e-d316b970bea8",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17456be-4c95-4c9d-a2b7-6690e8c690a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e90e000b-e3eb-4980-af62-e8f3ff5cdef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b53b92b-a4c2-402d-98cc-5a2c45d89460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e98e020-35ab-4a3b-8fd1-790eeebcf54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678a32c5-3a94-4f83-80e1-9b1cfd4bc06b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72b8699-e4db-45d0-b03c-954ff75e0717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f2a926b-54c9-4b31-8ac5-bf237505052c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2be2ab3-33a5-4079-add0-ef9cadcd2f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2d80cb5-3968-4137-8e18-ada99cea6ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83907a2-83ff-4d7e-8587-a508bff40f51",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b7fffb-2e13-4ddd-860e-92a2ae2daff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac0c2c66-6cd7-49a2-9e41-2be8f69afd3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391d8664-f338-4a19-a2ad-796fb5307e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf340577-636f-4bf7-bc7a-e9eb711863f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b97635-84dd-4da4-af21-8076a1ab4554",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4754d6-51ea-421e-bb20-d6c3bec12419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c77e028-60a2-4b6b-9b6b-8774d8542ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5b45af-d891-44b0-af23-a197ce7374a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f2d027a-3790-4ff8-b12c-1db2c2ecd3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023ba649-6cf7-4de3-a46f-97b8dc494445",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c659935-af05-46c9-bff0-30181a33756a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ca186d-7fe8-43e7-af2a-da41c4a8e0b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2718436-c760-448f-9554-eecf3d035a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53147ba6-9db7-456a-bc4f-95e13ebf828a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2764a610-fb95-4f43-9f50-238c3731d411",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67958dc4-2a1f-43f1-bf7f-9c517a02efc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a6b8dc-dc91-4960-b81a-1193a6ae45bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f66fb5-cabf-4d38-b0f0-36f9d5817f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "056abe0f-e69b-4a4c-b90d-069e68dbf546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1902245-7963-4920-a399-a01011b4c0af",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f212aa-d8ca-465e-89af-67499206bfb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d0556ee-4525-4692-a8e6-880e755594ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce1fdbf-6597-4628-a703-cd09f05cbfba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc71598-5849-4f2b-80f2-208ddd3c3f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe16761-0041-4f68-a068-f7b9e2a0f6c0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea144447-98a5-4056-8bde-9f8307db0954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c16a4fac-d549-4979-97f0-7e16733da803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f883a7-1355-4445-8531-8300bc86e754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cf0d86da-6395-4f8b-a29e-ac209a583c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b255177-e6ee-4b79-820b-b155df6e59db",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b5f605-220a-4d99-973c-ff3ad2cf8424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "406bd48f-9b6a-46bf-9d1b-30512fcfa68d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbbd5994-e157-4269-b570-302ba5c7e133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3022a8ee-d8f7-47d5-8c14-565fc18c4271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39c2e65-7db1-4584-8702-5837958a66df",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ae9e22-658e-4eee-aafc-157d9793e901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30cea083-3bfc-4574-bbf1-42186af09230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8234723c-3f17-4f42-a6e5-a54e6514f809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "81fc11ab-4834-43db-a67b-6a02436c59d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4c5bfc-c38e-47ff-b6c7-71b54d4a040f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f52427-6893-48b5-a748-37f5ca1e041a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dbba0e4-160b-4c7b-8778-75f08aff354a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb129515-49ee-4249-86da-75d7a55e2639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5c22408-0789-4e04-bf6b-2d20ba3cb7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78aa7aa-0e4f-48ed-999a-7eae975eff34",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa63c8c2-2c67-49ea-bded-f55667e2038d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a8e0c8-fe07-488b-a10b-e136300158ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ebb1b54-6ec3-4f48-8306-297f24fe6dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5967b34c-ed07-4849-b807-dd5f95d44d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f930fd44-6268-41e3-9f34-5e67312e0d9f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff94cf0-5fb9-4810-a31c-6cd80b393959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e73cedee-ed0e-4186-ab6f-f35382182aec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46de981c-6b1f-41cd-84f7-a8ca10fb3f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "aadf434d-df75-45f1-b822-0d2019f28af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f2e491-984d-42f3-8084-b88e3dcb84f0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c07654d-89de-44c0-b036-3c1ffb95ec90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da60dd11-b026-43c1-a15f-822838dfacca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dff310d-051d-454f-831b-d63d66bb9e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b99ba23-6fd4-4482-84c9-6f4bdd203dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb3f056-5bd5-4cc3-8a0d-4b26a0143bfb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa95417-584a-484c-b35e-a28d89f61989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fc69bf4-8ea3-4a94-a6c1-818652682f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785e573d-0252-4fbe-b508-07866f8965ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e6e8db6-6b51-48eb-84fa-4077e2abebb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6a2c28-e98b-4f1f-a250-895b88b30632",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8204368c-57cd-448c-9e95-e2c168093832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b13fbb9-ef82-4e22-81ca-5fd273b53322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a685653-29c1-4056-b865-d70a9f00c64e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e0f2945-a53f-47f4-85d7-27d9619b5c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425a20df-1584-4dbc-b7e4-b0d91fc825ea",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde00402-83af-4c5c-b9c5-80f646d4eadb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8494c4c-9c44-4a2f-9306-9e44113b1e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a321139-71c2-4018-b279-6c0d6a625864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c98e96ba-8678-4ac2-b613-a83fa7846a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d7950c-e2fb-41fa-a3f3-74dcdf818e76",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c11bbb-c761-4336-866e-e2d712ded853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c229af10-b2b4-4872-9194-9b69c66e6d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9701056c-bc23-4226-8f0f-c85130dbaa3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "366744aa-05d7-4b3c-8c5c-bdc202e42194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979f9291-b4ce-41e0-b410-0d281d4fd42f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "911ca81f-f75c-4a13-8d0e-cfd4810fcec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c57397-6717-4f13-9c16-9173ce927c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae90218-042e-415a-b037-e26ee1c18848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a177f326-35fa-4586-a17b-8038338ba7c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "facad171-ed1d-4393-9d92-704afec134c6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae6e02a-711b-4c64-9680-ee5457c4dc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51d07c99-52cb-4ec0-bd0d-522381ee154f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752820c2-ce8f-4a27-94d6-3fae764a2b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7da9bf0-e8c4-4d73-ae58-f573a5514bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1026ba36-4aaa-420a-b399-12c87dece778",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db5fe05-8fac-47bd-ad24-2c0e3316f1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e65e958c-787d-4376-95e5-2e17f1109dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61d3986-dadf-4b37-a92c-6c1e810a254a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a76d640-20e6-4c42-8cb3-55b6c8b07fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d088cb5-36c0-4e6e-a75f-52999e509992",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24f7803-bb49-4aef-abeb-ee17eb316448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85d02952-9dba-4e14-bf62-76a749d2aa03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca3c6ab2-5ed5-4a40-9682-6b17bea2609d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b36c1f1-d749-4b42-9f24-3735218cc4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402c87da-e3db-4796-b0cb-cc38d63adf1e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6157acb-9a30-4807-824c-cf4a886dd6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76ede896-4401-40bd-acfd-6bc6ee18a34e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca323014-e4ad-40af-82d0-e5b8d043c8d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5db325d9-dbaf-4ebc-adde-d08a9a59db01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec93acc-ba24-4c40-9648-349a90687868",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29b8109-5fe1-4c95-b66f-b39ac4f03eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec498ce2-824d-4014-9060-718a7a9d94b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1a3860-2c04-452e-9741-04089a4e8dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcdbca90-3b20-40eb-977e-704370f3cd08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d979c0b4-c705-4ab6-a2ee-05f278ae8615",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d87c11f-153d-4b61-950b-649943cfeefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a58c2523-7b72-4fc4-bb02-f5fca8873888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16a4724-719e-4afd-b931-bce0dca1b58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36b46c3b-c496-4e5d-b468-8dd1df94bb94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0987e86-9b30-4f08-aa0a-67e2ed3278ff",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c002c0d1-e4bd-41a5-8fce-9169a85a0bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04e08edb-5b47-424a-a582-c06132e23e89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99616368-ba39-4189-8612-f47c885e9e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bed75384-d0fe-43fe-aed4-fa88fe2f9371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b0fd58-cfd6-4254-a501-a7521440ea0c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "301d8d96-44b5-44a0-8017-f33fb90567f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "762d269b-b166-49f9-b0c8-1a933228201f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c749f4e-11d0-4b63-a239-92880c0841b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45abb58b-994c-42fb-975c-4cfb0b3a5a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40cb3eae-7677-4cba-afb0-3f38de64012a",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "285f2f39-3aa2-4bfd-9546-6926cd1ff449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adc41b2c-e091-4a44-8d8f-dfcebbf4a38d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8929e54a-8426-49b3-9fdb-abf4b5ab34b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "183e1580-c03a-4ece-9259-d43edb07291d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1664f59a-c44b-4d89-90b1-e5434fa04029",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6fbb3a-12fa-4f58-b01b-1e4340ffe396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52b2096b-47aa-44a1-a4fb-5deb8a485d56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b779a08-b0c4-4dba-a4ff-e3bdf3418218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dea12273-5983-48f9-823d-e713d9aa4ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414116ca-3daa-4366-a5a5-708ddfbb06a8",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca115c2b-93e4-48b2-9ad2-c3e0fec891b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb0c91a1-c4e6-4a06-862d-a7c388c02e9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770c8b03-4319-49bd-96a2-d820054dcd18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbf0ad7b-949e-465c-9246-64af019ffbf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "938fc279-498b-4171-a0f9-93c3db87e387",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79600e33-14cb-4e4f-9cbf-08b54b1d887a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cc69e97-d50f-47e6-a0ac-4e558f59574a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b1b41e-71ec-469c-8d33-3fef5f7d4ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56c25ed3-0cc0-44e0-bb5e-48e95de2c96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69608027-1fb3-45c9-bc0b-65ff16ff772a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5f1d59-d3de-4770-9222-ecc207dd41d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd65e6a-2345-492e-8a56-fd404fc9f1f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af6d534-9a87-42c2-9c35-f58d5bc8e322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e27e9c6b-73ea-4704-acfb-90c16c33eb27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ede93ba-a963-43f6-95bd-b7705b3b4b96",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641e2381-6ff5-45f0-b7fc-e83d11446392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4afbb93e-7644-4472-854a-379d82b1adfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f1a7dc-bf33-4d6a-97f9-ffeeba9cda6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04a673d2-6f33-4a07-95a4-8cac63189bea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b5c2f538-0121-49a9-9d39-43d12eb146e1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "61a6b97d-912b-48b8-b949-e856f24b3ceb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d77d9737-1663-48c8-b643-3e31e401b937",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "60e85005-3afd-4dec-851d-54e9a2877c89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1738cab5-d270-45a3-b029-15835a1d7d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f176b564-ce9d-46c7-b73c-08ac75d108fb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "842e9505-a823-4046-85f6-c3e3b57acab6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "891cd335-34d0-49c8-8791-edd8184d107e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd1d05c9-cd3c-4b57-ac25-280b60a1a9fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "896a598c-070a-42c8-9a27-c9c0cded1f4f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3075fb31-cd1e-402d-baa9-b3f541e32c97",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "33873558-347f-472e-a5ed-6d1fe7c9e556"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c3250a5f-22e1-4d16-a067-8664017c5982",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79470478-76f4-4a53-9c0b-73b1954859e4"
            }
          }
        ]
      },
      {
        "id": "d9ea8f55-b4a5-49a1-8fcc-196fca3a3086",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "81e9b567-55c8-4c16-a643-aa4a19e8c5af",
            "name": "Negative Testing",
            "item": [
              {
                "id": "82f6fe18-cb78-4ac3-b205-d1133265ec5c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a2fabd44-17dd-4b55-83e3-521214d8df5e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb098305-c2e6-4643-aad4-703d00640b15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76313414-489f-4d60-9c4e-e3f2a0b41daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0667b9d7-d2cf-4d55-b19c-2ac13e2871b4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb163d1-6f90-450d-b0c1-3e34446e9319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c3cb9a7-c9d9-4787-a933-33faca58750b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce8574a-d235-475d-8bd0-226e7c3d7373",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3796487f-650f-463a-a3be-6854fac8116f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "510011ee-dc1b-4c8e-9869-d71b157b1a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1069898-5491-470c-8e87-f5318ee46189",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97639224-d5d0-4177-8c20-0a7c2c01b74b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f82e32b6-373c-4039-83b2-977c6de02395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dbb93f8-a829-4e80-b6f9-357911dd1356",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67467661-8ddd-4c52-a70e-ba72478ecc03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b60c031a-ddc3-4b0d-a3ad-768d542d2702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8e9e5f-ec7d-48fe-adca-34652e2b8bc2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f82ecdc-537f-4ee3-b157-276ea27f6392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f03dce0-8c4b-4363-b7f8-9ea390fa5589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206ed79e-95d5-464d-842d-43fb3a8d0b38",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421db1e2-f8c6-42eb-82dc-a1b54851424b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb8b2389-eb50-4f26-8037-30db16b8bffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1631d7-c03d-4f06-bc33-24646c16b98a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bf5b7ab-df5f-4fd4-9bef-2aaec9e856ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c8fe1f-9f2b-4a04-b1f5-2aa38982b7bf",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01595283-d38d-4508-be0f-71274a27e854",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f792add-7ab7-4c36-8858-1ff7b485735a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba147c48-bd30-4dfb-8333-b66228f8d100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b63ed16-0803-4b83-a493-a84a61686546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b48c78-e19a-45be-958b-cecd9d6769dc",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf45c860-b3f6-4b52-84e5-4bb16ee28e8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8622014e-05e4-41c4-9682-a6198ea9adbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc651f5-5c94-470d-a259-b49f69b28315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7088d8e-a49b-4f5b-a4df-68bcd9a7b470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f67a497-2c45-4cab-b87a-f45ac2430fdf",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19fc9d93-f202-47a5-a9ae-26f926f914cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da865590-cd60-4ad3-a983-c01ab208a953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7ae161-abf0-4458-8cad-5ab519b58fd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5089582a-0229-460c-94fe-b9457e9c230b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4310148a-228f-468c-98ca-56a5e105e489",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53042360-ffd2-4abe-8fe7-9c758466b9a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccd269ee-b750-480b-ac41-8130a88f9550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e10c42-cf95-45ea-b70f-63f097b426e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bd6626f-6490-400b-a9cc-1ef3ef664c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4a7d02-6e4c-4ba5-ab3b-1182490390f7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ee8cdb-65be-4450-a0c7-c1ef41ef297f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "051a5389-13fe-43dc-afba-08c7f102093e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb81094-1a60-400a-88d6-acddebe3abda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d1ec59b-61ef-4e01-b140-5c5927d4592a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41c17d5-b396-419d-a89c-d711f04a44f7",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347b482f-069d-43d6-beaf-73dbac282fa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee36bba4-958d-4639-ab45-8bd771b70125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f1d7f1-89ce-4b14-857b-eb9216320d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d583509-795d-44f6-863b-73ba796ce150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e2f141-cc3e-4582-97ed-5beebb08714c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579c53ba-1d69-4226-9b25-089eb99323e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44c1a1f0-33d9-4c71-985e-cbc7da7dfeb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27c6b84-9941-4d42-a925-242263f36311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b95f2c44-aa22-40a0-ba00-f6298f3930b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbea5c69-6b2f-4b12-b6cc-7bdfd85ba1bf",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c4b952-5f5a-4bd0-915a-6285deb02b69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d68266a-52b4-41be-a168-c57c60e11fbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e239a00d-21aa-4069-a079-43205aacb04a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "551f2bd8-1e09-4d64-a672-0e32833a9370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b83db59-4e18-4c3a-9033-59dd3d3f4906",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71aa8737-2159-4fe5-9941-92fccd386405",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5efa63c0-9b72-44b5-b885-e7ed2fa19ec0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb16ed2d-620a-4e6a-8a75-fdb969d07539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9736674d-2e58-4d15-a322-c4bd7defd63b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468ff69b-9e28-4100-bd37-9b212054f6b0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efdcc0ed-6767-479f-ae3e-45493c82d25a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4ae4c53-d57f-48c5-90d6-622c01b8b674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8fdca5-de89-432b-9325-41a30cacdb6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "277ec53a-cfe1-43c3-b6d8-a49b034d7387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99ee782-c7f4-40d4-a117-db264c1005a3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b7b8e6-ca69-481d-9a1e-1dc5eeb0961e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8888ce27-a52f-4802-ac6d-3a70e55d8c86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "742eaa48-0a48-4288-b316-0f330d9e9343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "286acb95-47a1-4af6-b80e-e3c0dd06d154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c135f739-a4d6-4993-aa69-2361c33c3cf8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "111f0d86-84f6-4712-b761-9ebb03c845b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22d438fe-02bb-4338-8a92-7c223b76e5f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3663d51a-683e-462e-9efc-1edafe854946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d593b36-c417-4670-a759-6d4322292b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d0d4ba-89f3-492b-a6cf-63e9878782fc",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da621593-32d5-440a-be35-dd04c1c99910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7333c2cd-e13a-48bc-89ff-7b721c1f75c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "908d9cfb-4275-4626-a5cb-2a747cab182c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dd33836-aac6-4836-b95d-372fd8eb4c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91887d45-9efa-4c4e-9440-03d40c82a785",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46008eb6-88f4-41e4-af67-f293055ad3c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8745ff1a-b4a1-4e57-9be0-948ce0806eca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea52d17-5927-4e64-a9c1-a4a1785f8fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "983b9c60-de64-4e96-9858-52de57fb407a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9b8213-3244-4986-8293-57a29450b639",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b82553-afdb-48b4-810a-71be7b5a0e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c740546d-418e-491f-ba56-6d80da9a5f83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93699a57-02b7-409c-87a6-e3a417a78ae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77a03d54-99c1-4f5a-b362-87967548162a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64495077-2774-4875-a0fe-81ccdacfc5bb",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038ddef5-6b0b-4b69-afa7-d306f19a54c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba10392-2932-4610-ae3d-d6e3d7b9cdd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d097fc6-46cc-45fb-a3b9-1b7db7d56804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039edf11-7dca-4158-91d9-a9c2d9cb7c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1292ff-4f17-4525-8223-17329518e0af",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30aec8dc-76e7-47d2-a107-8bebbb00bf10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d30f1c97-9059-4da9-86e8-9c2e48263997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b8df94-5889-4b1a-b2ab-6869b0c6c766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0081ce9c-e210-4112-9e4d-5a98d31dd94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbd7415-4c56-4751-aec9-bb57ad3006df",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1601f87d-b80d-4849-b507-e6140c854787",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e33ef93-3b0f-428a-a909-2fa39680f995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1567f531-2d10-4632-bda4-55096d92df59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02fc6b24-e2bf-46f4-a121-6b297ba91263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2700e194-78e7-4106-8a94-3314cb9da48d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a1b6ed-f9d0-4b10-923a-f3a6833760d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c36971b-b2c1-4bb7-85dd-e78a703c1430"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a294ca88-a497-41d5-b8a2-c5a4d3127f62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b42e6e58-05ad-479f-b106-fa5b797d4401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acead916-f456-437c-8800-e431acc12c8e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c104fc8c-970e-4b52-a838-62a186fe4758",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f5e53ee-b722-49a2-abaa-4670deea2f2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e4c711-3fac-4128-8486-96f62110c33a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "428f8804-8d67-42c3-952a-7c3bca3cc06b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db20288c-a9e8-4b97-988d-e63382523f91",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475b9190-eee2-4d66-b90a-94a535852f7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d625c566-bf2a-4121-8aae-9a3deeb18120"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b404d42e-e8d3-4239-9d9e-c8af0453ee6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b13e8820-d442-4d2a-b63e-0fd342c4df09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35095522-b2df-4821-a0f2-2b1eeca59f2f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10961b5e-5a75-4ae2-803c-0f015ebf685d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfc7ac23-889f-4f23-9049-96081f96d4d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a71581-287f-4ad1-9e2c-a089c0d1de80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1122a964-acf9-4593-9c44-cfa51981bde4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3af40e4-cd89-43aa-9b61-7df93bc40713",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c53d30-1728-4948-bae1-71c624f58f79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "013e7dde-d200-41cb-a2f7-bf1bbf2a64d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41fe4e9f-b527-41ba-9b02-69444af4980b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfacace6-e072-44e5-9cd2-90bbfd031cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c565d36-6447-4b8a-b02a-12a783a93992",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d28aa4-8a1f-4264-9fa7-bdccc1274e61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03c5955a-773c-4b8c-a625-48babd159af4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c5c12c-b41d-4dd8-8319-44c44948f9a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e21fab30-8e28-45a2-b9f8-cf6f11983567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d59d14-2dc8-409d-acf5-aaf38283e6c0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adfe951a-ed3e-406a-acb9-464756e5c516",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a42a12be-997a-4ccc-9296-bed94df8d9da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32888982-23fe-49c7-be8e-27ce82ce666f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "979b535d-cd85-45a3-9389-b511ee3459ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aebdce26-fa71-4063-b232-b071bad07bbb",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243c73f8-ab6a-4a1b-915f-e1c860e9b888",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dc63cb7-7c53-4188-a0c0-b4a6dc76ce14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "150ad191-75b2-428e-bdf1-0d5260601793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "586f0b5b-958d-4d0a-b3a0-a5bf643bc0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab32420b-7b6a-434e-b572-a89e209bb8d4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e3800e-8e1b-4dcd-bc40-b45233007ca4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b95b6a9-cf4c-4f91-acc0-0dd7d736c835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fada9e0-b0d2-4a7a-addd-ea793ef2891f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11bba5e7-8eb3-49d7-8cce-37fa99e20a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6364b6d-e9c2-4af7-a9f9-ca168fb4a4c5",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21834884-9c99-456f-9cfc-7b250bd811e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd03d68c-7474-422c-801b-e825a8a70713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "177a9528-5348-42a2-8e98-39b861a696f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6228b52b-0a36-47da-8303-b0ea18c3460b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa90430-3628-41ff-a087-1a39a0fa3416",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b12ef5-d146-4bfe-8f9b-ffbf99792a8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d394cd32-8a3d-4785-bbce-aca06aada8c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cadf0e9b-b7e9-43ea-982f-af84c49cf88b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c97438f-63b2-4310-9873-29db31d45011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c826781d-c2af-4743-948a-c8ea621ea9eb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab50193-a05d-4c7d-84f8-71b2ee776ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "290c43a4-4db8-4161-b67b-979319ac236c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda23cbb-6eeb-45a8-9f83-bf44cc292066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e557173-4a19-437e-a862-196266c846d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be988ecf-2ea4-4a1e-a056-b424d4e45e5a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4a4612-1825-40e1-ab29-5484f772f9b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55d2c952-18c3-469a-9d6b-bd3ccdbd34b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cafa58b-e4a7-48c8-a3f3-ea9c768b0c56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ef8ff3f-915f-4246-a72b-4976a212d34a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0978d84a-e489-4915-94d5-2598cd193f9d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9ef50e-119d-43f2-8e9f-cb395d2b9fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be5a616b-6faf-4652-a52a-6570cb9ab3c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e057af-3948-4a23-ad98-c3f2b203d570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fce95ffb-c884-4a9b-a3b8-cff205c65fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6fe8de3-eb96-4fd1-a17a-4a0f4dde15c0",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3faf6c4b-7b4f-4a60-9b21-cd9af7e7f653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9052347-01c4-4eb3-ba7d-00185e067300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "638a40ce-dff9-48b5-a69d-066fcf0f02fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41a30280-8ec8-4a6d-95c7-78d07ee19361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0106b7a-a226-47f4-969d-00006b37763e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0292b1d3-b6f5-43ff-8946-686f3243313b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1b453a7-cb89-484c-849c-f8eead8b83ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b331b8-0002-4ee9-b711-c5ca75e963e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbdbc264-ea68-4880-a3c0-1b6964ad7d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aeb7e91-8322-417e-9a6a-61c35a64338c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef13531-bef2-4145-a53e-88c762f650eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b94f70-f24f-49af-a2d0-c5ae38802bd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f17e2b-921c-444e-93c3-532542850273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d2df4f1-cc40-4c09-832f-8e969868e2e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d7dfd9-b343-4577-9d4e-6a18bc817c32",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c669c076-b611-4b9a-a7d4-0f635d059af2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4fc1bdf-7a13-48fd-a38e-a30c015fa429"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24cf6fed-d4bf-4bd4-93d9-d345d2890059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69a9d99b-2ca7-4880-bf3f-94a3b34bc124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336efa36-f622-4ee2-9e62-8ca3c3097569",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c248f65f-bf7b-47c7-a424-f057190e86bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d827a2bc-b87c-4103-918e-c8a83a88b098"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66494bbd-4f63-4471-b1e8-78b57671d764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1efe3529-9fe5-440d-948c-ee2fe47f801d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e819b8-8958-43df-a103-a8e9a0c25893",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e018e76d-0b8b-4b57-a10c-6ed50bf9898e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2240e0a5-3368-4d27-9ae3-e144d59b053b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "648b25ee-dce0-4720-82f5-d8da453caa6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2169b240-842f-428a-b0e7-8439482b4227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4252748-9ccf-4b68-93f3-dcdf872f306f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec69323-96fc-4d81-8b34-c4c7f0b5fa83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ad7b808-5501-4237-ab8d-413630ba632e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e7f8da-d8cb-4f54-9ea4-a90a9a85bcf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a1cdafa-b10b-4019-8a89-4419298e7d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1cdd7d-b21e-4f8d-b52e-c6e4abcca4b5",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b702a574-254f-487d-8ae6-157b0da310da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33498b39-7548-4ba7-aa4a-8414c4058277"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b2adc9-1a0b-43c7-917c-b7ce8cb6129e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f7b2991-e4cd-4492-918e-3c197223cca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75e8b14-e5d3-4b0b-883b-15eb81de759e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8e1401-41cf-410f-b39a-f83a1957620c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aeee0dd-7ab7-45f8-9785-3f8edee1a28b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc6fab5-ebbb-45b2-963e-503ebb945c06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85cf3a2e-b97a-442f-93a6-e721dab53a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d8768b-d8cb-4bd2-9f5c-e6158b12d2de",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff4f614-055b-43b4-a035-a8d5fdd1dc30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d884defa-84af-494d-8ca0-6eacd815223b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4737a80b-01f9-4608-881d-f7c67505548f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fbcc8d1-0138-4565-afd1-aecab34b3d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336c963e-1278-40ee-a86e-53c81e58466d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50ed1a8-5f65-4300-b034-89f61d9cc6a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61d4e94a-126e-40f1-95d4-437ac05303e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "634f2207-8962-4f0d-a327-0d64a6fcdc28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8509ef5-2685-483d-863d-11a6e9baba97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd8e7ed-6808-4765-81b1-64f02efcf7cb",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8453df5-3ddc-4a06-8664-81c6c15f2f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d19968aa-2e17-4a5c-8eb8-fd3f6203b6b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb9788b-b648-48f1-8bbd-e24b55579e79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c175483-d653-4b0b-b40e-720ca8301443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e761f1c1-2f39-4e55-97b1-598421cff441",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b49adfe-0840-4178-81be-8efb54fb82db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35118b02-a9f2-4b8f-8e65-6b14b2d4b72d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6b481a-4964-48c5-b949-0bdabd5b9912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccf5521e-85fb-4f0e-ae85-8b0681c42a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966f3fa8-491d-4fe8-8bda-412a1b843adc",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2c30d8-17e1-4a35-9f8f-c9772b442ac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "973c4d18-bf2f-469f-8fb4-2afe9a936d06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05b9be7-7259-4105-bbbb-ce143720513f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e7adaf9-a46c-4c37-99fb-7dbb26f5d2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0450d457-123e-48fc-9521-325735399a10",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a46f0ab-0bef-40b3-b108-1e045e7cb1c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8c5f6a5-a713-47c2-b818-da03b9329dea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f01c0eb-8d65-41d4-94ba-8c04c46cd0a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58dc9d97-d2a1-421a-8861-296717c72dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68dcd224-6596-4805-8a79-7a98c9437c54",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31daa0a2-7b2f-4f67-b104-53c0e701a11b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d22a1557-7fab-457c-bc18-5d3557b558f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "234e0f0d-703c-4946-87f2-273dbd41561e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc37854f-2813-490d-a4ae-cdff76bd8233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c50692-b8a4-4650-910c-ba7e66e5bf01",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e93a21-7cf4-422c-9602-57dfad5884ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35dba692-bf69-4a57-a2a2-8e0d16f92669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c864d8-0d95-4461-8bad-823c5dff9e68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d209c3de-08de-4dd7-a562-3fe4c1441c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4988dd45-53cc-4175-90ae-7f36dbfe509a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f726e0-aaef-4fe6-9ed7-3f1f109cf46d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12a35b06-6803-4928-a62c-780205eb5dcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6dbcbd-d638-442d-906b-c0282fb6e202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e15242a4-6ac1-4b19-8d68-7f3c210c2be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df64fd0-ac01-443f-be47-43e7fc6a1440",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23beeeb9-1c5f-426a-8928-b03068f43c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4786892e-e2e6-4444-832d-734f5146f2e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16168f0-c225-458a-9c81-ced1e173e27c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cb3b008-940a-4943-87bf-f1cd5c8590e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6c822a-c698-4fe3-9ccf-a69f5c0148ca",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb71abe9-6350-4796-bb82-099b806819cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a724ca-6150-4f8a-b5a9-0fdfd7e7e308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61cae56-dd54-4db3-9c05-f0f68c4b63a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecda875c-42e2-404e-98ec-7de897d7c140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed3db6a-7cfb-4ad1-ae50-14c0e80bbb50",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a1f200-f4ce-4a5e-aa9a-05ed46d359a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5535e036-ded6-44c1-acae-6cdeca4b26eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb812cd-db85-455b-b735-8a42c90465ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4f9d011-9d74-408b-9d7a-02b45b86135a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff7e37a-b6de-4e22-9178-51a0a2f48b35",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc7b153-62c5-4d2d-adec-03c435ef32ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad92654d-3d8c-49fb-9d4e-000a5ac5287f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f7e5f2-8e96-4af9-b605-993504c3d318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eb30734-8af4-44cc-b08e-73f987d2f67d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f555edb7-7640-4e96-bd14-a4cff46d43cc",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87453e37-35a4-4dd7-ad29-e0cbd2c27632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bce91b2-638b-4677-a1f3-6dc5c1195acb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c314d48b-a439-4df7-8668-0e5b91bb7ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b972dd-cb9a-4753-ae28-422237b1470d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d931f700-abd8-4fab-9663-026d05ea5478",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e8b822-e9d8-4c0b-8cd7-096c8b8c515c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84a87410-c94e-43d4-90aa-005ea91f2dad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feed34c8-65ae-436f-921a-cd5d6252689d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f7b4809-e927-4a4b-8914-07bfd4ef530f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112df466-3df2-4f2e-9994-a2fbef2dc964",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63b8943-28f4-45dc-9df1-170b2d0724f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57afd61c-63a2-48b3-9809-541c681d3431"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d83b71f-9ee6-4479-86a3-2e448e474881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "817c7631-0b2b-4291-99f4-b18cb6a4390b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d49efb7-599f-4822-9a2e-c10e4f3826aa",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24db2aca-b458-42a6-bd36-88e8fd653bc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df04f353-8c59-4ddc-a138-97f5cd43d34d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21071449-0716-4165-a8d9-0ce7509965f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15f4b057-66fb-40df-8c7a-feec2ba8c2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f45578-5bce-4287-bfcb-2b602e1ccb31",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4dd81ec-89fb-45b4-9537-0fe451c45845",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a73bf033-ea38-449e-8fdb-cb795f949feb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d78eecc-cf41-4720-b866-dff958e45404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ec04eff-1835-4012-b4df-10d18b5ceaa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e30522-3342-4745-8ebe-079fcca862e1",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9cbb699-6a6e-4446-a283-74e32865af6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c789b61-579a-4510-888f-eebf45fa1ef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be92f20a-1097-489b-868f-0c9a29dde70c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a649cede-c57a-4754-bfd4-051dcb1a9a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aeff23e-ab10-455c-a5f6-170108871752",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cccd1680-c508-421a-8a35-d3bffc72af2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f34a9c9d-561a-4ed0-a12e-ab5d93a9527d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaef18cb-a482-4081-8f77-57f533116056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fffd1e3-f772-4cf9-b56d-e49091dd7ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690b4ec8-4f01-468c-9c2d-67b0d136f9f1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691afa4f-3c91-43ce-9408-48c896c74411",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccb54513-d2d0-44ab-b3f5-5529c436e6a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d6774c-f98d-4422-b8b8-2c0237896c4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "794d005b-2c02-4950-baf7-b7c51eff5820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7901cfd-db5d-4fa0-86ed-9d0ccb3364a0",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c87980-62eb-4422-97e7-387910591479",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7746d76-7716-478c-9d44-b9b6e6792e15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67afbf4-9136-42c5-b95d-45ed0a989346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1993056b-3e51-4446-8891-e3231a9c768e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c789f6-63da-42fc-bc0c-a06f51de68af",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f36c1f-efa1-43fe-b8a2-5a6156a90243",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd08ed17-ec7c-4307-b9cb-848771bc3932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa9a63c-3046-4087-98e7-92d520ec1715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c868854d-b8b2-4aa0-b4de-a3a923acbee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29559d91-e939-4eb8-91f5-ed6153043c3b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f09a2ce-cb4a-4cfe-9a85-886f4250df40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64531176-2627-4fa2-abc4-fb02dc35afd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3036cde6-f3c6-4e36-95fd-90509422c104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4afb90c-47bb-4ba9-a425-120b87de83b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6afaf4e8-619b-4fbd-bd28-c6d105af2f21",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d5ce5f-3267-46e7-ad5c-16d5e8a4b3cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da9eeb13-37e3-4468-9cce-35bef44e08f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2bf1bc-037d-4ce8-827d-9e9672304d9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f1d2f30-1584-4c6e-b3ab-1426450918cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881cf7dc-21cd-4895-8d14-43b9bae295d6",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b3caa8-fb5b-4615-9a9b-84ea9516944c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2235c67-e3fb-4879-9627-d94c4b88a4ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b89a02-6455-4a93-b540-b74db27e0e4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f63b38d-ffc2-4f08-8003-85b434b09566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525ac727-6960-44d6-8c4a-5a7428be48ac",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86bbe2b0-4c19-48a0-ad84-b5bb043b35b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a7259fa-49fc-432e-affe-c58be0552e19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb54282a-096b-4480-b199-bdc4e5b91d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a411f1d2-0771-4d6c-93ba-3ca52bf29b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828d37d1-f56a-4f85-a391-867b1a49a94c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70655193-5176-4417-96f1-7bd8c148aac9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09c5f927-cf54-4934-85f5-d8eac327c538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f83a20-d034-4637-881d-6156aa720621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca534217-5ac5-49ac-8e95-d4fbb33b8193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a65fd88-2257-4ff1-9587-35de1c0f942f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "380f9e9c-27d5-47ff-9a97-05c0800e39f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfba7fce-60ad-4c7f-8b6f-657f9245233f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c6ad9a-2618-4bc4-b0d9-61968e2ab78c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e08d3af-bb71-4938-a53a-cf1ae618a4b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff454a45-f8f5-4cf0-9c61-7211c270bc6d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15083be9-707b-4b52-8712-379f595c9d6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61787c40-cd57-4cef-8fc0-2cfec0fc5434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17362e9d-4b90-4df1-b3fb-5c9ba486dca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "426414ae-96e2-40c9-ab9a-a0f27f873754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440fc1c1-121c-4245-a4d2-800500ea110f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d8a2fc-169f-4c4b-8856-9de724945d97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bcf4e39-a8d1-456a-9078-7a5362656c3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "493efd79-4b85-4688-9a20-6f2ef2f7c4a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dbab50a-9ac4-46f6-9394-e4105ccf06f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd9b84b-fc09-4680-b0bf-3d8b4dd5bbfe",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c632f68-8178-470d-9c29-0b0d6a958757",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8e5d8bf-5dca-44fd-9451-2d326ad0f89a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c1fecc-bf64-44a6-b1cb-c6a8102a2628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c2f1d2-c0fa-421b-995e-01fd737230e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1c05a3-ccf1-4602-a393-8a38704338b9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41d59e1-e354-43c3-aa8c-138e33b366a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebd294ea-3d0f-499b-b9a1-09f85cf07716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66160cb9-594e-4248-b9a6-acddd823e4de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa28610f-8408-4c14-bf70-019c10cc67ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd7ad23-a02a-4abf-8ae8-32f57306595d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2a1d0d-ef08-4084-a581-ea0908911f59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dd7c3c3-7da3-43ab-9492-a2e179e75805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b8943a-a8d6-4a4b-9639-991e686f748a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc16717d-e67e-4b9b-89c3-3de4e0e52517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020f01fb-fb54-47c7-bfb4-220a91638ca5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603c3922-0fff-42c4-8911-aeaac7e82382",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ad0be05-94b4-421e-9f3e-bf9497fa5057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd56207b-0d74-4362-bde7-570d3e5741db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65b7fd7b-f72a-4219-8579-a014fb03db61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7bc4a15-a934-46d2-b029-496cd8390872",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92a1c70-1b53-44b9-8f78-b11bb01ca13f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47d76ca9-20fa-4bf3-b764-a736bf1e26cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e00c76f-f838-4651-b029-01b867cc02d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa63d25-342f-4bb3-b260-2dfc70a46567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d84f540-4302-4029-b210-ea5721090260",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6273e3d-5d4f-429a-93ad-bbc53932dcfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6b4abe8-1419-4bf3-876b-10cd3cae3123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6d077c-63c6-4192-8c6b-6a1183b00ee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ed1e62-5508-4075-825d-1d92dc5cbf38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a88e95-c7dd-445a-a42e-055124f4b51a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26be3a34-e88d-4abd-99b5-0c4262057648",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbfb2c0d-b5fa-4f91-b6de-88babcc972f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4719de5e-74a1-482d-b352-e8fddefa6d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87fd207-8a09-4f9d-a52d-207e9026bfea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc6712f-948a-45d3-83bc-66056f19b7f0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8425b53d-0620-45b1-82d0-e928514d5c05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a359bb97-8d61-467f-87b7-de6405e69d68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b34b7d-d41f-4172-a4c1-c45e79204b01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37cf24f9-6f7f-41e0-ac65-e87f9652e739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4255968e-5ef2-4cd3-bf1d-b677796d554d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90329c93-942d-49fa-bc5d-24ac67fdf787",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b650af5-a1d6-49f6-b501-e2fc4d3cf83e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7490f313-c4cb-4ca7-8e20-65b53860ce5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8f603d7-266e-4682-ab4a-8a08a689051d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5be506b-e80d-40ea-89c2-b5a81bf84ad2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4314c989-9d74-41e6-bfd1-ceb7b5e33190",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aafad6ed-f6c5-44fc-a0cc-23a91680a92e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee806d6a-8805-4dae-bb7e-cc200aa84831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d2f3637-9c68-4ff2-831a-44bac65cfb3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0b71b6-9d16-4993-b74b-bb8795213c1f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179953f4-ea46-4569-b69b-1aa5c8ea980a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d3053ec-6a85-42cd-8a9b-e407f24204d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f453a40d-b7e8-4cf3-81c1-9c9db19daa7a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "894e1f07-7098-44fe-ac36-1919f6beeec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1fe28e-a66b-401d-8ff7-66b2d4a73892",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc412355-f8ab-44df-b5ec-b1525669223e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5200b73a-db40-4bf7-a9a3-dc36008e5fce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10708855-15e5-44dd-bf4c-c245879fcbb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70e00e21-0187-4e21-940e-8faa0da750f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f88f3f-fdb4-4898-8f1e-0c044720dd77",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c99b6fd-0885-468e-aaa1-0a759a0b632a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3aa0ddc0-6aed-4a65-9290-be3bdbefacb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ef503e-b315-4095-bdbf-b2e58d651c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87517d0-8752-4556-8d93-b8ccc670754e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6067083a-03a0-4b0b-8357-a3d9c331116d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845e4534-81d3-4720-84ec-dae7f82d45ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d572b32-0ac2-4271-9c6a-b85833f70c47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72641d5c-b7fe-4226-aa8d-6640e9a09117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef516069-59b4-4c8f-afa8-ce835f3e5694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01bf216e-82c4-4b7b-965d-49e3b334a5b8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17eb680-2cc1-40f3-8410-8df533df68b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b998369-d73b-43f5-b2a2-0827499399ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b85bc1-1258-4965-a779-b675bb3d1fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c629c43f-d1c8-4e3d-a3c4-72697d809c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5324441-6ca8-4a40-a8f9-2c67a0cb954b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6f6ec8-6ce7-4538-bf8d-912409a496ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "696ac7c4-ac50-4c4c-a9d4-afefa312e8d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61569739-1c67-41a4-a63f-2d121e04df67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e27f96-b16a-4db4-ae8f-4699bb64ab1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf300a0-85bd-4d92-bbb6-7948e2d969dc",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e151935-b649-461e-a826-f8d867726ecf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27165a3f-09e6-4eff-bafd-19d5f5ffe7f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91435997-6225-46e4-94e2-fe66f382a6b5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "096832d2-8d70-41e7-9d4f-e11598bd6a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b665af57-2eee-40ea-8ba1-09d07225a880",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f2ca39-2b3f-4e49-a71b-037e360a847e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07f2c421-8685-4e19-9405-39214a3ee28b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99392960-2c53-4f02-bd5b-931bf8a07bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb77914-93aa-43f1-b228-ac99d27bdb39"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d1b3610-9a43-40bf-b282-7a1d7231a19e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b232fc47-21fc-4ad0-bff5-32a19def84c1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6305560-d581-4ffd-848b-0328eb0e1052",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "68db5f76-a2a7-48b6-8f05-336eaa76fc82"
                    }
                  }
                ]
              },
              {
                "id": "42f7b8c0-18c0-4c41-a567-b9d38da7aa17",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cc0d27ad-82a2-4ad4-92ba-9240412e0742",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb840bef-9dcd-4e71-923c-84331ee0b20f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "16d5be08-ca1f-479b-a002-624067454890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7760fe-06fb-4757-b8c4-ee8830f1946d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ad2c2b4-d20a-4016-b4d9-b05817c8deb9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5856788f-7c8d-4268-99e5-3393bc4be15f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46573cdd-690d-4fcb-8d8f-52b8e188ec78"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "615c7f57-8d31-4f14-a65c-eb1cba68028b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f887283-c42f-4f27-b626-360bd70fe401"
                    }
                  }
                ]
              },
              {
                "id": "f5845fde-b57c-4938-9128-9ec77f89820c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0af66ca8-c672-4967-9aa3-7603348e02cd",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a8b114-e1b0-48a8-a709-9b8e69a60acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "34d72d91-cf84-461e-8eb3-3d3111845521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd3d1eb-aaa5-4169-a07b-fee3f901124a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adcbc377-f4c3-46e9-9c50-254c3a906933"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "770d51ff-6bde-458f-918c-9347408b8ed9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "57761a18-364c-426e-ba04-078881346c89",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "11c5800a-7363-439b-9885-0ac3255b862e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f865ee4c-e91f-4fa8-92f2-392f4f9f9b15"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "416b793b-f18e-4620-bb75-5db428566edb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7011c8fa-5ff9-4046-b6b4-20692c95b2f9"
                    }
                  }
                ]
              },
              {
                "id": "ad817db8-3033-4f4d-931f-97a67c53dd74",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a40b237f-2c21-4d11-81c0-80709b8bef9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6e7745d5-c4d1-4f11-a5a3-aaa66fe7078e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66ff1cc6-a736-4a31-9a0e-3849960c9473",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55ffcc9c-7269-4d46-9e8e-b173f2a7eb42"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25034051-407f-4a53-ba5e-5698b40a6036",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "96a84429-81b8-4a6f-a6af-2648f69a0f9b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "096183dd-777e-4216-8ad5-c71c3c95d80e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "685bdbfa-1331-4cf2-89a5-c117286d2b94"
            }
          }
        ]
      },
      {
        "id": "e1cd850b-5c10-4b42-ab97-b5b3f7f51313",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "df874d9e-386e-40ec-bfb3-07e7b7886ef8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a6cdbdb6-6227-4080-8f8a-7ae7ef8ec790",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0954b377-58a5-41b8-9b0f-2afd328851e6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7829c1b6-5c30-4fc9-80cf-7acf7afc5d79",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6858ee6c-8361-40aa-a8dd-2f15b8e53c0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1252083-a682-48c8-9c0b-467576b2c366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0464051-6236-478f-81e1-9384311f228e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eeb800f3-bed6-4b5f-b73d-cb7fb9f7729e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e12ed71b-6874-4191-a92a-8b758c9374cd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ffef359-9c2a-4043-a0f9-29b26da53e64",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2442f22f-0672-4587-a48c-91963db1588b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a12cc05-e48d-48e2-8d00-57af1e16c8f0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "364fec76-0e18-4b52-99f6-e5ec9a7fcdb6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8b8492c-da2b-4546-a283-12c21c44732d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "217cbe31-bc94-4ba5-ba3a-723214047da9"
            }
          }
        ]
      },
      {
        "id": "217c150a-df54-4c54-b798-4f4b09d7cddb",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "be404edf-9172-422e-b95b-e6e945f4e37f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6b83c950-c2d5-478c-a7b6-1cd789cdac74",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d3e31200-1a5e-4672-a52d-6fd31cc66a43",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77817133-67f5-4867-bd6b-25e3bb1b1be9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a32cb40f-3bfa-4def-afcb-54de04975da2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c1de43-b9af-4935-8f23-723035ba7431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ade95c8a-5211-4c53-9189-5a81b622c594"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "149758e3-ee67-47c0-8228-9d58562cd731",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e75dc03e-71ed-498b-93f7-f936c9a1bf4d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3632b067-317c-469f-8d23-5540b54f722e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "264bf821-3cde-4b00-9d59-36f1edb30693"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "408f2295-e6c3-4483-b734-bcc898b8f27d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "93130c7f-b703-46b8-8c12-7752bef45c43"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5ea7a956-6afc-42e0-868b-2352779e0e78",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e842b1c-29cd-43a4-98aa-f7d794f87e73"
            }
          }
        ]
      },
      {
        "id": "b40b1c2f-4c8b-45d6-b597-0105886c5486",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c2ae4deb-6b53-4e53-8d46-c3494305731c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "50638886-78c2-41c0-92cf-a85f64fc3548",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ecfdfc3b-1a6e-4bc6-acd0-23e7f6b9a974",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ff65ba-034b-461c-9eb9-c7612134e10c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d661a1af-e62c-4673-a30d-02a199b1376f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d158e65-8059-4f35-baf3-8ef20ae0250d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd7d8a2a-8f25-419d-8438-9145bace9dbf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a3c7008-f032-4200-9f6d-1e0adc0e2f1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "103aa4c7-3bfe-451e-b454-b1032fa4107f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c7719b6-1f68-4573-9489-55f6d3994d69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8487c850-a0d1-4f41-af69-5e137c5152d4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a6ea8937-13e2-4ac3-a2be-7123be31fce8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "655eea35-028c-4be3-97df-110d4b051ed8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "318bffa3-c706-4d65-9c1c-7db647079f7d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1ffd5308-ce7d-423b-8a1c-c2c7943c38fe"
            }
          }
        ]
      },
      {
        "id": "b7fa4673-db04-469d-910c-99a8ac73abe9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0d1e92c-7dd8-4282-9831-993be56d2c4c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb835262-8c33-4d98-917c-3422857a19a6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ac181530-0196-4d09-8a85-04abe54fc0ae",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7afd759c-07d9-4201-b7e9-bb168caae94c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1a988bcf-fa92-4981-9372-74b97ff2865a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 53.10175438596491,
      "responseMin": 20,
      "responseMax": 322,
      "responseSd": 27.78223900155772,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700094944767,
      "completed": 1700094968989
    },
    "executions": [
      {
        "id": "dc6f1baa-e8d5-4b74-b1be-df250e911fca",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e8404853-66a0-4669-b71f-8b9f5803aba3",
          "httpRequestId": "020bc6de-32c4-4cb3-a8b6-12882def0ec8"
        },
        "item": {
          "id": "dc6f1baa-e8d5-4b74-b1be-df250e911fca",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0e24d9aa-a229-45a8-b1cf-0f22a2c7beeb",
          "status": "OK",
          "code": 200,
          "responseTime": 73,
          "responseSize": 0
        }
      },
      {
        "id": "8349e7e1-e211-4964-82d2-66e6ee5077fd",
        "cursor": {
          "ref": "781a3bd2-2aab-4d09-a4c4-6951e5a67237",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6c93c394-4201-48e7-b1a0-0def34e0b050"
        },
        "item": {
          "id": "8349e7e1-e211-4964-82d2-66e6ee5077fd",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "da1684d2-9218-44e4-8a71-d84e58d82fc5",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "2397becf-a7b3-4f1c-845d-65295d320ecb",
        "cursor": {
          "ref": "813e1d95-416a-42e0-9f6a-1600a2c07d48",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e685189c-b9a8-407f-9cfa-4f27774cc6cd"
        },
        "item": {
          "id": "2397becf-a7b3-4f1c-845d-65295d320ecb",
          "name": "did_json"
        },
        "response": {
          "id": "7dca58ee-6748-4c4d-8b41-0425da4301aa",
          "status": "OK",
          "code": 200,
          "responseTime": 168,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c79ab9-7ce6-4a01-b813-f596232c785a",
        "cursor": {
          "ref": "15a1057f-b8c0-4d04-b5df-14a954306e5f",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "34e5d5ff-73db-44dd-857d-a58ad6901309"
        },
        "item": {
          "id": "90c79ab9-7ce6-4a01-b813-f596232c785a",
          "name": "did:invalid"
        },
        "response": {
          "id": "5689c9cc-21cd-4f76-8b5c-90fd91dbdd3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c79ab9-7ce6-4a01-b813-f596232c785a",
        "cursor": {
          "ref": "15a1057f-b8c0-4d04-b5df-14a954306e5f",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "34e5d5ff-73db-44dd-857d-a58ad6901309"
        },
        "item": {
          "id": "90c79ab9-7ce6-4a01-b813-f596232c785a",
          "name": "did:invalid"
        },
        "response": {
          "id": "5689c9cc-21cd-4f76-8b5c-90fd91dbdd3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3c4ede-16e2-4545-a7cf-47ed38c67d6f",
        "cursor": {
          "ref": "90355db7-fe71-4280-88c0-c660b1999450",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "83601e39-020a-468c-823e-e3a20c8e1ee9"
        },
        "item": {
          "id": "7e3c4ede-16e2-4545-a7cf-47ed38c67d6f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3f8579c6-5bbf-4634-9630-fc7c83988700",
          "status": "Not Found",
          "code": 404,
          "responseTime": 322,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a145fea5-8514-4fda-bd56-b658c0850298",
        "cursor": {
          "ref": "2548cd89-8c6b-4822-ad48-c459a68d0031",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2ef96943-4ee4-4664-9f7a-936a9e9e734e"
        },
        "item": {
          "id": "a145fea5-8514-4fda-bd56-b658c0850298",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9234fc44-1e06-4c4b-887d-7885dcbb8ecf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b5fbac-72d7-4d44-9405-99929a6685e2",
        "cursor": {
          "ref": "68f25f3f-dddd-4826-8c89-8721d6d8b159",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7fc62ca2-d4e7-4b34-a908-dfe248daa567"
        },
        "item": {
          "id": "d0b5fbac-72d7-4d44-9405-99929a6685e2",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2a8efeae-54d5-4460-a942-64833e4ba798",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4048ac8a-2521-4e04-903c-501720cf2949",
        "cursor": {
          "ref": "29c9391e-f7d7-4bc2-b777-94f7ac4e4333",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "97aaf4b5-ebb1-4d52-9100-444208bfd0c3"
        },
        "item": {
          "id": "4048ac8a-2521-4e04-903c-501720cf2949",
          "name": "identifiers"
        },
        "response": {
          "id": "79ca2c8d-3efe-4110-ad53-88351b481c9e",
          "status": "OK",
          "code": 200,
          "responseTime": 205,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dcffb25-7ba8-4b8a-8e3b-b9b2ff22767f",
        "cursor": {
          "ref": "935f44f4-c088-43fa-9ecb-c64af6acdc19",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a8e083e0-f2ec-4851-bea6-c55533e43910"
        },
        "item": {
          "id": "9dcffb25-7ba8-4b8a-8e3b-b9b2ff22767f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3c941c73-9983-45b0-b418-1720174939cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42508071-2b6c-46a6-84f1-747cb84a3904",
        "cursor": {
          "ref": "d64cbc34-4d0b-45d8-8d55-0433df2b3ad4",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "826fa704-e9a2-4d9f-8d65-81fdd5b8df07"
        },
        "item": {
          "id": "42508071-2b6c-46a6-84f1-747cb84a3904",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7359a283-9538-4eb0-9871-e026f0dad1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e18a7ca-3f21-4a3b-91f2-61ed5c2078bd",
        "cursor": {
          "ref": "a396f712-ecc7-4e03-bdd2-750bf0fdd78b",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6fff0561-239b-4e5e-9506-e3b87a159b85"
        },
        "item": {
          "id": "4e18a7ca-3f21-4a3b-91f2-61ed5c2078bd",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a49817f5-bc72-427b-9943-ace01bcf7e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beecfd35-7ca9-4254-bab9-0e88d331e069",
        "cursor": {
          "ref": "beb75f3f-f454-4a48-9241-fc4ce1f16762",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "96d85fa2-5eca-4171-b6a0-e509e37c87da"
        },
        "item": {
          "id": "beecfd35-7ca9-4254-bab9-0e88d331e069",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "539bfb58-2208-48f5-8a64-7bbed60ab38e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa85af5-d297-4031-bc69-a37a68e2f42e",
        "cursor": {
          "ref": "97ac8f46-b743-4c2e-bf5c-7789fd654a15",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "babc0018-91c1-450f-897e-2c6b71c77122"
        },
        "item": {
          "id": "dfa85af5-d297-4031-bc69-a37a68e2f42e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "576b93d0-e4b6-4eaf-aa4f-9a62b6777528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efc306f-12e8-403b-a3c4-e51754bfc316",
        "cursor": {
          "ref": "4dd4c794-3f52-454d-b754-156bffcbd534",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e6578fe7-35f9-45e4-9474-f5022709545f"
        },
        "item": {
          "id": "2efc306f-12e8-403b-a3c4-e51754bfc316",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "370ff488-84c7-4218-8269-f4632f5a7cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407e2666-12fd-4552-baf8-fd2cf2cb723a",
        "cursor": {
          "ref": "c8eaab86-c9b0-45b6-87c4-007b6b2f8913",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fa0a3549-9fac-4e73-b88d-d6d0df3d3400"
        },
        "item": {
          "id": "407e2666-12fd-4552-baf8-fd2cf2cb723a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "de23f342-e58e-492b-b54f-07ffcd6f3406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e201ed25-0578-46bb-bc29-7989b26c1976",
        "cursor": {
          "ref": "6d1a499a-5f84-45e5-8386-6b42caf38e6b",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ae389774-4a99-4076-a27c-8c63944cb276"
        },
        "item": {
          "id": "e201ed25-0578-46bb-bc29-7989b26c1976",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "26543628-1477-4567-bc0d-3c61def71a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59839da3-01d1-485c-941b-467ec6455c20",
        "cursor": {
          "ref": "36fa297b-b36a-431b-ae5e-89df29de66fd",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c9816ce6-41c8-4a6b-b6ac-937be93072f9"
        },
        "item": {
          "id": "59839da3-01d1-485c-941b-467ec6455c20",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c926e6a8-b3bd-4be0-afdc-1d4028d97a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3803be1-a560-421f-8970-8e0abdfd7cb6",
        "cursor": {
          "ref": "aafe2176-ebe7-4ee3-8c72-420faac65bd8",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "839902e0-39d5-4856-8590-a531d071cdef"
        },
        "item": {
          "id": "f3803be1-a560-421f-8970-8e0abdfd7cb6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0cc25fac-3cce-42ef-9ff3-3e8cea04c5dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192a4f78-5419-4544-8f15-2c8606bd21e1",
        "cursor": {
          "ref": "89c18b71-29eb-4da5-894f-5aea54783409",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a2328a8b-7832-4cd1-9131-212a069d0242"
        },
        "item": {
          "id": "192a4f78-5419-4544-8f15-2c8606bd21e1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2756dd8c-ce9e-46f9-8310-6069b2ddfd2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772b43e2-c2cc-42dd-973b-706bc7657605",
        "cursor": {
          "ref": "2a9e4936-83cc-44f7-9013-e1e52af74b95",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "be7f2b13-cc4b-4401-89fa-bb0ef33ce8ee"
        },
        "item": {
          "id": "772b43e2-c2cc-42dd-973b-706bc7657605",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2ce6cee6-fbbe-4ef2-86a6-2e27131f85fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475935a7-50e1-4f96-ab86-e5daa4f0a29d",
        "cursor": {
          "ref": "5f2bc4c1-2c83-4857-b042-47c10ef8bc23",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "901e70e0-cd2e-43c5-b47d-84744bd29865"
        },
        "item": {
          "id": "475935a7-50e1-4f96-ab86-e5daa4f0a29d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e6127b05-6673-4454-b6aa-5b5ae8b077e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a977abd1-189a-47f6-8da7-a1182b95c808",
        "cursor": {
          "ref": "1f9df762-87ae-41aa-94fc-78e66f2f7d8b",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c52d4b4f-40b7-4c1b-aab6-3b1e7edf8327"
        },
        "item": {
          "id": "a977abd1-189a-47f6-8da7-a1182b95c808",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f2e15361-e792-48a7-9596-de9ae255b9fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d6ef63-8c9c-4eb7-ae12-eb34bf033f9f",
        "cursor": {
          "ref": "27dccfa5-ce75-4344-a7b9-a83fde04ca24",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5a09ded7-b26c-445c-802d-5bcf4f72e8ea"
        },
        "item": {
          "id": "d4d6ef63-8c9c-4eb7-ae12-eb34bf033f9f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "cf570936-b01b-4a6d-8509-4328373bc80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e748e8b0-d8d4-426f-9993-4c3ca3a0ab8a",
        "cursor": {
          "ref": "6b20d6bb-79fe-4707-9ad3-ade4e501eadd",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ed69d725-23f8-4c7c-b381-de6c6cf666f7"
        },
        "item": {
          "id": "e748e8b0-d8d4-426f-9993-4c3ca3a0ab8a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b876f9ad-d1f6-4de5-b07e-8f301c5aaf83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3734d6d1-0b89-4317-99b8-f32827446b5e",
        "cursor": {
          "ref": "07068f00-29e4-43e1-8abd-7d77b0b52d39",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "013de68e-d176-437f-966a-ca3a2beee19b"
        },
        "item": {
          "id": "3734d6d1-0b89-4317-99b8-f32827446b5e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d5f3d88a-e004-4e20-9844-9cc3fa33a916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ee781d-8b45-485e-8f0d-30979abe2e4d",
        "cursor": {
          "ref": "ac6a35f9-3691-420d-8989-d2a92d30fc7f",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "529ff5be-b93e-4830-8c79-eb295fafce26"
        },
        "item": {
          "id": "77ee781d-8b45-485e-8f0d-30979abe2e4d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3572d188-a162-4d90-a698-4e96a2fc7f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efadc093-7e4f-48d6-bffe-a5799e70e25a",
        "cursor": {
          "ref": "37a0c300-0be7-46f9-b9b9-8ac53553674e",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "80e1c7cf-e47b-4179-ab5a-b6c6abf8ac04"
        },
        "item": {
          "id": "efadc093-7e4f-48d6-bffe-a5799e70e25a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "fecfd6bf-7029-4bba-bb3f-019001973ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4f22c4-2175-49fe-8719-cf004389fc88",
        "cursor": {
          "ref": "27ca438a-ae10-4323-b7be-378f14504aeb",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "09d4da44-a75b-4491-acfe-c8d913d03d6f"
        },
        "item": {
          "id": "7e4f22c4-2175-49fe-8719-cf004389fc88",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0e8b6c9d-9ed7-4e69-a51d-f70019d4e380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4616c6c4-50e1-4f46-8238-112f3f7a2a3f",
        "cursor": {
          "ref": "709beaef-8e0e-47ac-9f10-b1e94ff0bc11",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ea9d3d2e-2f3c-4dac-8d1b-ef7e95449a8f"
        },
        "item": {
          "id": "4616c6c4-50e1-4f46-8238-112f3f7a2a3f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "529ecdb1-535b-4804-a5a3-5a3ddd81ef82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5678c931-aacb-41a9-af5a-294c5258ffe5",
        "cursor": {
          "ref": "d0c0ffd2-ccac-4216-a012-819ec208b8e5",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2cca8240-da0c-4eff-8f27-c9b54da4487d"
        },
        "item": {
          "id": "5678c931-aacb-41a9-af5a-294c5258ffe5",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5827ae37-185b-4bcb-a3ab-6acd7300884c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea939f2-67eb-4254-8da9-766e4c49d19a",
        "cursor": {
          "ref": "d22b0e95-2ba9-4853-a758-0f71c8a98d0a",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d69ed456-7081-48bf-93d4-4ab3d572a910"
        },
        "item": {
          "id": "7ea939f2-67eb-4254-8da9-766e4c49d19a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2ee42d5a-3c69-4e8a-8a58-e7a73d7553f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8fed54-a773-49cb-99fc-298290d562ad",
        "cursor": {
          "ref": "7cec2899-aec6-4bb9-976e-00bd81df832b",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "bbaefb87-e9aa-4c5e-8b83-71e32ba0807c"
        },
        "item": {
          "id": "7d8fed54-a773-49cb-99fc-298290d562ad",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e780141e-d394-4ae8-a3a8-20733f29a69b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9fed0e0-4377-4092-84b4-0fe0f64f3f67",
        "cursor": {
          "ref": "0cea400f-69dd-4fab-9e70-92b0c042d2b6",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a38d8918-be01-4608-89d8-f93a36e70df7"
        },
        "item": {
          "id": "d9fed0e0-4377-4092-84b4-0fe0f64f3f67",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "61e49180-2386-49c3-b0f5-2f9c39f68841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab8caae-09e2-4616-8e3c-8aa649721477",
        "cursor": {
          "ref": "a9d786ea-945b-4ca1-9129-7092299825fa",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ec6af297-a3b6-4a92-b1ce-bec4fec9e393"
        },
        "item": {
          "id": "4ab8caae-09e2-4616-8e3c-8aa649721477",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f73a6f30-d98f-497d-a316-989fb7856c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c88bb58-182c-47e3-b762-8d631d6b208d",
        "cursor": {
          "ref": "f98b5538-0cf3-477e-a5cb-b9b3a5a6be95",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "73ea05d0-58fa-424a-9ea3-e0be3c565f7e"
        },
        "item": {
          "id": "6c88bb58-182c-47e3-b762-8d631d6b208d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "344c7564-8ece-4a86-9c00-bf5485ee9ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77579c9d-57f8-4d63-98cc-ef3863df9d15",
        "cursor": {
          "ref": "b60b0b63-3fce-41d6-9a23-e9628f6b651e",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7d807134-59d9-49fe-901a-892ad8b1c2cd"
        },
        "item": {
          "id": "77579c9d-57f8-4d63-98cc-ef3863df9d15",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "31205413-c51a-4d09-8d48-01b58996dedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66f0cbd-e8e2-4a81-a927-d0714c3ddd9e",
        "cursor": {
          "ref": "20705279-c3b6-46ed-a35d-aced0bd80627",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "97f9458b-a2c4-4f6c-a19b-abb7a1fa9afe"
        },
        "item": {
          "id": "e66f0cbd-e8e2-4a81-a927-d0714c3ddd9e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "051af1bf-e1b9-4221-9eb0-ef1ecd70658a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef669a40-711d-49cf-9695-2ffcaaff12d8",
        "cursor": {
          "ref": "701ac5ac-de62-4caa-af0f-21e55e2e6ab8",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "355c0144-8f72-42f1-840f-51934681eb44"
        },
        "item": {
          "id": "ef669a40-711d-49cf-9695-2ffcaaff12d8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3f79b5ee-be79-487f-848a-4e8c6f3b02e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca29323-c589-49e1-9640-2c265c3c2250",
        "cursor": {
          "ref": "e6fc8e33-5399-4402-b1a2-35950f900b5e",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "755a7783-a2b6-4d04-9cbe-5ce44879fc2f"
        },
        "item": {
          "id": "fca29323-c589-49e1-9640-2c265c3c2250",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "98f76f2c-aa8b-4c1c-b1a7-03ee22588dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95c16f4-7b06-4a99-8e20-55cb955e78de",
        "cursor": {
          "ref": "f4d77c9f-3084-4613-b483-ad99b18730dc",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "df11aa67-d0fa-4a24-b97f-34a6423a33c6"
        },
        "item": {
          "id": "d95c16f4-7b06-4a99-8e20-55cb955e78de",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8861cc12-2b11-4d43-ae81-3a6230e63494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5d38aa-458f-4eb1-a664-adf1c1c82276",
        "cursor": {
          "ref": "32773db5-fc27-40f2-84a0-75e4c1d9e4af",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "cf701ccd-cb50-4718-8666-83b7def030bf"
        },
        "item": {
          "id": "ce5d38aa-458f-4eb1-a664-adf1c1c82276",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2c785f7a-d5eb-4963-885c-ff289f94b2a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2e9427-af22-45c3-ad4a-b8a74ce1271e",
        "cursor": {
          "ref": "4b3ea854-6971-49be-9cbd-34d94bbd1736",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "cdeceb17-44f0-4b88-99cc-0a9461945c30"
        },
        "item": {
          "id": "4b2e9427-af22-45c3-ad4a-b8a74ce1271e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c286b269-eeba-4f29-8b58-0bb4dff93a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c86d5d9-b268-4ad2-bbc6-1e81688f80c1",
        "cursor": {
          "ref": "8f744b64-4822-4898-befd-06ed6567a1b1",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "808d4885-4627-4be5-afa5-1cac6a73bbee"
        },
        "item": {
          "id": "8c86d5d9-b268-4ad2-bbc6-1e81688f80c1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "cd62c0c0-a457-41b6-841a-3c30c1c8bcd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f72ecad-0b8f-4446-b9b3-691bb6033115",
        "cursor": {
          "ref": "5073d32e-a290-4e69-a0a2-54dc3ecba171",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8b1b33bf-82ca-4e8a-833a-46325ed08ff9"
        },
        "item": {
          "id": "1f72ecad-0b8f-4446-b9b3-691bb6033115",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "dc3e5433-1d36-4532-8b52-2490f1c4d926",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb364a3-9cc8-4459-833f-4380d9fa1e3e",
        "cursor": {
          "ref": "042a871b-b4ff-4e51-8d3f-ccaa8c4e64e9",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "136696ec-ba58-43ee-b85e-26acfc5f395f"
        },
        "item": {
          "id": "0cb364a3-9cc8-4459-833f-4380d9fa1e3e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8c5be142-43d4-429d-86f2-4a0bb5378f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24831b3-16ca-41a1-83e0-f4c398c945b7",
        "cursor": {
          "ref": "94615231-1e3a-438f-b5be-8d6b6e80f5b2",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9d76ec72-fa14-4dab-9d6e-58083a0a06fb"
        },
        "item": {
          "id": "b24831b3-16ca-41a1-83e0-f4c398c945b7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d8b85da5-b25e-4ee0-86e2-9fa1c18b17ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ce41d9-63bc-43c0-8a2f-0303c7a6eaa8",
        "cursor": {
          "ref": "e286a482-f626-475c-91d8-0671bb9c356b",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "85895d54-2ed1-4ec9-a22d-2e3161b16a24"
        },
        "item": {
          "id": "d1ce41d9-63bc-43c0-8a2f-0303c7a6eaa8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "bdefdf8e-1f10-4d13-b420-4901bc0126ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2eef1f8-19ae-4823-a9a5-138533ffb424",
        "cursor": {
          "ref": "d7d0396e-94a9-4747-9c2f-cf8cfdd1ac5b",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e07baa70-1011-4edc-b6ea-490405c1f535"
        },
        "item": {
          "id": "c2eef1f8-19ae-4823-a9a5-138533ffb424",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4f4f6721-df57-4d28-b716-113c3d4b7e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a51108-0d52-46b1-8829-261aeffbce85",
        "cursor": {
          "ref": "600c1eca-aa64-497b-a5c7-d161fa06af98",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "849079e3-17e2-44b6-8057-017056305ce4"
        },
        "item": {
          "id": "92a51108-0d52-46b1-8829-261aeffbce85",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4ab0111f-9dbe-468c-88c7-6f2107060277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af48fdd9-19ce-40e8-9ffa-7d6f1824bcdf",
        "cursor": {
          "ref": "462e3e8e-5b03-46b6-ad47-b7ec212fa15f",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0d8b3cc7-520f-43f0-a64b-efd789082841"
        },
        "item": {
          "id": "af48fdd9-19ce-40e8-9ffa-7d6f1824bcdf",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "137253c3-9040-4036-9a53-4e08548c940b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833fa9b3-23b5-4503-8f87-78bdaf6cbc56",
        "cursor": {
          "ref": "3e8e3334-4603-47be-a661-6400ae9eccf5",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "4fd4b78e-9989-40ce-8caa-78f401939495"
        },
        "item": {
          "id": "833fa9b3-23b5-4503-8f87-78bdaf6cbc56",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "17071745-c32b-4784-8567-b7ffe944e768",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 62,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f585e3ac-f885-4d03-b224-458ee900cc30",
        "cursor": {
          "ref": "6fcf28c3-6b7c-4b88-95af-57c03066fc73",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "bfbbd1ce-e12a-478a-af56-019a97d47d9e"
        },
        "item": {
          "id": "f585e3ac-f885-4d03-b224-458ee900cc30",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d9f29767-40d3-4e17-9c86-296af1f4c214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b91179-32c2-4f2d-9622-966a9db7c7ec",
        "cursor": {
          "ref": "ffc68b3a-ac4d-4af8-af0b-79d14d967979",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5b4cfd9d-8e67-44d8-9ef3-836ac21fab8b"
        },
        "item": {
          "id": "f0b91179-32c2-4f2d-9622-966a9db7c7ec",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7a2c6f8e-d2bd-446d-8070-386b7dfe2e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f762ae6-f312-4201-abd5-a48e22b2b4f2",
        "cursor": {
          "ref": "6ce16b27-dc1e-4aa3-b8c5-909214e2f103",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ef8e64b6-4eca-4495-ba83-07bd35785d32"
        },
        "item": {
          "id": "7f762ae6-f312-4201-abd5-a48e22b2b4f2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ec3e9dc9-87c1-4b24-8403-abaf982567fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c547394-3bf6-4939-9b33-bbd44e36a6b5",
        "cursor": {
          "ref": "10f2aa58-cbf6-45b5-bc4e-52ffc82e399d",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "69915a00-082f-4a2a-809f-8b96f1531f69"
        },
        "item": {
          "id": "0c547394-3bf6-4939-9b33-bbd44e36a6b5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a8bd9af3-49c2-4fc2-badf-fbd04819658b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96810f88-d14c-4738-9534-350763f3831f",
        "cursor": {
          "ref": "1f4ca054-eab6-4629-b6ad-ffbcb566bfff",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "107acf41-d278-4429-8828-4f143ddd93ac"
        },
        "item": {
          "id": "96810f88-d14c-4738-9534-350763f3831f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "29caf989-d35b-4e58-8882-b09ff0c43a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f653f5-6579-4cdd-a187-98a183c537fe",
        "cursor": {
          "ref": "7103d3b5-9f10-4bf7-8e0e-82cf8460e4c2",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c1dee0ff-8359-42d9-8c0b-6868d3bc956e"
        },
        "item": {
          "id": "57f653f5-6579-4cdd-a187-98a183c537fe",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4fe96d8b-a398-405a-b929-ae0151d1f05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f987b00-17c7-43aa-9a41-1baf1b84b54b",
        "cursor": {
          "ref": "10553931-65ff-45a3-acac-64575ab6b643",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "fad42c0e-714a-4fd6-86a4-a99ad4d0fcd6"
        },
        "item": {
          "id": "9f987b00-17c7-43aa-9a41-1baf1b84b54b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c799ad12-f09e-4935-8c8b-bc5ba2934132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b0bb34-ae76-45af-9650-7dade26fac7d",
        "cursor": {
          "ref": "73c8df2e-69a9-41ec-91ea-e9210395153a",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "17707a85-c57f-4146-8d3c-df7524216171"
        },
        "item": {
          "id": "47b0bb34-ae76-45af-9650-7dade26fac7d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "bd8ca938-2875-4c35-806d-7258510c1cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84795ef3-9b03-4eb0-a8d1-dbf728f721cb",
        "cursor": {
          "ref": "4908aa49-ea12-426a-836b-f2d1b77759f9",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f34e876c-2d0e-470e-aeeb-e219b99780ef"
        },
        "item": {
          "id": "84795ef3-9b03-4eb0-a8d1-dbf728f721cb",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "237d28ac-c8a9-4d58-bfa8-11ddc2f4de65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ebf5e3-4bae-47c0-a05d-8159e808039e",
        "cursor": {
          "ref": "7d43a1b9-c53f-4167-80c6-64716d39bbdd",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0b8a3a1f-726a-45c8-8fc7-a7894d087806"
        },
        "item": {
          "id": "93ebf5e3-4bae-47c0-a05d-8159e808039e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2a0b662f-1023-4ece-99d3-49fa1194b21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf885117-d689-48b4-b6a9-1ba75c5a0bfb",
        "cursor": {
          "ref": "151c975c-2d7c-4957-bd89-3088d2675565",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "49495c4c-834b-47db-889e-9ff4b28e1dd8"
        },
        "item": {
          "id": "cf885117-d689-48b4-b6a9-1ba75c5a0bfb",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "01ca37d9-1148-4f93-827c-ea8c409f4dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5e3b0d-1be2-4863-bf2f-64b12f7b4b1c",
        "cursor": {
          "ref": "4614c4bf-f816-47ef-8b14-3c143bce7c09",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "703cdbf8-5967-45f0-80da-47787efb9d7b"
        },
        "item": {
          "id": "dc5e3b0d-1be2-4863-bf2f-64b12f7b4b1c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f0dbfd2e-5334-4a91-bebb-040f5b141ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd4eed0-2978-4444-b7f9-e0bb62d764ee",
        "cursor": {
          "ref": "7d496b20-120c-44e4-b7d0-bbe6031ed2e5",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0a2fedde-a0f0-40e7-83f2-728662a5be6c"
        },
        "item": {
          "id": "ebd4eed0-2978-4444-b7f9-e0bb62d764ee",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0f456022-de6c-4832-ae79-5f2cda86a4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fc7e6b-eb1e-4fde-8d26-00821ca73256",
        "cursor": {
          "ref": "c1e89a57-7e2f-4cb1-b4bc-37fc78e6a964",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "edbf4468-9f3b-4426-b1db-606787536b2e"
        },
        "item": {
          "id": "09fc7e6b-eb1e-4fde-8d26-00821ca73256",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "23ee07e7-8cb4-4bd1-a9b3-c694d1f914bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bceac932-b4a5-4e38-808b-1b1392b988d4",
        "cursor": {
          "ref": "483292e9-c298-49cb-bd64-e12f205b2d1d",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b930badf-bc73-4719-96f3-df7a3bd70ab3"
        },
        "item": {
          "id": "bceac932-b4a5-4e38-808b-1b1392b988d4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "851ea518-8aaf-4e84-b138-d259ce4383d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca600117-0e57-4044-9734-a30ff28b6403",
        "cursor": {
          "ref": "9d862451-03d5-4e86-bd14-0a2c4939c552",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "084eb7e0-cccf-4d97-bae1-7b3e73ae312b"
        },
        "item": {
          "id": "ca600117-0e57-4044-9734-a30ff28b6403",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8f5b3f62-52fb-4fe9-9a55-8d06a49a3e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2591ac6e-e0c3-4751-8c59-1e3c7174d083",
        "cursor": {
          "ref": "2dd6f94e-3878-4075-beb1-39b45fcdf8de",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0d88a65e-3dc8-43db-9fda-1de2a31191de"
        },
        "item": {
          "id": "2591ac6e-e0c3-4751-8c59-1e3c7174d083",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d6aa45b9-4d3f-4cfc-a795-69dc0fff7eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f7afdc-3efa-469c-a91d-8eba2555a416",
        "cursor": {
          "ref": "ed383357-ca48-4f7f-a2ec-84f9e4387c86",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2af90984-3daa-4392-b2a8-8217188e3ed7"
        },
        "item": {
          "id": "93f7afdc-3efa-469c-a91d-8eba2555a416",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "44d6510d-7e34-4a10-861e-3c26b09da6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928d926b-8d4f-4eed-b732-b2ab357e5c03",
        "cursor": {
          "ref": "beee4a90-d692-49f0-9221-f13ae66b3309",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "87b53c87-71db-4b6b-857f-19b9921ff337"
        },
        "item": {
          "id": "928d926b-8d4f-4eed-b732-b2ab357e5c03",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "640ba384-b5bf-489f-9ac2-10b904234970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99769247-a1e3-4247-b8b5-1b93232c6133",
        "cursor": {
          "ref": "da9e6112-720f-441b-9922-97a025031677",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "40c5ca84-f118-42f8-b514-84be23c5fa36"
        },
        "item": {
          "id": "99769247-a1e3-4247-b8b5-1b93232c6133",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f334b04b-2cd9-40bf-aa30-0e64f5dbeeb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e271874-239f-40a2-bb8d-fcd4101d257e",
        "cursor": {
          "ref": "4bfcdc03-6bd2-4729-9460-b5c2da372aad",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "09d4529e-2fee-499e-9d0c-c52f6f97dc94"
        },
        "item": {
          "id": "2e271874-239f-40a2-bb8d-fcd4101d257e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4fc5d61e-356a-464f-878e-8fe9089f2083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a07bc70-9c69-4821-a08f-2b0149de9392",
        "cursor": {
          "ref": "65d0920e-e820-411b-aa19-6618cc4653ff",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5e5bdf75-90a6-4f5f-9ad7-26e5a10b2582"
        },
        "item": {
          "id": "0a07bc70-9c69-4821-a08f-2b0149de9392",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2af5f297-8519-444b-bbea-624eb141a792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e6e3112-8bd1-4874-b05e-040d59fa7a73",
        "cursor": {
          "ref": "220e60fa-b2ae-4235-9907-7f7055f898f1",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ff62f7d5-62aa-42e9-bcff-29d97084e347"
        },
        "item": {
          "id": "0e6e3112-8bd1-4874-b05e-040d59fa7a73",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ea17349d-74d4-4540-b789-b2967b17a3b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae551404-4dd4-4682-836c-63c36621ab59",
        "cursor": {
          "ref": "6dc9e773-729b-4ba5-870e-e22d9925f3a3",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1aec3293-0255-45bf-83fb-f848ce01d636"
        },
        "item": {
          "id": "ae551404-4dd4-4682-836c-63c36621ab59",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "aa4d1ec3-2d04-4330-a35a-57b7f4083f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04465d89-5de7-4460-a14b-8ac2b0f61195",
        "cursor": {
          "ref": "e1a0fea0-5897-4688-82fa-4b7c869a64fe",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "736083c9-2cfe-4553-a79d-618c04b75add"
        },
        "item": {
          "id": "04465d89-5de7-4460-a14b-8ac2b0f61195",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a356b4b2-0f6a-4644-91d6-130a69fc38b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e7d79e-28f2-4f35-98f4-9786a3d6ca9f",
        "cursor": {
          "ref": "2d08e264-e02e-40b4-9a7b-d2fbf6aa0b98",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "27919a29-2a08-411a-a2f7-784f294b6012"
        },
        "item": {
          "id": "10e7d79e-28f2-4f35-98f4-9786a3d6ca9f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2103c9a0-1f51-4605-a6d8-8ce53c24eaa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ffcc03f-c853-46d8-a50f-f86416f9a26e",
        "cursor": {
          "ref": "e0e99b84-756c-4306-9830-4868250479b1",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "efbeda70-23bd-4ef1-98b1-9995cd2bf815"
        },
        "item": {
          "id": "9ffcc03f-c853-46d8-a50f-f86416f9a26e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "917a790e-337c-47b9-b295-0031ee2e2d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00f46e1-1946-40a5-be0d-bc93d18bf410",
        "cursor": {
          "ref": "dcefbf67-d9cd-403f-999e-5dd68e26b6c9",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "37ab8c1a-a91f-42af-bde8-04c9dab11e85"
        },
        "item": {
          "id": "c00f46e1-1946-40a5-be0d-bc93d18bf410",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4845f610-bac7-492d-99d4-7698130a6438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a11cca0-74b8-41d3-ba66-b80720c6950b",
        "cursor": {
          "ref": "26ae9929-dddc-4fa4-8746-476dea9da869",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c513ab76-64f4-413b-9a71-fef76f7b8fa0"
        },
        "item": {
          "id": "8a11cca0-74b8-41d3-ba66-b80720c6950b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "aee597f2-3a41-4161-98a5-c5a80a4405c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d6ade4-7e71-4b62-ba7c-928244412ef1",
        "cursor": {
          "ref": "a4cf9f81-86df-40a9-b097-27d21b6ff306",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e8a89889-2fc6-4e4e-8750-7a99fa6ebd5c"
        },
        "item": {
          "id": "a3d6ade4-7e71-4b62-ba7c-928244412ef1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b85f6238-2759-40b1-836d-f6f44fc816e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85f72b8-f477-4b88-8a5b-8cefcb4954ef",
        "cursor": {
          "ref": "636e8591-b28e-418c-989a-07929315ca0f",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a03e2a79-a44b-4f90-9c5c-7efa91530bbc"
        },
        "item": {
          "id": "d85f72b8-f477-4b88-8a5b-8cefcb4954ef",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a510a3ad-fe67-4cc5-ae2b-eea2fec55671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e70ccd4-61ad-4157-b0d1-900ea1bf06bf",
        "cursor": {
          "ref": "cf69a6a7-8ef0-4903-9d3b-69fee1072e32",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "298aedca-ea59-4beb-86a8-e72cf02345ec"
        },
        "item": {
          "id": "4e70ccd4-61ad-4157-b0d1-900ea1bf06bf",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "349a43db-4255-4e72-a838-29332c6d09c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb30ee6-027f-4402-a184-694cae5a4e73",
        "cursor": {
          "ref": "c897bf79-4095-43b6-ad67-ad9ce8910d4c",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d720c4e6-780c-419a-9407-b695c8360107"
        },
        "item": {
          "id": "afb30ee6-027f-4402-a184-694cae5a4e73",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "408e9b53-8cae-4dd6-b987-f2df040c5252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62574488-ec34-4090-8dcc-10790ec2ebd7",
        "cursor": {
          "ref": "e426eac1-2a0e-4431-8f80-34a139be8d44",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d11f3cdd-5e06-4806-b313-6db2f3ef7baa"
        },
        "item": {
          "id": "62574488-ec34-4090-8dcc-10790ec2ebd7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "acdaf73c-9227-4e82-946d-e3224ad0ea11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ca1f57-0e65-4ac7-aede-a7f6177b6d6f",
        "cursor": {
          "ref": "b31d991f-e11a-4874-8e39-ce5d56cbef12",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ca9252b7-d1e8-4fff-b6b8-8dea2e04a846"
        },
        "item": {
          "id": "57ca1f57-0e65-4ac7-aede-a7f6177b6d6f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "fc42985f-0aa5-4f3f-bea4-9252dbde152b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5872d2-244a-47f1-a648-c4add18dfe9d",
        "cursor": {
          "ref": "2a4ce99c-12cc-43c5-bb3f-65915337cb6b",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7fd1e160-fdc2-48d5-a816-d16050419a1c"
        },
        "item": {
          "id": "9a5872d2-244a-47f1-a648-c4add18dfe9d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8a5c4533-f474-40f4-8633-17b054e91900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052e6b87-d082-483e-982f-ca80d207ee23",
        "cursor": {
          "ref": "c9f9febe-869e-4849-9a2b-45a069798d91",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "2c13fb69-499d-40c2-beb0-1ab7f18b3f2f"
        },
        "item": {
          "id": "052e6b87-d082-483e-982f-ca80d207ee23",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ac91e34b-4695-457c-8913-f07e522281d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494c536b-899d-4041-997c-6ba85384d9b7",
        "cursor": {
          "ref": "7b6d529a-5aea-4bdb-9cce-c3c7ceb98c66",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "75cdf27b-828a-405e-8087-06a80abd8ed4"
        },
        "item": {
          "id": "494c536b-899d-4041-997c-6ba85384d9b7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "22df1e2b-134e-4e4e-ab19-a1a0cd36ae9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dae71f6-0961-471b-a820-5f4053201ca9",
        "cursor": {
          "ref": "53cafb36-057c-41d6-a13b-0dbaeea024d5",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "872ca8a1-2f8d-4f95-a781-301fa229e5c5"
        },
        "item": {
          "id": "2dae71f6-0961-471b-a820-5f4053201ca9",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b8507249-598c-4c3c-bc9a-08b9a0b76034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1748839-025b-4fa9-b6e8-8b2a3ab61cb8",
        "cursor": {
          "ref": "e86c0e85-4247-4e9d-8a45-3886486e142c",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1623cf88-704a-4c94-bb3a-a4f6a1b022d2"
        },
        "item": {
          "id": "d1748839-025b-4fa9-b6e8-8b2a3ab61cb8",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5a4ad58a-c96e-45b3-b0ef-2dd752e7c194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c85091-732a-4754-8b87-f37d4502cf00",
        "cursor": {
          "ref": "8e490fdf-63af-437d-b9ce-b1cf3c0e2761",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d9ff7c35-0da8-45bc-9a8c-766a0cefd502"
        },
        "item": {
          "id": "13c85091-732a-4754-8b87-f37d4502cf00",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2989d96c-830f-47df-9caf-514ef01bce32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71208f85-0bfe-45b8-a093-5916ad150040",
        "cursor": {
          "ref": "552b151a-66bf-45cc-986a-e17aabfe6fef",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "fe975986-d661-4921-99cc-d63c35b9d444"
        },
        "item": {
          "id": "71208f85-0bfe-45b8-a093-5916ad150040",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e5dfabf7-a92a-4e0e-b331-185d6f3f0544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c527132-3790-4dc7-bc91-67163f1e42ef",
        "cursor": {
          "ref": "2f142f7e-3a09-471d-a5ac-b840394491ef",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f1b8bca3-975d-4405-9b63-3f6e4578b11e"
        },
        "item": {
          "id": "9c527132-3790-4dc7-bc91-67163f1e42ef",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a1848f4b-2707-491a-b101-658f4709e95e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed522b74-d070-43e1-a3ba-2df511641289",
        "cursor": {
          "ref": "aca23bb8-5d3e-4649-9593-f138a7d8d16f",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7746b52e-dd86-4049-80e6-7799a2fcea17"
        },
        "item": {
          "id": "ed522b74-d070-43e1-a3ba-2df511641289",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "50f42640-327d-4fde-884c-6f3fde047980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b556979-d174-4ac3-ab2c-95cc4a4377ff",
        "cursor": {
          "ref": "8e3f6ada-ba83-44ae-9d03-f32ddef4d738",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c69ba440-7b25-4424-a19f-938acea7235a"
        },
        "item": {
          "id": "7b556979-d174-4ac3-ab2c-95cc4a4377ff",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "97553db3-e2f7-4c5e-a3ca-2bcf33d80fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30daf2e8-38aa-4f4a-9ac7-e79dc90ee1e3",
        "cursor": {
          "ref": "ffd56aa4-d304-4d83-99c9-0c249b0b7702",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "88482dc9-daf6-4004-9339-30d44f3399ea"
        },
        "item": {
          "id": "30daf2e8-38aa-4f4a-9ac7-e79dc90ee1e3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e03d1d81-5566-46ef-a020-cc670131a4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e1af0a-1007-4347-95ba-ad3ce000eea3",
        "cursor": {
          "ref": "7335d7c6-3514-4fc0-acc9-553ead596ab9",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0310a5a1-5176-4b5c-8e8d-74173eeeb4f3"
        },
        "item": {
          "id": "e4e1af0a-1007-4347-95ba-ad3ce000eea3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "500e1d86-830f-44b1-ae28-8bfa4ce81ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a570b004-025d-4239-affc-b50c30b5df78",
        "cursor": {
          "ref": "e4d86f26-8493-427d-ae69-2393b49034a3",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fd21d50f-b8ea-4d43-a0aa-76511b81c7df"
        },
        "item": {
          "id": "a570b004-025d-4239-affc-b50c30b5df78",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "79ee16a0-7372-4d45-b2ae-27ee16395a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c704fca-3761-477d-ab98-97ee49a4c747",
        "cursor": {
          "ref": "6c517020-dbdb-4f27-8d21-16c4da0eb3c3",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f190aeed-6095-485a-bace-55b036728bde"
        },
        "item": {
          "id": "9c704fca-3761-477d-ab98-97ee49a4c747",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f6feaee0-01b3-43ee-801d-bec58a8f87e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d85638-30a1-49ba-af6e-e96f10a5cc3d",
        "cursor": {
          "ref": "735921a3-fdfe-4902-8ccc-fa44505e3817",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6b20e853-8a98-41e4-ac8e-32ed8825001e"
        },
        "item": {
          "id": "59d85638-30a1-49ba-af6e-e96f10a5cc3d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9fd48795-63f6-4013-a3e8-de68c1f63819",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0271a75c-a8a0-447d-acef-a2d72aca4081",
        "cursor": {
          "ref": "9332d2c9-9f36-41c5-be4c-a1f7df602a4b",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "49805a64-c75d-4fe5-853b-2f9121302cc0"
        },
        "item": {
          "id": "0271a75c-a8a0-447d-acef-a2d72aca4081",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "52729a64-fa6b-42fa-bf55-d8b35af92da4",
          "status": "Created",
          "code": 201,
          "responseTime": 92,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc023381-77a5-4c03-ba22-7ef4ea1cd4f7",
        "cursor": {
          "ref": "a961a089-a242-467e-9464-90c499e51cf1",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "844021f9-1728-4a86-95ff-5df1b22737dd"
        },
        "item": {
          "id": "fc023381-77a5-4c03-ba22-7ef4ea1cd4f7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0061f9f2-109c-4590-bd3d-478c6f0ab6c3",
          "status": "Created",
          "code": 201,
          "responseTime": 199,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60105b3-3ef0-461a-b604-bc57cdf5c4f8",
        "cursor": {
          "ref": "ccbd0c1e-ead4-42a0-b760-c94f4a65e27c",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "74340d13-95ed-4de1-af37-8509ee2c1ae6"
        },
        "item": {
          "id": "f60105b3-3ef0-461a-b604-bc57cdf5c4f8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e6f425ef-f8f3-45a3-84c8-f0e712b83527",
          "status": "Created",
          "code": 201,
          "responseTime": 102,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6506b3ee-3799-4baf-a6bc-1e4b273f474d",
        "cursor": {
          "ref": "0f3deb76-b283-4ea2-9f27-e796d60f0f05",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "51aa205e-3a1b-4e97-88ca-56a5eb00709a"
        },
        "item": {
          "id": "6506b3ee-3799-4baf-a6bc-1e4b273f474d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8727ec32-85df-42cc-a655-3cc624c131d2",
          "status": "Created",
          "code": 201,
          "responseTime": 74,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e286e433-3cc0-4762-9bd7-b9b1cc216202",
        "cursor": {
          "ref": "d4c643c4-53d0-4b14-ba4f-1fae46c61946",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7f49786f-915a-4079-837f-aa3cf3cd3870"
        },
        "item": {
          "id": "e286e433-3cc0-4762-9bd7-b9b1cc216202",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "225dee89-a6c7-4185-aaee-b744f2dac8c6",
          "status": "Created",
          "code": 201,
          "responseTime": 74,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9221165e-97b9-49ff-932d-feaf5f4ecd14",
        "cursor": {
          "ref": "e0da80ed-efaf-4924-bab0-ae9ad3a15bcf",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "70b0d844-53a4-4e42-bf2e-b19fbdc4f662"
        },
        "item": {
          "id": "9221165e-97b9-49ff-932d-feaf5f4ecd14",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "30663aa6-ccd3-4a30-9c7a-e462823800fe",
          "status": "Created",
          "code": 201,
          "responseTime": 79,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e98beda-74df-49d7-ad36-948ffaebdbf0",
        "cursor": {
          "ref": "e604c071-13be-44c6-815b-78a48c46fce1",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2678d7af-09cd-43d2-9ebb-c92d274416cc"
        },
        "item": {
          "id": "3e98beda-74df-49d7-ad36-948ffaebdbf0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "14261e0c-6807-4c55-a66d-f59a17aaf6e6",
          "status": "Created",
          "code": 201,
          "responseTime": 77,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b10bff8-7a1b-4bb9-8370-09623b20f4c6",
        "cursor": {
          "ref": "8845de1d-223e-428b-8cd1-175fc627b9c9",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1ac9ab37-c0c8-40a5-9fcd-47e4b8ee3f97"
        },
        "item": {
          "id": "8b10bff8-7a1b-4bb9-8370-09623b20f4c6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7d618c23-9641-48b5-b1a6-e3c5555e8d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae7eb2b-c291-41ce-a347-2d5269f24fd7",
        "cursor": {
          "ref": "183ee0c6-4dcd-4dd2-9988-c1490fe608c2",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "06d33198-3d0c-4931-b81d-fc3f71d26473"
        },
        "item": {
          "id": "8ae7eb2b-c291-41ce-a347-2d5269f24fd7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9148cee7-5288-43ac-b3bb-0b58f69bd752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c861eee-ef7b-4309-8325-79a0ecd46634",
        "cursor": {
          "ref": "ce8f4da5-ce3b-4959-9039-f556e68d49ec",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "82471bc2-d39b-4eaf-9b0b-bd717591a350"
        },
        "item": {
          "id": "5c861eee-ef7b-4309-8325-79a0ecd46634",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0ac3c1da-f33c-48ba-b7a6-327499cca660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b143540e-19db-4311-9271-0283fbefb9cb",
        "cursor": {
          "ref": "158378bf-0180-49be-91e3-cb1b2df27ac0",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b92df88d-e106-44aa-b75e-3866961c83d3"
        },
        "item": {
          "id": "b143540e-19db-4311-9271-0283fbefb9cb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1ea541e6-d041-401d-aaa3-592523072a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a5c2ba-a589-4adc-bc73-adc8d3e8e6b9",
        "cursor": {
          "ref": "42e07c75-9b04-4a85-932a-d09e5eef96a9",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "455d465e-3eb6-4685-9b3a-f51c09ab92ac"
        },
        "item": {
          "id": "81a5c2ba-a589-4adc-bc73-adc8d3e8e6b9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f80203bd-8cb0-4b0b-ba82-ddd08e0a4a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bdb2c83-5711-4005-a6eb-ff5f3798a696",
        "cursor": {
          "ref": "31741018-6199-4c1e-ae27-00b257860402",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "39dca524-5db9-43ce-a918-813383e6a759"
        },
        "item": {
          "id": "6bdb2c83-5711-4005-a6eb-ff5f3798a696",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9a9885c2-0227-4ca1-8e4b-94465eb5be7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f396a96c-ee3d-4bac-9941-b47f2d21d755",
        "cursor": {
          "ref": "10abff57-3a03-4819-95cd-73c131202895",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9ba37008-3a0a-4830-9c6a-267f4df1f94d"
        },
        "item": {
          "id": "f396a96c-ee3d-4bac-9941-b47f2d21d755",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bf4987f5-2eda-423e-9759-24d76dbd146d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6fb7137-b86d-4962-a0b2-a21bea268d83",
        "cursor": {
          "ref": "c2fc85de-1f8f-4f62-ac81-743a823445c9",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9acde643-cfcc-431c-baa2-d2ef73d8a35e"
        },
        "item": {
          "id": "e6fb7137-b86d-4962-a0b2-a21bea268d83",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6e742ad8-badb-4c17-a01a-fc2d6bd671e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab351aa6-d31f-470d-b4a3-78c2b05e1c8e",
        "cursor": {
          "ref": "ff2560cb-5f4b-4ffd-bd89-ff80589eb31d",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c96a29b7-9bce-4f1c-96c6-6d8db83f3956"
        },
        "item": {
          "id": "ab351aa6-d31f-470d-b4a3-78c2b05e1c8e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "86dfdfc6-355d-4724-a57b-6faff8ec9b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b740ae6-a310-4200-b480-49678a2def19",
        "cursor": {
          "ref": "0c9b89d7-3da2-45fc-9428-0fb23f2f9f4f",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e352ebbd-f594-4c00-947f-d14dad058a60"
        },
        "item": {
          "id": "3b740ae6-a310-4200-b480-49678a2def19",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6cc7aae2-5a21-4385-b63b-1e93accede70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42f199f-d94a-489d-9e86-76bfd9ea6f21",
        "cursor": {
          "ref": "118ab74d-350b-451e-b3a8-9ad26f69a5f7",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "87a6d340-78fb-4016-bdbf-77a8def4bc7b"
        },
        "item": {
          "id": "b42f199f-d94a-489d-9e86-76bfd9ea6f21",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c67d615b-2e1c-493d-be2c-7c41f354529b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a719eec-4f34-48d1-ac0e-009bc474557b",
        "cursor": {
          "ref": "16e0bc95-2c7e-45c2-89bb-f4f176388f55",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c6920918-4b37-4a8e-ad51-5d3db5a7389e"
        },
        "item": {
          "id": "8a719eec-4f34-48d1-ac0e-009bc474557b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "24f8c83b-e738-486a-a45f-6b82fe9a7769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1810b910-077a-475f-9673-c91673308b67",
        "cursor": {
          "ref": "ae92c50e-5827-4fff-9afb-1f50f4dd54e9",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0e5027eb-3ce3-46fd-afcb-198502a05a93"
        },
        "item": {
          "id": "1810b910-077a-475f-9673-c91673308b67",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "dc81f1ed-9947-488a-974b-231329db1f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303c74f2-96c6-4301-bd66-ac7a5636f8b2",
        "cursor": {
          "ref": "7308929c-9ea5-459e-bebe-844f8f8793ca",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "27378081-1962-414d-85ce-e569a60111f5"
        },
        "item": {
          "id": "303c74f2-96c6-4301-bd66-ac7a5636f8b2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5045748f-bbf8-4c70-83d6-dce26b18cf6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf148c90-b5b6-4a2c-97ed-6a206c0708d9",
        "cursor": {
          "ref": "c677e9f2-5bec-490f-906d-ea433d9259da",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a25c9f70-a8fd-4b03-a902-795a5cc79688"
        },
        "item": {
          "id": "bf148c90-b5b6-4a2c-97ed-6a206c0708d9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5db756d9-a313-49f9-9cae-1f72f5f84c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325a3a64-201c-4ac5-8c6d-a9b47ee11c34",
        "cursor": {
          "ref": "e507ef32-a20b-4c91-a1d0-04cb8b904770",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5f9a76cd-f938-4559-83ac-d4e29701006d"
        },
        "item": {
          "id": "325a3a64-201c-4ac5-8c6d-a9b47ee11c34",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fdfd6c77-1209-4cda-b377-b6212304c1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8d8ded-51e8-4cde-9eb7-3ba1cc90a761",
        "cursor": {
          "ref": "ac9d7af5-6e26-4bda-83a4-f49f40189abf",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "fa16ef05-5be2-49a1-9c0d-9fb02b37b5fd"
        },
        "item": {
          "id": "fc8d8ded-51e8-4cde-9eb7-3ba1cc90a761",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c9947b17-b190-4c07-891b-8ef36001b234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11ce68f-f51a-4893-ae94-0ebc02bf7716",
        "cursor": {
          "ref": "adf4f40d-1def-44ac-8203-aba11a3995ed",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6c6cb728-2bfe-4c0e-ab8f-16252fbbc238"
        },
        "item": {
          "id": "b11ce68f-f51a-4893-ae94-0ebc02bf7716",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3a2bc271-e939-41e8-aa5a-3024942bf176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ae3de3-7805-47b0-8e66-175fca83b78d",
        "cursor": {
          "ref": "72efa284-8806-4f69-a8e4-0fe318535000",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "949537d5-4a5d-4b9e-8e6a-b4b077ce0065"
        },
        "item": {
          "id": "82ae3de3-7805-47b0-8e66-175fca83b78d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b7ada3a1-dc54-4918-9ba5-4bb8c2bfcce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d708e1c2-88d5-439f-bdf0-6927725feaf1",
        "cursor": {
          "ref": "bc55d4bd-404a-4c8a-a0c6-8a1f992168c7",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "863a9eca-89c8-4a36-a5db-637e0aae6f4d"
        },
        "item": {
          "id": "d708e1c2-88d5-439f-bdf0-6927725feaf1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "225fb483-a766-421e-ab8d-56ffe316ad36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5cf1ca-3c04-49ea-a483-d1b6f6ebe213",
        "cursor": {
          "ref": "7abae371-3724-4194-890b-5d3facfff121",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b9d49328-5700-4886-8bb5-f790e3a126a6"
        },
        "item": {
          "id": "3e5cf1ca-3c04-49ea-a483-d1b6f6ebe213",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ebc2016c-d0e2-445a-89fc-40278e177fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daca8811-343b-4b0b-b4c8-e26a8fd11a4e",
        "cursor": {
          "ref": "471fc7b4-068e-4491-8b92-9078687e618c",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "995a31ca-9d81-4e2a-963b-4374d2af5fb7"
        },
        "item": {
          "id": "daca8811-343b-4b0b-b4c8-e26a8fd11a4e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1ba9e475-23ff-4f1b-92a8-abbeecd2292b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade29c8d-e15b-46d3-bce5-8eac78e165c3",
        "cursor": {
          "ref": "9e0b5f38-08be-43a4-9253-b4aad5518025",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f521a74c-05ae-4096-bc9b-46e3c889188a"
        },
        "item": {
          "id": "ade29c8d-e15b-46d3-bce5-8eac78e165c3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "06636d56-1afc-4ce9-bf3b-6219e5e86c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "393c6092-4289-4097-a95e-f489436c5128",
        "cursor": {
          "ref": "fc9d8f0b-03bb-4a97-b07c-6a7fcc40339a",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "82c872de-f365-418f-8181-e48bed9aa087"
        },
        "item": {
          "id": "393c6092-4289-4097-a95e-f489436c5128",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "276f56e4-2e5c-4432-8f7c-90cc3048d9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539d4d3b-6d72-48e5-88e0-a2eba4da3a7c",
        "cursor": {
          "ref": "d4126f5c-0eec-4dd6-9e76-062ee48ecbd6",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7c9e5186-3907-44c8-9c44-f760066417f2"
        },
        "item": {
          "id": "539d4d3b-6d72-48e5-88e0-a2eba4da3a7c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "636b6fb6-70d3-4704-90e9-18a8b20c3e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df84e1e4-d475-40ee-bfd3-a277ee9689b8",
        "cursor": {
          "ref": "ddac43e8-5b44-4bcc-ba60-1376a310bfde",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "01a62aec-ebac-406f-a491-fed146055165"
        },
        "item": {
          "id": "df84e1e4-d475-40ee-bfd3-a277ee9689b8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "05bf92c2-d2e1-4df8-981d-e6ed2e550ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9def5cb3-0c99-43ea-b429-d581195ab351",
        "cursor": {
          "ref": "35885b83-398a-4280-bdb8-5e6e0d15b1f8",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2597cb3e-c701-4988-8411-df183d9efd4a"
        },
        "item": {
          "id": "9def5cb3-0c99-43ea-b429-d581195ab351",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ecb27630-b5da-4d9a-a9bf-98aa66b8a311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c265e8bb-019f-4b76-b5cb-7599707e0fd6",
        "cursor": {
          "ref": "53b40c63-35b3-4e8c-97e2-cf08cb2d47da",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "395fa049-fda5-4733-a530-cc62c389c317"
        },
        "item": {
          "id": "c265e8bb-019f-4b76-b5cb-7599707e0fd6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b0f730f3-cbe0-465a-a9e0-162f4e7fcc98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea3eaba-0b98-4732-ae7f-d67591002925",
        "cursor": {
          "ref": "efc6bf93-5a3c-4000-a3de-c2480bb2d62d",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "af0f63ea-6890-41e0-9540-7411c5375fcb"
        },
        "item": {
          "id": "bea3eaba-0b98-4732-ae7f-d67591002925",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5cdcc2d9-80a6-43d7-baab-95fb42c0c515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c79f201-8432-42f1-b049-815ab18cd99e",
        "cursor": {
          "ref": "7826b465-0c20-49c6-99a8-c2d6f621943d",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b8ee4578-95cb-467d-927e-22f712fa77de"
        },
        "item": {
          "id": "1c79f201-8432-42f1-b049-815ab18cd99e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b21d7326-61ee-40a9-bab3-a6408c7fd9c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4a06af-61ed-43fc-bfb4-363fccb4dbdc",
        "cursor": {
          "ref": "eae93526-056c-4aa8-819e-a735d1cc0d42",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "44f3dd58-a02a-45f7-a957-a4383fbbd6e2"
        },
        "item": {
          "id": "4f4a06af-61ed-43fc-bfb4-363fccb4dbdc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "85033252-1022-4cf9-9ab1-5269f4c7bfa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5142854d-d2b3-4a93-82f1-b873742b2d28",
        "cursor": {
          "ref": "13263183-5f89-4ae7-891a-49fa2fd3f1ee",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0de179d1-377a-4345-bbf6-6da2dbcf8ca9"
        },
        "item": {
          "id": "5142854d-d2b3-4a93-82f1-b873742b2d28",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "3da2db87-4f8f-43f8-beaf-fd31b22b73cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b11c5f-ebb5-4a05-993d-c4fa0e85a50c",
        "cursor": {
          "ref": "0c5d8459-ce74-4dad-9dfd-95d94dcafc15",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "acd2f910-5a3e-43c7-85ce-8415604f36d2"
        },
        "item": {
          "id": "24b11c5f-ebb5-4a05-993d-c4fa0e85a50c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e19523ac-840a-46e9-9b3a-f201aee66809",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dfbf402-ad5a-431b-92ab-9539524bb0c7",
        "cursor": {
          "ref": "b7a563a7-e17f-409f-82f4-75c8912b6882",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "537ed5c7-2622-4bcc-8dc4-c10439045c09"
        },
        "item": {
          "id": "3dfbf402-ad5a-431b-92ab-9539524bb0c7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "92ce47af-5e3a-4ded-8c2e-2d61d068091c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c9a694-460a-4915-971d-fc8aafe1f229",
        "cursor": {
          "ref": "92738d9f-3fbe-4cfd-91e9-39079e67e51c",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7600529f-a21a-46a1-a93c-8cfb4bfebdbe"
        },
        "item": {
          "id": "87c9a694-460a-4915-971d-fc8aafe1f229",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4ce548ae-ee3a-49cf-8e3c-f4ac4bfee653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9570a5f-d6b1-40d2-9182-97275fff2655",
        "cursor": {
          "ref": "40bcfb9d-d904-4de9-81ae-0b61a4da8c6b",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ab3b46b9-079c-4736-991c-fd2ac71922d3"
        },
        "item": {
          "id": "c9570a5f-d6b1-40d2-9182-97275fff2655",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bc92646b-b4fd-4500-bf58-83ad9fb8b09b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460f85ef-6db9-4dd7-832a-3aa08676dd56",
        "cursor": {
          "ref": "cdddfcde-afd2-43f4-8588-e95541cb3d8e",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "658a93c3-9037-4121-987e-a73d3cd8d4e5"
        },
        "item": {
          "id": "460f85ef-6db9-4dd7-832a-3aa08676dd56",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bf463940-482e-4ecb-8a1a-2c8cb68e3ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03294460-3230-4602-ab2e-d316b970bea8",
        "cursor": {
          "ref": "f6c11356-99c7-40f2-8faa-de05e210665f",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6d20ed0e-ffac-477f-9db5-5020c796e193"
        },
        "item": {
          "id": "03294460-3230-4602-ab2e-d316b970bea8",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d678f77d-9e15-424a-8b87-77e6fe707f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678a32c5-3a94-4f83-80e1-9b1cfd4bc06b",
        "cursor": {
          "ref": "513be88e-ca85-4556-b2ef-6718b4064258",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "cbf4fb91-ee87-4e0f-87ba-6d6577bb3044"
        },
        "item": {
          "id": "678a32c5-3a94-4f83-80e1-9b1cfd4bc06b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "313ea3d4-e3ab-46bf-8bde-0678deac972d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83907a2-83ff-4d7e-8587-a508bff40f51",
        "cursor": {
          "ref": "28e4df01-91ab-4e6a-b0b6-1762092835d9",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "660c51d2-a3b3-4f6e-bab7-b8f2aa47fc59"
        },
        "item": {
          "id": "c83907a2-83ff-4d7e-8587-a508bff40f51",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f87c2c0f-9bc2-467e-a20f-333b4249b84f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b97635-84dd-4da4-af21-8076a1ab4554",
        "cursor": {
          "ref": "e18a3bbb-46cd-4543-b75e-caaa3bb6040c",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c44797dd-e254-4db2-a468-f0648879f929"
        },
        "item": {
          "id": "b8b97635-84dd-4da4-af21-8076a1ab4554",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7c3a2943-a01a-4434-93cb-d71336621e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023ba649-6cf7-4de3-a46f-97b8dc494445",
        "cursor": {
          "ref": "65d661d3-fa52-4c2a-8857-9c000fe6952b",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "40c46987-80aa-45ce-b1b8-57ee01bc093f"
        },
        "item": {
          "id": "023ba649-6cf7-4de3-a46f-97b8dc494445",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c9d33e74-35e3-4383-9d98-68d9c761abef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2764a610-fb95-4f43-9f50-238c3731d411",
        "cursor": {
          "ref": "e96b0ebe-c1d3-4731-a1fb-7794d5fe5e18",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8015984f-9e10-4331-bd38-6dca55ca761f"
        },
        "item": {
          "id": "2764a610-fb95-4f43-9f50-238c3731d411",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ed9e47be-5138-4dfd-9f4e-17c4aef72bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1902245-7963-4920-a399-a01011b4c0af",
        "cursor": {
          "ref": "1ac40c67-15f3-4ebb-8bcd-1d94c9a0dc65",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a3bcdb07-1c93-4fb0-a8cc-cad83d3b2b91"
        },
        "item": {
          "id": "b1902245-7963-4920-a399-a01011b4c0af",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8ce0e4b1-1c76-4552-92e1-2799380cb5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe16761-0041-4f68-a068-f7b9e2a0f6c0",
        "cursor": {
          "ref": "4697ad11-bc3e-488a-9292-6caf0146c4e2",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1e51e5fd-3139-420c-aa2b-3a505a7a74d7"
        },
        "item": {
          "id": "ffe16761-0041-4f68-a068-f7b9e2a0f6c0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "715ff0a3-a6f2-4c7a-a7bd-eaf8fcdba64f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b255177-e6ee-4b79-820b-b155df6e59db",
        "cursor": {
          "ref": "0cbcb949-1e23-4a43-b61d-9effea558a59",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "50ecad3c-c74f-43d8-9ba2-54840025bc68"
        },
        "item": {
          "id": "6b255177-e6ee-4b79-820b-b155df6e59db",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1f0ecbe6-316d-4139-824e-b212c3436621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39c2e65-7db1-4584-8702-5837958a66df",
        "cursor": {
          "ref": "cef27af9-c5c3-490a-947b-b42bbdd94bd4",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "03235e56-45d9-45cf-b0f5-3bdcf1ff8241"
        },
        "item": {
          "id": "a39c2e65-7db1-4584-8702-5837958a66df",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "08069072-dbc9-40d9-bd4c-6c6bc93762b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4c5bfc-c38e-47ff-b6c7-71b54d4a040f",
        "cursor": {
          "ref": "b5f1b14f-dffa-4759-b0d1-848cd05213c0",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "07e2e955-bd7b-4a1a-a05f-f8297801f800"
        },
        "item": {
          "id": "6f4c5bfc-c38e-47ff-b6c7-71b54d4a040f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6307a69e-8ca9-4932-b5da-1f9758c2a865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78aa7aa-0e4f-48ed-999a-7eae975eff34",
        "cursor": {
          "ref": "1c00f896-d9f6-4b87-b184-fcea667de3e8",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1b49a4f5-7fe3-496e-a6dc-5221a1705e0d"
        },
        "item": {
          "id": "b78aa7aa-0e4f-48ed-999a-7eae975eff34",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "63dd036c-7091-47ca-a8ff-4c1409754593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f930fd44-6268-41e3-9f34-5e67312e0d9f",
        "cursor": {
          "ref": "3cec7648-3000-4353-ad54-3556eeb1f557",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c214b842-4cbc-409f-bc1f-e07eb02df93b"
        },
        "item": {
          "id": "f930fd44-6268-41e3-9f34-5e67312e0d9f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "09988b5e-3a1f-46a0-a1cb-3ada60c699b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f2e491-984d-42f3-8084-b88e3dcb84f0",
        "cursor": {
          "ref": "1a80a8a7-1c26-45f2-856e-3de0d2b17a7a",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "98c22187-67e9-4268-82ac-037a1dd083b9"
        },
        "item": {
          "id": "73f2e491-984d-42f3-8084-b88e3dcb84f0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5a2d5d7b-3410-46ab-8c6a-0041151d9cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb3f056-5bd5-4cc3-8a0d-4b26a0143bfb",
        "cursor": {
          "ref": "d6493988-d39e-419c-afef-b3c603bcbf9a",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "42ae04d6-99e9-491d-ac55-9116883e1b18"
        },
        "item": {
          "id": "7bb3f056-5bd5-4cc3-8a0d-4b26a0143bfb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "73feae38-e7a3-4d55-b027-ed61f90202cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6a2c28-e98b-4f1f-a250-895b88b30632",
        "cursor": {
          "ref": "a5dc7554-16a7-4c89-afcc-634ec539a5e9",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0a341739-3c76-4cfb-9b59-9bb6ecfefc76"
        },
        "item": {
          "id": "ca6a2c28-e98b-4f1f-a250-895b88b30632",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "88867bef-cc69-435e-9c3e-f50a5e8bb99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425a20df-1584-4dbc-b7e4-b0d91fc825ea",
        "cursor": {
          "ref": "9686247e-6790-40de-9c7a-ba10c9fd3c9a",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9671d800-17d3-42f8-8a48-3d939a7871b3"
        },
        "item": {
          "id": "425a20df-1584-4dbc-b7e4-b0d91fc825ea",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8322c528-ba96-4c21-95bb-65d0efd9ca77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d7950c-e2fb-41fa-a3f3-74dcdf818e76",
        "cursor": {
          "ref": "a0030b07-0550-4be7-86ff-d134a0c524bd",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e42be3d1-58cc-4d9f-9522-6a18585fb4ae"
        },
        "item": {
          "id": "25d7950c-e2fb-41fa-a3f3-74dcdf818e76",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "224b01af-fcdd-46a2-b919-7d777b7ab0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979f9291-b4ce-41e0-b410-0d281d4fd42f",
        "cursor": {
          "ref": "f8e5fd28-73c6-4773-8e3d-b329943867b8",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3dc61892-2eef-4cec-828d-acf3e5f35ae4"
        },
        "item": {
          "id": "979f9291-b4ce-41e0-b410-0d281d4fd42f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "934960e3-d0e0-4119-a3fb-eb8ba02fb979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "facad171-ed1d-4393-9d92-704afec134c6",
        "cursor": {
          "ref": "29d6b4c3-2f91-439c-85f1-0c850a69ced1",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "97217cb6-74d5-454e-8cd8-6bd85ab35a40"
        },
        "item": {
          "id": "facad171-ed1d-4393-9d92-704afec134c6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f69f150f-4d5f-40e8-a560-3b48a21e802e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1026ba36-4aaa-420a-b399-12c87dece778",
        "cursor": {
          "ref": "82d71818-a317-4fb7-8657-c97658634850",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7c358cdc-c7f4-44f8-bcd8-1a912aa2f0ac"
        },
        "item": {
          "id": "1026ba36-4aaa-420a-b399-12c87dece778",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "dd94f375-1303-488a-9b0e-283cd29f3af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d088cb5-36c0-4e6e-a75f-52999e509992",
        "cursor": {
          "ref": "816b13ff-1f4d-4970-b362-0e10cd5727f2",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ac7e5ab0-03df-44a4-87ce-4d26cffb54ec"
        },
        "item": {
          "id": "7d088cb5-36c0-4e6e-a75f-52999e509992",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e9792cda-c7b1-4464-a223-d5a4f15a3e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402c87da-e3db-4796-b0cb-cc38d63adf1e",
        "cursor": {
          "ref": "7f7eee43-718c-4541-a389-43368e09fb6a",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "18cf7d33-33b9-4060-9963-fd39110d9696"
        },
        "item": {
          "id": "402c87da-e3db-4796-b0cb-cc38d63adf1e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0493e85f-4431-4f8e-9455-c36128de7330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec93acc-ba24-4c40-9648-349a90687868",
        "cursor": {
          "ref": "bc33a6a8-e56b-4783-bc4b-854a66582b2f",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e1c412dd-b384-4052-8142-6391ae6a1250"
        },
        "item": {
          "id": "eec93acc-ba24-4c40-9648-349a90687868",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ad598a13-6911-42ea-a8d1-7e05289268d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d979c0b4-c705-4ab6-a2ee-05f278ae8615",
        "cursor": {
          "ref": "c61373ff-cf65-4359-bb52-b8f2c8497a20",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3410a30c-3523-4bd3-a431-8ed7dcda49ff"
        },
        "item": {
          "id": "d979c0b4-c705-4ab6-a2ee-05f278ae8615",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7cfe78c5-f159-49b2-8457-6e0296646bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0987e86-9b30-4f08-aa0a-67e2ed3278ff",
        "cursor": {
          "ref": "adb068df-dda0-4e21-8c75-85f0e1ac924b",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "84b2b44e-f7cf-454d-b118-d571102f79ed"
        },
        "item": {
          "id": "f0987e86-9b30-4f08-aa0a-67e2ed3278ff",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "46375d9d-7c9f-4add-9112-a27a9cbb9df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b0fd58-cfd6-4254-a501-a7521440ea0c",
        "cursor": {
          "ref": "4adb9134-8993-48f4-9d48-34f6fa79f2ea",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "96564952-d7c8-49cc-a5a1-09c5eb11248d"
        },
        "item": {
          "id": "56b0fd58-cfd6-4254-a501-a7521440ea0c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2ec36a03-883b-4d1e-8ec0-8d1bf76e4b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40cb3eae-7677-4cba-afb0-3f38de64012a",
        "cursor": {
          "ref": "8eb1ec3e-9083-489f-8b25-a2e468dd310a",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "cb773bc6-1d3c-4d95-aeb9-3109552ac40e"
        },
        "item": {
          "id": "40cb3eae-7677-4cba-afb0-3f38de64012a",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e3395fe0-175a-44b2-9aa9-14bf82a50b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1664f59a-c44b-4d89-90b1-e5434fa04029",
        "cursor": {
          "ref": "e65eef89-483f-40db-9387-050a912deeb3",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "393a0889-0d8c-4035-b1d4-17c67b82297c"
        },
        "item": {
          "id": "1664f59a-c44b-4d89-90b1-e5434fa04029",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2ec54830-8664-4264-82c2-6d215ebad67c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414116ca-3daa-4366-a5a5-708ddfbb06a8",
        "cursor": {
          "ref": "984be604-1329-4cb7-9d3f-3d189a9da0b4",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e7552458-b189-43dc-9cfd-87bbe29f9dfa"
        },
        "item": {
          "id": "414116ca-3daa-4366-a5a5-708ddfbb06a8",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "99c225bc-2d74-45db-92e8-2cb6ac0cf607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "938fc279-498b-4171-a0f9-93c3db87e387",
        "cursor": {
          "ref": "6302d743-c2ee-481c-ba43-8b06c32f94eb",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "646cff65-49d0-4170-9790-c93368041571"
        },
        "item": {
          "id": "938fc279-498b-4171-a0f9-93c3db87e387",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "bd4fd6fb-81f4-44f7-b205-4675403043ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69608027-1fb3-45c9-bc0b-65ff16ff772a",
        "cursor": {
          "ref": "5bb74b29-e713-486d-9675-fa05e4e93da2",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "049c3d75-f3a2-487c-b5b7-45afbdf4a4f1"
        },
        "item": {
          "id": "69608027-1fb3-45c9-bc0b-65ff16ff772a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f7f98fc3-059d-4192-b52b-c480a970d613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ede93ba-a963-43f6-95bd-b7705b3b4b96",
        "cursor": {
          "ref": "6016bf0b-1048-4975-ba4d-62eda526675d",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "78ea78e1-db0a-4e76-87dd-32d417f0268d"
        },
        "item": {
          "id": "0ede93ba-a963-43f6-95bd-b7705b3b4b96",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "22466943-6625-4900-9bed-4a7ac122e5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a6b97d-912b-48b8-b949-e856f24b3ceb",
        "cursor": {
          "ref": "d3c063ba-35d5-44bb-a48b-9bbbfff12004",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "dbd05d7a-317b-4bae-9c3c-e0409dc9db4b"
        },
        "item": {
          "id": "61a6b97d-912b-48b8-b949-e856f24b3ceb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "25118413-d6ef-4cb1-8da4-a25086510acf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fabd44-17dd-4b55-83e3-521214d8df5e",
        "cursor": {
          "ref": "4c4e840a-5f6d-4843-80ae-627e9148ac36",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6a439063-2196-4bd1-9c09-147c8c4f1a3c"
        },
        "item": {
          "id": "a2fabd44-17dd-4b55-83e3-521214d8df5e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f044ab64-2965-4b23-9054-3b438da6e441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0667b9d7-d2cf-4d55-b19c-2ac13e2871b4",
        "cursor": {
          "ref": "c107854b-d6f7-4ed5-949e-7a1cb03b208a",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d3136fe7-d399-4736-9295-bbe02706bafe"
        },
        "item": {
          "id": "0667b9d7-d2cf-4d55-b19c-2ac13e2871b4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e96f9f23-84db-4d16-a220-b9bc8f3785e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce8574a-d235-475d-8bd0-226e7c3d7373",
        "cursor": {
          "ref": "e07c73a6-0eb8-45ee-bfd6-d1c531364c93",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "da1bd1cc-2e1e-4f5a-9570-4d0fb5bf7834"
        },
        "item": {
          "id": "fce8574a-d235-475d-8bd0-226e7c3d7373",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7d8b5797-1502-4ccb-bd42-fdac15103ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1069898-5491-470c-8e87-f5318ee46189",
        "cursor": {
          "ref": "2fd16eb5-cdeb-4664-a295-dd50d60811b9",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e5594995-bed5-40e2-b2ce-3f52f7b6b6ec"
        },
        "item": {
          "id": "f1069898-5491-470c-8e87-f5318ee46189",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "412f2f17-b11c-43e8-9ead-dca4d65348da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dbb93f8-a829-4e80-b6f9-357911dd1356",
        "cursor": {
          "ref": "e32b96be-d16c-435a-8cdf-1a13e6e1c93a",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a0a099ff-f9a8-4ed6-a98b-60ae183ec982"
        },
        "item": {
          "id": "3dbb93f8-a829-4e80-b6f9-357911dd1356",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "13868f2a-7110-4b36-8cd7-748d3210fc5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8e9e5f-ec7d-48fe-adca-34652e2b8bc2",
        "cursor": {
          "ref": "5931f19a-f708-4f46-9e32-b351acae478b",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "cf63b754-7d0e-46d7-b316-3a8468c632ff"
        },
        "item": {
          "id": "0e8e9e5f-ec7d-48fe-adca-34652e2b8bc2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a044c469-d267-43e0-9131-d58d3be49429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206ed79e-95d5-464d-842d-43fb3a8d0b38",
        "cursor": {
          "ref": "fa7f4c4a-31f0-4bc2-8d6a-77fe48259d0a",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1d5feecf-1d0f-4459-84b5-988ecbf627e5"
        },
        "item": {
          "id": "206ed79e-95d5-464d-842d-43fb3a8d0b38",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "12fccdc6-2852-4a07-9fff-a49eaa4b2226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c8fe1f-9f2b-4a04-b1f5-2aa38982b7bf",
        "cursor": {
          "ref": "8ad9311b-8941-4c08-a58e-b0d71a5e8554",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d604b16b-aa7b-4445-8756-4aabcd3e74a0"
        },
        "item": {
          "id": "52c8fe1f-9f2b-4a04-b1f5-2aa38982b7bf",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e3920ec3-df8b-4a7f-88a9-493614aad58f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b48c78-e19a-45be-958b-cecd9d6769dc",
        "cursor": {
          "ref": "30b0df0a-5418-409e-b838-81ebd88f5886",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f257e587-1499-4ec1-a3f5-c76f109bee92"
        },
        "item": {
          "id": "39b48c78-e19a-45be-958b-cecd9d6769dc",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9418d63d-0dd4-4430-8585-227953989133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f67a497-2c45-4cab-b87a-f45ac2430fdf",
        "cursor": {
          "ref": "bb653469-8185-461f-a1dd-3707ebeeb0ef",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e522b166-db6b-4ce7-ad57-08470d0433f2"
        },
        "item": {
          "id": "3f67a497-2c45-4cab-b87a-f45ac2430fdf",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d0563123-815a-44c3-b8b9-7bee27833551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4310148a-228f-468c-98ca-56a5e105e489",
        "cursor": {
          "ref": "693e5169-d982-42c0-b66d-992e737ce01e",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9af246af-be5d-448b-8939-4b7cf973269c"
        },
        "item": {
          "id": "4310148a-228f-468c-98ca-56a5e105e489",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "992bde93-fc37-4fbb-8cd9-e69b5284199c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4a7d02-6e4c-4ba5-ab3b-1182490390f7",
        "cursor": {
          "ref": "44ca7128-45d1-45bb-9bbd-888887ad4aeb",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "76f6309b-9096-4760-adb5-7889bfe62ce2"
        },
        "item": {
          "id": "fb4a7d02-6e4c-4ba5-ab3b-1182490390f7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a650ab29-c6a5-4dff-ab4d-c19daa49ccbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41c17d5-b396-419d-a89c-d711f04a44f7",
        "cursor": {
          "ref": "050f26c1-081d-4212-b29b-54376425d164",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "11d6e2fe-3e74-4148-b614-6684cabdbae3"
        },
        "item": {
          "id": "a41c17d5-b396-419d-a89c-d711f04a44f7",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "819d1e14-d047-4cdb-9111-93a27b75c081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e2f141-cc3e-4582-97ed-5beebb08714c",
        "cursor": {
          "ref": "45ca4ae8-f6f2-4194-a93d-6bf195a9a216",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9045e4ea-89ba-4c12-b0e7-dd0b9817506c"
        },
        "item": {
          "id": "d7e2f141-cc3e-4582-97ed-5beebb08714c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0ddc9c4e-c966-4f53-bdcd-ba363e90f981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbea5c69-6b2f-4b12-b6cc-7bdfd85ba1bf",
        "cursor": {
          "ref": "fa9c9440-fb92-4ec3-bb25-8f77103679c5",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "bdee3ad9-b88a-4750-a174-9e1ac05138b2"
        },
        "item": {
          "id": "fbea5c69-6b2f-4b12-b6cc-7bdfd85ba1bf",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d44b601f-b4dc-4813-bf6e-eb69d8e6ad01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b83db59-4e18-4c3a-9033-59dd3d3f4906",
        "cursor": {
          "ref": "5370f3d8-4e7e-41e1-9d8d-07cd7420fd7c",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8a7d1f5c-2dbc-4d1c-9805-1b2a5e8d6278"
        },
        "item": {
          "id": "1b83db59-4e18-4c3a-9033-59dd3d3f4906",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3ee43c16-1237-44b1-aae0-d20b8df0be2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468ff69b-9e28-4100-bd37-9b212054f6b0",
        "cursor": {
          "ref": "a05a34ca-aad2-4461-8a8e-3b7c30985841",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "13c7c529-7915-47e8-b694-31781ea75fa8"
        },
        "item": {
          "id": "468ff69b-9e28-4100-bd37-9b212054f6b0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f8ca3759-6e90-4f06-a074-126ef6293ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99ee782-c7f4-40d4-a117-db264c1005a3",
        "cursor": {
          "ref": "f3df2e50-0de6-46d3-b8ff-f10d1932ecc9",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1f5c3909-135f-4099-abee-639ca750cdd7"
        },
        "item": {
          "id": "c99ee782-c7f4-40d4-a117-db264c1005a3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7d0296f4-4fbc-4caa-a4af-77b28ae17eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c135f739-a4d6-4993-aa69-2361c33c3cf8",
        "cursor": {
          "ref": "8774cddc-285d-459f-9566-4dde5971682b",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d250cf06-834f-4185-bb1a-2dc9a8c1c6fb"
        },
        "item": {
          "id": "c135f739-a4d6-4993-aa69-2361c33c3cf8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3ba7ffe0-bc4a-45fb-a1fc-1c38aafcdd0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d0d4ba-89f3-492b-a6cf-63e9878782fc",
        "cursor": {
          "ref": "c03293f9-5daa-4cf9-94a9-4ec869419723",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "932f8179-7a04-495e-a3a4-a6b87cfebe66"
        },
        "item": {
          "id": "b5d0d4ba-89f3-492b-a6cf-63e9878782fc",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a2aa8e7e-05aa-4838-ae78-6814019dd075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91887d45-9efa-4c4e-9440-03d40c82a785",
        "cursor": {
          "ref": "4abf3eb5-c9dd-4ded-9e47-3f0e95c46e4b",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1b8a077a-db6c-4f2b-93fd-da42251cc050"
        },
        "item": {
          "id": "91887d45-9efa-4c4e-9440-03d40c82a785",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9a7385e8-a138-4c20-aa3d-3e6ba23ca9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9b8213-3244-4986-8293-57a29450b639",
        "cursor": {
          "ref": "7a82b9bc-3ab0-466b-9013-9dd4a2b4659c",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3e699d53-f68d-40c4-9cd3-b48495a1b5c9"
        },
        "item": {
          "id": "bb9b8213-3244-4986-8293-57a29450b639",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a94782b2-bd0a-41d6-b78e-1da74651f45d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64495077-2774-4875-a0fe-81ccdacfc5bb",
        "cursor": {
          "ref": "9a6b1af2-4f83-4ddd-b363-dbdf2e7a2d79",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8109e304-c371-4737-9a29-a3bb21403fff"
        },
        "item": {
          "id": "64495077-2774-4875-a0fe-81ccdacfc5bb",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "09572255-2fb3-4d5d-b2b3-2d0b2472f582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1292ff-4f17-4525-8223-17329518e0af",
        "cursor": {
          "ref": "6868ffa1-1508-4ca4-99c6-9decde7896e8",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9368be82-0b83-4dc6-ac95-8319151273e6"
        },
        "item": {
          "id": "0b1292ff-4f17-4525-8223-17329518e0af",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "df6ef08f-a156-44df-90a9-d0ea26e9c102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbd7415-4c56-4751-aec9-bb57ad3006df",
        "cursor": {
          "ref": "b0df0709-ab2f-4408-bab7-6d801634e77b",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0e470b4e-a50a-4bf1-ae2b-0c1c55c5c418"
        },
        "item": {
          "id": "5fbd7415-4c56-4751-aec9-bb57ad3006df",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1ea2cf87-85dc-4670-89ce-7ec67c4510a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2700e194-78e7-4106-8a94-3314cb9da48d",
        "cursor": {
          "ref": "b9a9aced-0577-4946-9dab-f6fa95ccd884",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "87cca300-d806-4490-bc2d-67410d1c742f"
        },
        "item": {
          "id": "2700e194-78e7-4106-8a94-3314cb9da48d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "56cc9dfe-feb0-4eb0-b26a-778b8e4f6559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acead916-f456-437c-8800-e431acc12c8e",
        "cursor": {
          "ref": "a105d326-a436-40d3-991c-693d12fbd69b",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "be4ba6f1-99b8-4857-a132-75ba3e9e52d5"
        },
        "item": {
          "id": "acead916-f456-437c-8800-e431acc12c8e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ca320440-7f75-471f-920f-04299df7a903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db20288c-a9e8-4b97-988d-e63382523f91",
        "cursor": {
          "ref": "2637f2d7-cb06-4eab-8783-bd272f3f0fc8",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b4f60ffa-30fb-4ddd-83b0-6849c2bdc810"
        },
        "item": {
          "id": "db20288c-a9e8-4b97-988d-e63382523f91",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f6e123c6-2655-44d7-96b7-4fd5d54e986c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35095522-b2df-4821-a0f2-2b1eeca59f2f",
        "cursor": {
          "ref": "c56cd284-d409-445f-b0b2-8c6c1de04300",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "39a321c6-8bcf-4490-969a-0f7264654dcf"
        },
        "item": {
          "id": "35095522-b2df-4821-a0f2-2b1eeca59f2f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8d7555ec-5e09-4d7f-a8c6-ee70b3cd1df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3af40e4-cd89-43aa-9b61-7df93bc40713",
        "cursor": {
          "ref": "bd8e73d0-72de-4be5-afb2-e7ef69b4a5c4",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a722046c-2021-4ace-a9df-4420d54e5aba"
        },
        "item": {
          "id": "f3af40e4-cd89-43aa-9b61-7df93bc40713",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2d0b633f-7312-4e6b-afa5-8c8e0129125f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c565d36-6447-4b8a-b02a-12a783a93992",
        "cursor": {
          "ref": "347e4b2a-9560-4ece-aa9f-8ac0fca92aac",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "27125501-9a2f-4259-88b9-c21acd7c4e52"
        },
        "item": {
          "id": "9c565d36-6447-4b8a-b02a-12a783a93992",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6bc6a8cc-9fe5-4ba9-841f-75cc556e4353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d59d14-2dc8-409d-acf5-aaf38283e6c0",
        "cursor": {
          "ref": "29cbf36b-965c-4350-9d04-6fcc9527def9",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4f66b74a-593a-4095-b607-d1a7a5861922"
        },
        "item": {
          "id": "e4d59d14-2dc8-409d-acf5-aaf38283e6c0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3d02bd24-792c-4edb-a971-5b6b37ff193d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebdce26-fa71-4063-b232-b071bad07bbb",
        "cursor": {
          "ref": "c27b6668-fbdc-4523-97a7-fde936ebd241",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "04db3575-0844-4d0c-bbbe-0af8e47af91a"
        },
        "item": {
          "id": "aebdce26-fa71-4063-b232-b071bad07bbb",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3e0522fe-d2e8-41dc-a0a2-59df47059b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab32420b-7b6a-434e-b572-a89e209bb8d4",
        "cursor": {
          "ref": "238f7b49-83a0-48da-b89f-6e73e00e98ef",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "095a35ad-224d-4be6-a6ce-cdaeffe80812"
        },
        "item": {
          "id": "ab32420b-7b6a-434e-b572-a89e209bb8d4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e9ad6153-b743-49b2-9be3-d8f3b1a00c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6364b6d-e9c2-4af7-a9f9-ca168fb4a4c5",
        "cursor": {
          "ref": "1ba8d324-beb6-45f6-b7f0-02e445f8be78",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "bc1a5a15-6ef5-47d9-9f4d-55ff90e4acb3"
        },
        "item": {
          "id": "a6364b6d-e9c2-4af7-a9f9-ca168fb4a4c5",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5e2a96c5-f903-4492-b573-6fef168900ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa90430-3628-41ff-a087-1a39a0fa3416",
        "cursor": {
          "ref": "455b5133-f0a1-41fd-a0de-444dc3dda96c",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "bdf1431d-9cc7-4e30-a576-1ec3d6fa7fec"
        },
        "item": {
          "id": "daa90430-3628-41ff-a087-1a39a0fa3416",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "271d3497-cabd-44c2-9e25-3fd15c4d76c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c826781d-c2af-4743-948a-c8ea621ea9eb",
        "cursor": {
          "ref": "6819cede-0a24-4804-80f6-f057a9e10a15",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "91cacfac-0a69-4117-9653-ab85c90a9eda"
        },
        "item": {
          "id": "c826781d-c2af-4743-948a-c8ea621ea9eb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "128c97ed-2c03-487e-91b9-0254458bece7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be988ecf-2ea4-4a1e-a056-b424d4e45e5a",
        "cursor": {
          "ref": "a12a8e1f-92bd-44c6-a950-e8468c075fa0",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "02339eed-f075-4a74-9294-8caee637dbf7"
        },
        "item": {
          "id": "be988ecf-2ea4-4a1e-a056-b424d4e45e5a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1504ec3e-b4c5-4961-bf88-8fcd689bea28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0978d84a-e489-4915-94d5-2598cd193f9d",
        "cursor": {
          "ref": "6926250c-9afd-482a-a60a-cd8871057666",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c8d75a33-704b-42e1-aafd-c43c2853098f"
        },
        "item": {
          "id": "0978d84a-e489-4915-94d5-2598cd193f9d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "fd4fe6e7-f04b-4017-9f9d-27bd01dfd645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6fe8de3-eb96-4fd1-a17a-4a0f4dde15c0",
        "cursor": {
          "ref": "44c9ec12-d03d-4e3a-8d7f-25e08ee621fb",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a1d79027-29e6-434e-b03a-d2f1a34b6589"
        },
        "item": {
          "id": "c6fe8de3-eb96-4fd1-a17a-4a0f4dde15c0",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "08ab4c5a-6de8-4964-b348-5ef049781751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0106b7a-a226-47f4-969d-00006b37763e",
        "cursor": {
          "ref": "d2dc22f4-c11a-4e10-afe9-8b732e6ad15f",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "63846b39-ced6-4e07-8400-89124be4b6af"
        },
        "item": {
          "id": "a0106b7a-a226-47f4-969d-00006b37763e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "de1da79e-cdc0-468d-b271-5c9cb8d2ef05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aeb7e91-8322-417e-9a6a-61c35a64338c",
        "cursor": {
          "ref": "5849e438-ff77-4bcf-b368-c8d69aac8855",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7ca218be-96bf-4389-b769-9c3af95040ed"
        },
        "item": {
          "id": "6aeb7e91-8322-417e-9a6a-61c35a64338c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a532b510-f333-44e9-99cd-b3d86bd04eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d7dfd9-b343-4577-9d4e-6a18bc817c32",
        "cursor": {
          "ref": "ace1bda9-f251-4011-b720-4f83abf283fe",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "57c657d3-549e-4b67-bb7a-8b46feecaa37"
        },
        "item": {
          "id": "a9d7dfd9-b343-4577-9d4e-6a18bc817c32",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1abdc4cd-239b-4aa2-ba76-0555e644f39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336efa36-f622-4ee2-9e62-8ca3c3097569",
        "cursor": {
          "ref": "b513c59f-f24e-4e98-92e5-b704f7dc65ab",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a1b9be11-6b2d-4b48-aa0d-ec3711fedfdf"
        },
        "item": {
          "id": "336efa36-f622-4ee2-9e62-8ca3c3097569",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8aa38df5-7b1e-472d-ab20-2b27248dec68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e819b8-8958-43df-a103-a8e9a0c25893",
        "cursor": {
          "ref": "db88fde0-0f40-437d-99e2-1cb48d6171fa",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8184df8b-c0ac-485d-bc8e-8fa9b59f2b93"
        },
        "item": {
          "id": "f6e819b8-8958-43df-a103-a8e9a0c25893",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "cbb4f372-90d5-49a9-9ea8-5764a38e520e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4252748-9ccf-4b68-93f3-dcdf872f306f",
        "cursor": {
          "ref": "5d5eaf65-18da-4cc0-b79e-18a4fb83385a",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9d3d9653-f34a-45af-b111-6c20f9beb7c3"
        },
        "item": {
          "id": "e4252748-9ccf-4b68-93f3-dcdf872f306f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f2b155de-2642-4d91-9346-18f61b998b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1cdd7d-b21e-4f8d-b52e-c6e4abcca4b5",
        "cursor": {
          "ref": "a464b298-dd28-4db4-bb32-3daf67e0e948",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3af3ea5e-c0bb-4911-a054-c590c6b89ffe"
        },
        "item": {
          "id": "eb1cdd7d-b21e-4f8d-b52e-c6e4abcca4b5",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3b40ac71-5f04-41f4-94af-80702ddd9e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75e8b14-e5d3-4b0b-883b-15eb81de759e",
        "cursor": {
          "ref": "d4415437-ea39-42bc-98cd-989105b13105",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "177000d6-10b3-4349-b6cd-31404f0af5aa"
        },
        "item": {
          "id": "d75e8b14-e5d3-4b0b-883b-15eb81de759e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1151ded1-68e4-4958-b368-22c47f93baf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d8768b-d8cb-4bd2-9f5c-e6158b12d2de",
        "cursor": {
          "ref": "8f81a774-abe8-4e9a-a4eb-e1aab407fc17",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0bd66a8e-b2df-4251-9a4e-74386df651d1"
        },
        "item": {
          "id": "29d8768b-d8cb-4bd2-9f5c-e6158b12d2de",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "dbd57264-134d-43fb-81a2-c4fb990633fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336c963e-1278-40ee-a86e-53c81e58466d",
        "cursor": {
          "ref": "f904caf2-c0f8-4852-90a2-dce8a4b3909b",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f904a4ac-3b6d-4a92-a0e7-b7d757b26767"
        },
        "item": {
          "id": "336c963e-1278-40ee-a86e-53c81e58466d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b9148395-81f5-44e0-b2fa-685c870cce66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd8e7ed-6808-4765-81b1-64f02efcf7cb",
        "cursor": {
          "ref": "8dbd8a88-aac8-4cd9-9176-e7ee9247c873",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "eb04b395-96d8-46c8-9a8c-c8aa67f70e28"
        },
        "item": {
          "id": "6fd8e7ed-6808-4765-81b1-64f02efcf7cb",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e07e45d4-a4b1-44c7-894a-57b12a3605ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e761f1c1-2f39-4e55-97b1-598421cff441",
        "cursor": {
          "ref": "f7df92c7-3262-4337-8f23-35e093b05d55",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "28d8f859-5fda-446a-8c29-bcb291ea9d07"
        },
        "item": {
          "id": "e761f1c1-2f39-4e55-97b1-598421cff441",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "21c4922c-a700-4b1d-94ba-36fdd2c6be9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966f3fa8-491d-4fe8-8bda-412a1b843adc",
        "cursor": {
          "ref": "6b24b146-0cf5-4060-bd63-e03b69e0a5b1",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f1aeeb6b-bbfe-47dc-a36d-e9e82c43df17"
        },
        "item": {
          "id": "966f3fa8-491d-4fe8-8bda-412a1b843adc",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "caa3b94e-c855-48a5-bc42-73e6c964c9ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0450d457-123e-48fc-9521-325735399a10",
        "cursor": {
          "ref": "b1e4f5f1-9794-4751-9290-98bc67eed2f2",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9faa7be5-a615-45cb-bb93-20f79c3ce956"
        },
        "item": {
          "id": "0450d457-123e-48fc-9521-325735399a10",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "889c91c8-096f-494c-8e21-5ccdf7e6481f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68dcd224-6596-4805-8a79-7a98c9437c54",
        "cursor": {
          "ref": "6a0c7975-a487-42df-a94c-476e850abe28",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "260f2abc-85f8-45a6-8708-937ffd8a6860"
        },
        "item": {
          "id": "68dcd224-6596-4805-8a79-7a98c9437c54",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "365851d7-1f4b-4ef8-bd19-0f0278e1c645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c50692-b8a4-4650-910c-ba7e66e5bf01",
        "cursor": {
          "ref": "3c4b2a57-f17e-4092-9980-9b527ed64c1e",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "bcfe9b07-41c8-426e-b6f9-73de82000884"
        },
        "item": {
          "id": "98c50692-b8a4-4650-910c-ba7e66e5bf01",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "eb1062df-81bb-4e14-8af5-90818e8e1328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4988dd45-53cc-4175-90ae-7f36dbfe509a",
        "cursor": {
          "ref": "94b69962-723c-4ca5-8fed-dcc70d000fe7",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6ee1c7e2-ecc8-438d-a991-b0b572b8367c"
        },
        "item": {
          "id": "4988dd45-53cc-4175-90ae-7f36dbfe509a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9c45ff3b-ee7e-43aa-8e3b-b268f5ac5e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df64fd0-ac01-443f-be47-43e7fc6a1440",
        "cursor": {
          "ref": "9bf84283-3b17-482d-849d-5e2b2df21fd9",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1cf8933c-12c9-48eb-85a9-f1a411018194"
        },
        "item": {
          "id": "9df64fd0-ac01-443f-be47-43e7fc6a1440",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "46c2a0da-e05a-42cb-9853-767409c7ac29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6c822a-c698-4fe3-9ccf-a69f5c0148ca",
        "cursor": {
          "ref": "07aa7a9f-b454-42d9-b22f-4c8334ba1dd2",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "33d3ed35-b06e-4ec3-ba0e-23680307667d"
        },
        "item": {
          "id": "0d6c822a-c698-4fe3-9ccf-a69f5c0148ca",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "04d36eac-f49e-4fa7-9341-9bd8235402bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed3db6a-7cfb-4ad1-ae50-14c0e80bbb50",
        "cursor": {
          "ref": "9c2958b2-093a-4dcc-aa33-f8adc5ad90ad",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b3a2dd9d-308f-4e4b-a365-32b5343e2c05"
        },
        "item": {
          "id": "5ed3db6a-7cfb-4ad1-ae50-14c0e80bbb50",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6c7ceb1a-5b9f-4dd0-91dd-dce7f0742d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff7e37a-b6de-4e22-9178-51a0a2f48b35",
        "cursor": {
          "ref": "8e99f528-4761-4fd5-82db-49b5b147bf9d",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "30962ba9-72fd-4b99-aa14-0848b9a9cc79"
        },
        "item": {
          "id": "8ff7e37a-b6de-4e22-9178-51a0a2f48b35",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "79cd8661-1e10-4ea3-8b00-5e20a1191865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f555edb7-7640-4e96-bd14-a4cff46d43cc",
        "cursor": {
          "ref": "93ee40b0-7074-4c54-800b-1c5a7613cf95",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b6f1fecc-9410-4759-af12-d56e30243c2d"
        },
        "item": {
          "id": "f555edb7-7640-4e96-bd14-a4cff46d43cc",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e0154839-9bc0-4adf-abd2-177f35ef612a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d931f700-abd8-4fab-9663-026d05ea5478",
        "cursor": {
          "ref": "552f41c6-ec8e-4eff-b571-e09e6f373658",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1a6214ce-ae90-4e0d-93bb-1d2e38c1b9dd"
        },
        "item": {
          "id": "d931f700-abd8-4fab-9663-026d05ea5478",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8046e969-f380-49c2-974b-3c26ea79b3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112df466-3df2-4f2e-9994-a2fbef2dc964",
        "cursor": {
          "ref": "e0feba1f-f86a-4009-bc60-a47721a55fb0",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6943710d-24ae-41d4-8440-7d36c82d36f8"
        },
        "item": {
          "id": "112df466-3df2-4f2e-9994-a2fbef2dc964",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "90691a53-8087-497b-a416-1289d9c88572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d49efb7-599f-4822-9a2e-c10e4f3826aa",
        "cursor": {
          "ref": "90096130-7d03-4ad0-9e2d-c6ef15f33b01",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ace6e6ba-2d79-4a3e-9013-5418fc6362e5"
        },
        "item": {
          "id": "0d49efb7-599f-4822-9a2e-c10e4f3826aa",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e987e7ab-a7f1-4067-8689-568ddf7ec4b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f45578-5bce-4287-bfcb-2b602e1ccb31",
        "cursor": {
          "ref": "f5327887-36d8-4f8a-9ec2-296383feb45c",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "84ab30e5-3e2e-47ee-8110-154cbcf750c3"
        },
        "item": {
          "id": "f5f45578-5bce-4287-bfcb-2b602e1ccb31",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d9df3fed-d4ba-4eb3-9d8d-3d5a75227bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e30522-3342-4745-8ebe-079fcca862e1",
        "cursor": {
          "ref": "95ce5238-b295-4d95-8917-4163701891ee",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3f1d88e0-ed7b-4d71-be29-eee288b2e3ef"
        },
        "item": {
          "id": "a3e30522-3342-4745-8ebe-079fcca862e1",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "401a858f-bcce-426d-b6bd-523aef6f2f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aeff23e-ab10-455c-a5f6-170108871752",
        "cursor": {
          "ref": "1d2992c6-b50e-4e36-9fd9-9e0a49ea1811",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "538635cc-30c0-4e40-bb11-4fb4db276680"
        },
        "item": {
          "id": "6aeff23e-ab10-455c-a5f6-170108871752",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "afb95198-8999-4a63-b548-49ba6dd304ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690b4ec8-4f01-468c-9c2d-67b0d136f9f1",
        "cursor": {
          "ref": "6ccf4df0-f435-4701-bcce-6016b59e2394",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7323f265-94f0-4f43-86c2-b67f485827f5"
        },
        "item": {
          "id": "690b4ec8-4f01-468c-9c2d-67b0d136f9f1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3e1bb873-e796-474e-86ef-f252617ca4f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7901cfd-db5d-4fa0-86ed-9d0ccb3364a0",
        "cursor": {
          "ref": "5841a1a7-8a71-447a-b83b-b4003ddd95f9",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "97fcaf0d-0d4f-46fb-9b57-2ba5fcc9d5ca"
        },
        "item": {
          "id": "f7901cfd-db5d-4fa0-86ed-9d0ccb3364a0",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "00995ac3-cf88-4dbf-8224-ed4ce1602dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c789f6-63da-42fc-bc0c-a06f51de68af",
        "cursor": {
          "ref": "b4f9820f-ab5e-4dd3-9e51-bdb5cd6b6743",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "666a76c4-55e4-414a-98a7-2dec028f35c8"
        },
        "item": {
          "id": "77c789f6-63da-42fc-bc0c-a06f51de68af",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e385ed7c-952c-4276-a619-20bb3c5ae734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29559d91-e939-4eb8-91f5-ed6153043c3b",
        "cursor": {
          "ref": "3403a97d-3610-4c74-8ae8-a94e1d331370",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b2728ac8-7343-424c-aeb9-856c1dd8ad1f"
        },
        "item": {
          "id": "29559d91-e939-4eb8-91f5-ed6153043c3b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "22ac73a7-7bd9-417d-aeaa-618632a79318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6afaf4e8-619b-4fbd-bd28-c6d105af2f21",
        "cursor": {
          "ref": "b8d7b712-aaea-4865-8ec4-5d78459cbcf4",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "2d27f6c4-41a5-4b82-b9b5-b0c864fcf76a"
        },
        "item": {
          "id": "6afaf4e8-619b-4fbd-bd28-c6d105af2f21",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "dfde1cad-730d-4ef9-9443-6f37420d5c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881cf7dc-21cd-4895-8d14-43b9bae295d6",
        "cursor": {
          "ref": "87756338-79f6-4181-be4e-17ba2d8ead51",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "239026de-e9ab-4bdd-85e5-b826feab9028"
        },
        "item": {
          "id": "881cf7dc-21cd-4895-8d14-43b9bae295d6",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a3c5d565-82e6-4bea-b610-ceb12a57674f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525ac727-6960-44d6-8c4a-5a7428be48ac",
        "cursor": {
          "ref": "74f1ba52-caf4-4f3d-a76b-8b7b374dbad6",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "0a4c04ce-178c-401d-8f07-e4e0d62ab591"
        },
        "item": {
          "id": "525ac727-6960-44d6-8c4a-5a7428be48ac",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bdb91f6f-d4c1-4abc-b0f5-59b2059e25cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828d37d1-f56a-4f85-a391-867b1a49a94c",
        "cursor": {
          "ref": "01692444-abd4-499c-accf-61d7d896397d",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "483e4ea1-871b-47d4-a0b9-32f816d194a6"
        },
        "item": {
          "id": "828d37d1-f56a-4f85-a391-867b1a49a94c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d9e7a0b5-365c-47e7-8424-1252c1ae97a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a65fd88-2257-4ff1-9587-35de1c0f942f",
        "cursor": {
          "ref": "72746a28-808d-4eb1-a8d9-ebe6a1509d13",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "f301f481-0ee7-4e65-8cd7-1970b2abd473"
        },
        "item": {
          "id": "1a65fd88-2257-4ff1-9587-35de1c0f942f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "cac988dc-a73a-4f5b-a788-52473e128bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff454a45-f8f5-4cf0-9c61-7211c270bc6d",
        "cursor": {
          "ref": "7320c1ab-dada-48d1-bce6-69ed7aad25b8",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "1cb09b24-ced7-4104-8b00-98c5260a91df"
        },
        "item": {
          "id": "ff454a45-f8f5-4cf0-9c61-7211c270bc6d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e60f170f-96fb-4e3f-bd9c-ab3cc52596ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440fc1c1-121c-4245-a4d2-800500ea110f",
        "cursor": {
          "ref": "10136fef-3e3e-4864-a12c-daf7ad2aae4c",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "1dcae57f-3c80-4ef9-8a3e-fa3cd58cd4c2"
        },
        "item": {
          "id": "440fc1c1-121c-4245-a4d2-800500ea110f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f86eaa71-6cc4-4c7b-90ce-e3c7c993501f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd9b84b-fc09-4680-b0bf-3d8b4dd5bbfe",
        "cursor": {
          "ref": "0004d9f5-985d-44eb-b788-487857042109",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "c0a5d611-e639-40de-8ad0-4c158a13d7a7"
        },
        "item": {
          "id": "3cd9b84b-fc09-4680-b0bf-3d8b4dd5bbfe",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c191f46c-e8f8-48ca-b5b2-b11d24e8c320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1c05a3-ccf1-4602-a393-8a38704338b9",
        "cursor": {
          "ref": "a0276322-21ac-4b6d-a0e0-fd3967e28abd",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "cb641098-98ce-4839-90b8-dbe154498818"
        },
        "item": {
          "id": "2e1c05a3-ccf1-4602-a393-8a38704338b9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2aff0719-0412-47f1-9a8b-23a514aab8d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd7ad23-a02a-4abf-8ae8-32f57306595d",
        "cursor": {
          "ref": "bd0d323f-15df-4d44-8869-4cb6bfca3b8a",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "5f9d7d19-5f97-46e7-a9ab-4c3dae5ab991"
        },
        "item": {
          "id": "2dd7ad23-a02a-4abf-8ae8-32f57306595d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a231c5ea-cadc-472b-befa-cae720a1bd54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020f01fb-fb54-47c7-bfb4-220a91638ca5",
        "cursor": {
          "ref": "c3115f9e-ac6d-4409-b1da-b5d2f6a970cb",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e6006ade-1bad-421e-8a13-f7cfbd04719f"
        },
        "item": {
          "id": "020f01fb-fb54-47c7-bfb4-220a91638ca5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "94433141-84c2-4243-9cb4-b203e38a35b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7bc4a15-a934-46d2-b029-496cd8390872",
        "cursor": {
          "ref": "4be2858d-b225-40b5-afc0-9af45777c8dd",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "bb5f9993-b49b-4685-8f82-795228cd2731"
        },
        "item": {
          "id": "c7bc4a15-a934-46d2-b029-496cd8390872",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5c34b1fc-6fe5-4836-992f-f25c415400cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d84f540-4302-4029-b210-ea5721090260",
        "cursor": {
          "ref": "9bec018d-d06d-456d-bc77-61f541bcd3f1",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "863d8087-980d-4f24-b78f-ee1f5af0fc07"
        },
        "item": {
          "id": "1d84f540-4302-4029-b210-ea5721090260",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1b9984bc-43c6-4539-8ce6-7c0219c27e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a88e95-c7dd-445a-a42e-055124f4b51a",
        "cursor": {
          "ref": "a8d428c5-11c8-464d-b33a-0df8a65b48c9",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "f7a2a2cd-71e3-4e9d-bb52-0aa5e57fe7c6"
        },
        "item": {
          "id": "64a88e95-c7dd-445a-a42e-055124f4b51a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ab8cdc2a-7cdf-49bc-9804-8ec73b01bf6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc6712f-948a-45d3-83bc-66056f19b7f0",
        "cursor": {
          "ref": "7f8642e3-4d40-4d94-95dc-fdddc5e1230f",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f9f4d02f-d869-4018-9660-52e26e516506"
        },
        "item": {
          "id": "abc6712f-948a-45d3-83bc-66056f19b7f0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "34438890-b8f1-480c-b93b-c2f08dc7bdf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4255968e-5ef2-4cd3-bf1d-b677796d554d",
        "cursor": {
          "ref": "019241db-4351-409b-807e-86ebcefff48a",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "4befaac3-1e46-4e84-b985-3c63ea839991"
        },
        "item": {
          "id": "4255968e-5ef2-4cd3-bf1d-b677796d554d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "03418278-6a32-46a5-aefa-bb64aa5a6b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5be506b-e80d-40ea-89c2-b5a81bf84ad2",
        "cursor": {
          "ref": "033063e6-4ee7-4f6d-899c-faf6462cd2d3",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "590ae376-8463-4021-9184-4d3a7042c845"
        },
        "item": {
          "id": "c5be506b-e80d-40ea-89c2-b5a81bf84ad2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "48f1369f-485b-4b32-a4d7-7c2152b1acbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb0b71b6-9d16-4993-b74b-bb8795213c1f",
        "cursor": {
          "ref": "ccb33766-69d3-4acf-9b0e-73afd0ff0470",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "e3c6b871-f7b1-4957-a16d-ada222be5ccb"
        },
        "item": {
          "id": "cb0b71b6-9d16-4993-b74b-bb8795213c1f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1ec4841c-754e-4750-9ce4-450d2d681269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1fe28e-a66b-401d-8ff7-66b2d4a73892",
        "cursor": {
          "ref": "a1e675aa-42b9-4f6c-8b53-579079325bd7",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "1895efe6-c886-463f-9a07-a3659bebe182"
        },
        "item": {
          "id": "dd1fe28e-a66b-401d-8ff7-66b2d4a73892",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "104afd3b-05b5-4e89-904a-3888da84f07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f88f3f-fdb4-4898-8f1e-0c044720dd77",
        "cursor": {
          "ref": "93d2626f-5138-4ed8-8484-b067611e74ad",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "62dd74f6-5851-4437-950b-9ac2c3f1865a"
        },
        "item": {
          "id": "94f88f3f-fdb4-4898-8f1e-0c044720dd77",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7078e5d7-9679-4c96-872b-afaeac82d197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6067083a-03a0-4b0b-8357-a3d9c331116d",
        "cursor": {
          "ref": "66d42684-6183-4d85-8c7b-34044e959e14",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "e9b42468-dd78-479a-898c-5ce0029f4599"
        },
        "item": {
          "id": "6067083a-03a0-4b0b-8357-a3d9c331116d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "3c0900ef-c008-4481-8976-0e1fb0bd9f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01bf216e-82c4-4b7b-965d-49e3b334a5b8",
        "cursor": {
          "ref": "09c64e5a-3c2e-4557-b9dc-0496813e8f1c",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "f21291bb-158a-43b0-ba04-177b641d9958"
        },
        "item": {
          "id": "01bf216e-82c4-4b7b-965d-49e3b334a5b8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d1ae750e-afae-4c7a-a9d9-edc36e3e4cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5324441-6ca8-4a40-a8f9-2c67a0cb954b",
        "cursor": {
          "ref": "ca4daec6-5771-4283-87a1-fc7b16565757",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "ae619143-ec64-4f9e-8690-2729a97ea3b1"
        },
        "item": {
          "id": "d5324441-6ca8-4a40-a8f9-2c67a0cb954b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "acb503cf-0f6b-4fd1-a6ce-f9322e4efd7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf300a0-85bd-4d92-bbb6-7948e2d969dc",
        "cursor": {
          "ref": "fc46a261-f4bf-4f0d-abe1-b067ea1bda54",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f5369104-4df7-4ba1-9207-993ee51edb66"
        },
        "item": {
          "id": "cdf300a0-85bd-4d92-bbb6-7948e2d969dc",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2a36822b-7b51-4580-8ea5-ab3ae4a0cd76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b665af57-2eee-40ea-8ba1-09d07225a880",
        "cursor": {
          "ref": "eb2f1f90-c961-4448-a1ea-bbe0a2216a6f",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "4b9a4a60-2629-4586-8654-09402ff93709"
        },
        "item": {
          "id": "b665af57-2eee-40ea-8ba1-09d07225a880",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7dd01ffe-d3d3-4c12-a245-80e14cb70821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0d27ad-82a2-4ad4-92ba-9240412e0742",
        "cursor": {
          "ref": "44ad6106-244d-4748-ba82-ddfb61ace5cc",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "6ce73b3c-1096-4c47-9877-6c6e20b05d75"
        },
        "item": {
          "id": "cc0d27ad-82a2-4ad4-92ba-9240412e0742",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0cf5e329-b623-4b5a-b910-bdcccf89f3f4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af66ca8-c672-4967-9aa3-7603348e02cd",
        "cursor": {
          "ref": "8929282b-ee62-4b89-ab6f-35c0827a7117",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "bc24fc27-1fb2-4766-ada9-08140481b66a"
        },
        "item": {
          "id": "0af66ca8-c672-4967-9aa3-7603348e02cd",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "afc21a95-469e-4bc7-bda1-521f3e4eda4b",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "57761a18-364c-426e-ba04-078881346c89",
        "cursor": {
          "ref": "aa60d7d5-61e9-4fb2-9a3a-4cc8e82ec88f",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "418284ae-780c-463c-88dd-3fb394551b51"
        },
        "item": {
          "id": "57761a18-364c-426e-ba04-078881346c89",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f1232a2a-69a1-456e-8584-ff245870a3aa",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad817db8-3033-4f4d-931f-97a67c53dd74",
        "cursor": {
          "ref": "cf9f867b-0729-4171-b94b-1232c30e7773",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b0f53380-6932-4e35-a474-93c5d85ae408"
        },
        "item": {
          "id": "ad817db8-3033-4f4d-931f-97a67c53dd74",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "43cbc58c-c4b2-4ba3-9830-ed544b870a44",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0954b377-58a5-41b8-9b0f-2afd328851e6",
        "cursor": {
          "ref": "06841239-3aaf-4f74-b71e-259853f16263",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6322ffbf-e1be-4f44-8b8f-7664b0779b88"
        },
        "item": {
          "id": "0954b377-58a5-41b8-9b0f-2afd328851e6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d53bee31-e978-45e0-8378-e9c1240c4398",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0954b377-58a5-41b8-9b0f-2afd328851e6",
        "cursor": {
          "ref": "06841239-3aaf-4f74-b71e-259853f16263",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6322ffbf-e1be-4f44-8b8f-7664b0779b88"
        },
        "item": {
          "id": "0954b377-58a5-41b8-9b0f-2afd328851e6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d53bee31-e978-45e0-8378-e9c1240c4398",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e31200-1a5e-4672-a52d-6fd31cc66a43",
        "cursor": {
          "ref": "fa49fd3e-fd1e-447d-972b-402079b9308b",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "97f17140-9453-4a0b-b7dd-5d5339ae0057"
        },
        "item": {
          "id": "d3e31200-1a5e-4672-a52d-6fd31cc66a43",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e2605a12-1bd0-48ba-9515-79515e635d6a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecfdfc3b-1a6e-4bc6-acd0-23e7f6b9a974",
        "cursor": {
          "ref": "c277b8fc-aedc-418b-8d7f-0a2e095bf4e0",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "723c65a8-ab63-4cde-a280-43abde6755bc"
        },
        "item": {
          "id": "ecfdfc3b-1a6e-4bc6-acd0-23e7f6b9a974",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3908a960-eb50-4021-a7c2-ac9440e2cfea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}