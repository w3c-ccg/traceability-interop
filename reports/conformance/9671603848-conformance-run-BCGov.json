{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b14da1e7-b17d-4d12-9049-0ff8b74e1857",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f2d9080f-b157-4990-ace9-ea11a64d8fc2",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "84537631-e4e7-4636-8363-de7e9b882ee9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "594e73da-ac27-4730-b46b-e969d21202df"
                }
              }
            ]
          },
          {
            "id": "0d4a02c7-8788-4e88-9b19-a6642a42a54a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "89d30be6-886d-42d1-bb60-73f6a5656191",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "29afcc74-79da-4e74-96f7-b3a366b68a64"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "164bc825-9ad4-4bdb-9248-afb4c6a46ad3",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5b06ca5d-2c90-4f27-9acd-e6a60d5385ae",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8ff6eae0-a815-4ae1-a9be-795659e214ab",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "871150f6-8303-470b-a7b5-7b09424231e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "149be7ac-f1e4-4cc5-82f3-f5ad98231ca1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6075db39-e592-4e9e-a9f4-d1ee56f43a24",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5b5e97bc-2d6c-4d24-821e-dd3af4c8069e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "362c2921-ea2e-4d3a-853b-0fbbf0820521",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b0f7d160-b366-4df0-925d-3b493d4c6026"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1af636c4-847e-4c39-be3a-73e62e533a4d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d3c6e453-e212-492b-8913-6f637e795f6c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "488b6d9a-14d6-4ca6-9068-c4b33aa04725",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f611bf8e-63c5-4a49-bb72-9bf6bc124885"
            }
          }
        ]
      },
      {
        "id": "9d1c2a7b-f0e2-4b43-87ac-4ff75c753efd",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a4daf20a-ca45-4b2e-a3e0-f7cb0641cae6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1e4bc894-1521-4cf2-8ce3-b1f59dc6e680",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9cab07a8-f5f5-4edb-8552-e131757f1616",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff8ec4b-d7f1-4c4a-b7a6-f25466fa3b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08d7b94e-83d1-43aa-9e01-ba9001feb68c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e278494-ded0-478b-a385-d7e06a40b5f7",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f718929-ca6e-4178-a301-6c54de751c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04c76824-cd80-4205-b983-21d8d5af2509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f936c2-b6f4-4bb8-a5f1-06fdb38d3c21",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "180a15f1-ad0a-455c-9e72-b8f523353816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b504a59-28f9-40c5-8920-ac220bc9abd9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f7540bd2-48ee-4633-9cbc-d44f99f7f599",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "85636cf4-a7bc-48a8-a969-2cba693fee78",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8241bf45-9887-4d30-a56b-18d46adba030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af6bb74c-aab4-40cc-b6ec-93051bed38a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc52fc9-1eae-49de-919d-b3c52ba69527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c17296d-c557-4e15-8f42-b3f3f71ede63"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "df218a76-b203-4db1-931e-85c465d571a4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "79fdbaa4-aed7-43b4-9b86-70bbd2d7a5c3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20de779f-f0b4-40e9-8688-552ce3ba7637",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b3d1442b-7416-403e-b289-b917dbd35d3c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "24cecbc2-188b-4e74-9a7b-94800d060d48",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f434fe16-b107-454c-91c7-073bc723e71b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "47b687f7-261e-47c4-a0f5-b46a4af3d18f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "52175efa-c995-49ee-8495-bf893d2f6e53"
            }
          }
        ]
      },
      {
        "id": "c3d9898d-dc9b-4f5c-ba3c-e75e12bc29f8",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f323875b-fa73-4f25-b8b4-255a3bfa24b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "535ab156-7868-4a14-9966-e949a53186d5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6393c796-f00c-41ae-ac5f-06ab978e7e2d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3577aeea-b1dd-41c9-b58d-3295e529a611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a45e7a2-66ee-4cf2-8f52-d771bdd2e46d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99fe02c-c71c-44fe-8265-8ee29da556a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3721f887-e66c-498b-8fdc-961028b4f6dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c676da-2ba9-4549-af73-a31c3670fb18",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e1525e-4742-45e2-a363-8e584980ffdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a37e4b1-229b-4956-99e5-78f6f226ffea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207a9eea-b5e0-4916-a52e-df1a25644c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9dc425a-70f5-4e61-992b-e6dcd3cae9f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec579e6-0741-4427-9859-a6308cd7dfa4",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe711b9b-5141-4011-a7f5-e4bd95e6485a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47289597-e7f7-4e9e-8486-452a2638d745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea77faf-d867-4271-ad28-581b9bb0c396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "adc0ac8d-98e0-48e7-a0ca-960b0e1e80c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a9ad61-4ba3-4849-bc0c-3af7d5054bd6",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bceee9ad-b425-463b-9b6c-310aab83477a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "613bed5b-ef22-471c-a382-191e0cdf3a15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0005b31d-e296-41d9-8cb6-bf7788d6b34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23a70249-9543-44a1-b793-e2a9c75e45ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2872b218-6a98-482f-abe5-c2c2c4cf8eee",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e30ae6-1ede-4e95-8d5f-d2813e563d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37cb5df0-51e3-4fc3-9914-1935957ccd8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89878e04-f3ec-4a59-894a-85137e56dd3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0cadcecc-fedf-448d-a771-0e8737165c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ce22e9-098f-46ed-941e-bdd1c8a4dff9",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88822d31-baf9-4ea4-acf5-b4cc69205707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e27a7239-921e-4738-abe7-2c4f35933faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5d8720-b68d-4ad2-8242-cc1a5c327544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4cfe110b-5cd9-45fd-8ec9-9f004e7ea8a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45506de1-775e-448e-bc3e-f25668bf9998",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4b3177-0837-44f6-806c-b86bca514385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f4cc29-2f58-4b2d-8c73-7fe795939b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71615f7-ccd6-4c6a-b1cc-408014bda8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f6c49da-e460-4a57-ba39-8fb4e15d0f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48908765-7d66-4f46-be33-d5213f7602a6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "518b178f-66a8-4b6a-9ecf-14b4777f6dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33dd8448-37db-4ae8-b06d-2560323df9b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29731ebe-ea4a-40b0-85ff-c97ef487af8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0dceab5e-507d-4134-b359-af680defc865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4456d4b8-5dcb-4270-b5c5-f47826178423",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212e8011-3ad5-47aa-8696-f21019e55e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac2e663-b308-423a-af56-c4e745a3ae4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e2cc3c-b41f-4571-9982-e4fe6971a3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6824c3bd-8ab2-4806-8970-921244a03215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2d0270-f5a3-4061-81f4-d996d3bb2b65",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "651ff6e7-5698-40fb-a453-69aeb4dd34a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d5c1751-92e2-49d9-a832-52f061798585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47649f3c-1767-4da5-9527-1377c91e4f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d88d7f4-253a-4777-b9c0-0dc1de3df52d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a48a3e-208e-46e6-82c4-9d7c20e3ea99",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8c1b0b-8e3e-444f-93b2-2393f69666ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca3b939a-974f-471e-95d2-c0c46fceaee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4cad3e-39b9-4f28-8b68-69f85b6a5b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c48a0a57-1043-42a6-b02c-f7122f44ba11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68214a2e-c529-422f-bccc-074ed32e8449",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ffaa12-1ca7-4fba-ae1e-4c253ebbf686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df83d2a0-da5e-40bd-8815-6f264eace812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112236fd-4974-4d12-8019-9fa86c2dbb9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6939666e-f770-40ec-acee-131bec5070c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e36a243-fa5a-4d46-b729-b189b0ff430e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea112015-c48d-4b8c-8620-8cab6244081d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b2cba2d-503c-4959-9700-11fb7daed02c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa169e24-b525-4010-ad0f-d6113fe7fab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de6b72f0-c0cc-4612-aa7b-ae5c118bcdcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8386307-6c69-423f-9ad5-0eeb53d81a7a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c97434-6e2e-4c1a-ba51-7ffde700b025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2c9dd47-fdee-4ab4-8256-f88a3ece9435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8702238-aa0d-49c0-af92-0055341ca24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "edccc0ce-f54a-4099-ad4d-9e2b04ab442e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74855ac8-7e06-460d-a364-29c33a401762",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "396c1fb0-686c-4217-b3a4-04773a03a17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac6c0b2-5fd1-445c-9983-38fcca2169fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4425b718-d893-45ed-92fc-11f466073b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31606074-4526-4449-9c2d-23773bba0eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92655cdb-4861-4746-9e2c-fda1e7236d3e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ddd9f6-d691-4e26-9780-1b89314eb88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c777f3b-ce54-4794-82d2-7ebd6d52856c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3effb70-2e64-4e31-8605-707003f41acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1f23de3-9354-45f6-b0ec-5a666f4d8bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45e9c62-97d6-4dee-a7c1-025e20e55de4",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79eea53f-a795-4b4a-9f21-2c30045865bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3cc37de-0025-4dd5-a3a6-a794d93ff8b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e85484a-07ae-4dd7-a505-98bd588af821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e3f11a6-3162-46e3-8aa0-204faef2cc40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e0f14d-e5af-4502-96d4-cf347931ee7b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41007b6c-2ce6-47a2-ad24-0e01412c8a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e56372-d357-4f29-a186-b6403f13a012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a00d540-0224-483d-832b-28f581635eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf1701a2-710b-4889-80c3-dc6d0acbe033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65cd636-e4a6-4380-86e3-15c798faf534",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32d7184-ba69-4dc3-b81b-56bc1a4e1a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8f3e4c1-f0a4-47d8-b59a-ba79acf9d314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2bf0346-dd28-456d-9f11-e4a51ddf345a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fb37c16-7542-4494-8f1c-3c4f5f183895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a8ad10-e16b-416f-9bc0-4259c9d63267",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab409773-10a8-4076-9f65-719d076d7ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74123e7d-7054-4d6c-8b99-6492e1ebbbb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676c5881-49df-423f-af69-190238690ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3bce2c1-7dac-4f24-8ff2-e712789672c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5cf95f-6ad8-46c1-85b4-83a80409a98e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f74bfeb-9cd2-46d9-8a63-7cb5283090df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c01cf638-246e-4556-bdd9-ec0691e66083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72915dd4-4aa3-4046-94b9-2a3f72ae3bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd0776c0-129e-4bb3-8cb8-219b113c93af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac45d7a-a546-46fe-8a22-3f0918dd18bd",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e369c7c-c020-4a41-a772-ecea15a6b7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f34e3b55-d8ae-4056-ba33-3de1eca5c32a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a59fdeac-aba9-4b73-8468-6855f3544565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec8fc677-98ac-460d-bf5f-a8dec73cd463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c295564e-36e4-4c34-ab6e-af926b3352b2",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbb7514-4d9c-4682-a1ca-ce82690a3f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d4273cf-d3a2-40b2-b38a-4b41226b7e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56d9648-8f40-4945-829a-cb439b671d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "330d8ef3-2bc2-495a-a29d-dbcf9b8e3228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8cb83a1-2289-4059-abe3-8c0808575a17",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da346069-9faa-4fcc-b5cc-5ba46cbec15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "273a5d97-9698-44c8-8964-e3b23c878487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ecbf202-1d73-449b-84f1-a648cd20aa78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "07ae4c4d-d8a3-40e4-9a05-916fbae40524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a31c78dd-9531-4732-b4e9-d965dbf963d3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a059fb49-a6a4-41ff-922b-fb8125623469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06bb7b87-9305-44b3-9c7e-5b8727c27887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcccdab0-cb92-4f89-b14e-4c7367ba9b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f340a884-cad0-47e3-8a84-b01d1d4fc3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba4ed84-1e03-46bf-969a-8057dfc0b2b4",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae9b5ba-c2ef-42ef-b6dc-363f17cfe7c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d852aad8-8f29-4680-9af3-83e1f4b055b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8d8416-e763-4070-a917-eb87dea86851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d4813c3-ac48-4ec3-ad0b-a5be6664f62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3b683b-0c83-42af-ae2a-bf56ad0a54e3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e418ad9-8c24-4d06-aab5-4d853080ea8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b41181ba-b828-4dc1-a604-e3ebb064cf5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95f6c47-682c-4090-9adb-606fff4e37bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8755717c-bbb7-45de-85d6-fe531aa77e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97439ef-1960-4cc6-8253-fb90f1b2f133",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4653b2f-f97b-422a-8417-ad8d9aae5221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fba45cc6-7dd8-481b-8477-9c85bc30b2b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "096e5ee9-1191-411d-bff8-4bb5fd3c0948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5be9654e-240a-4c60-8477-29e0d26071b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104cd8b0-daca-463d-8837-ffeeec6c1719",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6823261-fe69-4803-abc1-4de7e55d8cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cbebb2a-b67d-4bb2-b75e-fe8f2b6b98fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74767013-7829-419d-a209-8da0b29806de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e77b187c-e821-4617-9deb-41c64d262784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18260603-5c00-4f57-ae89-5a9dccabe465",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a286bfe3-ca58-4eaf-8b0e-77ba789712a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "508120ae-3b86-4368-acee-6f77b6c2520e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2446a034-331d-46e9-978a-4c70086fdf95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "40d8409f-0bef-448c-977d-8ae619ca5f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a933a2-3116-42c3-a9a7-798ad0d11d80",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d964d6ba-1fd0-42b9-8a06-b95035b5fbc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "379fb635-7d76-4d2a-8e70-f0a6851a0410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32473a97-5f8f-493e-9e3f-04fcddfd30c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "720f74cb-d973-4a2f-ae3b-4fceefc466e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08838ea4-9165-4d96-841c-ff4e88b1c096",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "050d40a5-e09a-4a64-a584-88c507870b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17829bad-00b9-4052-a014-247b8256b747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9410299b-1540-4428-a1f7-6c18b28a1edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6d0fbe8-cf5b-4413-821f-456644b1dc54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d139de-ff47-47d7-aa80-2f6126945f50",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4412911-d968-43f1-9e16-948eaacdc6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8483df63-c498-4b1b-af57-fcdbea791544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3780d5f-669e-48d2-b220-d98784df5807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d04feb7e-cb44-4661-a69a-9f05fb0ec4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91c0e4e-49ea-411b-8e8d-237a16ee0f34",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d21b21-a5d2-47e7-a39b-89e9441d85eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af12fff-428f-4f48-be71-8844bbd26d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c946561-31fd-4762-ab5b-c730b88c06ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "def447a6-a95e-40f9-bf95-f2dd9b0982b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ef421e-2d24-4ab7-b96d-f6a08521dd1a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb826055-b7fd-45aa-9be4-7949d31ff3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ede47d3b-bd94-4145-85d0-bbe25645b675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee28e7c2-cb3c-45b6-99ee-39d19efd2541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "932e6797-56fd-4ae4-876b-c5d305cd2300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3763a7f-12a0-4afc-bfc0-bb74d360d149",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2791ccad-42e6-4978-8fef-e6c9bf6284cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8eb8c2e4-b19a-4a51-b46e-2a2f1b4f167e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432d4a4f-d917-4980-9fd1-bc883bebfb72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "37d6b10b-ba89-45e3-a829-04d967ab8bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaea65b2-eb41-43b4-bdba-a28a1d805264",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bffb004-2f49-4bf7-a0c0-0e797d88d0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0469fda4-b120-4dad-aacc-0b4e9fe559d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8526ff9-f51c-4663-b816-6d31f6186824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e68b1c29-4592-4aee-83b8-5b3136a04aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2610acd1-8378-455a-bbb0-493a151c08ae",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e4260d-0684-40fd-b5cb-213d48a66977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f34943-1e5e-4daf-9dcc-7adc69c39489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67b3af2-d7f8-4143-8347-75cafe90a627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "79e19122-dd46-4130-bfa8-ecabd76ff791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b288210a-d86e-42de-b7e5-00e03d87f1b5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e543086-2204-4e89-8ad0-a6f65366cfdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "430eecaf-34be-4ca0-90c6-c3832c8182ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b76bbe-29d4-4f95-add6-b222e1c87482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f345f49a-5b68-4dea-852e-a11b3695b659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4594dcc5-accc-4ed4-a475-bf88384d2332",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "353dc934-83f0-47fd-9119-028976a44975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43ee50f2-8ed4-4b26-81ac-0aa04b5d5609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a453cc-7ee2-411f-942e-17acb81b46bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "81935f1b-575a-41ff-af5c-ec7f6cd940b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633bfaaf-1f13-412b-87e2-9d7a6d2884e4",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9e44b5-10a1-4f1f-ae2a-0f3d86299cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "231d00e0-9164-4081-98e7-d591b52bbb67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b91e0e5d-be90-4b20-97f5-003ae237a556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f185ec1-2b8d-4bda-a7e0-d5107f46b7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7bdefb-9ecf-490b-a89b-ba8fe7606dd9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c4f4a1-39ef-4100-b508-ad455e02f190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db826787-02a2-4d9c-a60c-eee82da84227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b66a1b-2d06-469b-9963-a48a1c73782b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2fb84250-cd4b-4a5c-8428-cb6e12617c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2337089d-2c8c-42b7-8bad-1eaff701ddb5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86868346-dc97-40d2-b235-dce979ea50c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f46869d0-dce5-4618-8b83-b7bd65dc1aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9df2d8-cce6-482d-94fa-60f59c9d7e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9084b5d4-289a-4eac-95d7-d0649e890086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44875f8b-5e22-4229-92f5-ecc8a36ebbba",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7584f7-0f5f-4b80-bf68-87f8d7a22009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adfd149f-aa02-47f1-8407-8e723e83940d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb34feb2-a1f1-4a16-a124-0b89b4c293dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e9bf527-9d8d-4e17-aa50-be8a4a238608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d49eca-1cf5-45ae-9a5d-211dfdd18ee0",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6fb52f-823e-4f59-b4b4-12182ea97f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4dad4ce-8256-4196-baf6-7f71b962b062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a239b286-5096-4922-ab50-cd1b36ffe2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "afacc47b-23cd-4111-a1db-f9644acf7c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0852be06-e3e3-479a-835d-b114c1b1f64b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef825f53-24b4-4c09-abf0-940b15c1898a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b07677-61f1-4436-a63a-f697dcbe626d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a697e04-3f49-43be-92ee-8465bacb5124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42a72a66-3b44-4494-a6f1-34295d8ab649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5ac4c0-b56d-4d11-8cfe-5e6aad2bd3d7",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c585d2c9-862b-44dc-ad0a-547e5ce8afd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4120e84-64f7-473d-8f18-a709fe8130e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bdb59c7-84d5-4f86-b3aa-578661257e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62e20c97-529f-4b21-88ea-e20c12322aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d364c432-515f-4d1f-b511-1e9bad4a025a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c465655-7619-49f3-aa1d-46c43c56f289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82201821-f192-4f8c-9c40-87a18041b069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b0aea9-3af3-4553-b0cf-09a181cfea97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "33d80ecf-cfac-4bb2-80aa-45f5eea7e12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836154b5-f452-470c-a80f-d123ef585b33",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e05692-473c-45ab-b993-ef84c50764bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72707494-d44f-46ec-9085-c614f77046bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1098920f-87b0-4614-a7ce-0fee7c163f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac751ae2-81b5-4639-afe9-73f90ab57493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4236875-4c65-4299-a74a-45196bd59efa",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c9cb8c-3255-4cc8-a3a0-25c055a73ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8fb99ba-e500-49c9-aded-cb7d1cc0b347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae1862a3-6b25-4288-8d30-473971e415be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f5636a4b-d938-4204-a2d3-8afd1c976e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc394ab-0570-4a2a-bceb-d25d054ff3c7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a7671e-19fb-45ea-8f20-62e42ed2bbd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb2fc745-3b7e-45c3-b9b0-01f977cfe01a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb94017f-8ea4-496c-9625-4fce5c42b88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4365e8ea-ffc9-4092-be22-df3defa34bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c36df5-f4d4-4bf2-b8f3-8fdfc16c683f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "631a1ff6-bd22-4239-92cd-5a69a71ec604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5593dc0e-f162-414c-9332-06cff25448b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b59442-dfee-4852-bd22-599584c01ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0376acd-c644-4fb2-a635-a6554f8b2a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e42f207-b73a-4834-93d5-1dda0e74aa05",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ecf542-224c-410d-ae21-2047089d49fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e11e320-1be2-40e1-a4a8-22348c768f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e70b32-bfc3-4de3-b8fb-f3d5f395f52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c246bd1-063d-48e6-b7e8-8517b7cddd26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce5e608-2417-43ea-b758-4db2613f45a2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26ef7b3-3c99-4dd8-90d4-9c70466f3a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d6bbb3e-60e8-4087-ac17-5f0b44f04f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35033797-8e16-47b3-9076-1f49052b407d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec1cfcd4-2ecd-431f-97ba-00a05a6d61dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb60d46c-9da6-471e-9ba4-b19c4ab745ec",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cef9e20-b955-4efb-9216-61415db337ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "739467e9-23f6-4574-9196-d27f709ef698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2739a063-6ce0-4eea-938b-3f35fa901aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c33b1b0f-8e00-4203-aa61-14072d9dad62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b2c555b-aad8-4b54-98fc-1d7158e0f6f0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "427a7cdb-207b-4287-89fd-bb81ff4211ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac6302a0-3788-4a09-b803-2ff7cf2b8014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f8a433-747a-4651-a574-efdf536fc7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "85e282da-2e2d-40d2-ae7e-4533fe4e5fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1097f5-945e-4f41-b9f1-bdf4b8055cb1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cacc996-b325-4f39-9053-4ad2c97d0f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12576497-8c77-4182-af7d-3cd9e3d27f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa3669f-9070-469f-9afc-ff6358761293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "285f8b7b-1a24-41fd-94d2-a583b032da7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdfce370-70fb-4646-8af0-fd9a190e1f6d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35b1fc0-c3e0-486d-81c7-724e7def2261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "001da869-e244-45a6-869d-bfc7bb7dd1ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0145cbf8-41f0-4e7a-9749-9f6502c99a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "91a5b96b-a84c-4faf-80a2-8ae8992c98ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b34b39-3c8e-4b3d-9de1-928ade92f8ad",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f09ed4d-ce92-4cac-9d60-667d72faa831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "566b0043-1336-4eed-82cc-fd78170c3311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1bac8c4-2577-4144-95c2-0b501b8e63ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2081a14-c4d5-408f-956c-e396dfe0d62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be0298f-25d7-4411-a3bc-3bfdcde9c2fc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f83ec3-98ab-4d98-9bdb-9154733894e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b150a81c-59cb-4ce7-b880-d8224bd791f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d1b608-f019-44d8-8739-318478482a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "59bd878f-f62a-42a6-9dfe-23fe2a0ea08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d0720a-4b45-4704-ba12-bf980fd5050d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70824534-f7d9-47e6-bd29-51fcbc6b7fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5041e624-830c-42e4-ab39-1f1967a60f85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70b06eb-4d85-4b95-8e88-e7effea594f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9ab5025-e91f-4f5e-9774-bd15dfcdc96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae749675-c525-410b-b2c8-e5cd4fbfeb47",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f2441a-6620-4139-8fcf-e85df093ff34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "910f8cbd-89a3-4aac-8433-85115acd11ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1e5574-7113-435f-898c-d4a416110c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d95961c0-a2bc-4d14-8d36-dae29b9f98ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0abc8388-95f6-4c1c-875a-823f48710212",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52d4b1a-5823-46f0-bf2e-4b18bda91177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57915244-b83d-44ba-b9e0-dcdf0a67f524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6fac61-bb6f-4eb1-b6b2-19f2fbf31b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0822ab2-60bc-48d5-ac29-64c4c01b3049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e885d56-fc71-4f25-a24a-c1715bce0dc7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d5cb1a-18d2-46d6-8cc3-472e0d4fd8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f0d3176-12b3-48b4-a7de-874e85e3be52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411a120a-ba07-4a39-8edc-299f33866ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc862fc3-d366-4e42-a481-b287e052fa93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb5a690-bb8b-4c50-9352-f99b9be2a0be",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab984717-3d48-48a2-9052-e6e035ea7b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf9c6ae-0b60-4102-b565-78e3760feced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479595e7-5fe3-41ab-b2d4-888bb8c2d596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8f18c3a-e06f-42dd-bdfd-d9fba490ea9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5c3c99-b832-427b-8e66-fe0f143acf02",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6394f10-5b9f-493f-9561-406a0617b3cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ef8ef46-3d99-499c-9411-0731ee399048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6016e063-689d-4dd2-8ec2-95011fec8611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dbe912a-17b8-4608-b4e1-ca41c7c09c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b5aa09-728c-4d02-8612-eb7445a16c14",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53f75f5-c4f0-4758-aa1b-20fee88f395d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a4e015e-adb4-406c-ac27-7a7e242c6ac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a3933ac-bb58-4f8c-8b03-c6071ef4ba0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e9de1cb4-cc73-4a4e-9b83-0aee157f08c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca140ad-9ac1-470b-b261-f699bf920eb2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9681280a-8cba-45ee-8597-c451c8fd4066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fa887e6-b96a-42db-854b-1696730c3fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c599449-6191-4958-a42a-9bb7a6b8f4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "04a89ca4-8537-4f8a-91df-003c52e19c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d1f820-9a3b-4ecf-8eeb-59c45d25e4fc",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15f7401-379f-4659-a5a3-86ddec246b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e6cc4af-8cfc-4ce5-b247-48375b32959c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf01d47-ec8d-4211-956d-727e4f0db9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7adeea60-12b9-4de1-b737-caa3d8bfbe6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042cd6e7-2bae-4221-9b09-3ec1b069bde1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5a3539-c8e6-46b4-886f-ef32c5ade4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb8f8dfd-7fd6-442a-a440-fbfb9b854c42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7581a638-2f6c-46d4-b7b9-9ce50f9d25e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74a37dc8-e19b-4b3f-a6d3-d9a5e300efe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9835317-3ff1-4246-b3a4-05ad77cd3e07",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc10d97-3afc-4154-9911-69b797d14799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "903a0ebd-ce19-40ba-8bd8-792b79464ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8957f4a9-4e23-4bb0-97ad-cdc572531de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7e22d12-a2d3-4f61-b035-5b10a2508986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c50e1ab-0779-452a-a075-6013afc0b423",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "659039bb-7970-41f7-911b-c9f04d5cd6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "225684f6-531e-45e7-9bb0-0a4469d15b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3ba081-ac3a-40b0-a72f-2bafec267e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0912eea9-bdcd-4dfb-b7cf-1457f2f9f673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba1985c-3380-4f07-87fe-fb91260403e4",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68be03c2-e1d0-44f7-9596-cb9c261d64f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d08d050-70a4-4620-b563-c9374efbff4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401afe50-9eaf-4da1-8985-6deafcfc2a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a75bf2ae-5d37-4787-9ee1-d89f0be379ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145a67e3-37cd-48d1-b513-d2f8bca23007",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e629149-cb2a-4909-9f79-4ba755b17aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec757100-915f-4903-b5d8-af710aac4e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7989f466-4357-42a1-bebe-44f7de41533f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9e6e8699-b328-4954-8690-831fcaa34ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3f55c1-1280-46a3-b8a8-337484e2bcc6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2fdce0e-95b1-418a-bd76-0e44162b355f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78bb4a3c-c7d1-4c98-8122-df085e6d4c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12e49d8-ffc5-4c66-a636-90d13fe4c8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4215e8e-4fe3-4208-98cb-29358f7f29f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60806e1-6660-4d5d-abb1-7ce68906217e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7402c39c-c960-41f4-b928-111725327490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f1dbe83-87eb-46ef-bec2-6242f0740e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc9e1a2-f753-4e7c-a934-5e62a7dba002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "55d60410-be2e-41b6-bbeb-5b501aa91568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5664632d-e759-4c2d-9459-28c7d1976ac7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37aea7d7-e9ff-4079-ab65-8e7f37788074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfb930d5-65fd-4277-943c-8b3865d88912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2252ba46-a7de-42bf-a226-c5f027f8a9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd97e55b-d789-40a0-9b01-2b77ae86e2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6b4ae2-a7d5-433c-823f-3b04f167a210",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8bdd87f-c0d2-483f-8ad5-fbfe7fb3a752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f967c25-0ac7-4129-8726-7a20551599cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95574176-04f6-4c81-a764-91afd529f9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fffeae03-c2f9-4c90-9edd-908da340958f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1da8a51-cbf3-45cd-bc7f-8106e6a0137a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8d0a2a-fdca-4700-b1cb-33cfd759eea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b291d3d-84ae-4340-ae84-8fe528defcfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a60f4b9-b72f-49ee-8bca-9909e892e930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "608f9c0f-e72e-4e45-a965-b9dd26a0739b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c3697d-5b72-492f-b17f-98922cd2a72e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb08c4d-e3d2-4a3b-bd6d-7a0ab59ddbed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed7dc30e-c627-4a58-b846-5afa7d69c573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b49dda-83be-4a16-bb62-e8e61a8f1a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "198a5a68-c7db-4c17-9e56-a11f525b2ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e40946-aaef-4bae-8586-aee370e97b3e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbac7bd0-6299-4119-b9a7-e4a502d3e4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc707fb4-70fc-4504-9648-d82c6f253603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead22b0f-c0a2-4cb0-b989-58ad24260b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3201d331-8241-4309-80c7-68a47808f6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96fa0bdf-fed7-4e46-be1a-86faee5b80c9",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b163bb1-4f42-496c-9634-90ecab6173f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf951e6-4733-4b6e-9333-814e6526db66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e3f2ed-fe5f-47ef-a02c-5bca5133e0c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a0198fc-b713-4a4a-878e-2244a16eb327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590f6a54-829f-453b-927a-1b5da273427e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84169c86-23d1-4415-8426-7c6ea2ad4b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "793a2ae7-0e19-4b5b-8959-d0098fb81158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088419ee-2540-44fb-8f45-e9e9803d76d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "08dae4f3-52b4-4776-b3a1-b101631d9167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb614c03-1653-4200-b672-ec24a73be2e9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e76b06a-f9bf-436c-95f1-814fd2cc6c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7285a18c-1f04-44f7-ae42-b9e9092e9469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280f5ca9-d8fc-4f7d-9a84-ed879b068a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a938d123-7d5d-4c86-8d5a-4bb06582780c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7eee097-5359-4b4d-b3f1-24d9bef5128a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee63598f-f5ba-425f-8d73-ea4baaf57db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa4dd47b-5936-4cb7-8942-8e54936ed3d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff15685b-a8ec-4353-a5ef-1ce1204589ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "759381c0-d89e-4d95-856a-a209831c2d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d82f515-3eb5-48b0-874a-b7c9f99b69bd",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f35836-0098-49e9-bd14-00ba72eb2317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa4ce040-f924-43e7-8c44-772ced682b61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8af449-64ad-4a7a-b1c9-693023267b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6dbcf673-32a1-48f8-9bcf-4df30bdcf60a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e377fb8-1ac2-4136-b67b-cff76ba42a0d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eec7939-5152-4bf9-8a9b-864ca72d7df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d94db60b-902b-49f2-b97c-a72d12e061f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28b5cff-3b90-430e-bd07-794080f85fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f31b5bc-5697-4419-9359-243bf1fb74de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b131361-c6c1-4016-bcc0-d9c0b5d2e95f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9cd6eb0-a034-43e3-91c9-83a745be115c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd83d5e3-9b07-4f37-85b2-965a927ddb14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b7adc3-6fc8-43db-a4ce-c18655132d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d6be9cf-a56c-4236-a9fc-6c51ee01f885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa3b655-02d5-4bf2-9990-d74f269dacb2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f240a63-313f-40c6-bcce-7ce0107219a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23fb271c-4a86-4f06-a9ad-698972e6d285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8f0096-7285-498a-9c88-081979f2b5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe32efd7-7d26-40ca-b5f5-c32cf830b09f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d4f6f8-8df6-415d-9467-8e0c83d37b2d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "082c0583-4a30-40ce-9ff7-93a6d53f9549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12f40b7c-3816-4fc3-8ec3-c0c87f030a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0b6be3-d53a-4127-a25f-dc206b2f58b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa7e82ce-6672-427e-ada3-99d805f874cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cacb1e40-70f5-4766-a38f-688676de7ea8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9472140-213f-4069-908e-de6cab5974c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3542fc14-5f63-451d-bc63-41e234b87765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933b1059-8f17-4c88-84ed-093f33b8ac74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ea27461-d3ba-4f84-9c10-926c1daf70b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51edb787-1b79-43b1-8ec1-c660d488dc7e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ebebf43-b233-4ab8-a1e5-2aff7b1bc03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "be5969c0-145c-492b-96a1-607258f5a46c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9198f7a0-b575-4f56-9691-1261383ad1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f9bd50a-af78-4ddf-b61b-c3fbc9bf81bc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7d53d5d2-8e7b-49f5-9a61-6dd76251cc16",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b42e8126-c8f1-4554-a8f3-ecb50519ed37",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff3a84d-a527-405f-a7e2-49d8f654bf83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "54483683-e862-4b35-8e77-4191c6e9a1eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d8f446-7e00-4c0d-bd1f-f92f1e13f3c3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00b92755-9a0f-40a7-8a16-22b28a12c301"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "213ff9db-187c-453a-9a82-18669fa8ec0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d63c9298-1b49-4852-97a9-a124451172c3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cdc83064-de20-41c5-8c49-dfebae56422a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ad7e02d-d604-4d4f-82a1-2eeee7ba2965"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "edead8bc-ac90-4ec4-bbb8-a1b697b0be34",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "45c18f26-ac76-479e-98ff-2938d60dd6f1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3a5c4e7c-85ca-4add-9639-a7380533f4b3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ebb992ec-7715-4d90-b02d-3a56d8e6b2c2"
                }
              }
            ]
          },
          {
            "id": "5963e58c-21c3-4cdc-abad-e5a5186c9746",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9c852eb4-9fca-4c65-81e0-36c99899d0be",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "1e16ccc0-b3b0-4941-8891-a0405df01781",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c057c3-b005-40a6-b48b-a9009018a661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "05208740-dc4e-41f8-b228-45c259e9d327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af92eb20-ec1a-4122-8be9-b9cd244a1e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb3ea342-a3ea-47cb-a105-041078e2ae4c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "98fd9503-58df-49a9-a237-7dbac25a7961",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "131cc735-8eda-4abc-bb15-02c263e5b35c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0cebe30d-1627-460e-8fba-571c384081e0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "559d0a1d-d65d-45b6-85d1-17bcbf806e7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1649ef97-a460-4337-9312-47de8e4fcfc5"
                    }
                  }
                ]
              },
              {
                "id": "1a0c080f-98ec-4185-a982-876fa0a4398a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e792b920-3abd-4409-94b8-0c2fa54f3cdf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3b1bcdfc-b50a-44a9-84d9-cfcaf982d31d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2cf9123d-c87e-4352-af35-c2a91e1913d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ecd2ec6d-b996-48a2-b752-facd2f479234"
                    }
                  }
                ]
              },
              {
                "id": "a2f33431-8e27-46fe-9463-89db6a5eff88",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e07c4449-12ee-472b-b0bc-64d096df6147",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc5363fb-8f4d-4374-9115-647da645a73d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42a9f184-1033-4236-9bcb-7f9709c788fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "79a117b7-1f64-4479-af11-31382af99b5b"
                    }
                  }
                ]
              },
              {
                "id": "cf0a1c75-61a2-492c-9645-7cafc5732525",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "242a5fa8-52e9-4f97-bd8f-1dd5f66c11a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "992b0b5d-92d5-49c9-a74b-c2cdd359ff67"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce64b8bd-8ec8-41d9-99ad-502e4d2063eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5792f1e4-21e9-43f0-aaa5-1877cd28e54f"
                    }
                  }
                ]
              },
              {
                "id": "8035096b-f7f3-4fd8-8b69-2f8ffa0b009d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef39b878-7097-45ea-9b57-f00acd3d7e50",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0eef5f7a-7306-4d0d-95b6-cad6df85f902"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc2fa06c-71ee-4bd7-b97c-286e968dc6f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "117e1fc5-4770-40d6-84f1-a9b315f2f9c3"
                    }
                  }
                ]
              },
              {
                "id": "d2417d6b-2676-4387-983e-19c001bef48e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9bce522-f95f-4304-8375-e84952847eb2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ff969da-1e2e-4a7d-b603-49d330f58f3e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5612314-d1f1-4800-87d1-e3bb52e1fde0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8dabb0ef-be9e-4987-858e-158c6894b6d9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a3c6d5e6-3a5e-49e0-bba0-343108085cf3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "741920c0-1969-4fe0-808d-b8673f780682"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aff4f7d2-f23a-4f9a-9394-8ea3e1927f79",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dc7266b3-e571-4f77-b6ca-79152ec26421"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57f75bd7-9d9e-41b8-be51-c4c3a792b69d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ec7ef122-b5c1-443a-b563-cd6f57ca64df"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bcc89d54-5d84-4d19-9885-1b900e7fa3ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "406ff363-adbc-4ffd-bc56-f2a3878d9d00"
            }
          }
        ]
      },
      {
        "id": "af709bdb-f095-464b-81d1-79a2bb268531",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "59e3c38d-f46d-4a3f-91f3-d110f7f8a6f2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5c18c9c2-025a-4ee1-a427-c6c4aa74b982",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "237f0f0c-f6e6-42e5-8f8a-feb61e195868",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "856636d7-32bd-4935-a968-685ec44754fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6b09714-7794-483d-97c6-7d768ed520ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a1b6ec-c1e9-4f93-84c5-33be510425ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3594bf8a-a2a7-4dcc-8ca3-766246f0b879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2890d53-be9e-4504-96c9-67d0a9cc4bab",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c0ec29-d228-4d1f-a75e-4ddf561a9100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41c98e87-99bd-4297-a617-d6a44d437f03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f06efb-8627-4881-a404-561fcda24a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cea83f07-2c73-407d-a7ae-202b68377c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e795eee-e411-4c69-90ed-18dd1e71d326",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "949a75b3-6334-4c87-9824-57c10f20f139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "052bf8fd-b58d-489e-86ea-d1ecfe1c6679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc84a3a9-2a6d-4295-8f52-b5a3dbb3601d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2128428b-fb09-43e7-a997-5c35ed517b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e600a644-a618-46ef-a8c9-c3f5b94c3f56",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30fe9b16-1bfd-4eab-84cc-992fd0a0a091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b137fc00-1981-462a-b370-998afbf3a225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f44dfd-401c-4be0-b52d-ddd1c4d11ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b927477c-28c4-4b8a-8efe-325efc9b6322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22cd978-2ff1-407d-b322-7fe26d399c3f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "430833ff-d6a5-49b9-b743-d74d1217a83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fc05d98-8feb-4901-9440-90017537a742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0039b8b2-8385-4171-addd-487ccb12b495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f046241-c4ad-49b7-8d96-31dc60b0bd1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b429450-85a1-444a-81ee-81bfa37a3bf2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "662167d1-d963-42a8-bf1d-14259bd7bf33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d10451-ec84-4c9b-ba50-a9abef65026c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419af8dc-2971-4f23-b5c9-b9c079025007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6fc03ab-209a-4d4b-b5e6-26cb09ad1bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31496d31-799b-4d9d-aefb-2085d68710e1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aeed5e2-0184-49f7-8b78-c6585cfb4a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3660375d-5d59-4609-ae34-92e896ad2495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e985dfb-fb19-4822-9838-b4d71a6f9bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e026d706-1f23-42b6-a299-6c4918c9d525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0951304-d352-4290-afea-0efb74f57544",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aaea7f0-2256-4b05-ba63-512dd996cc84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3638901a-dda4-4f79-8147-20742a991de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a23886-e7a2-419d-b608-55f4a0e49c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5508470d-4d83-42b4-b17b-7b69b0370401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c950992e-bc14-45ec-b020-436af2da7793",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3c679e-3fa9-485a-ac8e-07aa3a6885da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d097fefd-9e35-4df1-8cd2-8e648fffb899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b8d923-0912-4597-8397-54de399c048e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fea363aa-8db1-4126-b3e9-ded7644d70a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2776ab-3043-44bb-8741-ba1deadd3041",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d00183-e66f-4680-8237-8eed30df5b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e72126c9-321d-44aa-8dd3-c1b8147cb68d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2543e75-2aa7-4c4e-a6c8-289648e80108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "853f82c5-d341-4c39-8125-b95dea8edebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e2ed55-009c-45ec-bf6b-dff9b1426ddb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ffcbcd-811e-461c-9278-8e775baaee1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d23f99cd-da9b-4d4a-a6c2-e427bac47a92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28acc90d-db68-47da-ae6f-7c3d7d70ee48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8722bd8d-3d29-4cfd-80bd-2bb2e2dea350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18a6383-b882-4d01-b29a-567b16d5f3ba",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6846cf10-a3ce-43a1-bbcf-4c29f354e7d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fb68f2a-9407-4f3e-8a12-ad0051487cca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322a6dee-c968-4617-826c-2cbb737421fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "78362e25-617f-4a15-acc6-721c80af1796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4950483-4bb4-4807-9367-7340f14c5331",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ced7b62-9e66-4f28-976a-bd52c4f67dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1669f51-8054-404c-af08-0c1275a36147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115e8846-2b24-4a69-bd42-a8f0d85c986c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2621954d-2a82-4291-910e-e2783e83361f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6b7dcc-717d-4807-aaa4-9c6cbfdff274",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ed623c-6072-4814-a4f2-ea63a48358fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdf75648-e3af-4fe3-8b74-6ce6507c7e03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c04fa4a1-b6e8-48ae-ac15-f69683c1f813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "db1b2ff2-ab72-4e4e-9d5d-528d9558673d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c96d8b0-56e8-4cea-a97b-e5112fc7289e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5477754-a6ca-4b24-8d6b-817b90cdc737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa0684c-514e-4d08-bd84-f10f71fd224f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5351bcc7-94b0-419b-9d61-b88b139a1ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "28f13366-3ee9-4a02-ac39-45fcea91047b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd5ff29-f618-40a1-b19b-9e0188fe7698",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d10def7-388f-4c06-aaff-381afbe35877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f1f35d7-1c11-4253-90fa-c3d9726501e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61853503-27ca-4332-a579-6c65cef3deb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bbb2cd6-8fdb-4bfc-ac06-03cb68522a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf41c47-65ab-4d9c-9727-6d89902c0f2e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81918c1a-0ccd-46d8-97c3-24e65281def4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18a04b03-89f8-4ccc-ac22-dd0731480abe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22bea6ac-b92c-4975-b4f6-7d4a364cc5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6e13c43-c74c-4c57-a461-5e7c6c560000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c31c87a-6530-45d3-8ee8-9dcc31ef6c6b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c333bea9-8366-424f-9f65-cd79ca975b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c06c916d-ccd9-4f0f-b5ae-6f892412a501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bfe5547-b48f-49b9-9ae3-af999db99ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f56cdff9-0aff-42c0-a5ae-2f7ca6755396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500d087a-9d51-484a-a262-368f006c20d5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5a39f0-4278-4ff7-82fb-86784561f21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c127190-e98c-47fe-911d-3f305cc0f598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b08ba4-b787-4a04-9bbb-1a52bdafdb08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "380aaf55-8d44-47ad-a9c2-117a65a7610b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81f5538-b804-467a-8cd2-9f9477ec76d4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8810311-2ade-4c2e-bea9-e32966513fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c944e0-20d3-4200-90ed-6dee1954f646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf4568b-7dc3-4f1a-86fc-bd5d25075749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65094713-4a3b-4fe1-b08a-1f220822d581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1036ba12-80ef-4ead-9aa3-12fc1f0ee820",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be7a46e-94fa-44c4-b387-f567aeaba5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f009385c-f55a-406a-b6db-33a19dda2a7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477e3de8-ee3b-423e-99aa-5e1519761dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c54ebbd9-c259-4fcf-90c5-6c75b8565013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b63725-33c8-4a58-9810-2bb40c137d51",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29c0871-fcad-411c-9fdf-7f003ac60f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7073362-01b3-4432-b62e-3c9286a1c380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7803e028-d8fc-484c-8419-e8c869c33863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa5a6056-aa3a-4e98-a1c8-edfbcfe9a918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5cadd17-4d23-42d7-9d65-af7b51a4b17b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89185be-c33e-4dc7-924c-be1abc0c0789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7c67103-5a55-49cf-999d-fda52ad432d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bd773b-eb4f-49cf-91e9-1ed4e96e16cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c40f422-4006-4abe-bb7c-3fd6c8a2685d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89aa820-b8d8-4ca1-88da-c15bae865ffd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "623e5f3f-dbde-49c7-903a-0e9b02c2decb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "916f5c74-2453-4b76-846c-be060d8d0906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a681238-8b2a-4354-b6dc-d8f25a176387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c0469f6-0e11-489b-8ba9-c9657d8b3344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b75b3c9-3257-41f6-9ed8-88df34fcd878",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f157d1-0a3f-4771-8436-6051c103cdc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd1650e-ad98-46f7-9347-fd1acfd5df4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45d9e92-7ac5-4f74-aac6-400ba3ab87d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b2eacb8-d128-4818-817b-da3d1bd46a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58821a68-eede-49f6-8b2e-c73be8478328",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3edebf-a54a-4e22-8e30-6fce5178eebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "135af9ac-d2f2-49e0-b995-ed6a43a3561c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f15b1ea-6a1b-4967-ad65-e1e301bee180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e24c95b8-906d-42be-8be7-0fae4c4462eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74564ee9-f01a-472c-9cc2-1166e1df8bcc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "486c67bf-1b58-4627-b34f-8736455cae1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e44bffde-c81c-4464-9107-d85856227486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063737af-2d2b-4d78-9a5e-d12e4e41a1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8987cc0a-85c7-4003-b539-58c7223ea763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88295cee-9f5d-4d13-bd93-0b7ae05e34cf",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "687f7686-e83d-40bb-8e42-cb1cd0b833b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b5bd3be-03fc-49f2-a7a1-2605dfd4778b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a3e7cf-e87d-4a39-83d8-0a1618f423d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bba69677-6721-460b-a6b2-d8d29f3a562c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895cf221-5e18-488e-8a09-59ea2c002bc7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "000597f7-b956-4195-b155-14af97c370c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cbf58c2-cdec-4304-b245-d311dc1fde27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277d4384-707d-455e-86e0-fadb34ed4747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9098d78-063e-4a5c-b592-5383952e46c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660fde0e-f39e-40a2-ac15-1839c20d0c44",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f482b46d-20b5-4779-ad58-5541e962115e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63276044-0fc5-4c3e-8332-d63779fb4cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1481685-b59c-4ece-bdb9-b3c17549281d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64e9d503-3959-4177-a924-ffb0c0c85df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ab4732-9d63-4d37-a46b-353b3f7e0e0d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc244b8-0f33-41ad-8d7b-449295120627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f9e0b5a-891e-4166-bf86-2bda0193e893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049e2b8e-63ff-4e32-a6b7-e5dec6a2e01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bac4b504-4544-46e2-804b-64f02376ea78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19783afd-6ffe-406d-9061-a5b2a43d2c5c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e066d81-cdd0-419f-98d3-98b20337010a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "024a8ef9-626d-455f-9284-bf4c183eb292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ba6507-fa3f-4070-a548-5681ac64aaeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ab39b64-081c-45eb-8376-7ba29db25570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf766b3a-a486-4ad4-a076-2fa6950f030e",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f6af7d-651b-46e7-bed3-e8277af48547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9a5b620-24e2-4e3f-a9de-ca55bcfb4c1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b57821-1c76-436b-87a3-ee8a14791404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33f99e14-f9ee-452d-9e1e-eecef459aaec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "890c75ed-9285-4e30-b8de-c331293d90f6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee68982-cdac-453f-9e63-5b94706594e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e822fb73-7acf-4282-995c-c7c866b2db60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52cbd016-388f-468e-bc3f-3b3eb1cfc12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7eef36b-2f28-4026-8853-a276fb24a5ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d37360-8137-4a32-b6ae-3e72e45a241f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb777915-1d07-450e-a0bf-2fbca7e05f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "542d5b87-52f7-4b16-8f6d-5cad84b043d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43527764-9ce4-4ce8-b761-4b08f6f4b24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16553fc4-df0e-4f23-9d77-775abab50ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365d8e9d-f21d-4bb4-955e-d04454c693b8",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f52327-f5b1-4c0b-8d9b-a5d4238aa720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c256ec22-d0ed-4774-90cf-13484c89156e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78984ada-460a-4101-8657-034c53eaf410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c601503e-927f-4cdc-9e20-d45d446c9d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d8f088a-128c-4bff-b822-16f54cea122a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8ffbc6-f547-4994-a601-04cfb63fb81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "107d0bd5-d594-41dd-91d5-60048a23761f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a21bc2-a25c-4ce7-808f-84e0a7affd8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "838094b8-1e84-4053-9c3f-37f36e81d273"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ae19552e-721c-4e3a-9e6f-b4e6728fc64c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8d471eb8-b56d-49e4-aee0-0075686ab887",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02ed3b7-a5cc-4ac0-bf36-ad15e0e70b9e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fae7721e-b972-4cbc-8158-9f612576a385"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4512fd-1d19-4ddd-8440-2070dc0a00d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26547086-7d80-49c3-987b-fd4ea8e3b5b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0676709-0546-4ab6-a47a-0cb7bf251006",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0520a477-8643-4e2d-809f-ff15727f0212"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "19235b9e-f58d-4c18-8866-d9103a5dfdb0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a9b0255-ff89-4afc-8f1f-2a2ca48ba969"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac98dd01-a6cb-4aad-9753-70324ad911c0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2b640f1b-0ea2-46a6-a51e-9fe28819ecc2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "445096cd-2e3f-44cb-a88b-920e634d8be9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d3d7082c-d584-43b6-aa76-04541b0f0ba3"
            }
          }
        ]
      },
      {
        "id": "1062cabb-e304-45eb-b450-f2160672fd39",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d7f4d102-8a32-45a3-811a-c2ce5319c5c8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "be8ba39f-49d9-4155-b093-aed30232fbc0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a72acb5b-39ea-4504-98bc-a039e454e2f2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "497c2f91-6e93-455c-8bca-720c5b8c0ce8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9909f9e-bc17-4097-a6a0-8ba7c87315ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d574ddb0-fb82-40c6-9d59-1159e2d40d42",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14ca171-dd17-4948-b5b2-8e45d3dfdefb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2677adbb-7145-4e4c-b11c-d80c0052798c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f98090a-1d32-4be1-8b91-67b87b15d66f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34c197e-cf0a-466c-9d32-eec21340d7e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd81a458-8d16-4006-9548-d2c644fa62d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335eb2e1-8f48-4416-9561-13197c75540d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7bb56e-76c1-48de-a185-05798c1c14d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1b47976-2ae9-4232-a251-adf497394024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb82faf-442f-4b80-87e3-4e3319f3e873",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f518a08-dfd3-445c-a4ad-6d7c595c7d54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5efab286-5628-4826-b1e6-d96eea3dfac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39139b8-0f65-4636-9660-93eba27abc80",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a39924-3a97-4964-b841-d36ed117f324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d1e524e-8bdd-4854-bea4-5bfe55e9d979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772a1c4b-79d3-4238-9bee-2644a17da149",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c578f0d6-09ec-4640-9fce-78f9536833c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c88853c8-a43b-4030-9d74-6a3b33bed9ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2f3453-a67c-433e-977e-1531c568a68a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaee8bb1-c2ea-4352-a6be-3cda2a72b5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c957fd-f8c8-430f-b9fc-189008490902",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395659bb-ce97-4986-a7cb-60b555d07382",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10b2e92b-1af1-44b1-b67a-6737fa1a5c1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdaa0d63-5dbd-4b83-8199-bac5e27ff57b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "795efca7-f787-4f59-acf4-b5ca0af5b037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae744229-64a9-4725-a70f-fb9b3b0fe397",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85286c5c-faea-404a-a552-efafed4560b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec157dfb-e8a7-417c-80e1-aa74671ce5bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd248d1-1401-44ab-ac13-0c3be33aa485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55397067-b743-498a-aed3-8117d8fcd554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151a8a8b-dece-4ed5-9375-79645ace65a6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110eed97-8985-4c13-93de-7ec410237ffb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc42162c-e4eb-49ce-842e-850627cfea52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bef7634-4db4-45e7-9e68-05a0f7ecf1cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84b6e719-2d5c-4ae2-b783-5e55daa9844a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3612d037-0338-473a-9446-15a42d807b85",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9ecc3e-63f7-4906-b699-02a7b08e0257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd45d0f1-f76f-44ef-85ad-f21782de10e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1eea91-d354-48ec-9656-09e2444bee09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ae6d794-9e78-4cac-bb6c-63294ac7dfca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76b6a22-2f21-4a21-872a-605bdb88467f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f31082-c5fc-4da8-895b-b879e59289c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ac99ce-4d9b-43bd-93b1-30b307c7f2b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4490171f-da7b-4903-97a7-79b0e5c88480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05630244-d8ef-4ecb-93dd-37dac1d1fd51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9326e5-4429-4e35-85a9-516fe2ca3d66",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053c86a3-208e-44c0-b18a-51980dde293c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ac343ee-e179-4eaa-a216-dd1ff7cd75eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "317fa54b-e2ab-44cb-8d48-50fa5d74c574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dba15e6b-2037-4582-9958-c00e59328a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d745bd-5ec2-4985-b7d1-b846f91f1125",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4ef329-de20-42b8-89bc-2ea15dcca08e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8548da98-b756-43b9-a723-1710f74bb7e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff0ebdc-33cf-4499-b01f-b0b1da389359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a95d3ef6-3b15-4f5b-b5d3-02724f8afcf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e537e3-ac12-4565-a909-2ca761c52b97",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3725d5bb-6e08-48f0-8d48-373c637d8a85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74c8d0e3-cf8c-49a9-80ef-292d7192eca9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "489c257e-7632-4cd9-b63f-1c3b60967390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6cbb180-ac30-4774-aff3-b911c5cb4026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62636194-d366-4511-b73b-5a27b5003ee3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd70ca62-f757-4242-8975-b54284f16396",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35d9b4c1-6188-4872-a9c8-120229491785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a8013a-f25f-4555-aa48-154708cad856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "172312cb-0556-469b-84ec-19abea7852c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a9dee4-1c4f-47a3-9a88-8ebd0ad497d2",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9e5954-cf7c-4115-bd10-f59d77db4c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abc73d52-b54b-4d04-a33c-f0b228c02b4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb61dfb9-85d5-454a-ae0d-67c9ad2115c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a5bf672-b691-4acf-9f92-f63a92214939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0338dfac-7217-433b-ba03-5849eb036bde",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e8c696-3e0d-44f4-a266-c15c2057e712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72e082af-b380-46b4-837b-63dec689bf05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb219c1-340c-45c7-94ff-c0b2f1371535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ffbd86-83ae-4b15-ac80-6665ab49757b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd6a5f5-195e-4c25-89ed-95ac21431395",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e5f649-f905-4218-9bcf-14cbdf8b28eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8018132-8322-4601-8cbc-cdb478b0b0ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c192fbbb-0a13-43cb-b6a6-c1f215270cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7f1bde9-3e0a-4849-9c00-b45b79b860dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fcac65d-0057-4a34-9e03-69478af6e267",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821382f7-2d5e-44f7-9a05-e2405a8a3715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58ad08d4-77a5-4c77-9d38-353d9e0fa804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c76595f6-f53c-4361-a68f-e9768f015593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e1a576-c7e0-4e50-80d6-246c67cea570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5866f2c1-f420-4dcf-8989-9a6170a3682e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b8fd6d-54d6-4d5d-b708-cef20983afab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1680581-ec90-4682-a02e-95e7620c2f37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2e633c-4fb1-4df2-a4e5-68c981c51f1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eed7b6ca-4258-455e-8e60-56f4bf011548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514c7676-5abd-48dd-8037-dc15a891f856",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f253224b-921b-4e41-96f5-1e9175235d12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "764cb1b6-0cf4-4068-83f0-864a40a05a92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cad92fe-ec0d-4fe5-afce-77b89904a5d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a98052e-4d6f-45ca-8099-4f0d334de059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7e1e9e-8115-42fd-826a-171fadb9ef0a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc316e1-25d6-4a3a-bad5-fc80dc87d781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d05bef26-9acf-4b01-b290-f3d2b4b9d42f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5a8125-ca45-42a8-b4f0-61494e9649a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0851c8a1-a5a7-4e46-ad89-72e3f6674610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d16d39-1edd-4e6e-bc9f-d2229e41b949",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d3ae20-2845-488f-94e7-776f3c358fea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8c85bd3-545b-451d-acfb-5657e94dadb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5897a4-5df2-488f-a7b5-dedfa03fbb14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d7e0a7d-b517-4c51-87d1-351fc7ab06cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41cf505-3d95-483b-8fd4-10de0c08753d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db6858c-6642-47d2-b5b7-3ddb63aa86d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "506f7c81-b9b3-4b60-bc86-0ba114fd8af4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0522aaa5-ce0c-4b8b-8718-155d797dac82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa8e8c4-729d-4f00-9817-e4453d7e29b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7db78e-7209-45ad-b27f-51d590a0944c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1741758-69d7-48d6-ae33-541c9084a3aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65aee2f6-bbba-4f07-b239-b5a610cfb380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7edea0-2d6d-46e5-83bc-35e4fd384240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f653c97c-7490-45f6-b4b5-184938293834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619a57b4-dc9b-4210-bded-6c328b7d7376",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6e393c-8f4e-4c22-bdbf-b3de63e4ea86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5cbad97-8652-463f-a19d-71a6f9704339"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03dbfc6-bae4-4f89-8215-fb3b55ae97d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ee4cce-90f0-4f42-b209-9bb0fc866ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b8cb7a-3a35-432f-93ea-b96a49db54d6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162c73e5-f8ed-42a9-a74d-e69a84a58172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ca8576d-5474-4e0a-97d0-89e48c86ca14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27795665-edf7-423a-b23b-b371c6d07a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5d9b02d-5eba-42d8-92b8-88ff7a3b49bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8b2f2b-6376-4049-aa52-50db3ec9344b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4606224-2690-4940-9192-94a2dedd17e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e5f7503-088f-45d7-b59f-9144a9240673"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5053f6e-78e3-4286-aa9c-c895e742a2e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3100213-45e9-4a86-9d60-2dedeee6bbd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f5e9ad-e143-496d-a0b8-c3f1227528cb",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d027790-2f23-435e-89fb-1da0f622ab7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5c3a9e2-27fd-4910-8b07-43a9fdf2b6c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eda6cde-ebcc-4f5a-8b17-f9d226b70dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24535ec0-805b-4cdd-a43c-47b9b18f9d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a925be-6065-464b-9865-60d3ce5fe725",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f796dd0-a997-4196-ab88-f3039d76fe88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03d38a9b-a2f5-42b7-a81d-a4285048d16f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee914de-cc40-4c3c-8029-3930a6f7503b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf3ed82f-6564-4a40-ba85-c7b72b544cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecaa7a18-b5de-4c2a-b4b2-27ee4464ea93",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed49593d-5e62-415e-893e-b4eccf355967",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38f53c1e-d2cc-40e2-9208-6550d0aa488b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a9dcd9-6f1a-41a7-b896-81408bf38a63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f46a83ea-7e9d-4502-8cb7-c3ec9f567b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65986a92-65c3-442e-9cd7-ce72d8852956",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc20d196-b1a8-4390-bff3-783a02c9ebc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62771510-5302-4387-8d2f-953aaf31cab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dbae4e9-9ccf-4a16-b5f0-c582271293d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca446940-6179-45ab-a100-fdac3977f048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02caa105-47ea-4b30-946b-88faeb9ef41f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f960075-599a-4eac-aa84-06f7f2ca29b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d790179-50a7-4c3a-8772-f55797f1ad07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c63147-c14e-4a39-8674-55eb6cdeb31a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea3abaf3-b5d3-4c8d-ba2e-c556bbb443c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c57b0b2-eca1-4348-b684-4e8c9a6eeb45",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12eaa62a-30fc-48a2-85f3-8d11fce9b3d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7384010-da2c-4c4c-9bd3-49c2cfbb05bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "971aafbc-eb79-4fa6-9956-81560d3204d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ca55b70-f09b-4936-8fa1-c523e8872dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0902633d-48be-4b62-a2f8-dde9ce5a264a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50baf691-289b-4e1a-9899-fee7b04b7031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89afb964-3279-41c9-9369-79f6fbc3cdc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e98a1c2-cd55-4c4c-8f5e-58b208155c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "519cafd2-5c3d-445e-9e60-3e4b843f11f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b21c032-e6bf-4d62-b9ef-64d232f8618c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593bab28-c773-400b-95ed-09f2b77a45a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "133113de-f87d-40b0-bb6f-60cd9875e133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5cd460-96ec-419b-8143-23434467b11c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "865a0680-a0f9-4867-8546-2a026c4c70f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2ad5a5-8a97-4890-9e9e-7c91cb169806",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99fd1a5a-23f8-419f-acb0-9be08f9b3ca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbfb9939-4496-4b63-92d6-759e3b29c7d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d26b50-22f0-4549-bea2-fdd39b38257b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "480bad02-e4a2-4ec4-8cf1-81f966aae4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7e4045-0999-4c77-a545-62b350450ee3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83861980-8250-4609-9630-082d3eb60cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a336625f-c300-4b41-9d21-675901877901"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da5fd32-4990-42a8-be49-413ed70c5382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47188b7e-0da7-471d-b52f-c798bd0db222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065d5103-152d-45e1-ab79-928187dda4e1",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d389898-f795-4051-b4fb-19a46118f535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c73b576-c085-4b4f-aed6-d8bd964934ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1147f7b6-0538-4274-88ce-741388a558ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67860139-bf85-4bc2-b233-f1c3a9382019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf60679-9847-4681-a078-ec91da39edbd",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2da63a-b831-41c2-a02e-b9db66dfb70f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f195b7a3-4351-4b66-bdb2-69ccf00adeb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9cbce8-f823-445c-8818-8106d99257db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a29a999a-c6f9-44df-888a-5bcbc92e5f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5676273-653f-4e88-a18f-2bab494fd3ec",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8212ab-accd-47c3-8778-13a61d02d222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d9a07fc-6ece-481d-a8ad-f7fada6bc5a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "791ec018-cbbc-45d5-b60a-6fd366c57232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc8efd99-7692-499e-9238-6fd2512447ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f58401-f10b-425e-820e-1e0896c4f5f8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb159b8-8dfb-45f6-a946-cc4f4df2d2a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e3154aa-e521-4ffa-94e8-a1f16f5bdc02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66abedd1-93c1-4f8b-be43-b043b92dfa53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7ca6898-74f3-47ce-8d79-8ebe019234b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8cf779-f3b8-4486-bcc4-d03068f96bb8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45e6349-7944-497e-9488-518a135a1476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ace428-49a4-4270-8499-80fbac6efd6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3563e69-afff-4303-a6a0-e67d82f7cc41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2be7427-4bf5-4ed2-a284-ca6e14ff1c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26142b9f-4db4-4816-ac7b-84c34871089d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae17127-b736-4e57-9e24-ac74b554694a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ead16959-5adc-4e71-96a1-c73a8e554b18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aada2a8-abf1-480b-86c3-7bec30722af9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba683049-b7f8-48aa-b907-f8a88347f235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dfde4d2-b9e6-4fe9-ba99-6b89d327f63f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1bfc2c-5513-40a9-aad6-7a20689d69d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e9f0117-3ebe-4934-9ab8-9520e669ae66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2befa3-b9e4-4353-ac72-5a3cffffc916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4a80726-a447-4ae0-abd9-3bae04506579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5d3219-feac-495f-991b-528e0d8cdf06",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9912ef3a-0023-4fda-9b29-6f82d19333e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5190cfd-619c-4b5d-b2fc-c888b55c223f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd643c2-0d15-40ce-9246-b84b332e9ca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d43c23a3-8ec7-404f-8f34-9a6d2295500e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3967b917-ed37-47bf-a848-ee9b0231eb34",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01d455f-25c0-40dd-8963-6e991315809f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74fb3a98-7d0c-459d-af3d-0b28d45b8dee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1c3992-2885-456f-b935-01ced057838a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52fbbb4f-ca80-4f74-8dc6-696e20bafee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07f103e-646a-47ac-a9fc-fa9083f6727f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f26c2dc0-33c1-4179-809d-1e127b449749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7783e4de-4252-4167-bd56-f8700f9c749b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70afd03f-74f6-4db0-a023-4119c153987e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a886bf22-599c-4f27-8276-c152fad0d598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2318a0ef-3385-41d0-9d8a-8ff590868552",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ed855b-7031-4b31-85ae-c06bb6656862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c62225f2-f394-4262-ae53-d21970c22c7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b668529a-d29d-4875-ba8e-a25719c91044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c3247a6-3b39-4422-a471-9fe200389fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97097470-5f07-48eb-8920-4eac137d8cd6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8fc3737-e4db-4b60-8ec2-b2228ab4dc44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "584d3474-b2b2-40ea-bee5-941c2034f5c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae34a6d-7e36-460c-8693-44e471c5e973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d24a7f1-4ec9-4eb5-9ae1-a1b2fa9e3bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70c0edb-d819-43f9-b9d5-34a5e310fe02",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d5efad-c033-4dfb-a5a7-c9a7d0262fb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cff4fd0-fd94-4f78-a0a8-897b58024d4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3c69aa-36e5-4ac7-940c-0ba7a1e84719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddf93445-3a84-49f7-80a1-b866a8f6a8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f99a00-93d9-4df4-a89a-5f535dd78ae8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947e3b4e-1c7a-4104-a657-49150e45bdfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f055e214-37f6-4326-a10c-fe6cf7d09e46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3b9937-d953-43a8-88b5-d2a9a3d4a190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "464fa652-ecd8-43f2-b158-1ef4cb5b098b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a0ac2d-470e-4155-8f82-61b1a71ca127",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74cb6a96-5873-4423-9aa2-d8d0bb3df425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "152683af-1cb1-4d21-9905-782edb6a22d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d7d205-ca8c-42b2-b857-f57c60c3caa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8f6d8f1-fd03-4c38-a944-fc734742bdf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12270f3-1a3d-47d7-950f-8cfb95317eed",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d468cc1e-d1e2-4564-9e34-f1b4c7d19bb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e7527e-a1ff-421f-b766-f86453e8cec5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e707d84f-6b46-4213-9ce3-7e70b91cdec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa287f66-66b7-400e-84d2-7f7f848bb2a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aaf2579-a386-4c86-b4e7-978b9da563ba",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb796c9a-6877-4317-bea4-c5147bd9b11a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0259f940-d9db-4487-bd1f-449788b6a993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c229f6-b3d0-4d76-90f9-900116d20a88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "384691e8-4236-4af1-8226-76c197eca37d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72bdd75e-8c3a-4284-95f7-fcfc4a1c9392",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03309d39-da25-4e81-9ef6-37bf43fb82a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d65ba715-0e9c-4348-b445-d1b3bc11cf12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7011eb78-1b08-4515-a2ab-b894b22960bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faec650a-a8d1-42ce-9cdb-8fc7ac323e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cbf6bf0-a488-425d-a805-df7fb296cde9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35eac34c-73d8-4f85-bc03-1f3762dd3bb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a9cc4c7-0d87-4f56-ab65-e36a657d366d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6012e8-331d-4443-ba01-b8d0590ebfd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5be1045b-7204-457d-88e1-2f2d5ccfa68c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0713fb84-051e-4c60-a7a5-09f33ca54283",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbefeb74-57f8-4c81-a318-6cd9333b4e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d9782b8-6212-4b1a-802b-745e11ff1337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "180d2347-db93-4958-9da1-d4321e983df7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77d8026c-fc03-4782-9154-c1af3501b0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c958f7d6-1b5f-4e26-ab4a-ebe0598d8be2",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1975ec5c-a199-47b6-bede-3c27efcdd9be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1140039-a966-40fc-97f1-7c5b6845abc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4edf26-ba12-4b55-a01b-ccf0d7043bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c4e169b-be9b-446a-8c32-768ca863ec8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306b337a-abbd-4b98-8de4-9357e0076929",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d6aad6-0545-463d-ae21-9bdeffbd56e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69d7bda1-340e-43f7-afdf-ed1441c07303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44253a8-68de-4107-87be-28579b7e2382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80824a82-477c-43ae-8394-80c2561227c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19061c51-e376-4bd8-8a8c-b05e4f11de6f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24f66d1-684d-4fbd-8fb1-deef2b3963ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "501a042d-ea41-4e2d-8b85-0e5f3e3d56f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61aac4c4-60aa-4506-8b68-8e5f3e407bcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60043759-3473-4ab2-acb4-e2157a32396f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dee8bb1-3e34-489e-887b-952fdbeec700",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5361e4-03df-4b17-8add-4f8111bb8137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e641ceb4-50d1-4093-bdf3-836ad356d71f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b73b497-71d4-48fb-8a6c-1a05b2a0d89f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a9980ad-1720-4c4a-a26e-d4c511440883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78fead8c-8550-4d76-aed3-6b5f5fbdd9c4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c050184d-80d2-4254-8ea1-537ef03f728d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d51d0ef-4b94-4388-9ecd-5221aa11f39c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "883c1f7c-cd48-44db-a694-5e82de37bb35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c19110f-b23b-4c2b-b417-4ea4513da449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d689ce-dc7e-4669-9761-14209bde5814",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3c47a3-89d2-4946-b320-1074ecaad68a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71a105b0-fff8-4f32-a69d-a889956af6f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b01324-289c-4ce9-848d-6c47de4529cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "384ddd32-0363-48c6-8cf0-cb7bd34f7133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e78acda-ef12-47e7-a5c8-b91426290b39",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52128139-909f-4843-a003-4acba9ac43be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1edf7b1-ddac-4ac0-b7b7-f2c25a6284a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3dce9b1-57e1-4e2a-aebc-70b7f48f5326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0063dfa3-ca93-413f-85a1-17fdfd9689ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9850410-e880-4351-aeb1-1d730dc2d592",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80bf0a00-5357-40c1-86cd-f2f0cf565629",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e7eb25f-edfb-4e8e-8fd3-70916bc0fd1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24aa5f84-21a3-47d1-8f7b-d8b219f96374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e541b84-6b3a-45f5-bfef-e41e91960b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193db90c-93cb-479b-830c-5e6c5c07ee6f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e367957a-a453-4984-b6ab-f98fc072f056",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7f3095d-d5ce-454e-b361-f7f121083dd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "868ab6a4-2a3f-4906-b0f0-f0e486653c73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7917bbc-b516-42cd-83d6-5de8eb200c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdaf215b-44a9-4c94-a83f-c9e5b4aa957e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bdd8cc4-d44e-4e79-ae86-79ef8b84b99e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4b46762-7768-42e2-aff2-7b96cb6532d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f2b062-87a3-4a08-a304-a2574bae62c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5324875f-8532-48ef-b316-a6bda43ab968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0ccb4a-adcd-4958-9b42-9267a8107652",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0508086e-04bc-426f-95dc-a1693f304357",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69e83efd-8a9a-41f0-8472-fca9ad8a623f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e459c6c-c8cf-4d0f-8bcb-88df6ce82b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53438f9f-efe9-4c0e-a7cb-ab581f13be42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ad856f-7b8d-47d9-85c0-378cbf67be4b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1d7e62-463e-4465-9b1f-7b03717ce518",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de3ffb08-efa8-4649-9352-d8a6b0b8c2a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8fa819-555b-4789-bfc5-9a1c57862810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c3578f9-8c20-44ab-8f1d-a75fcbd34b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c849fe-8579-4ae7-b1df-b2f0047b04c4",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed342d8-8267-4021-860e-68f12623d236",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7c904fe-771f-4682-9e4d-5bfa3a74b59f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69f5f04-a232-44d7-bbb8-a9617ec562b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b61b215-6240-41db-a311-1367d48ad579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb4fa5f-5661-454c-a461-31589c232f56",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e84d8a-a37c-440e-b91d-90ee96cc6c6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1572bb82-61da-437f-a456-3e13835b4fb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9beef4-28eb-45e5-ad8f-671cabbd964b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83782e93-d847-41d2-b365-40d76c7e6b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80fd9595-543f-40e9-b173-aa8e8ad8fcc4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0147a83d-2f6a-4c78-aa5d-7391b3e759c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d61c27b0-605d-4bb1-9ad1-2bb374f0e186"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2e76e5-27a7-4040-b0bc-572d33fb7096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "727f97b5-529e-4b2f-82f7-b712fae76428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b550ecb1-ed58-49f3-ae87-f2a672acbb13",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5bec1c0-96fc-43b1-9dcd-71ad79821ce9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1e67560-27c3-4e56-8f51-9de0ef2a3927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9200b8d9-c7bd-4c39-9025-3af60d36c35f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ade9448-53ba-4519-a16a-7f434d89ee81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653fc25e-982d-48ae-8cf1-35d8df9727ea",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6342cbb-4b5e-4150-b050-256329737806",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ad4abd7-d0de-4292-8ce0-b855a9c9814d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad744a4-4087-4554-a0bf-be4dedfe5b05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15c158eb-5741-4510-861a-d1f3a86d8f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cffb2bec-6750-45f7-b871-a998c6474d28",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1876a56b-4e98-49df-9bcd-c51bdea80478",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80f39b03-3211-4434-b548-486946abdf7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72b726b-57ed-4e13-b8ee-7a46a06cf9ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "258d856f-2c00-49c6-8839-d4b1e5ee9507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac5a875-e112-4a62-991e-09cb719dc08b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a522de26-5af4-46b6-91da-daeaf61c9138",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f2d0b19-c5d5-432b-ae6b-b58eb26506e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5fe5c1-6f97-43f4-884f-ae81e0a1412f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de233d0-66c2-484a-9802-ccc803a267b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0cbc590-2b79-4346-99bc-b0a6dca3727a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56180427-4baa-4185-a00a-07e533345ad7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60a40e17-588f-4741-9031-2532f5e13de2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7c207f-7fd8-48ab-bce8-f765dba936b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08f0c183-f742-410e-a1fb-38c6a19ada3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be69b273-3bc3-41bf-831d-8a3c2ef3e50c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d03946-6153-4e85-8e29-f6f05b1afd06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8fda36f-237d-442b-a30b-2f0f93b21d8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "804d28e1-257c-41bd-8acb-acc2506c8fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1954119f-58fb-481d-8714-677b10686010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d94acd5-148a-4bcf-b155-0a054eeb385c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0243f7ad-a15a-41d2-bc1b-a1a6785aa157",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23cdb38d-e957-4246-a46b-44149ecc5e66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6552016-6430-4235-9bb9-411645f5372a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44fe9271-4f29-44d0-80a1-9916b0565a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe30a8da-24d7-4033-9191-a640a018c811",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea8bc3e-e3dd-41e3-b391-c83f1793bf0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4a7d91b-b478-48eb-a4d1-7cb594265f8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d7b6d5-e86a-4726-8f06-687b77d8f9b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ac05e2-a056-422f-88d5-def1e0e4f6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b220d32-b11d-43a0-a2a6-1e12a4816e1a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73e1199-037e-4940-8952-65a90d4339d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f6f090e-53ab-4617-8dcc-d46d47aa4638"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f55ba09-d2ab-4c49-a420-50395b2756f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90e4977a-2682-45d4-99f6-3dc4608b82de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290d1b60-0e5f-43b1-9ba9-0d9544b56f9c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c52e125-b9a1-4f3d-9b25-6ec98c5582d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "401d0eff-b981-4706-94c5-41bedc5ca926"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf136f1-a4b7-40d8-b492-f64f71a2e7ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f537ab5e-be9f-4cbf-b332-16cb2747fe96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe5af58-e8de-41f6-a5c7-7c6cd3c9b0e3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27c7a68-4938-42a6-a8f8-a8115f3d360a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6904d4d-53ff-4682-938a-738c42231cf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c8ddd0-52d3-47b0-af67-0f2d6e379a13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b09b3e2-be5e-44a2-bbb9-9b919ec131a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be4fa66-cd2d-4dbb-a95b-7fb0e11ebb97",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54d3492-d7d7-4e4e-bbb6-912bd63334c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75d84d53-d74b-4a85-8ef0-a0ea2583843b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3961afef-0b83-4f7c-9fcc-af019b717fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38f75177-4b60-4ced-9d91-251ff582fc78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28235aac-8bd6-42e3-9168-5bbe788dddba",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dcfed18-1756-473a-89f6-d5dc23c4de41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c21b00c-7bc0-46ca-98fb-1c0de6d5629a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8462a2df-e143-475c-bd9a-9bd103122bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcbd0619-e767-4eaf-b6e3-75c734aa2f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1db221a-d9bd-4ea4-b612-7ae1ca03b31c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7370f1f5-f13c-45d3-98d0-ee162a0313a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3008dc2-29c8-4aa8-b7f2-68b28a0d1d15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8de478-44ce-4af2-b757-0394984655f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f99b997-7590-43c4-879e-f7628da1cb5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c966181-842d-4f1c-8022-4bc9cdcaa6bb",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318608b3-8df7-49f5-9551-674e99435712",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16524c6d-a3ba-4489-b478-9b1b80657197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90915e2f-6fed-4e36-a05b-cc35eebe97b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db1398f-300c-41cb-9864-0a9dcc6be12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5462c6-fb96-4728-9ca0-caa57294207b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d82cfbb-1f6d-4efd-ad3f-90dfbf561d2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b506c6a7-5477-4882-8443-5301bd99afeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0131f0-793c-45b4-b0c7-8e69f4ca6b33",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff77efab-ab5d-4371-afa6-babafe8871ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f094aabf-604b-4559-90ee-e5523ca4cffc",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856f2eab-bb21-4494-bf9e-118d7ecf161a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d53baa40-c1d6-4259-8628-54cfb2a941a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58ac433-ed00-41e9-848f-73db3609ffcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fde62a91-7ff6-408e-91cc-7171f8725f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7c810d-5ef5-4588-8908-fdb6b96f3fe4",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d56b4a-1aab-4142-8152-c36799590fec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f277ba3-85cc-489a-8443-b0a69970ea3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3c093c-5be5-452c-ad12-643a0586b324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2139c10a-193a-41c5-bc5b-069af284c0ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c300140-9522-4b9e-8e49-ac5f2509d486",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5780ea0f-24d6-403a-a644-4195f4475fd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bce9e7a-e721-4cb4-bbf8-4d2412e58856"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee10244-38e9-47c7-bc66-c3e6635d18e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "689ca748-c9bc-4775-808b-bb53dce8b87e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f017955-1cb3-4324-ba9d-f3758bbf3cb7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaac3e55-22bd-4bf7-8df5-d5253c446bdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1347565f-a84b-494d-88d9-17c9d5ee0f7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "163f68a1-277d-4504-804e-3390a90b9f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "323f3a3b-2a15-41da-8f09-3d6a8f68c080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be108264-00bf-44ff-b86d-e203550cd10f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0a79a8-ade9-420f-9a6d-c6c4e4d55485",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d53ab90-48fa-4a85-94d8-7918b3df8c59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc17f845-a6ff-4a7f-a60a-30047fa5e7e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97f68c71-f1ba-45cb-98d7-5ea08bc28332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce7540e-44f5-42a1-b0df-e168cd2e8315",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e805fd89-80ce-44c7-9fd9-c285337da9b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aee15035-466b-4839-9e5a-9a6a3fdbc10d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d90c79b-3436-489d-a6a8-8e33f7e1d445",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b0e128c-7cee-4b94-a28e-54d5f23f2f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ebb545a-6cf8-47cd-9c7d-40dc97395192",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c596a66a-dc98-46b4-a476-d1aa9d7bb65c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bca1aca2-da2f-403e-bbd8-aeaeb385b0f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8393070-9b7b-4103-9354-5123bcc777a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b286f229-fae8-466e-95cc-7ebfe5c57111"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21da314a-1039-42e8-9d2f-30848ed26100",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3e1f6b2-4aa5-4e7a-b5f1-4b49c4c2e34c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "98b68532-b4c2-4877-b16d-f2cb98da29aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "996ee6d0-cea6-4ec2-b03c-ce1e29fff866"
                    }
                  }
                ]
              },
              {
                "id": "bcb861f5-be40-4779-bf5c-8ae0cc8b03c0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bf347ebb-3f83-431e-b9e9-36df119788a3",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d236a3b3-5e2c-45ac-8691-30123f71be85",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "546ee2fa-99ca-43cb-a146-6c40a0fe83b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e3a135-5f8a-4b9b-9dd3-ac43d79f7048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ed90af3-b0d5-4821-9c45-22c9187cd634"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5a6a641-6edc-4731-aeef-96a09c2627c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04777ffd-65a1-405b-bf19-3cf5e7331863"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b44f791-5dd8-417b-90b0-98b17750981a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d297d7a-e063-49ec-afdd-3ec5b370a060"
                    }
                  }
                ]
              },
              {
                "id": "f8b7cdc3-3b76-44b4-92e2-768aba64b894",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c6e9321d-7d40-4cfb-a860-d48425743dc6",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e2b40d-59d5-48e8-ad33-75d286301be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b2237b2f-fccf-46b8-a98c-7e6624fe3c67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a337e9-9301-4cd2-8fa9-3159c94c9e31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e35f4b5b-a324-4aa5-b740-879b0c9b3770"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4f252947-5e24-43d9-ade3-1addf5d979fd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9e2df012-a182-4465-a4b2-72148746902a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7358375a-c832-4b86-bb96-8c1d8b085e34",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fbf4e6da-1c33-441c-944d-8331ab533e29"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d06b2f8-2f55-4ed9-9049-3b3f26107178",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c3c4056-9c7d-47e4-87db-ec244fc9c27f"
                    }
                  }
                ]
              },
              {
                "id": "8563d4df-d4da-418d-b0d4-e97827c035ba",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1b7c66f-c04c-45ca-8184-37d413c70922",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "04c8b06e-e5f4-44ee-89f4-b346bc37d5c1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd6ae81a-5113-4ea4-94e6-7df1f39727a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f84b6025-1bb3-474c-988a-d14051894f4d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9196fcd1-3588-484f-8058-9c0759535bdb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "461c6bc9-77e5-4459-9e0f-67f7aaea7f8f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a064f8b3-aa67-4cc7-9631-98ab9e463faf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "911952b1-af17-401b-a790-8d2d977ed495"
            }
          }
        ]
      },
      {
        "id": "58ad10ec-60a1-41ab-9d1b-dd74016dc8dc",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "82b54773-f0bb-47b0-bd74-2a2e76b47371",
            "name": "Negative Testing",
            "item": [
              {
                "id": "24210dbf-5525-407d-bf2f-a6e7b01c0821",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e4f7c46d-8a09-4a67-a78c-1a4754352ccb",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42960b4a-9ca7-434d-aba6-780704109c63",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "44bd2b0d-bd24-4f69-8c8b-e10c6c8652f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa3694af-5456-4c9d-a604-c8117956855d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4cf16091-598f-496f-988f-46cbb0f86e42"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71cec277-2b03-4d9b-bea7-fc1b0a1a33ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3d84604-9dbe-447e-9759-e1ae385dc455"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "48f10fbb-f020-4ad3-a0b8-fab5e88e85da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e12b57f-4244-4934-8ecd-f4ebad565e24"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e62f0d71-b330-4b54-b9da-da510ecd66a1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c7769c24-c15e-405c-a534-54b0592f14ef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d445f5fa-ec29-4ebb-ba89-a24a3f19f2c9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "938cbacf-b749-451c-9d50-78c806b4d47c"
            }
          }
        ]
      },
      {
        "id": "4a19cdaa-558b-4103-abba-aa274a234a27",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "68ac39a1-b9e4-49af-a294-101041914d1d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4c1c82a3-a48f-49df-9dca-d601e804b962",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "09b19db4-cace-4b7a-9606-57f922eb133e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640a0158-2016-4da8-803a-029556fce1cc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35a92d22-68e2-41d1-9cd5-86e546d97b87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a296b6ff-5c67-4672-a5c3-f6d8b2d137ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ecb37b62-933c-4d74-bd5f-7054116f8d9c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e64e8b3a-7784-428e-abfa-1532587ec24e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2b7bf12-01eb-41a9-8872-c21a7b240da8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a4bccf9-6126-492f-b7bf-9c2400af05ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "225df591-c265-4690-8291-b7ef0df3fb3c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "258db63a-2b97-43a9-b6cc-2213ab3192a0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "61b45178-51cf-4ced-b512-a963a0f5e159"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0830a6ab-3a64-40fd-b710-f2bb86774db9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59b86b30-8a68-430f-97dd-0d76a431ff38"
            }
          }
        ]
      },
      {
        "id": "39a8c33d-6fb5-4c74-8893-0216142b1262",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "51704934-d68a-4f46-a4ce-7463480ceb83",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ab68cd0a-5704-4c79-ad63-136256d8fb96",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b8310565-3018-46a7-b9d4-65d5e8c81f09",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9705d7-1e5c-4df6-a160-43b724947b40",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0570f9fa-5bf7-4210-9f15-1a918d8efda7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43cbfac5-eb80-457d-99ef-9cc64d4c9afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf659892-e0dc-4d36-92a6-6528f17fdebc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe71a107-b6ae-49e8-9cfa-9fb616034afb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2323bf7f-b386-4e78-b206-23957fbac7a4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c8f9a09-2253-4eeb-bb10-5039c50c04a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32a93a4e-c936-48b5-a181-b2b0eeeda42f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d3d41602-5ee2-4c43-bf99-e4cc5e05c651",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2e4c4960-c659-470c-8df8-c329e5500cd5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3719d4de-5692-459f-b6f0-fdb4f28de886",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e00a6ad3-f8ce-453c-b1c3-b6fe31cdeb3f"
            }
          }
        ]
      },
      {
        "id": "79112238-a9b8-411f-b253-2b98b2487f32",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7baba412-bdf0-49fb-be61-d6c7baf9917e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59824d48-7832-43ff-8eb2-a0dc3e173246",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7c86dbd8-800e-420c-a9e0-888831d227bb",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c2aba87-b854-4242-97a3-78d748793bad",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "87762c47-0411-4b86-9dcc-79f8defa8cf7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 343.56746031746025,
      "responseMin": 10,
      "responseMax": 9147,
      "responseSd": 1321.9818483450763,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719362292332,
      "completed": 1719362387561
    },
    "executions": [
      {
        "id": "f2d9080f-b157-4990-ace9-ea11a64d8fc2",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e302cda5-3bab-49c6-aefb-bf0f7759d580",
          "httpRequestId": "d500f9c5-5a49-4331-960c-373d08ddd90e"
        },
        "item": {
          "id": "f2d9080f-b157-4990-ace9-ea11a64d8fc2",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9dc02975-5a39-4b96-87e3-51a3e3636ef0",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "0d4a02c7-8788-4e88-9b19-a6642a42a54a",
        "cursor": {
          "ref": "cc8abf14-43af-472c-9508-3f31a0613768",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d98aff51-e314-422d-aeb2-eba3e180213f"
        },
        "item": {
          "id": "0d4a02c7-8788-4e88-9b19-a6642a42a54a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0a346292-9250-4a16-ad9d-9669e5c1ce53",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "8ff6eae0-a815-4ae1-a9be-795659e214ab",
        "cursor": {
          "ref": "42903325-08fc-4d9d-8ee8-06f65fecf618",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "60214e4d-4146-4246-a569-1e1388d473f3"
        },
        "item": {
          "id": "8ff6eae0-a815-4ae1-a9be-795659e214ab",
          "name": "did_json"
        },
        "response": {
          "id": "979e8efc-4ac9-4c6f-8b96-c2aaf8694a2d",
          "status": "OK",
          "code": 200,
          "responseTime": 289,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cab07a8-f5f5-4edb-8552-e131757f1616",
        "cursor": {
          "ref": "15145e6d-b7ec-47c8-8f3c-c4c66a00d102",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "944fc6b6-a604-4734-82fd-e977450346d3"
        },
        "item": {
          "id": "9cab07a8-f5f5-4edb-8552-e131757f1616",
          "name": "did:invalid"
        },
        "response": {
          "id": "cbbaa4b7-7afd-4d0d-a641-6a1756706e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2302,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cab07a8-f5f5-4edb-8552-e131757f1616",
        "cursor": {
          "ref": "15145e6d-b7ec-47c8-8f3c-c4c66a00d102",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "944fc6b6-a604-4734-82fd-e977450346d3"
        },
        "item": {
          "id": "9cab07a8-f5f5-4edb-8552-e131757f1616",
          "name": "did:invalid"
        },
        "response": {
          "id": "cbbaa4b7-7afd-4d0d-a641-6a1756706e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2302,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e278494-ded0-478b-a385-d7e06a40b5f7",
        "cursor": {
          "ref": "aefd15ab-899f-403d-b7be-e5e4f39308ea",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d306a0ec-b2e6-4ae7-9e78-037ef01bbc73"
        },
        "item": {
          "id": "8e278494-ded0-478b-a385-d7e06a40b5f7",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e8da260e-0ae8-4d2c-9199-7b1e7388d9e0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2626,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f936c2-b6f4-4bb8-a5f1-06fdb38d3c21",
        "cursor": {
          "ref": "12769f2c-b070-4b7a-a026-3a6cec8378f8",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "fc1c35b1-c4d2-444c-b7ec-875cb394946e"
        },
        "item": {
          "id": "b1f936c2-b6f4-4bb8-a5f1-06fdb38d3c21",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d035209a-bc2d-4fa2-89a0-079ee03ee0e3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2238,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85636cf4-a7bc-48a8-a969-2cba693fee78",
        "cursor": {
          "ref": "4815514a-0d9b-4a0c-9bd4-6bf843317094",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b606b447-19a2-468b-8e85-f0bcdc182dbe"
        },
        "item": {
          "id": "85636cf4-a7bc-48a8-a969-2cba693fee78",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f07b265c-773d-4910-ab39-e505f5909281",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fdbaa4-aed7-43b4-9b86-70bbd2d7a5c3",
        "cursor": {
          "ref": "d09334c2-65f0-4f8c-bb5a-b53ae5e4ab32",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a86e822c-d545-4e2e-bc13-d7541b08b182"
        },
        "item": {
          "id": "79fdbaa4-aed7-43b4-9b86-70bbd2d7a5c3",
          "name": "identifiers"
        },
        "response": {
          "id": "9f86c0c6-b77e-4061-9cc1-53b2173ea7d1",
          "status": "OK",
          "code": 200,
          "responseTime": 2419,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6393c796-f00c-41ae-ac5f-06ab978e7e2d",
        "cursor": {
          "ref": "38382fe9-0dfe-485b-b9bc-8be6234d3506",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "853b4460-3afc-4b77-a5d3-5a45f794d7e2"
        },
        "item": {
          "id": "6393c796-f00c-41ae-ac5f-06ab978e7e2d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8fafcb2a-5401-4e42-bcbd-c9ccf0e472d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c676da-2ba9-4549-af73-a31c3670fb18",
        "cursor": {
          "ref": "6d4f5068-e583-49ff-a2ed-f88742674d76",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "052a451e-50b3-4ef0-9885-1475a363ba52"
        },
        "item": {
          "id": "52c676da-2ba9-4549-af73-a31c3670fb18",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1982dd01-0675-416b-8af5-8dcaac4e7cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec579e6-0741-4427-9859-a6308cd7dfa4",
        "cursor": {
          "ref": "38d5d3e5-7dbc-4c22-bbe9-2545e7f05bc4",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "fb0745ba-b940-4c94-934c-4ed349ea3d2e"
        },
        "item": {
          "id": "1ec579e6-0741-4427-9859-a6308cd7dfa4",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8d8a4e76-8756-492a-a4fd-b7d94acd9a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a9ad61-4ba3-4849-bc0c-3af7d5054bd6",
        "cursor": {
          "ref": "f9eff448-0c8d-4678-a40f-385c6bc634bb",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "fc1da63f-3edd-4008-921c-bc5a941e29c2"
        },
        "item": {
          "id": "31a9ad61-4ba3-4849-bc0c-3af7d5054bd6",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c366edf8-fa7e-4474-aa93-723acb4c70c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2872b218-6a98-482f-abe5-c2c2c4cf8eee",
        "cursor": {
          "ref": "a84534c5-65e9-4a9e-87f7-f968492feb95",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "fec1c8a2-9a83-40ae-83ea-8612e2945762"
        },
        "item": {
          "id": "2872b218-6a98-482f-abe5-c2c2c4cf8eee",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b3f8c058-1329-4fd1-9195-1f696969e8d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ce22e9-098f-46ed-941e-bdd1c8a4dff9",
        "cursor": {
          "ref": "759a9d3f-98fd-475a-9660-6209e57c68ab",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "872ea591-5e44-4e7b-b3c0-9e1b012848a9"
        },
        "item": {
          "id": "d7ce22e9-098f-46ed-941e-bdd1c8a4dff9",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7267efea-bb52-47a1-ab56-3065ab842a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45506de1-775e-448e-bc3e-f25668bf9998",
        "cursor": {
          "ref": "7dd0336d-f3b3-40ed-9d50-2a10a82724f3",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4967b434-9815-44c2-99d9-f7e1cdbf1938"
        },
        "item": {
          "id": "45506de1-775e-448e-bc3e-f25668bf9998",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4ddbd92c-cdd4-4a18-ad6e-82e9cc9e02c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48908765-7d66-4f46-be33-d5213f7602a6",
        "cursor": {
          "ref": "0f0ad1c1-04e0-4dd9-9ac3-2eb394feae8e",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c8bb97e3-53ac-4aac-aa81-68f86ff0af65"
        },
        "item": {
          "id": "48908765-7d66-4f46-be33-d5213f7602a6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1ef4aad5-81dd-4b05-a5e7-b624cabd46ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4456d4b8-5dcb-4270-b5c5-f47826178423",
        "cursor": {
          "ref": "8dbffcc3-a57b-487e-8949-0e38f3e4fb9c",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "08b68ae8-1b18-4156-9aa2-30e71dcf243d"
        },
        "item": {
          "id": "4456d4b8-5dcb-4270-b5c5-f47826178423",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "870b95c1-dffa-424b-8a42-24228e6a7a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2d0270-f5a3-4061-81f4-d996d3bb2b65",
        "cursor": {
          "ref": "6a496137-23c3-49d0-8256-219d970a2bad",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "beeb2aef-3f31-441b-aaf9-9882d3b4a3f7"
        },
        "item": {
          "id": "4a2d0270-f5a3-4061-81f4-d996d3bb2b65",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d4d20f7d-61f4-4e30-a8d5-2d849866456e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a48a3e-208e-46e6-82c4-9d7c20e3ea99",
        "cursor": {
          "ref": "e38e6dcc-44a9-4e68-982e-c8f200381f13",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f694d1f0-7981-4b83-a950-046bd245f5c6"
        },
        "item": {
          "id": "b7a48a3e-208e-46e6-82c4-9d7c20e3ea99",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7fc0c5fb-4b1e-4780-aa48-cf8b76cccf89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68214a2e-c529-422f-bccc-074ed32e8449",
        "cursor": {
          "ref": "c7d43220-f8ba-4ddd-a849-fa35c8d5b4d8",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "28663355-9fc1-444b-92af-012739969786"
        },
        "item": {
          "id": "68214a2e-c529-422f-bccc-074ed32e8449",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b1bf9881-ab44-49d2-9cc1-70f33ee828d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e36a243-fa5a-4d46-b729-b189b0ff430e",
        "cursor": {
          "ref": "2574dc45-97d0-4eed-b0cf-3eb9d45b8901",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0e6bf887-9f3a-4978-b4ff-0bffa0c9ce30"
        },
        "item": {
          "id": "1e36a243-fa5a-4d46-b729-b189b0ff430e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ab0d89e3-3b14-4451-b068-6716fde9c9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8386307-6c69-423f-9ad5-0eeb53d81a7a",
        "cursor": {
          "ref": "dbe25b1b-8c0d-4108-a4db-7127be88ea20",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9e1574b6-8882-48fb-b6bb-2932c5979c03"
        },
        "item": {
          "id": "c8386307-6c69-423f-9ad5-0eeb53d81a7a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "55046c8e-3426-45ba-b723-c377aa8e0f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74855ac8-7e06-460d-a364-29c33a401762",
        "cursor": {
          "ref": "86400fb0-1472-4b6d-a6a6-26fece95898f",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a6a4c7a3-c712-4b3a-814f-86493ddd7573"
        },
        "item": {
          "id": "74855ac8-7e06-460d-a364-29c33a401762",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7468dfdb-23ab-4791-b24a-f5556d452154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92655cdb-4861-4746-9e2c-fda1e7236d3e",
        "cursor": {
          "ref": "3564a404-c67c-4d37-a36b-55adf687f5b4",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1996defc-0bf8-4136-994c-d4b8fa431f3e"
        },
        "item": {
          "id": "92655cdb-4861-4746-9e2c-fda1e7236d3e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "579ed4c6-bd63-4e34-b633-1d8d6309a9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45e9c62-97d6-4dee-a7c1-025e20e55de4",
        "cursor": {
          "ref": "f87e6f93-88c0-4f12-8875-90f97fdf1ff4",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "868f4bdf-c2f2-4d45-8e72-c20d2e4da26b"
        },
        "item": {
          "id": "d45e9c62-97d6-4dee-a7c1-025e20e55de4",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "048d3041-8693-4533-bf08-9f90017f3efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e0f14d-e5af-4502-96d4-cf347931ee7b",
        "cursor": {
          "ref": "ac1102b4-4d19-4fe9-b3b4-2d42d82341ce",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0419ddea-9306-483f-8621-08c6e7ce8240"
        },
        "item": {
          "id": "d8e0f14d-e5af-4502-96d4-cf347931ee7b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "92b19956-f89a-45dd-a6b1-5333e444bb57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65cd636-e4a6-4380-86e3-15c798faf534",
        "cursor": {
          "ref": "bdd4375d-21ac-4000-a5e0-d02e834a5a33",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7f6352ce-f5e5-4525-beb0-410da1fa374b"
        },
        "item": {
          "id": "f65cd636-e4a6-4380-86e3-15c798faf534",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a11d07ff-21a8-4a0a-9fb4-b3c73d4800bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a8ad10-e16b-416f-9bc0-4259c9d63267",
        "cursor": {
          "ref": "e81072f5-8aca-4bb0-81d0-fa9117ab07f5",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2ae380e2-f637-4f00-a922-2be44f9a59e1"
        },
        "item": {
          "id": "89a8ad10-e16b-416f-9bc0-4259c9d63267",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b809d06c-33f2-4c7e-91eb-7c6b8882ea75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5cf95f-6ad8-46c1-85b4-83a80409a98e",
        "cursor": {
          "ref": "c572a127-57ff-495f-bd48-2fc67ff0d5d4",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "82a949ba-923a-4f97-a6f3-1f737cfaf158"
        },
        "item": {
          "id": "bd5cf95f-6ad8-46c1-85b4-83a80409a98e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "38141a26-554d-4501-aa16-7654b35acc81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac45d7a-a546-46fe-8a22-3f0918dd18bd",
        "cursor": {
          "ref": "ac43288d-9d14-4866-b603-4d7428278fd2",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "73db8d5f-7056-466d-8fb5-2ee432bb7518"
        },
        "item": {
          "id": "9ac45d7a-a546-46fe-8a22-3f0918dd18bd",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "af5f0fcc-df99-4c84-90e0-1e28100e1896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c295564e-36e4-4c34-ab6e-af926b3352b2",
        "cursor": {
          "ref": "18ac9822-2911-4a85-bc64-8c6cf235ec9e",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6e3830c1-b8cd-42d8-8cf2-6793858af98f"
        },
        "item": {
          "id": "c295564e-36e4-4c34-ab6e-af926b3352b2",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "810fd6e4-74c0-4de4-a300-035e05638bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8cb83a1-2289-4059-abe3-8c0808575a17",
        "cursor": {
          "ref": "c683c843-ef48-40b6-a0d0-207d49ecb307",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "47849d20-7f43-49d5-b672-ab0643550849"
        },
        "item": {
          "id": "d8cb83a1-2289-4059-abe3-8c0808575a17",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ffe998ed-db1b-4039-8c53-313a34ff769c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a31c78dd-9531-4732-b4e9-d965dbf963d3",
        "cursor": {
          "ref": "c82a7c29-a970-4e49-ae3e-2d3c4707a0de",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9b2348dc-eba4-4092-9b7d-078d86aa7622"
        },
        "item": {
          "id": "a31c78dd-9531-4732-b4e9-d965dbf963d3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e266e400-efae-47d9-b816-52d7bef0f63b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba4ed84-1e03-46bf-969a-8057dfc0b2b4",
        "cursor": {
          "ref": "dc4c8ec3-76c5-46dc-989f-b45eb440efc0",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1d95f33f-3986-47ee-89e9-74f59d812f69"
        },
        "item": {
          "id": "1ba4ed84-1e03-46bf-969a-8057dfc0b2b4",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0fd4355f-d92a-40ec-9baf-521f1b7ba939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3b683b-0c83-42af-ae2a-bf56ad0a54e3",
        "cursor": {
          "ref": "294fa7f6-065d-4f11-bfa8-14cd00998a77",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ad6c52ce-9a52-4261-9cde-d136f026afd5"
        },
        "item": {
          "id": "fd3b683b-0c83-42af-ae2a-bf56ad0a54e3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ffd23b68-e540-4627-8a67-be2db5093a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97439ef-1960-4cc6-8253-fb90f1b2f133",
        "cursor": {
          "ref": "280feca7-bec2-4031-9ca3-b01cc904c764",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5206057e-6688-4558-8934-60ec83057911"
        },
        "item": {
          "id": "a97439ef-1960-4cc6-8253-fb90f1b2f133",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1564d169-1154-4c09-a694-8b07046a5da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104cd8b0-daca-463d-8837-ffeeec6c1719",
        "cursor": {
          "ref": "38201df8-8410-4054-aac3-a2274deaaae0",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b9aa1490-a8a3-476a-a295-4d747dbc74ec"
        },
        "item": {
          "id": "104cd8b0-daca-463d-8837-ffeeec6c1719",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6eb7b32e-c220-4479-a46c-8a5b9723fd2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18260603-5c00-4f57-ae89-5a9dccabe465",
        "cursor": {
          "ref": "9c537677-52e1-4181-83e1-80f3b776b124",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "130803cd-5db2-4bf0-ae0d-85e8d61a2ad9"
        },
        "item": {
          "id": "18260603-5c00-4f57-ae89-5a9dccabe465",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "eb8639ea-fb13-470b-a877-145a5dce7ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a933a2-3116-42c3-a9a7-798ad0d11d80",
        "cursor": {
          "ref": "51cc0373-ba9c-4af9-899f-14d03ae76894",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b5d80f33-b573-4192-9b2d-6bdeba5646bc"
        },
        "item": {
          "id": "e7a933a2-3116-42c3-a9a7-798ad0d11d80",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5938c527-b128-4c03-9967-40c637fbcd64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08838ea4-9165-4d96-841c-ff4e88b1c096",
        "cursor": {
          "ref": "78e7c70a-5c9c-4655-89d7-88bb56bc0a8f",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6f7a3833-c1b2-4754-97f4-c986b857c070"
        },
        "item": {
          "id": "08838ea4-9165-4d96-841c-ff4e88b1c096",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1cf56d4b-b581-4c18-afed-0cdb31427c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d139de-ff47-47d7-aa80-2f6126945f50",
        "cursor": {
          "ref": "4581a487-06cc-4235-8865-47f9138988d9",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "59e9ebcc-6195-4f2e-b4c7-901acf79616d"
        },
        "item": {
          "id": "73d139de-ff47-47d7-aa80-2f6126945f50",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "42b42b13-2995-4258-8468-fb8263fb04a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91c0e4e-49ea-411b-8e8d-237a16ee0f34",
        "cursor": {
          "ref": "a7944366-36e7-4a9d-9cec-55483ae75dc7",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b0949e77-5905-4019-a2c9-7c316bc82434"
        },
        "item": {
          "id": "a91c0e4e-49ea-411b-8e8d-237a16ee0f34",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fbd92719-3484-46b6-9a9a-bbb5dca241b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ef421e-2d24-4ab7-b96d-f6a08521dd1a",
        "cursor": {
          "ref": "90301e28-401b-47b5-96ad-1a1416e1e765",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3a5cacba-f172-4cd8-a78e-f042746632c1"
        },
        "item": {
          "id": "35ef421e-2d24-4ab7-b96d-f6a08521dd1a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7c8f2368-30a0-4837-b610-eabc2da3430d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3763a7f-12a0-4afc-bfc0-bb74d360d149",
        "cursor": {
          "ref": "5765c8ab-e17c-44f4-9ff7-e593adabcd73",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b75a2e64-e745-406d-b345-be673514c764"
        },
        "item": {
          "id": "b3763a7f-12a0-4afc-bfc0-bb74d360d149",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e659ccd0-897b-4968-a2f1-2f8f8edbdd88",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaea65b2-eb41-43b4-bdba-a28a1d805264",
        "cursor": {
          "ref": "f22c1d49-e04a-40de-a2a5-95c844029d14",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b12f0887-f54f-43db-8ce0-b79ea667de09"
        },
        "item": {
          "id": "eaea65b2-eb41-43b4-bdba-a28a1d805264",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "84421adf-795a-42bf-90e2-95161d45a08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2610acd1-8378-455a-bbb0-493a151c08ae",
        "cursor": {
          "ref": "db00364e-1494-49c8-ac5c-c71626c4f536",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c227a821-a797-4024-9d8d-bb85507b973b"
        },
        "item": {
          "id": "2610acd1-8378-455a-bbb0-493a151c08ae",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b9efa2c6-b0b6-4ee2-8bff-5bc9db09657f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b288210a-d86e-42de-b7e5-00e03d87f1b5",
        "cursor": {
          "ref": "63e00555-8b2d-4bcb-b2e6-a8d7bf84c0eb",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "96ba2757-ec2a-422c-bb73-f7662e2cf39e"
        },
        "item": {
          "id": "b288210a-d86e-42de-b7e5-00e03d87f1b5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "bc7acf7d-4eec-4fc5-98e1-b959143e0a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4594dcc5-accc-4ed4-a475-bf88384d2332",
        "cursor": {
          "ref": "bdae888c-e1ea-498e-b1ff-18c15c131645",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "02f78a2e-f762-487b-b8d3-4dc6ee1b7450"
        },
        "item": {
          "id": "4594dcc5-accc-4ed4-a475-bf88384d2332",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a7c119a6-85eb-4105-941e-4b9f8d17440e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633bfaaf-1f13-412b-87e2-9d7a6d2884e4",
        "cursor": {
          "ref": "e80b472a-80bc-4ec8-a75c-40153d430194",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a9e01bb7-f6cf-40fd-a897-2e8e619f8b15"
        },
        "item": {
          "id": "633bfaaf-1f13-412b-87e2-9d7a6d2884e4",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "711f5352-7781-49de-80e0-56dcdb70484b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7bdefb-9ecf-490b-a89b-ba8fe7606dd9",
        "cursor": {
          "ref": "33146f8b-db19-4754-ab17-b324089e5009",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "23c8986a-34ad-4f80-abb8-dd31a9dc40d0"
        },
        "item": {
          "id": "7f7bdefb-9ecf-490b-a89b-ba8fe7606dd9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "eb27d579-6cc8-4a4c-a3e4-94108ae51d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2337089d-2c8c-42b7-8bad-1eaff701ddb5",
        "cursor": {
          "ref": "06460495-1fcc-4191-bc97-0dba057dae46",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3cd8b5ca-827d-41f9-a678-ddad1fd8cc59"
        },
        "item": {
          "id": "2337089d-2c8c-42b7-8bad-1eaff701ddb5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "dce13a19-f637-4598-b102-fa8e7c766d5b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44875f8b-5e22-4229-92f5-ecc8a36ebbba",
        "cursor": {
          "ref": "83a2efaa-11aa-4ed2-987d-bee4da3c48f0",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "37733ebb-af71-4d1d-8563-bcbc81e7a969"
        },
        "item": {
          "id": "44875f8b-5e22-4229-92f5-ecc8a36ebbba",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "fa300f69-7150-4041-8ef2-842d68568549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d49eca-1cf5-45ae-9a5d-211dfdd18ee0",
        "cursor": {
          "ref": "c266ed91-cab6-4b17-90ce-b9fedbc86acf",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7c19d25b-dca4-4c71-9380-f0741c89ed33"
        },
        "item": {
          "id": "84d49eca-1cf5-45ae-9a5d-211dfdd18ee0",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "86fa33e0-2367-4de6-95f1-bb92ee6f7756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0852be06-e3e3-479a-835d-b114c1b1f64b",
        "cursor": {
          "ref": "367a0ff8-aeb5-4463-b76c-725c0d1f2b65",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "40b15ab8-e933-4776-8623-b61fc98c55f5"
        },
        "item": {
          "id": "0852be06-e3e3-479a-835d-b114c1b1f64b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d293b4a2-9787-49e3-b7e8-523e65e5d27e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5ac4c0-b56d-4d11-8cfe-5e6aad2bd3d7",
        "cursor": {
          "ref": "576d796e-f8fc-4504-adbc-7bb964b1895f",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "648da67b-4810-4d7c-87e9-2ab092839850"
        },
        "item": {
          "id": "2b5ac4c0-b56d-4d11-8cfe-5e6aad2bd3d7",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e4f094d1-dabf-480b-ad62-93ede95cd3b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d364c432-515f-4d1f-b511-1e9bad4a025a",
        "cursor": {
          "ref": "455fa299-6ae6-4f02-af36-e2fe333d4f31",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "652922f1-6f40-4ba5-838d-69edb28f0dd0"
        },
        "item": {
          "id": "d364c432-515f-4d1f-b511-1e9bad4a025a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b5e50045-c60b-4be9-ad65-308e71ad4a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836154b5-f452-470c-a80f-d123ef585b33",
        "cursor": {
          "ref": "d2d637dd-8b0e-40f6-9940-3a4e84ee97c8",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "974d9a19-9de7-4f5e-8f14-c948dfa4a1ee"
        },
        "item": {
          "id": "836154b5-f452-470c-a80f-d123ef585b33",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "8237bbd5-b277-4529-a30f-39cda4e8fb09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4236875-4c65-4299-a74a-45196bd59efa",
        "cursor": {
          "ref": "d80b288e-4053-45cf-b96d-80b4b8128511",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d902c78d-acd1-437a-a9bd-94faa29424c3"
        },
        "item": {
          "id": "a4236875-4c65-4299-a74a-45196bd59efa",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c6043076-3060-4261-90eb-f810c5cedfe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc394ab-0570-4a2a-bceb-d25d054ff3c7",
        "cursor": {
          "ref": "345fd1ca-d646-44ba-b78c-6264671de96d",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1c01e543-f813-46d8-927c-c1ab1e78f56b"
        },
        "item": {
          "id": "fdc394ab-0570-4a2a-bceb-d25d054ff3c7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "753772c4-6c72-4c28-bdd4-c7c746b3b0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c36df5-f4d4-4bf2-b8f3-8fdfc16c683f",
        "cursor": {
          "ref": "d3e27c47-b22c-4ffa-8ef9-e1cf544c4fcb",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "90f41fd2-6306-4c08-bc26-4325505d7376"
        },
        "item": {
          "id": "b9c36df5-f4d4-4bf2-b8f3-8fdfc16c683f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8c2eab16-6ab5-4b1c-831d-0beb8a9321d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e42f207-b73a-4834-93d5-1dda0e74aa05",
        "cursor": {
          "ref": "0516019c-082e-411a-ad1f-b317060220fe",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b955bdf1-f6f8-4949-8ec2-511fb1ef3284"
        },
        "item": {
          "id": "8e42f207-b73a-4834-93d5-1dda0e74aa05",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "527a8a17-8c5a-45a2-a3a9-95b3b475b1f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce5e608-2417-43ea-b758-4db2613f45a2",
        "cursor": {
          "ref": "7ef8b767-da2b-4ab3-9fb5-c760e3093a5b",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "cebc3456-0d58-40a9-80a3-2dea8fb22e27"
        },
        "item": {
          "id": "dce5e608-2417-43ea-b758-4db2613f45a2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "61c9d15f-311c-4cff-b245-aee202f69776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb60d46c-9da6-471e-9ba4-b19c4ab745ec",
        "cursor": {
          "ref": "ccdd8530-1e89-4f44-b958-f0d3c0b4d6d7",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "79664140-27ac-4060-8d60-dc2ca9f5e421"
        },
        "item": {
          "id": "fb60d46c-9da6-471e-9ba4-b19c4ab745ec",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3272e87c-c3a4-4953-b179-e8a4d60beaa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2c555b-aad8-4b54-98fc-1d7158e0f6f0",
        "cursor": {
          "ref": "5a4759e8-fdb6-4ce8-abb2-4e5590119b80",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e5c19f5c-68ee-49a8-b63d-cc5447d97b51"
        },
        "item": {
          "id": "5b2c555b-aad8-4b54-98fc-1d7158e0f6f0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b9dce1e1-c1ba-4ccc-8b44-9000163edb3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1097f5-945e-4f41-b9f1-bdf4b8055cb1",
        "cursor": {
          "ref": "0756becd-4823-4b36-a97d-914c1c525af9",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "701c9606-06e4-4bec-9ece-ab6d4eabe642"
        },
        "item": {
          "id": "0b1097f5-945e-4f41-b9f1-bdf4b8055cb1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1badc37f-92c3-41ac-b39e-64cc15d9189d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdfce370-70fb-4646-8af0-fd9a190e1f6d",
        "cursor": {
          "ref": "db44ccb6-7267-4db3-b273-ee1ab134f3f6",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3c5bc806-13c7-40c9-9874-fd8c37ef6586"
        },
        "item": {
          "id": "cdfce370-70fb-4646-8af0-fd9a190e1f6d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0b3cec74-43da-4db9-9fbc-22f8278cb364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b34b39-3c8e-4b3d-9de1-928ade92f8ad",
        "cursor": {
          "ref": "ccee3fff-b34a-4c89-911b-f62b488a3064",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "660c5c71-cc4e-4754-a53a-c5e37581be88"
        },
        "item": {
          "id": "60b34b39-3c8e-4b3d-9de1-928ade92f8ad",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "95f167fa-aa72-4d67-ac68-18d343f168f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be0298f-25d7-4411-a3bc-3bfdcde9c2fc",
        "cursor": {
          "ref": "d2b22016-f202-4a48-bc0a-cf44d893ff9d",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "07800a9b-8105-485f-a5ce-54745e7d9095"
        },
        "item": {
          "id": "5be0298f-25d7-4411-a3bc-3bfdcde9c2fc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b03c0876-1355-4c59-9b80-e5ecda8c7a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d0720a-4b45-4704-ba12-bf980fd5050d",
        "cursor": {
          "ref": "df2eed3c-1c8f-4e02-9e62-d6e6b832a146",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2e1f4c64-9b50-448b-a9c1-99da1be3ed3f"
        },
        "item": {
          "id": "77d0720a-4b45-4704-ba12-bf980fd5050d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a8acf3e5-30eb-4e24-9534-f96e0df25bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae749675-c525-410b-b2c8-e5cd4fbfeb47",
        "cursor": {
          "ref": "2a865669-1b98-4ebf-8679-40ed09f6e0b4",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c8ff5c5a-34f8-4b52-bf6a-2e5afc5487d7"
        },
        "item": {
          "id": "ae749675-c525-410b-b2c8-e5cd4fbfeb47",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ffce212e-13b6-4730-9a15-0f778f3e9ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0abc8388-95f6-4c1c-875a-823f48710212",
        "cursor": {
          "ref": "0a4cfe7b-849f-4684-b2bd-6bd2bb162aa6",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "202e8071-c9c8-46c2-a4f5-6f024e64ef9c"
        },
        "item": {
          "id": "0abc8388-95f6-4c1c-875a-823f48710212",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "dffc62c9-b45f-415b-b06b-e0dbccb09e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e885d56-fc71-4f25-a24a-c1715bce0dc7",
        "cursor": {
          "ref": "0c6f13f6-c67a-4535-9c9a-b210eb2b0fe6",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "dc3f5de3-855b-41b8-abf8-cf2a51d83e48"
        },
        "item": {
          "id": "6e885d56-fc71-4f25-a24a-c1715bce0dc7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3172eee9-a23d-4201-9689-ac6ad261df20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb5a690-bb8b-4c50-9352-f99b9be2a0be",
        "cursor": {
          "ref": "209b33ad-b860-488d-83b0-1b13ca3fbadd",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a21eea06-72f4-4403-98da-bec45f422496"
        },
        "item": {
          "id": "afb5a690-bb8b-4c50-9352-f99b9be2a0be",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "fe55a2a6-ba5b-4d7c-97dd-36a37d8facbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5c3c99-b832-427b-8e66-fe0f143acf02",
        "cursor": {
          "ref": "9dbaaf18-afcb-48af-a4c8-2cfa6e50cf37",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f95af4ff-0121-4422-b6b9-895db374f509"
        },
        "item": {
          "id": "9d5c3c99-b832-427b-8e66-fe0f143acf02",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9fcba845-b27f-4f9c-904a-56842581fc65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b5aa09-728c-4d02-8612-eb7445a16c14",
        "cursor": {
          "ref": "e4fec9bc-95f0-4e7d-b934-0b4719f88c4b",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a29d0fed-8034-46c0-9f9b-ee3df56a6339"
        },
        "item": {
          "id": "a0b5aa09-728c-4d02-8612-eb7445a16c14",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "59538f8d-698b-4267-9f0e-6c86930e8423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca140ad-9ac1-470b-b261-f699bf920eb2",
        "cursor": {
          "ref": "f6e7f0bc-af05-45ed-8d36-b29c6921d59c",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "27c7c3a4-dfa8-4f2f-b013-2b361241a0b4"
        },
        "item": {
          "id": "4ca140ad-9ac1-470b-b261-f699bf920eb2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "68c267ee-8917-42cd-8621-054833fb388f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d1f820-9a3b-4ecf-8eeb-59c45d25e4fc",
        "cursor": {
          "ref": "e93f985a-e212-4fc8-bc20-a6fac8aa7416",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b1a75430-e986-46a7-bde6-94000056b8a6"
        },
        "item": {
          "id": "08d1f820-9a3b-4ecf-8eeb-59c45d25e4fc",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "cfa9613f-2839-440c-81cd-8826422baf6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042cd6e7-2bae-4221-9b09-3ec1b069bde1",
        "cursor": {
          "ref": "72a7e1ce-3713-48c4-a47e-927efede53df",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "312b443c-8f06-47ff-a5b8-3385fbf24195"
        },
        "item": {
          "id": "042cd6e7-2bae-4221-9b09-3ec1b069bde1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7a850519-4916-4258-9417-81a25dccf81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9835317-3ff1-4246-b3a4-05ad77cd3e07",
        "cursor": {
          "ref": "e7046dab-3206-4da2-9b9b-976fd5a0a6cf",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b69a9003-8fe1-4830-84e4-ca736e545678"
        },
        "item": {
          "id": "e9835317-3ff1-4246-b3a4-05ad77cd3e07",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9d802adb-7d67-40fb-a0c3-5124bd323c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c50e1ab-0779-452a-a075-6013afc0b423",
        "cursor": {
          "ref": "52a39321-2d72-4aaa-888f-468161ea1304",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f3299adf-8ebe-4686-9559-8c5da1c7939d"
        },
        "item": {
          "id": "3c50e1ab-0779-452a-a075-6013afc0b423",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "37ae9377-e891-45f6-b9fc-bd3580ee0ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba1985c-3380-4f07-87fe-fb91260403e4",
        "cursor": {
          "ref": "1160260d-ca6a-4325-a5bc-63b332c389b8",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a3b4f871-39ff-44cb-8342-dba5a9853e7f"
        },
        "item": {
          "id": "4ba1985c-3380-4f07-87fe-fb91260403e4",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7e657802-7b3c-4a98-a433-1509f6b119fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145a67e3-37cd-48d1-b513-d2f8bca23007",
        "cursor": {
          "ref": "cbcc8785-cb1b-4e96-be5d-8fd3d78c4802",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "14d45240-598c-45e5-b4d3-e16aacff17f6"
        },
        "item": {
          "id": "145a67e3-37cd-48d1-b513-d2f8bca23007",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a376d814-a185-4f97-854d-b5e4cb4a6d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3f55c1-1280-46a3-b8a8-337484e2bcc6",
        "cursor": {
          "ref": "22499118-6b47-4a40-81a4-3fca49fcd251",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "77162e4b-6614-49cb-9df7-8c79ac6f2945"
        },
        "item": {
          "id": "9e3f55c1-1280-46a3-b8a8-337484e2bcc6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f1c9c89a-10d2-4357-9227-04880f12dd9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60806e1-6660-4d5d-abb1-7ce68906217e",
        "cursor": {
          "ref": "9672580e-d768-4276-8cc2-0bab856fe006",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "74cc0e17-0584-4fad-a97e-32ceb10c3dea"
        },
        "item": {
          "id": "b60806e1-6660-4d5d-abb1-7ce68906217e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8cc0a11a-9244-45fd-8fc2-19f8d7acee45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5664632d-e759-4c2d-9459-28c7d1976ac7",
        "cursor": {
          "ref": "ba8a6cc9-ffed-4429-bdbb-f40b54e0c980",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "efa60e3e-f9e4-4aa2-89e4-68abc015c2ed"
        },
        "item": {
          "id": "5664632d-e759-4c2d-9459-28c7d1976ac7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7250744a-9068-4311-a6c8-818a5e2967ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6b4ae2-a7d5-433c-823f-3b04f167a210",
        "cursor": {
          "ref": "b104c11f-6539-4945-8981-5139394e05ad",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "25df5b79-6dd6-46f5-a162-5f8dbd23b661"
        },
        "item": {
          "id": "3d6b4ae2-a7d5-433c-823f-3b04f167a210",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "dc9dde4a-b9bc-4402-acca-5ad6be463e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1da8a51-cbf3-45cd-bc7f-8106e6a0137a",
        "cursor": {
          "ref": "a1aafe4c-4961-42bc-a9ae-690bcb76b0bf",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e5370afe-55be-4d27-a5a6-aadab0c0dc0e"
        },
        "item": {
          "id": "a1da8a51-cbf3-45cd-bc7f-8106e6a0137a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "187ff2cd-4dcd-48fd-8995-540269c70c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c3697d-5b72-492f-b17f-98922cd2a72e",
        "cursor": {
          "ref": "cdb6dccb-2520-4917-b401-d4a3442e65a3",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d56a7e9a-5c43-49d6-9b54-6755c602d5bc"
        },
        "item": {
          "id": "09c3697d-5b72-492f-b17f-98922cd2a72e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "30e7b10c-401c-4fa6-8236-25f2acc38b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e40946-aaef-4bae-8586-aee370e97b3e",
        "cursor": {
          "ref": "8eb19fd7-350c-431b-b78f-ecab1ef4c97e",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2c8b34bc-f7b6-450c-a416-bdc2bdb01fad"
        },
        "item": {
          "id": "a8e40946-aaef-4bae-8586-aee370e97b3e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bd93b12e-2c85-45c2-bb55-2b98c880aef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96fa0bdf-fed7-4e46-be1a-86faee5b80c9",
        "cursor": {
          "ref": "60643c18-c21f-475b-84ef-c39bd6faf8cd",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4c20988f-079b-4591-b2a9-9d8c33c06449"
        },
        "item": {
          "id": "96fa0bdf-fed7-4e46-be1a-86faee5b80c9",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1ff55220-1ba0-40d0-8f6d-a4df017ddb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590f6a54-829f-453b-927a-1b5da273427e",
        "cursor": {
          "ref": "6a4fe02b-5a46-4b1f-a513-b2459e13b31e",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0d2e2147-a86f-4f45-b343-d43acbcec925"
        },
        "item": {
          "id": "590f6a54-829f-453b-927a-1b5da273427e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4fdcc98b-9dc6-4fbc-9e57-e561cc080d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb614c03-1653-4200-b672-ec24a73be2e9",
        "cursor": {
          "ref": "b308e933-947a-477d-8ed6-9ced05c6b088",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d126d6a9-afdb-4f7f-b27e-8f1ce4fef165"
        },
        "item": {
          "id": "bb614c03-1653-4200-b672-ec24a73be2e9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "46911db5-c8a9-47ba-9467-f1a39b04621e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7eee097-5359-4b4d-b3f1-24d9bef5128a",
        "cursor": {
          "ref": "fc021605-82af-4b95-939e-19a1f5c60cbd",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "48fa182f-7d01-4a49-bc08-3543209a0448"
        },
        "item": {
          "id": "f7eee097-5359-4b4d-b3f1-24d9bef5128a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d6d9b0f7-fecb-4aef-8466-02be0c523acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d82f515-3eb5-48b0-874a-b7c9f99b69bd",
        "cursor": {
          "ref": "4cf2de76-d085-4e93-8649-0c8e9e66cea0",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "576f0636-404a-434f-82df-afc6319ce9f2"
        },
        "item": {
          "id": "4d82f515-3eb5-48b0-874a-b7c9f99b69bd",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5d6f3e0e-cdc9-42fe-8f1a-b1874de30722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e377fb8-1ac2-4136-b67b-cff76ba42a0d",
        "cursor": {
          "ref": "90ab4f64-c32e-4642-8121-906d90464d6f",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e71940af-c8cf-4838-bdd2-9a2d16d69be1"
        },
        "item": {
          "id": "6e377fb8-1ac2-4136-b67b-cff76ba42a0d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "cae0ef9d-e7bf-445a-9209-9230d6a31f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b131361-c6c1-4016-bcc0-d9c0b5d2e95f",
        "cursor": {
          "ref": "3d5df12c-0538-4d42-8165-84062619033e",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "09e88503-b249-44c8-b42c-207487dd72c8"
        },
        "item": {
          "id": "3b131361-c6c1-4016-bcc0-d9c0b5d2e95f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d518976e-df76-47ad-a424-082c461d1aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa3b655-02d5-4bf2-9990-d74f269dacb2",
        "cursor": {
          "ref": "4e4cb3f3-fdad-4a76-9836-db0c28457dcc",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a846fd00-5e56-48ce-a2b3-24a4cf865c03"
        },
        "item": {
          "id": "caa3b655-02d5-4bf2-9990-d74f269dacb2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a7b2cc79-12d7-4aae-ae97-ecc7e26d9cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d4f6f8-8df6-415d-9467-8e0c83d37b2d",
        "cursor": {
          "ref": "cd7ea346-401a-4dab-b93e-4a6e62286035",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "14a31f6f-04e0-4af8-8f9f-ac676eeff69e"
        },
        "item": {
          "id": "47d4f6f8-8df6-415d-9467-8e0c83d37b2d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "828e3c38-d7a7-47d1-b6af-214eded4c5b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacb1e40-70f5-4766-a38f-688676de7ea8",
        "cursor": {
          "ref": "fc08fc29-502f-4cba-9e26-22b2b6cc8a8d",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5b8298eb-8c3e-41f7-a31e-22548bc64929"
        },
        "item": {
          "id": "cacb1e40-70f5-4766-a38f-688676de7ea8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2d4ce59f-8f2d-4b02-b2cf-770d8716de2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51edb787-1b79-43b1-8ec1-c660d488dc7e",
        "cursor": {
          "ref": "9f62447b-50a5-4b04-86ad-9e624346b7fc",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b69032fc-4f02-4f12-afc4-3c3f4cf36a20"
        },
        "item": {
          "id": "51edb787-1b79-43b1-8ec1-c660d488dc7e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "76fa4cb7-c7f0-41ef-997f-7575f1fdddab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42e8126-c8f1-4554-a8f3-ecb50519ed37",
        "cursor": {
          "ref": "e3cd6f0b-9096-41e3-bca6-b64279032f07",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fa9c0b17-d2bd-4a41-8de9-a64d2a06a07c"
        },
        "item": {
          "id": "b42e8126-c8f1-4554-a8f3-ecb50519ed37",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "81e352c0-aab2-4d89-93c9-bba3b07fbffd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e16ccc0-b3b0-4941-8891-a0405df01781",
        "cursor": {
          "ref": "00f6050f-34e4-4e3a-a751-b206d3ffc831",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "90cda33b-849c-410f-848d-a98994b0d38b"
        },
        "item": {
          "id": "1e16ccc0-b3b0-4941-8891-a0405df01781",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "03b69e98-5b00-4fdf-b82c-7cce1de13b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "98fd9503-58df-49a9-a237-7dbac25a7961",
        "cursor": {
          "ref": "7bb09791-1094-48fd-805f-e88f4dcd9052",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6e2c5514-9b35-4723-a7d5-eec9c9c95d49"
        },
        "item": {
          "id": "98fd9503-58df-49a9-a237-7dbac25a7961",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8389ba2e-19dc-4c72-b569-8bfaa7fbf2ed",
          "status": "Created",
          "code": 201,
          "responseTime": 9147,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0c080f-98ec-4185-a982-876fa0a4398a",
        "cursor": {
          "ref": "4777aa85-8761-4be1-8889-1c67457e129e",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d027cc23-65b4-4606-858b-a6df18eae69f"
        },
        "item": {
          "id": "1a0c080f-98ec-4185-a982-876fa0a4398a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "63a66e77-b55c-4164-a576-7a5df65c5099",
          "status": "Created",
          "code": 201,
          "responseTime": 8519,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f33431-8e27-46fe-9463-89db6a5eff88",
        "cursor": {
          "ref": "60af160f-2255-4b3b-bc99-da30599924fc",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ec1c626a-3c33-49a8-b534-f8065d0b6539"
        },
        "item": {
          "id": "a2f33431-8e27-46fe-9463-89db6a5eff88",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3bf43a8a-b2cb-4d51-9c40-daf6e3d4ec45",
          "status": "Created",
          "code": 201,
          "responseTime": 8142,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0a1c75-61a2-492c-9645-7cafc5732525",
        "cursor": {
          "ref": "7f84386f-3249-455d-bb1f-390e3173e82e",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "76e63c09-cd5a-43c7-81d9-52d7132808ac"
        },
        "item": {
          "id": "cf0a1c75-61a2-492c-9645-7cafc5732525",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d69ab3d3-6254-4a11-89b7-ab00ea0a49aa",
          "status": "Created",
          "code": 201,
          "responseTime": 8664,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8035096b-f7f3-4fd8-8b69-2f8ffa0b009d",
        "cursor": {
          "ref": "c1b4b6fd-b50c-40e2-aa7b-0adfb16f5b02",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "eac3c231-530a-483f-8436-e393c072640f"
        },
        "item": {
          "id": "8035096b-f7f3-4fd8-8b69-2f8ffa0b009d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c6e86e78-a85c-4781-9099-35472c8268db",
          "status": "Created",
          "code": 201,
          "responseTime": 7805,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-06-26T00:39:15Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-06-26T00:39:15Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "d2417d6b-2676-4387-983e-19c001bef48e",
        "cursor": {
          "ref": "89a650bf-601f-4252-a9e0-1cd891ddfce5",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "5b1d50ce-ae65-41c6-988f-949486e704d3"
        },
        "item": {
          "id": "d2417d6b-2676-4387-983e-19c001bef48e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0f768b2d-a975-4f8e-b517-56b7f708fdc1",
          "status": "Created",
          "code": 201,
          "responseTime": 8261,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237f0f0c-f6e6-42e5-8f8a-feb61e195868",
        "cursor": {
          "ref": "ab6b92dd-5fb6-4b6f-b911-4d35b4295db7",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ce378559-e332-4ba5-8bb8-ac0ebc78f1ba"
        },
        "item": {
          "id": "237f0f0c-f6e6-42e5-8f8a-feb61e195868",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0f1a930f-926d-4ca4-b07b-09e08e2374e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2890d53-be9e-4504-96c9-67d0a9cc4bab",
        "cursor": {
          "ref": "c9fef1cb-53fb-4bfa-9e75-30530077f5d5",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "92d9b178-6a3f-4d82-9c8f-678b45b518e6"
        },
        "item": {
          "id": "c2890d53-be9e-4504-96c9-67d0a9cc4bab",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f42b9aaf-cc0b-41af-8c6e-9e2f9cd1ccec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e795eee-e411-4c69-90ed-18dd1e71d326",
        "cursor": {
          "ref": "63e31d22-85e3-4cbd-906b-f740ec2dc70a",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "07c45b12-1e48-402a-b942-6c97a6a77725"
        },
        "item": {
          "id": "4e795eee-e411-4c69-90ed-18dd1e71d326",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "702d33fd-8b8a-4852-961c-de99394194fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e600a644-a618-46ef-a8c9-c3f5b94c3f56",
        "cursor": {
          "ref": "15b7974f-f309-4541-b65c-aacdc5d35845",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b9cebe8f-35ca-42c2-8754-c10527dba5e6"
        },
        "item": {
          "id": "e600a644-a618-46ef-a8c9-c3f5b94c3f56",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bbf8edf9-963d-499d-93a8-88a74407d636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22cd978-2ff1-407d-b322-7fe26d399c3f",
        "cursor": {
          "ref": "ce62a3af-5111-4cf9-9810-8d14508b8b39",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "73c9a88b-d826-4df4-a2f7-da6d264426ff"
        },
        "item": {
          "id": "a22cd978-2ff1-407d-b322-7fe26d399c3f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e7b81808-5ddb-40a1-9862-ff37714714f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b429450-85a1-444a-81ee-81bfa37a3bf2",
        "cursor": {
          "ref": "4a1e631a-7844-4799-8cdd-1abeabd32160",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "87b78709-286e-45a8-bdcc-b39a59ab8fc2"
        },
        "item": {
          "id": "8b429450-85a1-444a-81ee-81bfa37a3bf2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "81bd3c60-2688-46e1-bd21-4de73be10de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31496d31-799b-4d9d-aefb-2085d68710e1",
        "cursor": {
          "ref": "0b30bb74-9a01-4760-8ef6-33f323e75d0d",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "426c4425-48ee-42da-a02d-570ed5adc645"
        },
        "item": {
          "id": "31496d31-799b-4d9d-aefb-2085d68710e1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "beee4d50-71fe-412a-a2a6-dcdf56c8e8c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0951304-d352-4290-afea-0efb74f57544",
        "cursor": {
          "ref": "ea08eeb4-2831-4bcf-8dac-59c38fc4c0d1",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c426454a-7eb7-4a04-89d9-a7c25f2e118b"
        },
        "item": {
          "id": "c0951304-d352-4290-afea-0efb74f57544",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0bb57a43-b2a0-4bc1-94b1-d93206d52d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c950992e-bc14-45ec-b020-436af2da7793",
        "cursor": {
          "ref": "4393940f-c7c9-4e46-b411-1c75d17cd292",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ed5b6b64-4eae-4863-b769-01a4eb091c7b"
        },
        "item": {
          "id": "c950992e-bc14-45ec-b020-436af2da7793",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9df93afb-137c-439c-a835-6bda613fe49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2776ab-3043-44bb-8741-ba1deadd3041",
        "cursor": {
          "ref": "1ff74188-932a-42f9-9a75-34c0660c42f3",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d2f4b8c6-779c-4412-8e97-554835a55ae8"
        },
        "item": {
          "id": "db2776ab-3043-44bb-8741-ba1deadd3041",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5869f887-7509-402a-8820-689875315429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e2ed55-009c-45ec-bf6b-dff9b1426ddb",
        "cursor": {
          "ref": "1b70a38f-314d-41de-9064-257fd8609c73",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "53cb2818-3f1a-4f37-ace9-adfa8fe48322"
        },
        "item": {
          "id": "c9e2ed55-009c-45ec-bf6b-dff9b1426ddb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9eb9b871-f071-4d71-ac8f-c5a49307b042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18a6383-b882-4d01-b29a-567b16d5f3ba",
        "cursor": {
          "ref": "a9d0d6e1-b561-40e1-b42b-766b0e2a9a41",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "86a8033a-21cb-4503-bfd0-5a1f4da75afb"
        },
        "item": {
          "id": "f18a6383-b882-4d01-b29a-567b16d5f3ba",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5df73e03-9098-4010-929e-fc1c31baba15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4950483-4bb4-4807-9367-7340f14c5331",
        "cursor": {
          "ref": "27605dd3-f997-4ddd-9aa6-6cfb121d4c38",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "80a937b9-5598-4e9c-8091-48196d41550f"
        },
        "item": {
          "id": "e4950483-4bb4-4807-9367-7340f14c5331",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8b1efb4b-a01b-401b-9d24-e514aca34579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6b7dcc-717d-4807-aaa4-9c6cbfdff274",
        "cursor": {
          "ref": "322ca45d-6fb9-4387-8836-fbaaf35c5750",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b46a98a3-664b-4885-9e60-d085a07aafce"
        },
        "item": {
          "id": "0d6b7dcc-717d-4807-aaa4-9c6cbfdff274",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "72cb75bd-b388-428c-b03b-94dbf8d9c8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c96d8b0-56e8-4cea-a97b-e5112fc7289e",
        "cursor": {
          "ref": "64a9f710-3dce-4ef5-a4f2-b9a29e805b71",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b0c99c3b-d3f5-4c14-85ee-057e2147c4a0"
        },
        "item": {
          "id": "7c96d8b0-56e8-4cea-a97b-e5112fc7289e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "94a35104-7a11-4aa8-bf73-6d35d8d0e873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd5ff29-f618-40a1-b19b-9e0188fe7698",
        "cursor": {
          "ref": "169db367-ddaa-46fd-9d5e-6c9384308449",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6930ab8c-c35b-488e-8a79-a791e7c79807"
        },
        "item": {
          "id": "9dd5ff29-f618-40a1-b19b-9e0188fe7698",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d219e4fc-e769-43f3-80b3-e9969b91f597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf41c47-65ab-4d9c-9727-6d89902c0f2e",
        "cursor": {
          "ref": "08bb35c4-ea81-46ec-bf94-58401b5baaf5",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "06c47815-59f3-4c35-8e4b-2fb41cd24596"
        },
        "item": {
          "id": "caf41c47-65ab-4d9c-9727-6d89902c0f2e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6bc71db0-86ec-4f67-aa21-2d51bb9b4697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c31c87a-6530-45d3-8ee8-9dcc31ef6c6b",
        "cursor": {
          "ref": "a1ee87c5-f949-4692-85c2-b553c9eb3ffa",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0eb3f8b5-2982-48dd-bb40-c4349c55df47"
        },
        "item": {
          "id": "8c31c87a-6530-45d3-8ee8-9dcc31ef6c6b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "09be080e-9ddb-4b0a-9bad-c1e3a737d6a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500d087a-9d51-484a-a262-368f006c20d5",
        "cursor": {
          "ref": "5fe25670-3950-4690-b203-2f2a79513cdc",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "22319538-9ab6-4ad5-9054-16a0c8614260"
        },
        "item": {
          "id": "500d087a-9d51-484a-a262-368f006c20d5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7a7ae424-8f2e-4634-81cd-9abbcfb817e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81f5538-b804-467a-8cd2-9f9477ec76d4",
        "cursor": {
          "ref": "49d9460c-803e-4e24-9342-a1b0dcf1eaec",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "eee5dc19-0a1c-40b4-adf6-d99771f4aaba"
        },
        "item": {
          "id": "b81f5538-b804-467a-8cd2-9f9477ec76d4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6d993ef8-3168-438c-aa80-0475282c4be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1036ba12-80ef-4ead-9aa3-12fc1f0ee820",
        "cursor": {
          "ref": "cd40a798-f9cd-4a3c-b73d-7d5946bf22ef",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ea730f47-1c96-45b0-a7c8-1e0b30bddf61"
        },
        "item": {
          "id": "1036ba12-80ef-4ead-9aa3-12fc1f0ee820",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f8fe7490-eeae-4c6c-bdbf-2a8166e49160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b63725-33c8-4a58-9810-2bb40c137d51",
        "cursor": {
          "ref": "d1430841-ee3c-4a6b-baf7-53678947a050",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d4c146b0-dc17-48cf-8d62-5a061dc6840d"
        },
        "item": {
          "id": "d0b63725-33c8-4a58-9810-2bb40c137d51",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8101abd4-15c4-47d6-ab0b-8a67a4b54eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5cadd17-4d23-42d7-9d65-af7b51a4b17b",
        "cursor": {
          "ref": "d5d16af8-fde5-403a-9609-1fc8a1be61a8",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "64d354b7-a658-4e64-ac37-ecf75f1fac4c"
        },
        "item": {
          "id": "c5cadd17-4d23-42d7-9d65-af7b51a4b17b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "873c0bfa-caa1-4a57-ad16-f4b15efffadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89aa820-b8d8-4ca1-88da-c15bae865ffd",
        "cursor": {
          "ref": "2834740a-55c3-4349-ac7d-761878be4398",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8b57323f-6ac6-4dc1-9397-ba055f62237a"
        },
        "item": {
          "id": "c89aa820-b8d8-4ca1-88da-c15bae865ffd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c457d1e6-4136-4818-837f-7e1aec596e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b75b3c9-3257-41f6-9ed8-88df34fcd878",
        "cursor": {
          "ref": "0ce6548a-9c29-4e3b-a39c-17032da2680a",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "56cf8bb4-096c-4bd9-814f-810f74d9fadf"
        },
        "item": {
          "id": "4b75b3c9-3257-41f6-9ed8-88df34fcd878",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "43f028ff-b250-4774-b578-e73c994c3ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58821a68-eede-49f6-8b2e-c73be8478328",
        "cursor": {
          "ref": "128b484d-e0fb-4b94-8dbe-6f798d4468c3",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e47f6696-7b68-4df5-8460-7fabbed23b36"
        },
        "item": {
          "id": "58821a68-eede-49f6-8b2e-c73be8478328",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4dfa3acb-7b9f-4b9d-beab-c375c9cc45ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74564ee9-f01a-472c-9cc2-1166e1df8bcc",
        "cursor": {
          "ref": "59bf87d6-489d-4ac8-b1d0-8543a6fad895",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b693773c-c4f8-4cf0-9a99-8661a66e454d"
        },
        "item": {
          "id": "74564ee9-f01a-472c-9cc2-1166e1df8bcc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3b4ff2a7-fa33-4087-9a4b-5bd2d51b9746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88295cee-9f5d-4d13-bd93-0b7ae05e34cf",
        "cursor": {
          "ref": "2bdf8dc2-e6c1-4589-9b8e-80e25739065e",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5525d118-d58e-41d3-8d34-d2a2d35ffce4"
        },
        "item": {
          "id": "88295cee-9f5d-4d13-bd93-0b7ae05e34cf",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a50cadfe-1f52-445f-b174-0b00c7b29813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895cf221-5e18-488e-8a09-59ea2c002bc7",
        "cursor": {
          "ref": "c5f46ea7-7483-48a4-82f5-83ac4e256200",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "968f2762-69f2-407d-ab06-45328f399ab8"
        },
        "item": {
          "id": "895cf221-5e18-488e-8a09-59ea2c002bc7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e2f4cfe0-736c-405a-bf54-388945503ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660fde0e-f39e-40a2-ac15-1839c20d0c44",
        "cursor": {
          "ref": "c8e1e6fa-2b8d-43ca-9365-3634973b8286",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ffa9ef8f-2532-4d49-b831-5a64fd690642"
        },
        "item": {
          "id": "660fde0e-f39e-40a2-ac15-1839c20d0c44",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c46fc0df-8cb5-48ef-b1fc-cfd65488364b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ab4732-9d63-4d37-a46b-353b3f7e0e0d",
        "cursor": {
          "ref": "ed2b2e02-fba1-43ac-b084-df348f3a3b53",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e912c3b3-e729-4b16-a8ca-c82a40a14a1b"
        },
        "item": {
          "id": "b3ab4732-9d63-4d37-a46b-353b3f7e0e0d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "dc9a1d10-899c-4018-a25d-c3ef16f9b48e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19783afd-6ffe-406d-9061-a5b2a43d2c5c",
        "cursor": {
          "ref": "b99ffe02-b9cc-484e-a035-519d602e0b9b",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "693dfe44-5da1-4d39-b49e-02c39f0c0fb1"
        },
        "item": {
          "id": "19783afd-6ffe-406d-9061-a5b2a43d2c5c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "20e23ed9-6813-4331-8d17-365856df4b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf766b3a-a486-4ad4-a076-2fa6950f030e",
        "cursor": {
          "ref": "fcd80c55-353c-4933-ac8f-785e5d4875c5",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e90ee471-cc89-4dfb-b7bf-ac7c6e9ab7c7"
        },
        "item": {
          "id": "bf766b3a-a486-4ad4-a076-2fa6950f030e",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "cf274af1-57a1-475d-8559-8846f4d0e97d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890c75ed-9285-4e30-b8de-c331293d90f6",
        "cursor": {
          "ref": "7251d819-c4c0-4a43-8915-50d76412b4d6",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d2fceeca-3d26-4064-b602-a810eabf1f70"
        },
        "item": {
          "id": "890c75ed-9285-4e30-b8de-c331293d90f6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "3fee528d-6ee4-4676-b1ae-821ad79bd652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d37360-8137-4a32-b6ae-3e72e45a241f",
        "cursor": {
          "ref": "146ead59-5c75-4a5b-ae75-be865214b48a",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "340df212-87bf-41c1-8dbe-e4656f7e4a58"
        },
        "item": {
          "id": "69d37360-8137-4a32-b6ae-3e72e45a241f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "4aa290f2-0250-4c81-9555-b45ff7223a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365d8e9d-f21d-4bb4-955e-d04454c693b8",
        "cursor": {
          "ref": "1ad66c7c-cf4f-4eef-96ba-354b596b9e10",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "933a5b19-a7c8-4eef-a81f-c014523e0d0e"
        },
        "item": {
          "id": "365d8e9d-f21d-4bb4-955e-d04454c693b8",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "cbca338c-7697-46ec-b501-3470f69bddd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8f088a-128c-4bff-b822-16f54cea122a",
        "cursor": {
          "ref": "58c74aad-06af-49cf-97b7-7b8c228e2bd1",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c8f917b5-8f2e-4330-9c84-c5628b99c83a"
        },
        "item": {
          "id": "5d8f088a-128c-4bff-b822-16f54cea122a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "483d34b9-708f-4195-b566-09793b150568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d471eb8-b56d-49e4-aee0-0075686ab887",
        "cursor": {
          "ref": "ebb26723-d7f3-42a9-8d93-a93945f61f8f",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b5e42801-2e30-40f1-bd3a-9821cd726029"
        },
        "item": {
          "id": "8d471eb8-b56d-49e4-aee0-0075686ab887",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "aa423f1e-c448-4064-9c94-44dda161890a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72acb5b-39ea-4504-98bc-a039e454e2f2",
        "cursor": {
          "ref": "b27c5ddd-52e9-41c8-8874-650e43d05771",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e0636302-e9d0-4bf4-b5be-660f1508c4e0"
        },
        "item": {
          "id": "a72acb5b-39ea-4504-98bc-a039e454e2f2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4d5c41ea-fce8-4395-910b-8bd6c4ccf352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d574ddb0-fb82-40c6-9d59-1159e2d40d42",
        "cursor": {
          "ref": "667c7274-2dde-4528-a3de-d9181b207eb5",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "048dd547-00a0-4752-8235-ac19fe2d8d97"
        },
        "item": {
          "id": "d574ddb0-fb82-40c6-9d59-1159e2d40d42",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7a6b0f6a-15ce-4549-92c6-d8e41c92673c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f98090a-1d32-4be1-8b91-67b87b15d66f",
        "cursor": {
          "ref": "ebff4088-6186-4626-bd91-bc69133446af",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8101d6d8-6564-4977-96df-5b31b66ab365"
        },
        "item": {
          "id": "8f98090a-1d32-4be1-8b91-67b87b15d66f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "21e556b8-4ac9-4877-9468-dc72049b79d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335eb2e1-8f48-4416-9561-13197c75540d",
        "cursor": {
          "ref": "6320e58f-e50a-4a78-a73a-2bf60fdffc38",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "76d1bdb8-a7b8-4d30-a8cc-ec994b75acad"
        },
        "item": {
          "id": "335eb2e1-8f48-4416-9561-13197c75540d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "69951744-2ccd-47ff-8840-367e987b55f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb82faf-442f-4b80-87e3-4e3319f3e873",
        "cursor": {
          "ref": "3110c4c3-f5c4-44a2-8757-714a01b3b87b",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1014e2c2-0f5d-447f-8541-a4a851345126"
        },
        "item": {
          "id": "4fb82faf-442f-4b80-87e3-4e3319f3e873",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e69c2eed-cb9b-4800-b0d4-865ac2a4ef71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39139b8-0f65-4636-9660-93eba27abc80",
        "cursor": {
          "ref": "7041f1d6-b1e0-4c7a-81da-09766a3cb114",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4c9ead24-1e07-4dd2-8d79-398b37a737f0"
        },
        "item": {
          "id": "d39139b8-0f65-4636-9660-93eba27abc80",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "73cec76a-6c0c-4909-8e6e-64a30508ede6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772a1c4b-79d3-4238-9bee-2644a17da149",
        "cursor": {
          "ref": "8ab96acb-534c-49f1-83f1-e0c39d1f9262",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "75a963b7-0a5b-4d17-869b-3adfa6e5ecf1"
        },
        "item": {
          "id": "772a1c4b-79d3-4238-9bee-2644a17da149",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "bb58a278-0fa2-48d6-8905-212c5e02b1a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c957fd-f8c8-430f-b9fc-189008490902",
        "cursor": {
          "ref": "dd3208d3-e1e6-4236-ab6e-328222e0f3bf",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "95f6eef3-807d-4c8e-ba73-623b42deabda"
        },
        "item": {
          "id": "43c957fd-f8c8-430f-b9fc-189008490902",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "294a8f70-fe22-46f3-8b63-75bcec29d117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae744229-64a9-4725-a70f-fb9b3b0fe397",
        "cursor": {
          "ref": "403eac47-7369-49b1-9e8e-0734b55311bd",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ede257df-9a9a-4367-9695-2d56a501a014"
        },
        "item": {
          "id": "ae744229-64a9-4725-a70f-fb9b3b0fe397",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "74951ad9-f0f7-4000-8648-fbb94a9329cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151a8a8b-dece-4ed5-9375-79645ace65a6",
        "cursor": {
          "ref": "352b376d-e8c5-4401-b345-15f9181d551a",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c76dd9ba-ad40-4e4e-8ae0-17730305f533"
        },
        "item": {
          "id": "151a8a8b-dece-4ed5-9375-79645ace65a6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "bd2a533f-3696-4e77-9afa-412a517fdabf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3612d037-0338-473a-9446-15a42d807b85",
        "cursor": {
          "ref": "ea8b9a33-55e6-4b1f-b583-df91fda831cc",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ed7c3352-5e99-4ef1-a2bb-32852810f07f"
        },
        "item": {
          "id": "3612d037-0338-473a-9446-15a42d807b85",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0cb1ce7b-afb8-4cf6-917d-8644137ed5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76b6a22-2f21-4a21-872a-605bdb88467f",
        "cursor": {
          "ref": "df3c3b4f-eb38-4265-a59b-734d85995517",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6e0235d3-aa9a-4ae0-ad95-a72714d81111"
        },
        "item": {
          "id": "c76b6a22-2f21-4a21-872a-605bdb88467f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "489338ba-47d5-4abb-aa01-81cf252f1752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9326e5-4429-4e35-85a9-516fe2ca3d66",
        "cursor": {
          "ref": "4ce4e961-3c72-4d5b-ab52-f41e4ea316d4",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0e964239-a10a-4405-a5b7-fcc04dc78836"
        },
        "item": {
          "id": "1d9326e5-4429-4e35-85a9-516fe2ca3d66",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ea84d276-9c1f-45dd-8434-1dcaabec32da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d745bd-5ec2-4985-b7d1-b846f91f1125",
        "cursor": {
          "ref": "a72048b3-3325-40f2-9c75-4ddb7c0dd9a9",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4975fabc-1f81-4e07-a05e-11247e38f9e1"
        },
        "item": {
          "id": "60d745bd-5ec2-4985-b7d1-b846f91f1125",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f94d1fe5-2c51-47a9-ba51-67d83cf5b4f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e537e3-ac12-4565-a909-2ca761c52b97",
        "cursor": {
          "ref": "ea4dc2fe-3213-4c7e-a43b-b4711c668fc2",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e3e64ca5-fee3-435b-8d9d-ad31a2bd526d"
        },
        "item": {
          "id": "48e537e3-ac12-4565-a909-2ca761c52b97",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6d876851-2f84-4978-b6f8-71e49455aa46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62636194-d366-4511-b73b-5a27b5003ee3",
        "cursor": {
          "ref": "556e91c7-7b23-463b-be4a-2a376df9006f",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1f5faf4c-3495-479a-bde2-ca2444d655b5"
        },
        "item": {
          "id": "62636194-d366-4511-b73b-5a27b5003ee3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4dbc79af-5350-43e7-b7b1-e21f2f1a61ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a9dee4-1c4f-47a3-9a88-8ebd0ad497d2",
        "cursor": {
          "ref": "9b2ac6e5-399d-4732-9fb4-7551958229d8",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0ff733d6-da69-42b8-be26-79a1e57bc38b"
        },
        "item": {
          "id": "62a9dee4-1c4f-47a3-9a88-8ebd0ad497d2",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a1187603-6e25-48a5-845c-b8a95f96e286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0338dfac-7217-433b-ba03-5849eb036bde",
        "cursor": {
          "ref": "90355244-8921-45e3-99ea-dea94775e487",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "85ac5d60-8a48-4b98-8f4b-98cc058c5ce7"
        },
        "item": {
          "id": "0338dfac-7217-433b-ba03-5849eb036bde",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7d6dfad9-604c-48f2-97ca-65abae90ea08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd6a5f5-195e-4c25-89ed-95ac21431395",
        "cursor": {
          "ref": "681b9ee5-d6bf-4f73-b824-1104ce0a53a4",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c6c9128c-675c-424b-b9a2-d01d39d41671"
        },
        "item": {
          "id": "1cd6a5f5-195e-4c25-89ed-95ac21431395",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2e57621b-023f-4f64-87a1-e059084a209b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fcac65d-0057-4a34-9e03-69478af6e267",
        "cursor": {
          "ref": "544eb0a4-7f8e-40f0-960e-80f325f45baa",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "db2bea87-2d31-42ac-adca-9ea89ab954b2"
        },
        "item": {
          "id": "5fcac65d-0057-4a34-9e03-69478af6e267",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7130d7a2-50ed-4682-8303-732a8b888540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5866f2c1-f420-4dcf-8989-9a6170a3682e",
        "cursor": {
          "ref": "ed69e5cb-eb21-40da-807d-b634652b7ff9",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "939b0c2b-3bc9-4748-b3d1-513f46848156"
        },
        "item": {
          "id": "5866f2c1-f420-4dcf-8989-9a6170a3682e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "90d94fd5-32c0-4729-8fb3-c00f389a90c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514c7676-5abd-48dd-8037-dc15a891f856",
        "cursor": {
          "ref": "a682dc61-58fc-4652-b6be-4c9ee260ba49",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "61797f64-43a2-45bb-a82e-b55548d76fd5"
        },
        "item": {
          "id": "514c7676-5abd-48dd-8037-dc15a891f856",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9cc94138-cab8-4703-828b-d717a229ab56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7e1e9e-8115-42fd-826a-171fadb9ef0a",
        "cursor": {
          "ref": "c1d22939-c56f-4317-ac1e-2562747661ef",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "02eb5c05-8ab7-47a5-aa33-f6de4dc7b678"
        },
        "item": {
          "id": "3c7e1e9e-8115-42fd-826a-171fadb9ef0a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1e300cd4-94c0-44af-86f3-a9434eef5cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d16d39-1edd-4e6e-bc9f-d2229e41b949",
        "cursor": {
          "ref": "fc442f15-68c7-46cc-a78b-c2eaf9272bb1",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1002524b-e8c9-4214-9a09-bd3131d6cc26"
        },
        "item": {
          "id": "01d16d39-1edd-4e6e-bc9f-d2229e41b949",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "55ffcc56-bb83-4cd0-812f-efdf8f1eb5c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41cf505-3d95-483b-8fd4-10de0c08753d",
        "cursor": {
          "ref": "10570d03-0815-4653-8175-a0f0ad616949",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "9189f261-4fca-438b-8ab9-e6d9ea1837a6"
        },
        "item": {
          "id": "b41cf505-3d95-483b-8fd4-10de0c08753d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1900ef9e-8f90-4ecf-83a0-e1527674e998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7db78e-7209-45ad-b27f-51d590a0944c",
        "cursor": {
          "ref": "0cd4cf72-5538-4709-9d56-cae503f24287",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "acde3028-5a7e-4057-91b3-5f8117635b81"
        },
        "item": {
          "id": "8b7db78e-7209-45ad-b27f-51d590a0944c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "cfafc3fb-86f4-413b-b167-f1e1309cf2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619a57b4-dc9b-4210-bded-6c328b7d7376",
        "cursor": {
          "ref": "cf56c025-d716-42c9-b2f5-15d03b3013f4",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d8a8e315-69c4-4ec3-8e23-38e3d2e75fa6"
        },
        "item": {
          "id": "619a57b4-dc9b-4210-bded-6c328b7d7376",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9e32f627-1e11-4f11-aefd-5bc3d47336b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b8cb7a-3a35-432f-93ea-b96a49db54d6",
        "cursor": {
          "ref": "ab21ec1d-3a21-4159-88a9-7de1804365f2",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "52dc89d0-51a0-4c14-965a-ffa0ac981605"
        },
        "item": {
          "id": "b9b8cb7a-3a35-432f-93ea-b96a49db54d6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2024c5aa-c993-40b1-a08e-e2b51975711e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8b2f2b-6376-4049-aa52-50db3ec9344b",
        "cursor": {
          "ref": "99224bf9-3ec6-451b-be80-d862bf6911b3",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "1f6b2257-4da2-40fc-bb42-4051667866ee"
        },
        "item": {
          "id": "de8b2f2b-6376-4049-aa52-50db3ec9344b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "066643fc-cfc0-477b-87bd-8f0212436eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f5e9ad-e143-496d-a0b8-c3f1227528cb",
        "cursor": {
          "ref": "cb37a0c4-46dc-4731-aa12-075087c8a6a4",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "00e31320-cc15-46bb-aeba-afb3c1034637"
        },
        "item": {
          "id": "a7f5e9ad-e143-496d-a0b8-c3f1227528cb",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "bef615aa-6f21-4937-a4e1-70d2248c3e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a925be-6065-464b-9865-60d3ce5fe725",
        "cursor": {
          "ref": "9e73c8b7-9cca-414a-bbd5-ea70205a49f7",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1bc949bb-7bed-4f92-9ef1-c678984cda11"
        },
        "item": {
          "id": "a8a925be-6065-464b-9865-60d3ce5fe725",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ae4fb8e9-e8f8-45f0-866d-b69d2b7e9711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecaa7a18-b5de-4c2a-b4b2-27ee4464ea93",
        "cursor": {
          "ref": "7f1addac-bfdf-4e68-847b-159e227f655e",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "77c7bb11-b31b-4b67-acd2-1b9b8cc88166"
        },
        "item": {
          "id": "ecaa7a18-b5de-4c2a-b4b2-27ee4464ea93",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e8dcb4eb-3ff0-40dd-bb77-485a62532075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65986a92-65c3-442e-9cd7-ce72d8852956",
        "cursor": {
          "ref": "f388d962-9998-493b-a794-b8a3f7aa9cd7",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "15f419a6-6c6c-4592-929e-fe6e7cf1fdda"
        },
        "item": {
          "id": "65986a92-65c3-442e-9cd7-ce72d8852956",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "13c31bab-2d30-4e6d-a1a2-d073596c8b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02caa105-47ea-4b30-946b-88faeb9ef41f",
        "cursor": {
          "ref": "92e0d504-094f-4c73-aa27-fd12b5eb93a0",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "bb10dd65-dfda-4824-8ab4-c9f1b3686252"
        },
        "item": {
          "id": "02caa105-47ea-4b30-946b-88faeb9ef41f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "50a94935-c3e9-4e24-a3b5-1f79500a542d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c57b0b2-eca1-4348-b684-4e8c9a6eeb45",
        "cursor": {
          "ref": "6e678f68-88b8-4e0b-9fe7-618f2bae13c2",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "612649f9-4d6f-46e8-9211-5d37fd980019"
        },
        "item": {
          "id": "1c57b0b2-eca1-4348-b684-4e8c9a6eeb45",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0e6284ad-4985-4105-8a18-df40f7c9ea1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0902633d-48be-4b62-a2f8-dde9ce5a264a",
        "cursor": {
          "ref": "ae2c7d96-446c-44a9-894e-5d07df1901dd",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6223e5a4-c1ff-4ab7-bd57-fcb47868b0a4"
        },
        "item": {
          "id": "0902633d-48be-4b62-a2f8-dde9ce5a264a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9575d9e4-f095-4ff7-a38b-1a3a5d9a4d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b21c032-e6bf-4d62-b9ef-64d232f8618c",
        "cursor": {
          "ref": "dcb5b08d-1934-4d50-940e-8f6db051950c",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "78d04c02-172d-4d91-b815-668cebf661fe"
        },
        "item": {
          "id": "2b21c032-e6bf-4d62-b9ef-64d232f8618c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "dc05d136-3189-4dcd-980d-e56b806169d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2ad5a5-8a97-4890-9e9e-7c91cb169806",
        "cursor": {
          "ref": "d77930c5-6eb2-46d5-b55a-048383643638",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4885b930-585e-460f-bc94-9906e7e35fc8"
        },
        "item": {
          "id": "df2ad5a5-8a97-4890-9e9e-7c91cb169806",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "fff64e9c-e0a7-4bc4-9090-c1ff3b7ee2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7e4045-0999-4c77-a545-62b350450ee3",
        "cursor": {
          "ref": "850467b8-b4d5-4f5c-8f37-2f42f3558c28",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "efd36916-1138-4ab5-9099-afed83585f16"
        },
        "item": {
          "id": "ad7e4045-0999-4c77-a545-62b350450ee3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "97119ef7-2e65-4fde-a428-5d24860d9e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065d5103-152d-45e1-ab79-928187dda4e1",
        "cursor": {
          "ref": "137310d5-69bb-4269-9c01-5ee80a997b3b",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "71a708e3-9f49-4918-801e-0be561825422"
        },
        "item": {
          "id": "065d5103-152d-45e1-ab79-928187dda4e1",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "00cdd6c1-f9bd-44b9-83b6-ebd8392c14cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf60679-9847-4681-a078-ec91da39edbd",
        "cursor": {
          "ref": "d19dc684-fccc-41e0-96fe-ea8d88eeb8d5",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "019478af-65f1-44b0-8944-57e259f9b157"
        },
        "item": {
          "id": "bcf60679-9847-4681-a078-ec91da39edbd",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8130a428-7a54-455f-b224-5630c41c99d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5676273-653f-4e88-a18f-2bab494fd3ec",
        "cursor": {
          "ref": "6b4de9cd-380a-41ee-b52a-ae8a2cdc575d",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "82cc03a8-033f-491f-87d5-3c86690e4a5e"
        },
        "item": {
          "id": "e5676273-653f-4e88-a18f-2bab494fd3ec",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0620a564-7fd5-4eb5-8cc3-8f329f31d6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f58401-f10b-425e-820e-1e0896c4f5f8",
        "cursor": {
          "ref": "35a0d667-7996-4bd3-b3bd-5c6b3d03d122",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f8156d22-c103-47a9-96e9-47508d39ed0b"
        },
        "item": {
          "id": "71f58401-f10b-425e-820e-1e0896c4f5f8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "cd53deb3-bb03-485a-938f-852fe3942545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8cf779-f3b8-4486-bcc4-d03068f96bb8",
        "cursor": {
          "ref": "0a272b60-e9f9-43b3-8b7b-1afa1e7bac4b",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ed87b546-e120-4368-9a6d-9753963e4dad"
        },
        "item": {
          "id": "7e8cf779-f3b8-4486-bcc4-d03068f96bb8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b82138d9-8631-4d22-8624-015c42d5775c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26142b9f-4db4-4816-ac7b-84c34871089d",
        "cursor": {
          "ref": "1fc95815-b78d-4950-a84c-a059078b5f65",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7f71dc27-dc44-4226-8677-cf294063f352"
        },
        "item": {
          "id": "26142b9f-4db4-4816-ac7b-84c34871089d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e06b05c4-533b-43f5-915e-02bc905934c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dfde4d2-b9e6-4fe9-ba99-6b89d327f63f",
        "cursor": {
          "ref": "ce0d9f19-c41e-4ddb-a743-532ef88699c4",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d89b9610-5696-4f50-8e98-3f7ff6fc7f92"
        },
        "item": {
          "id": "6dfde4d2-b9e6-4fe9-ba99-6b89d327f63f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "69e96cb0-8000-48a3-8aff-4670c59c8450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5d3219-feac-495f-991b-528e0d8cdf06",
        "cursor": {
          "ref": "536b94df-2b92-443d-806a-5bc86518ec0d",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ae512f1f-619d-4077-9636-2f987b1134f0"
        },
        "item": {
          "id": "2c5d3219-feac-495f-991b-528e0d8cdf06",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e9710cc6-1fb9-4113-8870-71b7c869141b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3967b917-ed37-47bf-a848-ee9b0231eb34",
        "cursor": {
          "ref": "bf31b0db-c482-4dc8-92a6-8b42f232f2c5",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7548fb21-a9f2-494f-8f0c-f59cd542320c"
        },
        "item": {
          "id": "3967b917-ed37-47bf-a848-ee9b0231eb34",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a8a62d59-12e4-42a3-af17-61ce27e03b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07f103e-646a-47ac-a9fc-fa9083f6727f",
        "cursor": {
          "ref": "e02c8e07-3a59-4cf7-814b-0cf3b3616b6b",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "84837819-c304-47d4-90d5-4ba9a18d6d87"
        },
        "item": {
          "id": "b07f103e-646a-47ac-a9fc-fa9083f6727f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1a172223-1e8f-4977-b798-34b9d0a364a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2318a0ef-3385-41d0-9d8a-8ff590868552",
        "cursor": {
          "ref": "bbda8f27-f51b-494a-ac75-9e6e93cba273",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ec57ba2c-a711-4359-8e19-c6db3ae21771"
        },
        "item": {
          "id": "2318a0ef-3385-41d0-9d8a-8ff590868552",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "19913bb2-dc36-4ce8-a15b-4f39453b1073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97097470-5f07-48eb-8920-4eac137d8cd6",
        "cursor": {
          "ref": "8b734cb3-4945-496a-a601-e95999fa514e",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e0512b7c-6410-4e7b-bcba-f11b86c4945b"
        },
        "item": {
          "id": "97097470-5f07-48eb-8920-4eac137d8cd6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2efdb21e-54af-44e4-891f-93bac521ef43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70c0edb-d819-43f9-b9d5-34a5e310fe02",
        "cursor": {
          "ref": "4524b803-7318-4dea-b0ab-02bffd73d282",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "40e50557-47fc-448c-90cf-5ceacb5549e5"
        },
        "item": {
          "id": "e70c0edb-d819-43f9-b9d5-34a5e310fe02",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d7b32b7c-fecc-42c8-9096-f4bd8dc12421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f99a00-93d9-4df4-a89a-5f535dd78ae8",
        "cursor": {
          "ref": "5e7cf655-87c5-4acf-a241-44784b9215b9",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9ba5fe28-eda2-4a68-b814-eea3c621c022"
        },
        "item": {
          "id": "60f99a00-93d9-4df4-a89a-5f535dd78ae8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "243ba358-d161-42bd-841b-1bd4f38a41d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a0ac2d-470e-4155-8f82-61b1a71ca127",
        "cursor": {
          "ref": "7e88e624-47d9-4b36-90a0-1106484e5e62",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a348e99d-6e4e-44b3-9c19-9974d18413fb"
        },
        "item": {
          "id": "b5a0ac2d-470e-4155-8f82-61b1a71ca127",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3575bec1-8405-4440-8b96-dc5b1d73f279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12270f3-1a3d-47d7-950f-8cfb95317eed",
        "cursor": {
          "ref": "706e5709-cb9d-42cf-8224-d1575e601c0f",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7f6b80db-7dc3-4c12-837d-16d58d1b85a8"
        },
        "item": {
          "id": "b12270f3-1a3d-47d7-950f-8cfb95317eed",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3f1f4cb1-d73b-48a8-9bf9-bcfc8708b89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aaf2579-a386-4c86-b4e7-978b9da563ba",
        "cursor": {
          "ref": "e2ba9cd9-6e09-4a15-99fc-d399583b2bd2",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d42a0342-71b0-4695-a888-1a8c8e42cde3"
        },
        "item": {
          "id": "5aaf2579-a386-4c86-b4e7-978b9da563ba",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4429a5e6-da78-439f-b6e1-139666f6dfe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bdd75e-8c3a-4284-95f7-fcfc4a1c9392",
        "cursor": {
          "ref": "cd30b84f-3171-47c7-b84f-938dfc320567",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7daa9cb5-1d9b-47d0-a9f6-1d8ab0e24398"
        },
        "item": {
          "id": "72bdd75e-8c3a-4284-95f7-fcfc4a1c9392",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f7af02c7-231e-4227-8665-605ae1aac888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbf6bf0-a488-425d-a805-df7fb296cde9",
        "cursor": {
          "ref": "bf30ee70-7013-405e-a382-c7b34da1ee38",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "685254ce-3704-458e-ab2f-5c937aecf3e2"
        },
        "item": {
          "id": "9cbf6bf0-a488-425d-a805-df7fb296cde9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7973e0a9-2425-4b41-a83e-c1dfa0f16fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0713fb84-051e-4c60-a7a5-09f33ca54283",
        "cursor": {
          "ref": "bdd5a2d1-944b-4a87-ac89-23ea2b3bece2",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7dbeef4e-5566-4fd8-81d5-fa4f5896b759"
        },
        "item": {
          "id": "0713fb84-051e-4c60-a7a5-09f33ca54283",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c60082d7-89de-44b8-93ae-41c15cd93a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c958f7d6-1b5f-4e26-ab4a-ebe0598d8be2",
        "cursor": {
          "ref": "b631ebb5-b312-4438-95e0-b096f2b6c08b",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5e5b47a0-f899-46e8-94fc-1b296b385d99"
        },
        "item": {
          "id": "c958f7d6-1b5f-4e26-ab4a-ebe0598d8be2",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0aa4ff58-c72c-46ce-bfed-8adc68880312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306b337a-abbd-4b98-8de4-9357e0076929",
        "cursor": {
          "ref": "49332666-ec2c-447b-bd5c-eda3058f70ae",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ffa149e5-5c4e-40a9-bf5c-43ed6c66291d"
        },
        "item": {
          "id": "306b337a-abbd-4b98-8de4-9357e0076929",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "bf0c03c1-dba8-4dd7-a64e-b9bd7b0f3e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19061c51-e376-4bd8-8a8c-b05e4f11de6f",
        "cursor": {
          "ref": "bfe2da7a-1324-42aa-ac4f-5ad9f0ba80b1",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d86b10e8-80bf-48ea-a238-93ba3fa5dbed"
        },
        "item": {
          "id": "19061c51-e376-4bd8-8a8c-b05e4f11de6f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8007ac2b-2eb1-430e-9561-c543d3beb577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dee8bb1-3e34-489e-887b-952fdbeec700",
        "cursor": {
          "ref": "f69f4beb-5173-479f-b10c-8892130ead6e",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "4e3c7864-4765-4525-b687-f7fe15154795"
        },
        "item": {
          "id": "0dee8bb1-3e34-489e-887b-952fdbeec700",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "cc90ddd3-b32c-4f99-875f-30d6875222b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78fead8c-8550-4d76-aed3-6b5f5fbdd9c4",
        "cursor": {
          "ref": "553feca3-bc72-40bc-9e23-b061bbeb5d24",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "45ef781f-02f2-4c13-97a7-c739d805fdf1"
        },
        "item": {
          "id": "78fead8c-8550-4d76-aed3-6b5f5fbdd9c4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b249848f-be99-473a-8a47-f72707ff498f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d689ce-dc7e-4669-9761-14209bde5814",
        "cursor": {
          "ref": "02179e13-9735-4d44-a555-5f53224f9397",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d09843c0-f7a9-4aa9-9a09-614cd7412a20"
        },
        "item": {
          "id": "f0d689ce-dc7e-4669-9761-14209bde5814",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ba224b07-fb95-42ef-8d1c-721999e87a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e78acda-ef12-47e7-a5c8-b91426290b39",
        "cursor": {
          "ref": "4268a4b9-61fa-4976-b109-6a0c0bad82bb",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1ff9a619-6d96-4d5b-8d03-d62425e24254"
        },
        "item": {
          "id": "8e78acda-ef12-47e7-a5c8-b91426290b39",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "cfa71464-dda7-4657-88da-c478fcd7ee50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9850410-e880-4351-aeb1-1d730dc2d592",
        "cursor": {
          "ref": "1551d606-c201-4026-846f-ce192670e180",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e9b35bab-abc0-4911-96ec-594481ec3ef9"
        },
        "item": {
          "id": "f9850410-e880-4351-aeb1-1d730dc2d592",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "907faa12-3ae8-4d69-a154-db46b30cbe72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193db90c-93cb-479b-830c-5e6c5c07ee6f",
        "cursor": {
          "ref": "3a6de181-507b-48b3-b33d-689607925ca1",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c95bca39-43b5-4164-8833-e5d500280204"
        },
        "item": {
          "id": "193db90c-93cb-479b-830c-5e6c5c07ee6f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3037bf18-67cc-470d-aebc-f30c005cd430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdaf215b-44a9-4c94-a83f-c9e5b4aa957e",
        "cursor": {
          "ref": "d91e759b-c520-46a0-ad71-6a5be097979c",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "938eda90-4b17-49b7-a726-3ac6af410504"
        },
        "item": {
          "id": "cdaf215b-44a9-4c94-a83f-c9e5b4aa957e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "05fae332-6634-4d32-82d2-dba19249a6b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0ccb4a-adcd-4958-9b42-9267a8107652",
        "cursor": {
          "ref": "aa4ebde6-f3b3-440e-b97d-771517026caa",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "938a4900-1a95-4b82-9a73-932b70f7780a"
        },
        "item": {
          "id": "1c0ccb4a-adcd-4958-9b42-9267a8107652",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8f862a09-9b31-4eaf-91e4-27365ce1a1e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ad856f-7b8d-47d9-85c0-378cbf67be4b",
        "cursor": {
          "ref": "0b7473c3-635a-4143-80d4-986ebac849e8",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e52e175e-c5ce-497a-aae6-b72ee5959d97"
        },
        "item": {
          "id": "31ad856f-7b8d-47d9-85c0-378cbf67be4b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a0a9b686-c935-45ae-b268-aaa0b51ab67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c849fe-8579-4ae7-b1df-b2f0047b04c4",
        "cursor": {
          "ref": "f4bc693d-838b-45c5-9dd2-2fb1b5ac8826",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f1ace3d9-73c3-4b46-acf1-76c68a241c73"
        },
        "item": {
          "id": "65c849fe-8579-4ae7-b1df-b2f0047b04c4",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7048b27a-e2b2-4ff8-91df-0548e2a3e4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb4fa5f-5661-454c-a461-31589c232f56",
        "cursor": {
          "ref": "27c68ff9-35bb-474f-847a-fc939587b6c4",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2a33668c-4ee9-441c-bba5-8b50a2213812"
        },
        "item": {
          "id": "afb4fa5f-5661-454c-a461-31589c232f56",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "02c8f487-da0e-405e-8476-083db2c1f641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80fd9595-543f-40e9-b173-aa8e8ad8fcc4",
        "cursor": {
          "ref": "88fb8281-fbd7-47e5-a12d-edd00eaceafa",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "aa9ea331-d44e-4707-83f7-d9f0072a0ac0"
        },
        "item": {
          "id": "80fd9595-543f-40e9-b173-aa8e8ad8fcc4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "09912dd4-28b2-4a9e-9e1e-022565422b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b550ecb1-ed58-49f3-ae87-f2a672acbb13",
        "cursor": {
          "ref": "8fd50abe-e20d-4d14-933f-504246147243",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "eab068dd-bfbd-47ec-9097-1ba1bc19220d"
        },
        "item": {
          "id": "b550ecb1-ed58-49f3-ae87-f2a672acbb13",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6e93606a-6489-409c-9d96-ec23b8003104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653fc25e-982d-48ae-8cf1-35d8df9727ea",
        "cursor": {
          "ref": "c398c128-076b-4c54-af3b-7b10095fd330",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "837b7429-08c7-469a-8f9b-cae6a345fdad"
        },
        "item": {
          "id": "653fc25e-982d-48ae-8cf1-35d8df9727ea",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "777e3536-b0a9-4dfa-9e16-14827f4f9472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cffb2bec-6750-45f7-b871-a998c6474d28",
        "cursor": {
          "ref": "dd743952-c631-4e9d-8e0b-d4c66a776c4a",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6e2e31fe-31cd-4a33-903e-03f3556d0759"
        },
        "item": {
          "id": "cffb2bec-6750-45f7-b871-a998c6474d28",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "47d0d197-12c4-4d69-869a-7b00d0ef6c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac5a875-e112-4a62-991e-09cb719dc08b",
        "cursor": {
          "ref": "de6a25f3-f12b-4bf9-ab6d-4235473914af",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "dfe3ed6e-79ca-4a77-8106-fa80fadaaed7"
        },
        "item": {
          "id": "1ac5a875-e112-4a62-991e-09cb719dc08b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a7fbfada-d640-4986-ba90-ec146872e37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0cbc590-2b79-4346-99bc-b0a6dca3727a",
        "cursor": {
          "ref": "13574e26-41d3-4d8a-ba68-967220fb152c",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6bdbcbab-aa1b-46b4-b77c-b420ccd687c0"
        },
        "item": {
          "id": "a0cbc590-2b79-4346-99bc-b0a6dca3727a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "28b19539-bbcc-4125-8c36-6b81ead00ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be69b273-3bc3-41bf-831d-8a3c2ef3e50c",
        "cursor": {
          "ref": "2f75df79-d41f-4462-ad2f-c5652110b2cd",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f9ae769d-36a2-4c11-85e3-b7249ba6dc76"
        },
        "item": {
          "id": "be69b273-3bc3-41bf-831d-8a3c2ef3e50c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9c4c1740-befd-44ae-8ecd-b2784542c7a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d94acd5-148a-4bcf-b155-0a054eeb385c",
        "cursor": {
          "ref": "89252db6-0c0d-44b8-8f04-ec56adc940fc",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7c2851ed-3ea8-416b-b419-f1f7f53799b4"
        },
        "item": {
          "id": "4d94acd5-148a-4bcf-b155-0a054eeb385c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1ca748fd-2df8-4ec4-806a-3a5e7538cad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe30a8da-24d7-4033-9191-a640a018c811",
        "cursor": {
          "ref": "6b56a367-f250-4164-b6f8-db17571675fc",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "81a6005f-d913-4724-94db-be60ddfab950"
        },
        "item": {
          "id": "fe30a8da-24d7-4033-9191-a640a018c811",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "41ade7fc-32da-4951-a5c9-720e02888723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b220d32-b11d-43a0-a2a6-1e12a4816e1a",
        "cursor": {
          "ref": "0c3244e1-4117-4a34-a1c8-cfc0531afb19",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "32eb0f70-3d9f-41ab-9c37-12cc2f93a62f"
        },
        "item": {
          "id": "5b220d32-b11d-43a0-a2a6-1e12a4816e1a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7e6e4177-aa6b-43e2-83cd-7beb66dab723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290d1b60-0e5f-43b1-9ba9-0d9544b56f9c",
        "cursor": {
          "ref": "c9e98382-acdb-4216-af51-0ce9dccbad05",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "12157452-c92d-4b96-811c-0be5287217fb"
        },
        "item": {
          "id": "290d1b60-0e5f-43b1-9ba9-0d9544b56f9c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "bcf2316f-a0da-4e8d-8ed3-071863970b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe5af58-e8de-41f6-a5c7-7c6cd3c9b0e3",
        "cursor": {
          "ref": "54b843ca-ff05-4cce-a0a8-a3879dc53fef",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e667608e-0768-49b3-92e1-eb5c6a966748"
        },
        "item": {
          "id": "cfe5af58-e8de-41f6-a5c7-7c6cd3c9b0e3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "96c499cb-1476-492b-a52b-ce53a4e394e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be4fa66-cd2d-4dbb-a95b-7fb0e11ebb97",
        "cursor": {
          "ref": "7f041d9b-315e-4377-b8fa-61d9b70df8de",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3526cb04-4cc3-4f26-8f77-c24aeba2a30c"
        },
        "item": {
          "id": "4be4fa66-cd2d-4dbb-a95b-7fb0e11ebb97",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e2a7a737-1960-49b5-afe3-e9f6126ed78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28235aac-8bd6-42e3-9168-5bbe788dddba",
        "cursor": {
          "ref": "1c6759fb-41f4-4177-9f25-2e539396b827",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "03d740cd-9a52-47a5-8274-62a5b6c24f17"
        },
        "item": {
          "id": "28235aac-8bd6-42e3-9168-5bbe788dddba",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d97aa9ab-7c5e-4d7c-b531-98e4e27c36ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1db221a-d9bd-4ea4-b612-7ae1ca03b31c",
        "cursor": {
          "ref": "76783ecd-c7de-40ad-9825-f7d3be54b169",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "74735d99-1e50-4e91-8702-3bdd2a5cb05c"
        },
        "item": {
          "id": "a1db221a-d9bd-4ea4-b612-7ae1ca03b31c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "cbeea935-0b74-47e8-bf67-4cbe8f3ba950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c966181-842d-4f1c-8022-4bc9cdcaa6bb",
        "cursor": {
          "ref": "f93abc8b-7f5e-4d46-91ec-d62f35d18495",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "80eed86e-29f1-407d-9153-edd4628bafb5"
        },
        "item": {
          "id": "7c966181-842d-4f1c-8022-4bc9cdcaa6bb",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1e106a9c-790a-45e4-a11a-95fa6d7dbc5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5462c6-fb96-4728-9ca0-caa57294207b",
        "cursor": {
          "ref": "019fe9d4-fb1d-4214-a819-1790114b1341",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "71f5cd83-5308-4b62-bfed-62e16da7412e"
        },
        "item": {
          "id": "ae5462c6-fb96-4728-9ca0-caa57294207b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4ceac003-e362-4b16-b2ff-93ba52f2915f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f094aabf-604b-4559-90ee-e5523ca4cffc",
        "cursor": {
          "ref": "05f1ae76-6b26-4005-80b1-b9d720124a03",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e704efc3-3ae9-4250-870e-bb6060532080"
        },
        "item": {
          "id": "f094aabf-604b-4559-90ee-e5523ca4cffc",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "72c412b9-0159-4712-9dae-e8d67780da54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7c810d-5ef5-4588-8908-fdb6b96f3fe4",
        "cursor": {
          "ref": "5c68b9a4-32ba-4a50-9358-3043793a4256",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "df1b09c3-1ca9-482f-91cb-a8966a0b8671"
        },
        "item": {
          "id": "bf7c810d-5ef5-4588-8908-fdb6b96f3fe4",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e968811b-b23d-4e28-9513-9afc58cb2711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c300140-9522-4b9e-8e49-ac5f2509d486",
        "cursor": {
          "ref": "057e041b-af24-4436-b6f7-ceb61fa18958",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "73d1b02d-a790-43ba-82ef-b121f3c8bf36"
        },
        "item": {
          "id": "6c300140-9522-4b9e-8e49-ac5f2509d486",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6aa13b38-386e-43db-b39b-e87490713f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f017955-1cb3-4324-ba9d-f3758bbf3cb7",
        "cursor": {
          "ref": "076d1cb0-5ee1-4294-9ae1-f60de819ef0f",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "afce7de6-0a0d-4d08-9d85-df6521259812"
        },
        "item": {
          "id": "1f017955-1cb3-4324-ba9d-f3758bbf3cb7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1fb3cc54-c544-4101-b9a1-1c69c17518f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be108264-00bf-44ff-b86d-e203550cd10f",
        "cursor": {
          "ref": "625b099a-9758-4b17-8aa0-6614fa66a355",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0027b26b-a628-4ab7-966a-5e7402460460"
        },
        "item": {
          "id": "be108264-00bf-44ff-b86d-e203550cd10f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "538bb642-1f67-4cf9-99f0-8ae9c325490c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce7540e-44f5-42a1-b0df-e168cd2e8315",
        "cursor": {
          "ref": "a5234c0d-b857-491e-8d08-8f3902de4cf2",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "85090d42-f8c0-487a-8db5-708bf26e55b4"
        },
        "item": {
          "id": "dce7540e-44f5-42a1-b0df-e168cd2e8315",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2001300e-c7ed-4b7c-96f8-72368c1c8215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ebb545a-6cf8-47cd-9c7d-40dc97395192",
        "cursor": {
          "ref": "fde68d8d-3032-404f-969c-4d6868be60cf",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6e99e81d-247c-4d1c-8547-79c198c8cff1"
        },
        "item": {
          "id": "4ebb545a-6cf8-47cd-9c7d-40dc97395192",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "db793be8-ff6e-4362-b004-cfb296d4cdf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf347ebb-3f83-431e-b9e9-36df119788a3",
        "cursor": {
          "ref": "29477983-9579-42f7-8b91-96e634273016",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "edd9a4e2-2ce6-4874-ae4c-31bed11f62d9"
        },
        "item": {
          "id": "bf347ebb-3f83-431e-b9e9-36df119788a3",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b05f8179-5d63-4287-98ef-3fbeaa82fd66",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e9321d-7d40-4cfb-a860-d48425743dc6",
        "cursor": {
          "ref": "4f92100d-6b77-43aa-942c-dc5ebb8b3fdc",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "cc2c285f-673e-4bc4-b61d-566b1c21e2d5"
        },
        "item": {
          "id": "c6e9321d-7d40-4cfb-a860-d48425743dc6",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8355ba57-4008-4869-b96a-5a8235f53f58",
          "status": "OK",
          "code": 200,
          "responseTime": 2280,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2df012-a182-4465-a4b2-72148746902a",
        "cursor": {
          "ref": "c5399439-1f22-41d8-8d80-f7b7d2043076",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "71d841cf-75d1-4370-82d9-7a55bc32d4b5"
        },
        "item": {
          "id": "9e2df012-a182-4465-a4b2-72148746902a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e3ac9da3-c7b4-4b41-8576-038642034af2",
          "status": "OK",
          "code": 200,
          "responseTime": 2836,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8563d4df-d4da-418d-b0d4-e97827c035ba",
        "cursor": {
          "ref": "2da9882e-b603-48ec-8959-0df02902bc15",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bdc66c9d-eb78-4c1e-9930-c885b9e90dd3"
        },
        "item": {
          "id": "8563d4df-d4da-418d-b0d4-e97827c035ba",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "82e325bd-f450-496c-958a-ad21edc55587",
          "status": "OK",
          "code": 200,
          "responseTime": 2351,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f7c46d-8a09-4a67-a78c-1a4754352ccb",
        "cursor": {
          "ref": "1b10538d-513e-47e0-8cb8-cf1eeac2ee8c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5116370b-666e-4a10-9138-35eacbad1d17"
        },
        "item": {
          "id": "e4f7c46d-8a09-4a67-a78c-1a4754352ccb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "275e0221-a335-408d-94c0-5f2b60b5c997",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f7c46d-8a09-4a67-a78c-1a4754352ccb",
        "cursor": {
          "ref": "1b10538d-513e-47e0-8cb8-cf1eeac2ee8c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5116370b-666e-4a10-9138-35eacbad1d17"
        },
        "item": {
          "id": "e4f7c46d-8a09-4a67-a78c-1a4754352ccb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "275e0221-a335-408d-94c0-5f2b60b5c997",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b19db4-cace-4b7a-9606-57f922eb133e",
        "cursor": {
          "ref": "f8a5465f-1d77-41ef-8113-ea615913e271",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "dd470cd3-483b-4083-8e53-387a3b327af5"
        },
        "item": {
          "id": "09b19db4-cace-4b7a-9606-57f922eb133e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6d48d6e0-708e-4af0-ac17-619d0b467397",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8310565-3018-46a7-b9d4-65d5e8c81f09",
        "cursor": {
          "ref": "bb114d17-9ecf-4672-8441-1e0d1591be85",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c35cc5e4-3786-4c57-bd01-3aa05380fddf"
        },
        "item": {
          "id": "b8310565-3018-46a7-b9d4-65d5e8c81f09",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3b3caf49-886e-4b05-b8e5-393e633b8de0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}