{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7ad91101-d3ea-4679-baa2-d7535fdff133",
        "name": "Clear Cache",
        "item": [
          {
            "id": "204e697d-a8c2-4264-aaaa-01aec1baa99c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "76d2bf0b-0837-46cd-b276-302f7aabfb70",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b8482b76-9575-4b3e-8d22-5088516f7e85"
                }
              }
            ]
          },
          {
            "id": "6a7a590a-d6d8-42e7-b461-5324e0432604",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2a2c608c-e065-4f88-a7ef-15eee18f36e2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "01518441-8e7b-44ac-a3a9-2240fc18a205"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "74fe1dc9-2d03-4cf1-ad8d-14ddb5395010",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4859366f-cf81-43a5-9ff5-efd14d00a660",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4ab09ef6-7aa7-404f-ad71-5b7472a8514b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea9d454f-4808-48ac-ae2c-92dd79c443f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "24b5018b-b04a-4d7a-ba25-80b8c2094f72"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "17fcabbc-bff0-4c22-b48f-3273fd2ff3fd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b729877f-95e8-4a28-9d2a-94ff8099e138"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c8c8af77-5d24-495b-9b48-2723207fb67f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "38861c09-0264-46e4-b7aa-d20f28ccf1c7"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c9b6bcd3-07f8-4678-89d7-bb06398cbeb2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "cb596f9b-2266-4673-a288-8fa828e146d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "841e5f32-ea6f-42ed-9744-645bb8084229",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "878d1d4b-a90d-417a-aff2-6d346526266e"
            }
          }
        ]
      },
      {
        "id": "fa74dbf2-8aa8-487c-bbc2-4eb5731ce45a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "72b782e6-b749-4faa-a0d4-be223f00410c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c8a61ed8-8586-4b1d-90c6-7438320c3484",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "91cc806a-005f-4859-8f26-57bccf67aef3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dcce035-9e00-4320-bd13-001b3454d428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a96f1308-ddf0-4033-a241-ae659e917530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5297c424-4fb5-4e0a-be8d-2c89540f0de8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb5d1c4-801e-429c-9b50-d1761cc740c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "001cc514-eda2-44ba-bc51-280ee5f58612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0c4135-103f-4367-8124-50b50ca36602",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49e0c41-2677-4b12-8d8e-e56a200e259a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c5ed25e3-3b72-421d-b98f-b2c720722d52"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d6507869-2b00-4bfc-8a9d-5f306f6b1b7b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "18a0e0de-5b2c-407f-8a51-d6ffdaca8663",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "031e4488-572f-4656-905d-9b9f8cc6e5a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5ac64d9-09a9-4262-a4b5-9cd14de418d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb21cda-df3d-42d8-9c86-6cf1aa848e9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3587414c-715f-41e2-bce8-bcc06f268469"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b2f9dfbe-5a70-4193-8ca8-e34224c92cdb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6b8a02d1-efd4-41d4-beeb-bb81652a7aa0",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "19cadacc-71fb-47f4-87ea-790a8bf2a675",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ab5481f0-23cb-41ec-ac33-f907c249f91b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "613b6625-f95e-40cf-956f-d4a14cdf997b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7f471ace-13dd-40e0-a24d-e64b59aaf3f5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2f6c48e7-7681-44ab-aa0f-61e873c874d9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43054141-c086-4b33-bf86-44251e101505"
            }
          }
        ]
      },
      {
        "id": "575124e4-7e7c-4e47-b469-8449b8b2d4aa",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6998024c-ad35-47a9-a492-1aa79c8baab2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "03d9ce66-1cbf-4cda-a625-f5f63a5f46dd",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "bb67fb6b-37f8-4f56-ac38-b6d437772cef",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c970e57-f657-44a2-909b-f89e276e3f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "447d8f6d-d180-46d3-a9e1-7c026a777ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52fc0ca5-2495-4f8c-ae38-e5b46428d881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52f8b981-fe84-43e6-bb37-51ed44cb6f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19bd875f-02de-46e9-9a12-2b0a37e80bb5",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d5c11d-f80a-4b2e-b183-04e47812688c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce673e5d-1255-42cc-baf1-eb661289a3a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b983ff6b-7c4e-4f89-804b-89351f3b8dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9df96d5f-ee28-427e-b47f-1f9c83f928b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b457e7-3bb8-48ee-997f-0e7b1c618cab",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82213642-5269-4a3c-affb-9bd43adac33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a25d634-44db-407f-9b23-2fa4cc9ffb90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba00cf81-9b2a-477b-9a36-7acdeef6723a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a0adb13-d699-4138-8e55-c836e55439c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5176b1aa-535c-4979-be83-9ad7fa4238f1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9e454a-05a3-4a6f-ad61-9cd26a864886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb9405ef-734d-4a70-be5c-bdc718680c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a00b1e5-a200-4589-a9af-ba2caac4b532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d401202d-3c49-4376-94d7-b9decf6fb614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52012dd-9511-4e9c-b2ab-bfda0854a4ba",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a383ffc1-be15-4cb2-94a2-228e4699da0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b10b4fe4-a69f-4028-bd30-7acff32082ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81333d0-e642-48af-ac0f-ecd6052a03d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b9e7033-0206-4152-9580-d82c323a07c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6f78cb-3c1f-4356-975d-0bab67f1b106",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1bcc8df-52de-4ec4-a65c-1124a25108bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29df4a46-e8cd-4b8c-aabb-f572cb2e87ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e2f115-d87c-4ea4-8dbc-30dd025585ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89afe641-5240-4de5-b114-405f760053b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30ff9eb-ce7b-421b-9714-bbff56e6b4e7",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ebf137-ac1d-4ef1-9452-6c3cbad7fa0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a37f16f1-49ae-412b-a543-b6fcab45dfe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb3b73e-cae1-49e4-b54c-68bccc237f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bd8de75-2f32-47bd-ae08-14643d1f3f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c916e9b0-6226-4f54-ad98-af89c8970b7a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0dd7b6-ea6f-4d88-95d7-abbcd51432ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e724696-2cf5-4884-b7d9-ed3f13e6da07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f07dc061-fd35-4e0c-bcad-d45a61e41c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9290f71-f451-4ceb-954d-4e237647d076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9404a59a-e92f-4a21-ae00-1f2b818077df",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7010bfe7-6501-420d-bb8f-2fed303650ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0052c108-6e6b-4008-915b-0c13c9927ca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5ca89f-9f03-4843-979d-7b41867e72f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b45a698-91de-4adc-a1a2-2b461b3d833d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eadd36c9-3d50-47be-96ce-582f291b0607",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f406132-3637-48b4-8e12-9c5c3cdca746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90df289b-0f19-4bd9-9b43-c8f15bb042cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49bcebd2-7613-48a6-83f2-f20df4f5fc46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1aac3d0-9fd4-4cbf-8e0d-2fcccb4615eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee01846-db8d-4b2e-bc98-09ec343b5f05",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f872c9-7203-4f55-ae5b-f8cb9f850fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af06fb39-0204-4f2d-9c09-0d9860886067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08c67a1-a504-4388-8649-c3b0d55c941b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "607eac27-c94f-4c1a-9473-411a9d5ca136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62d5087-0e8c-474c-9b83-0aa41806be4e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c5f431-64cc-44c5-85f8-95afa2af43d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "434f73ee-ac9e-4ab4-8856-1f4eaea1b270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a83019-6c02-4fd2-b75e-5fccf4425491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17b81902-50e8-47df-9138-20bbdd165a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d0bbd73-d371-4ae7-a0d2-7f44a84083e0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "024e3983-654f-4600-a87c-6eff0e938c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a595e58-6ae0-40f0-bf0b-91e0be9e2aae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563f4e42-76e8-4a22-9dc2-11a21b5b1af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82f9f381-1a86-4f41-8ef5-4d5105d0293c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce644cc9-1b63-495a-bfc1-114cb373826c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4f47a8-0ca3-400a-9617-744c3139e30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f19485-4ccc-41f5-98b7-0f2dd74f92d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d08be8e-ded0-439a-b025-93bd3c7abaef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "819efcfc-1074-4811-9e66-453cec1d9f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5541d6bb-dd8b-4f31-9d66-86c97026badc",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "366f6e1d-3780-4933-946d-5e6cd78aaf00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ef943a7-8140-411c-89ba-a7985bd776f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3554cc23-2d11-46c3-9ff6-4d76dcc27a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97ffa5d1-f9ff-4401-bf15-15c231630d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f26ce4-805b-4e8b-b954-c136e24bc1d2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b581a13b-611d-4e61-bb83-1f0fbb197e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98fe825e-f643-4843-ba65-afd6a1dc75c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aea3aa3-4c8b-4cc3-bd1c-64fa4680a47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22460ec4-4e97-4f21-9ea6-6d07ddaa8766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a83108-c35d-4f29-9482-0f437d634509",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9592f4d9-6cbd-48f3-9396-4d7766415a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ec7df19-3f21-435b-aee7-045d87062bd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da4b8fd-945a-49a8-b05d-18be71d49063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0afc63f-08a4-46a3-8cc2-fef45dcc43c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22748a36-3be3-4bdb-a487-7a749b3a77a8",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd453d1-fdee-48aa-a740-5e19e8935ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "439912b0-1a65-4126-a2fc-b0bbe1390af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e425ae5-1c80-4002-809f-6fbf65fcbbd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "11ccc35e-44df-4937-8d9a-3479acb7740c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8509ea54-2a81-4838-a03c-67662ef04cc5",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdcb01ca-9fa2-4a12-8114-ca3914c037e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f61ef284-32b0-49eb-abaa-de534365bede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05dc4d1-19e8-4506-873a-faf399319f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a93e137-857c-46d4-b263-11af8ddd02c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24cc755c-3663-4e68-a057-101217398c72",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d53444b-cb8f-4d90-93df-ee14ccd1b0b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c36296-7be1-4967-aa51-bc93100831b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0add13f4-6da1-45ad-a7ce-91f9aea3eadd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e10ca37a-71d8-45b2-b53a-4f268da5e6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237a43c0-3157-4eb9-ad6c-ea800c8d73da",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaaa2687-40ef-4859-9448-f8f7dc2836bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53fb8208-db57-46f6-9292-cd8b5d580681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd9d9eb-77af-4ae5-b30a-7f1074403041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c11394c-6f9c-4637-86bc-02deff12ecd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36fe372b-0721-4161-b608-51c5b859425a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6b5fc8-69e0-4aa7-aa7b-fbfcbcbbf67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "888705d7-f8e0-4c50-94e1-e4c1149148c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60bcc93-e2aa-474a-bd99-460e03433e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c55cbcc0-20a5-45e8-bd9d-0b27bdc14608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d242a33e-0563-4637-b14e-e8d5a6be2bcd",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f0cab0-7c5a-4d67-a270-85bd6cae558b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dd1ee9c-a0d3-4f39-bc60-5e6e15b76978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f063c8-e3a1-4558-a3d1-591dcb2fd14a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f68f245c-6778-4b80-bab8-c4755f251e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90281f85-a905-4112-9d9c-4286fe1155bf",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6f2338-3e14-4d85-865f-e449f41abfd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "231f6c4d-fd3e-481d-9fe2-aa2e94f8c2f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47da7dac-5d84-4093-8129-f4b5b98232aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f6d0a40-44d6-4727-bb9d-a086e0cc68c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84ac2ae-ec37-46ff-ada6-7d7cfb764584",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c237a601-c6f3-4d4b-95de-a6c40baa6d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d736cc6a-69d0-48f7-933a-729e6c2f00f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed51be87-5ce2-4fcd-a01d-3bc734083439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec80b689-2ce4-4d94-b3aa-6426460df750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "899a3b9d-fcce-42e7-b551-5510aa963a93",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0afc6ed7-6363-4ace-8d64-7ea9db048266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c7df6af-22ce-478e-9d7e-c9fcfb7a1b51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02396de9-a169-4982-9e20-aff9efa66d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "73add76a-2ade-49be-90f7-e9d070e37fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47511194-4af3-40e2-9b35-e53340c48baf",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b86d4d4-3a75-46b1-8c7e-f29810596eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac1d346-d5f0-45b6-9d53-932f997a05a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361a43db-096e-47a7-9d2b-3ce92b718f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "da144524-304b-4b57-9e87-a2555133596a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09cdff85-8bc3-476d-993e-71788f930f25",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17857e68-6fce-434c-a7a2-107801dc0b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9376c313-e50a-45fc-8802-b576acf6b5c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06721104-2ace-4486-a45b-bda9c40a65fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe984880-f0ef-403e-a498-2d1db62e731c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b48cf15d-b2b4-440a-922a-d9acac2d795d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3fe54b7-d10d-4cc7-8acf-90ec2be8e773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a0eef70-fa94-4b4d-a52b-ba1eacf7a9e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ffd134-cdbd-43c2-8dd1-1730ab0def75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "114d70a4-3dfe-450d-9da7-4860dd0a3e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de756b83-5cc0-44c3-8af8-e27448f70bdd",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9833c6-f1be-4031-9202-2ac78ca1940d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2836afe-9d80-4c8d-8c2d-c58717e375cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2bb094-7a0c-4417-9c4d-429fd562bf21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c84b368-0244-4c8f-b7f8-ae5312372c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c136ac-fd3a-4a8a-84b0-38a771059310",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf44c20-8578-402f-b097-813373066216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6559e49f-d525-4997-a814-af9e00b71ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca59565-2d96-488a-9a23-9ad57104223c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0494205-a6f7-48e8-8b08-3fa595d26290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2677f60-5c80-4a7b-ae7e-75dbefe4245f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc7c3d5-55ac-4138-9f9a-6ed648cc1cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e733526-e64d-4aad-8f78-edade66295ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbb1aa2-e7b3-40f6-a19c-eb67292ae4df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e4cab5d-9207-4751-875f-e6765d848852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28769518-318f-4ac4-93cc-9f0ea2789949",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d168f09-a721-4faf-8fff-74d9b8007423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aa267fb-3976-4853-b00b-15f82b6a81af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423ef87b-d200-4193-8476-067965505587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c54eac41-fd12-4d7e-9af5-7245fe82f7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd6fa36c-77ff-47ff-8e70-a630c226cc28",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91508d1d-f250-43e1-a7ed-f69659e2d7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b602d3d-1d07-412b-8c2e-32730ea4e6d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce088959-3795-4d84-bae6-403f8b303b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3e28a05-edfe-47d5-b6c5-86443e3695c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cecb768e-62c0-484b-b18c-0044013f9dcc",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f799764-5303-47a4-816f-aedf2be0eb98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23d85494-09c6-434c-bc94-5c40053172d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015e611b-6625-40e3-9543-e5d19749e31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c75745b5-8215-4f02-930d-ce99de0c1793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bdf5bf9-c8b8-4131-9ca0-0cb5cdbaeb14",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "416a24e3-cf87-4fce-a646-2d313197c1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1920f5e-3b14-4e7a-affd-8896265766fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e76dae-7396-4d46-999b-5185f02de149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c551c328-36fb-4206-b5eb-6bd36272ebed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df4dd30-03e4-4d64-b1c0-5a86b2f11946",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a52255-b3b7-4f2b-9bab-778f897432f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64b9dc09-77ab-4657-af6d-e94d843a872b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5059cc7-885a-482c-a422-fae134ee1295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "46e2c779-8da7-4502-b6d3-07e6476b4b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30d680f-54ad-4d77-bf4f-e507adfe5b16",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fddb39b7-9244-4b26-a9e3-37d76cc9c3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82cf449b-e709-4cf9-830a-c738c75a3343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c5d5ba-16bb-4f94-b0cb-9459b6a65f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b88eb093-f8b3-47ec-9009-386b54654a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1e1989-694c-447f-ad64-1af944d4accc",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27b3331-f17d-41a3-abe3-0c6047998c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b95f7cc-98b8-4312-b7de-6e4c73f15ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed99ddd7-5431-4359-9f88-87605e956e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6348b239-c7fd-4e14-ac57-f0a3985c94f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e00f52-eb39-452d-be9b-2c7bdd5ba404",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4892f064-661a-459c-846b-6d09f587552f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b511f49-c644-4c33-981b-266a4276de36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c2e1b9-e8f2-48e4-9d82-e7f6050e1c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad8b475b-548d-4c06-9204-f2bcac217533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f775b2b7-24f7-49a1-89c8-de22bc329d94",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba4f481-ccf9-4f09-b950-ec141c26169a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "348e797f-df23-4d4e-8e1a-4356651f87f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1af8d3a-598b-48dc-a936-d7347ed6d12f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c116efe-3cc2-4d95-bdf8-ff12dc6df500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae18ecef-ba8d-440d-8c6d-e352c9416ec6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a1ded0-91ff-4a40-aef5-a4404b1afdb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b584f7f8-b8e5-47db-a764-567e090c5377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ad71a6-971c-4b55-b162-267bd1d2263c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4937d393-ee05-49b2-bf4a-c101ef507ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a11872-6e06-408e-8e13-3810f6eeca9a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7c938c-e327-4dd4-a25b-a383c750ae58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89602aa2-45d3-4123-95fd-d83b5d652b95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ec5b8d-119d-4175-a104-771310ddcc26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7ecbf4f-808e-4586-807c-00cebcd3b657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed5126a4-459e-4167-9394-b18cd3280430",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9e1561-2081-4765-84e3-c55e5255ee26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56050629-a92d-4a95-9a3d-9e6e178b3816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0c31be-eb9c-4492-8b0e-fe81ba8ff20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "73775538-ce78-401b-95e4-9ad50715e99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190774ae-1614-4d80-90e5-fc763eb92125",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56c5977-ca47-4625-92e9-814a41654a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac2dbe51-e563-425f-a652-512ad05f2a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f2893b-d037-490f-ad50-2ad67a7163e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ea90e2c-3bf7-41a6-9cab-feedea408eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46dfc456-e351-4e57-8083-8b8aa1434978",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad2397c-fc18-4d77-bbc7-ae8aca58c544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "268a928b-1969-43f8-9507-68ff289b0b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0cf824-4988-4970-88cd-a31a51493c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1f5a568-b3a4-4171-9b77-1b2eaa1096b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37a96dc-8fe2-4378-b997-6f45fbbb7c00",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87033230-bcd0-49f1-aeee-cfd17995a727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa2708dd-719c-4004-962a-b4308a06101e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03293f87-dc81-4fca-9258-509a86f3adaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "87aba596-97cf-4e52-9840-131163b58ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a569471-77bc-40a6-a7db-3c561cb01d29",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d7bf94-407e-491c-9a27-01119327f798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ce57324-ead2-4654-9147-08e984963363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37496c9b-28f9-4704-8a98-eda5c6028af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5783de1c-5e5e-4ca8-81cd-ccbdc38ac4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea92dfee-0ba5-499e-834a-09a6d6297108",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7958c9e-b52d-48cc-af63-63508e814479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b4aa48-c9b9-402f-af0a-39ba17a01747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb40674-ef68-41e5-ad31-4949e0e1644e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "37e09514-eb04-449d-8a88-5c2189c30983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4437cf-4a08-46ad-9006-25641d9c1312",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a471dab-440b-4cd5-8a72-56a17a4029e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c53cca7-7b3d-4d4d-b1c3-6b38ece2562d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778363aa-f6ea-48ee-a0b5-595e3ecc6426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb162b1-05b7-4df5-afd4-1d5dfa0d2dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d747c9-82e7-47de-bd42-a20d73d3852c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a059ef-5d92-4eac-a5f2-939f822c455c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75d2fab1-68cc-4725-8991-0b8924f56f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc794451-c85c-42ea-b32a-e8f95b7cc3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "de1da640-3561-48b9-b89b-530b9af70adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b53c72-5c66-484b-9422-a25770276736",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a82a91-abd8-4457-9ead-b7f35a5c6746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64d1894-d9b4-414b-a5a0-e0f520a160f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d5de76-34e2-41f6-8990-fae303901e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e19659c-66b3-4b22-ab8b-73a521c5c9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b3749e-d79b-4940-a255-157662ebb402",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23276c9a-54a9-4ebb-8632-e7d373460afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b558cc9-e7e8-4d9c-a269-f217534a353c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627775ec-ad95-4925-99b4-b8d977c9fb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3392cd5-9a84-4a39-ad65-4a5d830a80aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9d19cb-23cd-44ef-9dd0-f3feff0cfa8a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "548ea24e-ede4-4412-afe6-6b975c145815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ffd1a5-5b70-4838-8790-de8c7abc1017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25e6e4b-c56b-419f-89b4-6950dd4508dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2fc8673-a4e1-459c-a1ba-7f9314467305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39aa51a9-eb47-47b5-ae38-905a3dd8363f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "020bbf1e-a6b3-4cde-bf69-f0f7ae85b0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9edc040-9474-4566-af99-0ed83871a7c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af529a41-ca32-4b64-bef6-a65ee09459fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5def10a-b354-4526-964a-b07e4e85f4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c746e8f-f324-4bc6-a045-4ede1ac15838",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4992f8-d312-43b3-a3a8-455ff476a133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46535fe7-7b85-4432-a1ea-57bd15bb7c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24633d7f-c45b-4534-836c-d689f403cd8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "198f4178-d124-44cb-83a1-e033e0209916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f394e1c9-26ef-498c-b2b1-5379e5ad5ab2",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6835e28d-0319-44a5-ade0-93ed022a6334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61eb05dd-d577-4501-b35c-7cbfe4229f5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3994d3fc-3732-4b19-af25-6fbd99298840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "71ab96d8-4037-4b70-9614-b5298a978635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfde683d-1b2f-4a96-baaf-f7e380226b3a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5bcc211-7411-42f2-8bd3-69b2ee7e704d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b16826af-6e86-42ac-9909-da2cb9e58bc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97acd04b-c1fa-41e3-aba9-7b7ed6807b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "47433f7c-1cb3-4496-af03-1cbf1730bb8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6a912f-202f-490c-a129-a73958f63c8e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e92848-3cf5-4591-8521-60a5d5ad2176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f04af7f5-123b-4ad2-b718-f9d51232fcb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283c9d6f-6b8c-4b8b-952b-b376f7e1d7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4522c9f2-8213-4240-9e6d-9ac405eb988f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd34d3c-bd42-4b43-9505-d3f5aaad8c9e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "353170d5-66a7-4151-92a6-087319e9621a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b1567e5-551d-4ae3-93c0-051845a16981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b432e5-fa5c-4cac-8f37-17852111581a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d9873eb-5101-4ece-939d-11672ba16d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9945625-2507-450c-b8ce-be2f3d161cc2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c922166d-3e94-443f-b832-2ff8e656acc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e255f384-f463-4a21-b2f2-c2272d70a4fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca453e9-92f6-4ba8-b4cd-a397ad544e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "64e1f6ef-e4d9-4625-9b00-41f174627e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b24a88a-aa1e-45a2-932d-b1c389d1bca6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab30f48-a6d1-49ae-a77f-b5ebdd4098ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "218890b0-3ce7-45b1-be2a-54fdc4972d69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb24ec8-60c8-41f3-8c06-4448e44e0054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbae0a0e-a928-4b56-a300-92a576f42564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df6737d-ba70-4b8b-878f-71baa9efde46",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd6e3fe-a895-45e0-81c1-a3b709499215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "970b844d-12e1-4579-bc1c-3b40c2b65254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5eb95f7-1927-4b20-845b-c38682266dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b4d2fb4-ac1a-4c26-9c3a-6350515b34c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d922c37-f1b5-4e62-9791-15a342d8012c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262787f2-cf8b-406f-9cf3-c1d92c8bc5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "227cbdcd-442e-4919-99b6-6b171f285252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70daf6e1-f96d-4175-b3c2-5a66673a581c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0b4544e-bb04-4271-b76e-d33ac606d508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936126ce-718d-45ce-8764-510a32310959",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69111c0d-ff66-40e9-9478-4a52aafad22e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c9c8df6-f4d5-4f3b-95e4-51e846851985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d3f031-8b2c-423e-bec2-86b06a275463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f44ed4e5-cefb-4e33-b5cd-a95063f8c75d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bfc5484-5e65-48ed-b057-b1c26e6cce61",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61fcdd47-0a7e-4f6a-a66b-41ee76d08977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3ccce3d-13c4-4320-9489-1675d87e5361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e1e04a-7fdc-404e-95b3-51284139d39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cded43a0-228a-43d8-9183-1efe365e5573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97877aff-9abd-4a77-b80e-4c1e1f3e7239",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd541962-fbfb-4c13-8ea1-2db401981661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "127a08cb-4d8a-4e1d-8401-1691d574333a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27959c84-70d7-469f-a272-8660f294aba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a1cae49-d808-40ff-b0cb-5aecfe64003a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54bbb4f3-a1af-4e16-a441-2bf8a8f6928d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6edc900-1035-4696-9b63-917d18e2054e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b6e8313-a196-4f1c-a83e-dbeaffad5239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a1e7ad-0f2a-4fae-8145-a68ecadc6439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8de2f71-26ef-4e30-9dd1-0754ec37f48a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86edef46-a33f-4e1e-b4bb-6f40ebd4800d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e377a5-e15e-4fc9-ba7d-952a6e1126f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d25efc-bad5-4f97-88ef-af8ea13eafe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5eb3321-3d55-45f7-b028-a47bccff2fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc6db01e-693e-47ab-9a10-f3da9d643f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1fabdd7-1f8b-46af-a318-47edb0534036",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4316eb9-7442-4d7b-be7e-f624f4915466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3edb7bad-447e-498c-8590-a08aded59625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b110133-4df2-4f51-a282-f331fd8cf144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d863da6-db7f-4a3f-a159-d253344187fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac886c9-31e5-4b84-b8da-30ba82a585c6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2844284f-4507-47d8-8ff0-aadd1bd956cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c541e7-83d1-4fb8-93cf-a442a7d35d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d33f314-ac94-4cb5-b7f6-652a79acac33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5504e066-92a3-4c75-8a81-b68ec659d1f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca084bb9-b44b-4264-a1ca-22bcc3608043",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4de903e-8223-4156-aca4-cb9a62f3c34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93e2061b-6953-4520-b5ed-38f824131f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0922e62-549b-4417-8774-8bd73c36e31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47d5b625-6d66-451d-bb28-e20384ada36d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36463d22-8c43-482e-a53f-6c55c0efe08a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02944127-d1dd-4bbc-b4cd-a32a515c69f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a94234e6-605e-4239-8f18-463049817d7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9146295e-7177-4835-acf1-dd8ab2af6b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f66dd46-d5d7-4310-8f71-6e715515ed29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504ce8f6-5ff4-49ed-a912-7f5cba697542",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6272bcd-7c0a-49a4-ab4a-82b385491a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77cfe14b-0b60-4493-9a3f-cef2eab957b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778fb00a-1ce4-456d-af14-ba52747e0917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cb804b35-069b-4186-b1c1-333c41366b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d0e40ae-637b-4d07-8e5f-d4efee05ee8b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa6d0ea-67ae-4609-afef-f0fc2a5167f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0770ddf-6cb3-4179-afbc-21f6def572e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f729e75d-8c24-4df0-9338-d643524a8172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "15e4bf7f-211c-47a9-8f78-9393d28d60c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8a3f45-9a19-4d34-8ac0-6ba31175c81b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "950f5b70-f0ab-4c94-b83e-c6d4d8ba025a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "300c4d10-e160-4c9a-a184-c1788b508eae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81574ad5-77bd-4d34-871b-bd9f265a14b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e681414-0ed7-4ad9-8f68-3ac4c6cf5d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3635d6ac-db1c-45e2-b885-b9b9b24ee5cf",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b999d456-3d52-4849-95b8-674572165b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e70f4f5-fea1-4b67-a851-b52bac0d19c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5115e5eb-26eb-496e-ad38-03c56d845cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc072a39-8334-4c3f-926f-dc563703c8c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1d0dd2-5ff7-4458-b923-25a1f2dbc952",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33808021-6c26-4b73-a925-25018a911273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d731556-f70f-488b-8c63-0981e2322d28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25fe06f-cfc1-43e0-a54d-00163292a84d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad8dd6a4-e71f-44c9-b706-69be13da0238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e12defe-dbc1-4f08-9e59-d280dbff331e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4066fea1-c836-4ef6-bd47-8c2a3e2cb5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "973de679-dc23-41d9-9c54-f5a0fffe38c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006becd1-8784-460a-8bd7-a15aeafd4985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "55fb3971-2303-47e6-b90e-d61da87a7ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8907b4b-f1f8-4c0f-978b-3a0f2fd0c291",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3576bf5-3237-4feb-80fb-5a6b341638ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6692b527-52c3-4420-aca5-fff492ae2565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d965ce-c1ee-444a-86e4-772c01034b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5e9131aa-67e7-4285-a11d-3d24893794f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6408b827-a01e-41e1-b904-1b845057776e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f008270-a8e0-4ce8-ad80-a346b7da1df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e03f3b-c49b-4d52-8cdd-6f6cfcc4a4ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6093c001-f9d5-4944-aa06-9953365454fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7f35e5e-ef0d-4a66-9894-87e0f1248e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ac9ae7-8daa-45d7-b1a0-42512d578100",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9319eb5-0250-47c4-b85a-42a9a8c181b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6836feba-9665-4680-a8ee-c5d66a507601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de6fe74-1697-4378-ab5d-9111e0c1a033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "501669fd-a571-47be-82be-d7fbda89ce67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4411913b-ed81-41f5-b432-d0c6820f49ef",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1727dae-789f-4721-abad-657a68284536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10ec571e-2b0d-4401-bc9b-c120d4f5873c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8704ced8-01fb-4bf8-bf4d-62f5bef3a9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0363ef2e-e07b-4b83-9f41-260bd1b0199a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3350ad8c-94a3-4ffa-8437-ac99cd60935a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbdfb0dc-94ad-450f-b67a-edcf3379d3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0d8b76f-29ef-440a-a655-de4baa47c430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431ed058-c4e0-47c6-92b5-26edcade18de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bee60515-4402-4f5b-9d70-e55c815048db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650d31db-d004-4387-b283-10bc8d44db0f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d34fd9-554c-409e-8571-36c5243b657f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c0779eb-3d6d-4e2e-ac77-670111ce3b93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3ebe4f-caa2-4e91-9166-5bea4eabe3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "90777a03-e5fb-413a-85d7-6accee10c5a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56dd7933-7794-4bf4-9dec-973430a2ac9f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7a99a0-7236-4a4f-b051-3fb425a4bd23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c9e3ab8-089f-4c9b-a8ba-7e5716b57511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4280819-6bee-4a5b-ac64-c8a6549d1bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e643193c-5dd6-490b-935e-314f8f6935c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cedf01df-7b71-40c3-a57b-fa4a6422fe55",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "479afba8-4782-44e2-833c-7a25fc26b168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc55dc6-7cc0-447e-a9ee-4a3c3dfffbca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7d307e-d980-48b1-b68c-68a90cb32024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b851e70-cba8-4efc-bcca-35eb3560dbc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2633ba-5eab-4a9a-879c-5b1595211613",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f00e63-d708-469d-9f91-f630aa7cbc54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c36230a-67f3-4732-a330-9bf906eabe26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126038d5-b781-40c0-a9bb-27d91b9c4290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "35bd886e-574f-44ee-aaa0-1f885318c9d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25bd407-76a1-4565-9818-32ccd9a57b54",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d7d7c5-7aa8-4dd3-9b9b-e38180c47649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b66d0195-30a8-4bf2-9108-feb084a5cf4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c069fa-41c2-4e51-9532-2fe694f7cfd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d64b5b1-dbb5-4b9a-8a89-3dbb79e63b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1fe2157-5dad-436c-af28-f8081cba91a9",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ff6765-2bbb-490d-ae5c-bed207441e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6016d1df-d731-417e-ba15-c7101c764799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc0629e-e5f6-49eb-a59d-0225bf701d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab79e391-9e31-4abc-a2b7-419506b2caed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588559bc-5cd4-4f14-a7d9-c87dbe24b328",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b36793-5344-4f50-a7cb-efc6604a5095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c073fa0-b008-4d83-933e-c01c72fc0280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43b25eb-9e8c-4ad5-a051-0527f9913d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2866d0d6-5d08-477d-acf7-57bc1ef821ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa9d700-be8b-4216-96d1-c606d5d3d412",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32b385e-1296-4581-8d9e-f637de977012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "522f4bc9-a192-4b64-b14d-efa0907dde89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31c595a-f43d-440e-9b5e-0c483515e3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7569718a-ea78-4d5a-9cfb-c9159203a659"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5cda39cc-9a5c-4c19-8aba-68a9b184db83",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e74257b-1c09-4fa6-b868-31ff429907d1",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb9f516-a4d0-4637-b1ad-e48267034892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea7c3cf9-359c-4efb-9dea-5bc02c7948c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e1c495-330f-4c23-8ded-45d30a193400",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0504c6f4-928f-4b50-86fb-10aa22907907"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "862bd46d-1bbd-470e-8879-904266768aac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e1ad041-c4ef-4f6a-8503-160e2244413b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "789006ea-6344-45ad-ae75-b0ddbcd35f76",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5d30e6d-9d8a-4046-a9b7-05da68af02e5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fc13887d-59ef-4f40-82d3-589b5f88e9d0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "242d88d6-0ad7-443e-b229-8e682e3eb82d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c4d1135b-aa77-45c2-bc46-304bca943658",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "61de8705-9b72-4e2e-84ff-cb9997d45a11"
                }
              }
            ]
          },
          {
            "id": "af070681-9fcb-43c6-b78b-2c1926f6b86d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bafa4176-3dd1-41bc-8fe0-834eaf164c86",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cad8aa2d-8a91-4aab-a89b-2e6bb4aac191",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "694f45ae-949d-4ab7-be84-9d871348d40c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb582d23-6e8b-408b-b9ce-f967aa5c0baa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d29de03f-485b-4be3-ab10-91f8d47c36ed"
                    }
                  }
                ]
              },
              {
                "id": "13fdc4ed-c474-49ce-b794-4c725266b193",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37bf71da-d3bd-4959-847a-4069f1cf9cd6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c13c9c18-58b3-44bd-84ff-8c023d558b25"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8874e667-4e81-492f-8641-bf7ba69be838",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "995dd40f-037d-4849-991b-24e3fa3f7b61"
                    }
                  }
                ]
              },
              {
                "id": "95bc94c7-eed4-461c-92bc-a1671aaf205b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "63f4191a-1c51-427e-8d3a-7f62465f2d52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "91db7d11-ce78-4845-8286-75adb8af7f00"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50b4dee5-3a17-4158-95e0-1021b0c3c0a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0dcc2a8e-6397-46b6-8b64-5e066e5e5e2f"
                    }
                  }
                ]
              },
              {
                "id": "73be5e79-5885-4b25-925d-6c39fccb2725",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f266353-0673-4783-b5ad-b78003960c88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c9d1904b-d6a6-4f10-b864-55a7f54aeb84"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22e2dca1-3623-44aa-9c1e-ca67bce68f6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "bf3a442b-fae1-453d-a9f5-ab3f1c2e76c9"
                    }
                  }
                ]
              },
              {
                "id": "c1c85c73-4ef6-441d-b3e7-9f8be221fc12",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e549e0af-2b90-4500-a1cd-be6e2f80a68f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ae036338-b5b1-4371-bfdb-7dd22b6f2618"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31d58115-bf33-4805-b8d8-94bfb51f9d61",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "af5808f7-e54c-4b77-8226-71290ecf98ee"
                    }
                  }
                ]
              },
              {
                "id": "34dbebfe-b707-41d2-baef-c333b40cfbe1",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1ba1b04-ef9b-4239-910b-809f037e2829",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b002bd2c-05d6-4ad0-b1ff-9e44380987ed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7da36542-aa9c-4303-8f61-be2f9d7640d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "60310645-fabe-4b2b-af44-a674fdc49806"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "715e621a-12de-4ca3-bf62-be62eeeeff40",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d926b205-c883-4121-a8a0-83d0ada17cb7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "62de0c8e-5ba7-47d1-aaf8-ba39cb1f6d66",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "715f0da2-6c33-4877-b472-080695770861"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a9a71d2-27fc-4f48-9ff2-dbd4770bcceb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "64c2ddb5-23be-4b34-a710-3140b6768ede"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48864640-ad93-4fd2-a675-e9ae578b1852",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ecc4ee96-e8da-40ce-8d5c-c75fcde0b0aa"
            }
          }
        ]
      },
      {
        "id": "be3a7103-dec0-4dc6-8a51-622ba2024b41",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ad9df89c-3ddc-43d4-8c8a-a87c5f28aed6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6e78a10a-2a33-4f05-a5dd-8a77695ce089",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ad815c12-9743-405e-966d-b002fc2407f4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b3e5c1-a6c2-4fc0-8553-ad7f86917c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c38634d-bef4-42c7-aac6-d6e888f25571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e7be67-eca8-4ec6-b1ac-994698005e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "eeca1c6f-c0eb-4e2c-b8e2-e173233f9b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1919859-0578-4d96-bf29-515fe221324f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a9b4ba-46f7-46bd-9e3a-bbe2b8895fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30ff0c2d-9391-446b-8f00-246cbc9eec13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010bc3cf-6353-4c6b-98a1-836a3b7ac088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5377679-7110-4d10-ae4f-095315e3e73e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c3bc84-052a-446c-813f-a9963ebfd1ae",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22935d6-97ca-491c-9ec3-abc2b30d3422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f56733f5-748c-4739-8383-72f00d207b92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8cf2ab-258a-4db6-a9eb-192c9d477dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3963c121-0035-4d86-a70a-760b146271cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "509b5691-dbae-4eab-9bf2-1da666fcf17a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7def640-1044-46fe-86b4-c0dfe3587a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00d895fa-f21c-433f-8384-cb8ac7657189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbbd0975-2ef7-4a6c-b4c7-a15658b5c4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e854dee6-c16a-411c-8c7e-6dab9ea3708b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb373f2-46cb-421b-93e2-9977b5e36db7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16bf9fe5-2b8e-4590-a79f-5ab49aac06eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eee8d06-3b00-4a27-86ea-2bf157dc77ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44cff68-15fd-48f5-a0ae-d5d63e1ed295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e99f4756-185a-4854-bdf0-a726f2a644f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f735dcb5-34e7-4e58-a7af-2f140d19ccef",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e26a425-3b0f-4a0a-997e-04e412a45d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7f347c4-e9c9-4133-b50b-71963267f77f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05ada66-1dc6-4365-adc3-c4cd3d7418e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd8a65cf-59f0-4415-91af-112a5a11fc56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7a1c3a-739c-412b-9d20-6264c5f31f37",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d1fd4d-f681-47a2-89f4-ef7e7cb28d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "199bb575-0923-4928-bce2-1ab7a6300f32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d771601-38b4-4db8-919b-a2f32d95d2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b71062d-7baf-43b4-b54e-526246e93d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1444275-54a9-449f-896b-5c67b0097dfc",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ee257e-7f7e-416d-8d42-120257821112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a567628-1937-46df-a052-f660e0c53113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "390ee574-f6a6-4777-9b8d-51d1d7d7b586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a46e75b-e1c4-47ee-9b1e-053c2cb2ce9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34d051e-e65f-4f6d-b7b9-3e6dcfacd68b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d77d02-8094-4212-8c56-069c61a2c93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a44a400-aeee-4735-8cf0-9237c29f3dfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3564c1-23d8-4b18-9900-f2e8da297238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b8b0510-a7ff-472a-b278-1f00c54cfe9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3219541b-17b6-495b-a9ed-32848003191a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bebbecc-4c62-4a3d-8885-8e184de3b770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "220fc0ba-a592-44cd-bc9a-1d1c1563019c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85da864-4bcc-4706-8b8c-dee1e60f8096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b460db79-88cf-4bed-85ff-9379213c88a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b803a015-d3bd-4a0e-b855-d434fbcb417b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e05d0e-e9ed-4905-95fa-adbc03da036f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "279605db-fed8-4b29-8472-9410edbe2e79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a5f3dd-0065-4111-a98b-61073194ff48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b72cd56a-141c-4100-b3df-8250ae9e030f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9e5532-0f53-4e61-aee3-f983d02dede5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b60f5d-ed02-4337-a89e-ef0fd4227a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd779db9-db20-4ae3-9a70-4248c7f808b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0b9120-1707-42a1-9146-07e3fc0c7b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0211fb5b-f7ce-488f-b679-a049f2f819a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd40e68a-556b-4515-acfb-b899c7e5a8b6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9873de32-0990-4552-8e98-f517a702fb53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "610a7a89-1535-48c9-a658-33a1aa455880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a33fb0-aaa0-497b-9021-8c38d189e53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6c067bf-9880-456e-9736-fc1beb9df82d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d115508c-c2d3-43b5-850f-d2787e92704a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60bb6969-9e66-46ba-8931-3228f57005d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc3c2592-2a7a-4617-aeaa-c7503270154b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c104a020-0d36-48e0-b9ae-0883251448b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e631259c-43f0-4f27-965b-2892bb853771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748d3193-f607-4cc6-ae48-021b5d5a5e57",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd46067-8d7f-4f4c-a83d-307d043ffbf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a505a6bf-4b23-4aeb-b47f-92ae1c4a0560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc55c4ba-a60a-43e5-9ac7-4f00a8a13d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "adec20df-2721-44a6-b395-5d8790a9ae86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27df3d63-669f-46c4-b0e6-f776f90b3381",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47208c87-4b81-44e9-b143-a4d634d15014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc2428de-45f1-4add-a92a-5aa49bc42e6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae1c1a4-06a6-4924-a600-2f7570280850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4631e599-d476-4e9f-9f22-dbcfd6b9143d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e021270f-341d-4ce0-904f-3895e8e426aa",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef5b64b-8869-404e-b5a2-3eed486010ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cab39ed-c735-4542-8623-bac62d981c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a712f6c4-5b05-4205-8a62-9f7bddf860cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa890a90-0495-4c9f-a18d-39e35727121c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b32042-e2c9-453d-bcc2-cfed30fe7253",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0753ec39-02ec-4962-a7fb-0016fa3b7861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d043a516-4fa1-4d74-ab68-947b6f467934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82190995-dec3-40ee-bc01-aa4b1c9f545a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c0ee806-4232-427f-950f-7c13d6a7a448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e546fea-826a-4b99-8ab7-6e4b9fd54d8e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb35061f-b962-43f2-8947-433533509728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33280efa-ed22-47e6-b950-5d15479f4d68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d5701c-e234-4dfc-86fe-97e2a27df906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53d9ce53-db41-4127-8815-0ca6d860bb43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005d0fa9-065d-4c05-b819-932967ff2c9f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98685896-0122-4520-af45-ab24b468e764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "357292a7-0a30-473e-a215-05528e56cf9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c77ad98-551e-4ffd-a50c-39d177501acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18f0ffdf-dee3-4783-9e20-14998c8a8dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3881b69e-749b-4b94-9048-6d5689b77a83",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470b4627-8a26-47a6-930d-2019f99b7c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa3dfc73-fcf3-4226-a28a-74a118b83f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d43de37-7dd5-4f36-beba-6f005e82941b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18197dce-cd02-4e81-b276-cb10bca15327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47daab29-e250-4f66-9add-0ab06f00bf12",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0eb30e-6a33-4dd3-aa45-c3b71399f394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cebc7d7-4098-4748-b10d-31811c0cc6f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ed39af-11a6-4630-9875-95ae8917d455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42967b83-4a0b-4ee3-bd41-c33e945c9fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eca4b40-35fc-4031-8b20-18e94f14048c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f16b23-90ca-4790-a007-d910e0371627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db10b441-c31e-47de-b6ce-cd284995b55e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b06349-b459-4e33-b4cc-6921873dffb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4749aafd-f78d-483d-ba1b-fc1e892678e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d229487-67bf-4c3d-9aeb-9f5edc83e000",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19db5b4-1429-4d4d-ab1b-75bf4eb7c544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f3c1402-2e8b-4367-b26a-cff0321d17a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482376be-0503-49a3-8fda-c820a4def2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9f416fe-b689-435d-92aa-e9141e280f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a64a06-6a49-47f5-ba6f-427f2742f62a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77db018-6492-4d9d-954a-5aec815560f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3874473b-78a7-419e-bf4b-36f4fd644762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f57a12-85d8-4e84-93ab-6aede54d1b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa0f3b91-69bb-4411-89a1-2fab3d962a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd49b08a-0ce0-4908-bfe3-f716f51a09f2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c78badf-8834-45fc-9593-13ff91c93777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d9d82b-b6ae-41a1-b055-d7455a0d711f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2cc6677-a540-478f-b6b9-5d3ac5fd9566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8ec40c5-2a7b-4ed8-be17-e35578d745c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9cfbecc-aeee-4caa-bd54-cd37699efd76",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a377d69b-0739-4df4-8b40-08c662252e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e24754c8-24a3-423a-8b76-e947fbb5a4ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0979df1e-83ba-4eaf-9087-4c3107ec1281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4df02edb-5e8b-461a-a481-cd40dd76a757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2c7392-5f27-4340-a1cf-6dec2b90f078",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15da5c68-cb3f-49f2-80a9-08b5b77bcdb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8395af83-002c-405c-87c4-d9cfeca65407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "399495d5-237f-4776-a7f8-1c7f3607f86e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f95c777d-06bd-47d7-8d38-c834b591213b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089b728b-80cc-4f32-8421-92320601f5ba",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8fc998e-5969-44ea-a0ab-bb61be0ec596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "680f0b5d-aa3e-4772-b9fc-2e7a8cd6bcdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b53f88-ef6d-4d85-a4b3-33c4e910c2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6434bf6-ecee-4e91-afc8-65281edda0a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46713a20-a1a0-4aa6-a821-787c61c0a8ce",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4f3d41-f93b-40ec-932c-b1539a0d86b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8858272d-97e9-4750-bfe5-b8c0f3f2c4fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ff2d85-cb51-40d7-a5d2-6f7d66721a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d17f16c6-3784-487b-bed7-9ca790e5f0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b18a9a1-5f38-41fb-a324-5ea873340c1d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76768ebb-1bc0-4a74-ba81-fe49f7f29ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0150a588-9ed0-4dae-a707-d7d772c4caeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3671c5bd-887d-4ae8-bb99-7a2019d5b910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cefe93f-a709-4748-bccf-2c0b930451f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8048a242-6373-4fbe-88c3-b084804d966d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e96c120-fa8d-4c97-8f6c-87e95d0c268e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b60fa7eb-097c-49cd-9b23-cdb7b7f149ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffdfb7ca-fe01-40b1-9920-0b6b1cbaf9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f5cab97-e13f-4e3c-b01a-c56f4ed0ef9e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8495d8a1-4691-4241-a223-39fc62914d29",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "721da4e3-6441-412b-81c2-de41f5f0a4b7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca1cb18-08b5-4bae-adde-de17fa04b4d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "523d2ea1-1374-41df-ad2c-e3a71d2badcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3286b8c1-51c0-467e-b060-e539a897c8b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13317c23-3a3e-4341-b29a-7efa2b4b85a4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "affda4f0-6d36-4c56-b669-332a2db05d9c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2fe3a34c-ce55-4f8f-9f5b-2019a80c1852"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "35728ef4-cac5-4fad-a9e9-76eea0d63297",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4dfc15fe-5b0d-471b-9bbd-48d432f7848f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "351ef088-e0ed-4a05-94a6-77fe0971b4a4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "36f17bb1-f3e6-4b02-98ef-55c8ea23a402"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "17bd7fc9-491f-4bc2-a953-7780808dddba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0d4a9419-989d-456a-880c-50184f21668c"
            }
          }
        ]
      },
      {
        "id": "524da03a-4677-4688-be5e-01f54f6ae549",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "2ae88d16-9b43-4b05-85b3-3e20bb1f6cb1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "06a0011d-e588-4ae0-9e5b-d2c8e3e8dfc1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e7f78662-82d4-48d5-8dbe-14d4ed1a051e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b52f8fd-a42f-49a7-85cc-1210ca4a1264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e606d48-8904-4d4f-b4e7-0823001ea1cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62718ff6-b683-448a-b4fe-018a59ffe339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "eae5a2bf-9ac8-4ecb-a28e-0ffe425fc15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1428d987-cfd7-4eee-ae4b-fecda7c74d68",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f163df-9938-48c6-b3c8-539bfb95617b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2e23f8a-247f-4f71-9981-03e75791df46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc18bf8-6e5f-4913-b293-09046ef8239c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba002d3d-f225-4196-99c7-efb3d6d57ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c814ebe8-f4ac-4cbd-99aa-e8e1af1444c4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ed7ce7-6249-4d0e-b3e7-36343adc10c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9481083d-d8e1-4c8f-bec4-5ed2ae75391c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6b651d-025b-4cea-afff-5e772b57bb90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcccdb23-0bab-481f-aa24-372ff3bc3ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff09d7f2-7eaf-4687-8028-b0fe653d5e74",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "574012bd-2372-4bb2-9029-750e4dd06e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cef03e1-ece6-4b1a-a04f-4705c1dbc9c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5652abf6-6744-4479-82c6-3713d0185235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9030a95-4766-437e-b2cd-bdc253a72591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c4dd21-04c9-4289-8757-6c574c0593df",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c363c635-4578-4774-a446-158c467885ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d08bc07-baca-4e02-b6e6-5259138450f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729c84d3-0a9a-4a14-a4ec-177d44179a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0becec24-b764-40a1-b947-aad1500b8021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15febe44-cc26-4f2b-9f1a-c68d75c9a776",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be8398c-5344-4eea-98d7-28e417581a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4033474d-8b77-4c3d-ba7a-212e916631f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c6c77a-39b8-43d5-8358-dbdfe3418c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8060a913-0171-426b-a6e5-0b177accbc05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb424054-e079-4a55-a744-37d2da172e59",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7930a018-1805-4cd9-a881-3a93743365df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b28c2ea6-f3ab-4c35-a0b2-890300b987ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c168d029-59b7-4cec-b2ac-aac9226a376f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1726324f-c23f-47a3-a7b6-6124c95ef8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2adc2a8d-86da-4819-9ba3-6d2b9fb752b2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81889916-8f24-47a7-a5ae-67be54226c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4effdaec-361f-4eb6-8726-1319410f8d88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c7afc9-8697-405d-9b8e-69c767f70b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "48622fb0-f98b-4c85-93c8-2921361829e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b5a04c-820c-468b-8fa5-e319449eb06f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec30798-523d-48d9-a8d4-51396ffbcb3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4cd020d-9691-48fb-a86e-65c62966515c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2adbfcf-5ec2-475a-a192-a69885b32274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7764539-06eb-4d75-87ee-f3a2a73992a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb5122e-094e-44ca-8fb2-66d004cba774",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c8fb33-e965-4444-b366-36cb9c0158b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c58af409-635c-479e-87a2-a400bbc91e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c2fab1-b972-4e05-aa26-f3ba4f4feba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9de884c8-c3f5-428a-a4ec-9f65dede32d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb889d00-d089-4eae-b208-992e96d46536",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e60d45-a081-4cc7-b2b4-cb14f7a0c121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25b284f0-de6d-4964-87e6-9d046dc9342d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a15b31-04af-4124-a183-8c7448577a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4169c849-7ca2-41c8-bf79-c80f0bb39258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df6f79d-0e60-4631-adc3-f0cdca72955d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "233507d6-9179-4b3e-8f09-9ed6612f589e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05a4f888-8d87-43ec-978c-efc6af5d9d68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91664a8f-5e6d-49bd-b623-2ed45d25486a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c56f1cf-4f4d-40bf-9ccf-342bea0b1bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd13a0e3-b691-40f3-920f-b1421f983de6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "232901f0-2342-4fd2-910f-f4d6bec15b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8372ee94-399d-4439-96ca-969ddbc6fb7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4d44b6-78c9-41b4-aa1b-4df64f6a02ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7d4e19e-3c7e-423d-a135-794f06bb04c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32577145-2204-4ad4-ad22-4e4ee845cd2f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e2ec65-e2b6-4a53-8ac1-e70578e855f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8458af00-9308-43e3-80b3-a1f286c9197b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a11b04b-8731-4265-b3e8-cc54cfecc873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "455823b0-768c-4782-b758-dc7f970fd326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed5396e-9fca-4611-8c7c-5ae4cf0d0a84",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7ddff1-4abd-4457-b05e-854d0a82e439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edbb352e-e25f-4408-b342-f03e9a59c404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ad2247-72ba-4fdb-82c0-7573408e9f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "14a627a0-09c6-4ec2-a09e-aaf088fc22db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e6a61e-ec3c-46a6-85ee-f57fcdf32da2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef2a154-4045-48a7-ba89-4a3255074ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece03040-8404-4b88-bb08-334e2019cb6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03334082-b28e-49cc-a823-9958d9e793bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e90db117-a1c5-416b-ada7-476f8dc46069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfdd6833-2e79-4136-96d3-7e8a3d23fd9d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ffe51e-e9de-43da-a218-56d914634675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6071d1e3-a326-49ce-b48d-fe301a202113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aacaa045-0e96-477b-9721-507554035c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2831b58c-421c-43c9-a65b-97fdf643bb2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b376c71-d82e-4c54-872d-b8a95b26ccf6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87871894-95bc-4bfb-99c9-9a6f368a7d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "065acb95-f898-43f7-bbfd-3dd8fa1bb299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5a9f87-6faa-4635-803a-47e17e2c06fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "55bfe130-06e6-4899-b39b-7373d61c8c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb9d8e6-ef3c-40ad-9843-226e4788d318",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9ead66-4418-40da-83bf-3d941fb19e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c452b0fc-2ebd-4354-b512-fefe6ddabbd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f47233a-4bf0-4545-95fc-98e0ed5c38d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67d601b4-ad6b-4aec-a848-ac93da1cfce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21bf1f95-f0a8-41e8-a7a2-b77e4b3ba6da",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be435412-f2a0-4bb7-aca1-99f7ab6f9776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9afcb032-3ccd-40f4-9db8-72153231e24e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed436ab-68d4-4c90-8b7a-b2423a7ba049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "019c1719-a127-405f-ad8d-9ba1c6efa77d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe3df14-3bbe-4fdb-a464-712d7d3f7f65",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c310b52-e76a-4fbd-815f-0a99b1628119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e3fd1f-64ca-4419-8ef9-42fd3c8f6a9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d4d5c7-8510-4323-87f5-f423151ebd34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6d4c845-a4ee-4737-914a-54e2f2021d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01db50fc-b41a-4ea5-b56d-05489633d0fe",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a61f269-b8a1-4d89-a48a-e0d3614a1ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be2fccdb-022a-4356-8f2f-e774af4c5160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fdc501b-b975-495a-9e7c-8b5c6281c561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d1b3338-b3ea-4c64-b721-39337ceb1f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b3a8ff0-4529-457f-bae6-e7c833de7a14",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b18578-cbb3-4403-b433-5c84a82af422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc367ba2-1806-404d-b50d-2ee1531516d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a39c632-16e6-4579-962f-6dbcc56f20f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7511e703-9e1d-444d-9653-995140be4b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f8f12c-ee21-4a76-964a-4b82e4a98dc1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e7d295-7853-4c68-9c91-c1fd39e06262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "168965b1-efbe-455b-b103-a9e968115f61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0ce631-54e7-457f-bd14-98c214d13511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ce8f118-efda-4215-bf36-4f06698af073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7ab7df-01d6-4679-8890-675eb41e0a34",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ce38eb-62fc-45d3-b77b-482b8bd8e3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac21ed7f-7772-49c0-ac34-2015a09c298c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc5f4125-7d26-45a2-ab48-81c911c5ba11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e7455f6-0581-4124-892d-5ffa9f2d6833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d502f4c2-5f73-483a-bf8a-5804b946c14c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d581d60-ae7f-4cd4-b1a0-d478d132288b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "601aa7b9-eb4c-45bf-831d-27b37be4e401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf57598-9dd8-4570-ba8b-f4b103baf5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b94f7c7-78e8-4275-a1dc-bde2decccd7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20cd19ea-fffd-45f3-902d-f7a871a3e770",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6de3fee-8a4b-4457-9a4f-3899beb1de81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be2126a-2e6d-4215-98a4-5f8f605e4246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f7d8ba-0cfd-40da-b7b9-0377cbc80f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b408246a-66fd-48a9-a4d8-7e89c1ae8fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ace8b68-74ca-481b-b8dc-2242b47b296f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3396540-1379-4220-a62b-53dbb30ad536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "358f2e53-d12f-47c2-86c4-ea84cb2d5c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc1c57e-3f54-4814-9cc3-c60618a907d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9169909e-ee7c-4e0f-b510-3485b9a87b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0658a47f-a122-48d0-820f-a9f3800ca9d9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2512f6b4-fe48-44d5-a6ff-42766dd6fc43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac5ac3c2-dd82-4de9-807a-f8eecd64fd56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8943bc6e-f45e-4f61-8f16-6aac6d054269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d39a3f31-3e78-4241-acb3-090022efa181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4649b3-0f1c-401f-801f-4a797208de19",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "888ea11f-8be9-49c7-b3cd-56d10381fc56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "731c446b-a5de-44f4-8b08-c49329c40617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3341b289-92e3-4f58-9caf-e1fcdf8ec02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f41415a0-db72-4bcd-a1ce-934b0f213d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc043bf-a7e4-4b15-bba3-d6840e4c4e5b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b6c50b-16cb-421e-b15b-dd2e6ce64a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cdd4ec0-e6cc-47ed-8f4b-9fde2b705e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04dceab9-7395-4a06-8a05-dd7dee71a8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e475fa61-3480-461f-8ddf-965a80e9543d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0acf3d-4c7e-4ff6-a6a0-22189ba5e8a7",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7804a7ab-1be2-4129-abaa-e76406fa1b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da3566a6-c2aa-4c8c-9206-f4e750762db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfef474c-8ffa-4e0d-a077-bdfda90d3699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6255c718-8f91-4777-85a3-146e2f174109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82174b11-36ea-41ac-9a5e-7b0f473048e7",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92836e35-1d26-4cd6-866c-b7dc15ebc16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6262ebe-d7b7-4cd2-90fd-bae7ee5f24ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1fb646a-aeef-4ba8-a25e-cc10c1577020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "684a4b72-eabc-48f1-90dd-ad2ff1b15ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972e9637-150b-458d-95dc-030f17878b9d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72555457-9e83-4ff3-8f59-05e4e81420a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57507fa1-2e1e-4b78-b56a-1765e3a33704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13dcf39d-6138-4e2c-9eb6-2fb5e26542f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0611abce-bde8-4e12-a8e5-4ceb7876ec5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea56727-49af-4d87-8183-45d9f95ac02b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b5fba7-cd82-4c9a-b9c0-82d45ed6a500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4cdf006-de9b-4389-b2af-9475505016f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc09c58d-7a3e-4b81-b4ab-e5e9d050035c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a86dde36-c0d6-42a0-beb5-31108925c064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7041d3f-4082-43a9-aa69-36e3e47c6247",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34841722-9009-40fe-bcb6-51e04066f875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c845a3a-b146-46ff-944c-1f071cee776a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1933dc9e-4f4e-4c72-873d-32ae8c84a19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2eb172ab-28c0-441b-b7c9-3fe27af9d162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a78dd37-7291-4165-b6de-94bb3b038c68",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da965256-3e53-4417-b840-5a149aac9d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd582ae-2169-46ea-91a6-53ab20e90b39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f991c8-8354-4a96-ba78-4e47cf6c94b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffb63687-5932-4862-b244-88239b3d4397"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "076ba622-7951-4ef9-840f-bbcb696c6fc2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "afb3665e-dbf2-416b-a504-d4e677f951c5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158a6a65-4411-4233-badc-68d9c8d353cb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "163f01e2-decb-402b-afc9-aec0bed17e18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e0a975-bc88-467d-b656-b75280212dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f078340-3e22-4cd6-8e62-8af5816627ab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9045967e-bb00-42d4-a6b7-ed55c33b4548",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "182cef07-07df-4f84-a0cd-81f8e9041553"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b86f57c-26a4-4ea3-8bf7-3089b17558fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f6dcbe5-f4ce-4ae9-bc9a-febc6deae253"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96b0afef-bc1d-4100-8b04-84745424db66",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5185297b-b45c-427f-a77a-dd0fedec53e7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e4367672-05ec-4b74-9ee0-13a976e5d871",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dff0e308-dbf1-4f95-be0b-985870536119"
            }
          }
        ]
      },
      {
        "id": "5d6026ab-dfd2-4cd7-9daa-5a0c7fb486d7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "afdf3345-3314-4078-8a93-993f9007aec1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "11763dbf-1af6-4d65-aa25-eafae63249e3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6962e6be-a4a6-4ff9-8175-a56f152e703c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e47db4a-a486-4da6-b173-0cc46659d44e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84894382-e73a-4e9e-bade-6fe9d776041a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306ee740-430b-42fe-95ec-accb6fdb8050",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "766f53a0-4d84-42da-9b01-b49d16e84eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf0238d-24b5-4c03-8a08-d818c77da245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d025d3fd-d3b3-442b-b253-83886edc797f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8900f3-59ad-4653-8d7e-f0ebc213c523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28cf71aa-7c16-4553-9fb6-b367093cf153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f0646c-a253-4f9f-aa3f-1b1fe7c1d467",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba19149d-fc5d-45f4-ad61-cb8d3ee60817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62acab55-1715-4789-912e-4872e1b56bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bab2724-1ca2-41af-8261-97a998c0d1c4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d99da2-9e0d-4e1f-80fd-597e99b159e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fcf537c-a39e-4294-aa8c-34467914ee69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148afd5a-0917-4916-b23f-e400c8485d03",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f5253a-d516-4447-bfc9-943d12b58963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4257841-c637-428d-833a-6b2b12866ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73ca33f-bb08-432e-80f9-995b1130bdde",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59bbbf45-d37b-475a-9acf-7a45c7b6e443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd280459-f3c2-4473-b000-b9c8dde4dcd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5baf6fbe-3e81-4df4-8bec-8c61dcb386ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da5791c0-85af-4fdb-93b7-a09954b262fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ffa29b1-4feb-4323-a824-a68b1946f941",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d865191-93e6-46d7-ba75-5121dbfbadb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7fbaf6c-01a4-49f4-a6f1-15d390d048c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14e7ce6-0e99-4809-917f-e2fdd6c4b424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a77230b-da34-4eb9-af22-abbdfcba6e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91c9236-4ce0-4e67-9516-b817b012da24",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d8ce9c-9f95-4272-ba89-e098a11845bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "829ab6a2-16c8-4a4a-b32c-c1b927124b66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f515dc-0777-4126-9941-73c397ec2c81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e1a2d5-21b9-4545-89c6-c17383c831b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e29a66-50ff-4c5d-9e44-95dcf9183004",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40590a0-f512-479e-9d8d-be4785a27cf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02a29717-5296-49ab-b82f-75d66fd744bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1656abe5-789b-48d5-b784-fb23bd2a9c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d70ddf-7a94-4d3f-a40b-91ce0c8b81c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c2d3f2-71c2-4d06-a6d1-f13dca6f131c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a10112-843c-4976-a1ef-5132f891036b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57017edd-8fb4-4f72-93f4-5cf00015e43d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83c6b50-7c50-4db2-b38b-193288052377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2770b83-6256-43d0-88cd-898e2ee59c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2301beb-efd4-41e7-ac64-4ae979fd0bb2",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800f0405-5056-48b7-a320-89b2e71d209f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5de5b11-ec1f-4973-b954-96548332c939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b897824-b44a-4610-a046-28e18e860d83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b8f450-2286-464c-a0e4-dbca535bb2e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46565e45-b66f-4141-ab3b-ec3958c8508f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0790fe2e-e826-4ac6-8bb8-5f27f4eb26bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb39ba25-186e-42ca-90a5-79efae1bd48c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4336d65e-1056-4a26-b2e5-d52c6332308a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d54bbc86-c783-424f-a388-8c099130d8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17a2d4c-5f11-4b01-883b-a75e8b3aecb8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af824781-7dbe-4d81-a14f-624f128d95aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef82cb0c-b266-4f46-b707-7a2ddc7f95da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b79ce2-9e1f-4ae0-9988-e4ef4f8bcc34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d498c3-c950-48d5-a415-396f427775da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa32dcf-e636-45bd-82ad-c8d7a8a83abf",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920ef827-d45d-46de-a1f7-2e90c61e45bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "421450a4-a2b7-4342-8ba0-169e63dd0b48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d1c1f8-c9ee-42f5-ba3b-0f32e2481243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d5174b1-b3cf-4e29-940c-5aab8c075110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ab6202-b672-4e1e-8310-24f71b60d63e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f85455a-3e98-4bbe-89d5-b120bfc837ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cd2a486-012a-427b-ab9f-fdcb0ceeecf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd23ab6-eb4d-4602-9490-021c5568e136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "535cdae3-5984-48c5-9236-0f9bccb76939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0e7f4b-de20-44e3-9aa3-afb160bcf45a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf709cbb-fda4-4acb-b002-4428201e44f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ec10ae-1ef7-4528-a384-0b643e47759f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e210f57-3b78-4605-87c8-40b65f228289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e846f08f-2a76-4cb7-9666-caef34378493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea803f8-ec2b-4da2-8e22-d91314da4d9c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2214eb5d-aede-4ebf-8cc5-a03fdc7ce741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e0b0576-cdf3-40ca-b098-9d986f57769a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe49a37c-581c-4f45-aab9-670a6214e22d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a54c28-be80-4ec0-bfef-aa9b1a564404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87785b6f-a9f9-4d41-b62e-580fadb705e6",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a255153-d29e-469b-968b-66fd0ff277f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28018e4b-73ab-421a-8595-fdfe0a09c880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74ed222-2ef7-4aff-b451-239920c90624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e4113b8-14fa-41a2-ac72-ad77af9780e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916cc489-5f89-49d8-aea9-e3d6b2f5d260",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e06c76e-31f9-4c0b-be49-1fa8e61587ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "864f96dd-7420-408c-afe6-3ddff5888e4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "644cc0e2-249b-4aea-9d40-51829ca8a8bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "174cb16b-ee6a-4e9a-b70e-2161ae5ab62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed83b46-d2f8-476b-9320-f0b620334a9c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6920921a-9c9d-4226-b354-0ddf51e868c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e724f214-d37b-4f07-9f74-b9f4b6468b39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00583e2f-225c-4c0b-8dce-68a831b7ed1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e2ae467-f7b0-4d09-97c3-151c873fbf0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1a14a1-99b0-493a-a498-6331f986bee3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bca3255-5009-46be-82c1-bdb6900c5ae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13283e7a-c6bf-4188-be3e-7f833ccba1e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae25b7c-2f48-4704-8fbc-5f8c33043212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "953a40fe-2c01-4f86-ad90-66787817a455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842193f4-eaf9-4041-b99b-e191ed03c7a4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7fff5a-c5cd-4538-bbe0-fc89d21b899b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d93f135b-58fb-4c32-812c-fac78da0221d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da15ad8b-ddaa-4de6-980a-341c80b84423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3074a795-32e4-4402-bfb3-26740f8b28ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4290a7ce-5182-46e9-9b72-fd2f176065f6",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2789118-04e3-4fc3-a8a4-3a56c0ab0ada",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f0d893b-655a-4e18-8aac-60cb54dfbf14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9422455e-499e-4eb4-9a1c-ee144fc178c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02e961b7-c0e1-44a3-b953-bd716b79b3b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747d3c59-d52d-4c43-9757-54bfc9e86578",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376e270c-4745-4cf0-a85e-d5deb9d32b3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5498d36f-074c-4052-b6ef-c283fe8022ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ee204b-6c08-483a-9f85-7e176f1068b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f259806a-270a-4fc5-9806-b9912fbd976c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d605d20f-43be-4a09-a6d0-d76969902333",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708f8cfc-e493-4771-acdc-3fe0f91c50b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c78eba4-2a4c-4789-a2d3-19fbb675d500"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e9d6620-a8b0-4970-8520-10afea439f41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d47574a-2ae6-43d1-a9e3-a410f337dc27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1125bf5d-1b46-4e2f-b4d3-63590aba0471",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5fe15d-2870-4639-a528-958cf204ff95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c8cc2fe-f605-48eb-b1d2-a79ec68b4094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0120923-543c-4cda-871e-71a4a21405d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68131d04-d638-4247-991d-63022b606660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84cd29b7-c892-48c1-abff-af083ed0ac21",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475db8c2-7c23-4d31-859b-a4a07a591e3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76188610-c02a-4e58-8d4e-3ebb2f8e955e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d5d1af-84df-4679-a2ed-401624722659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47496a31-6a05-4f6e-bee9-d8d988f9d73c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f720333-1ef2-415e-83c3-13523c06435e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6e651b-4891-454a-99e7-7e7a1dca65bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa3acc1f-a45d-4cae-88b1-9f28859d7ab3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d21b2e7-6053-4565-9694-7af62ed8115b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ab3bb98-7df3-4deb-a160-13d3e16d369f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4428539f-e418-4630-9f8f-9ab9cd772f47",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28bd0d1-ad36-43df-82f3-176380058ca8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1267e2a9-738d-44b4-991b-b70095c099de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "985ec684-6c59-410c-a47c-e3665ef206da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1838023d-6cca-4efc-a752-8abfb3fc90f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f397395-24c7-4531-8054-ed4f41914c98",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d7f714-0679-49ed-8fa1-79fb43f63156",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "091c0a35-4e8e-43d1-89df-588577c02b48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e577e5a-6a3c-427e-b308-ec797556b7ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47501d51-916e-44e2-b293-673c5da67689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19ac448-ffb6-4851-a089-8db445d26259",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be7139c-cddb-436a-b744-17edff71bcb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fc5db8f-7c48-46dc-a8d5-bd8850620037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c841868-5eff-4685-a753-c2d8b40c8a4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a488c649-639a-48ad-9272-c6ab49203a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5cdbc2e-c6e1-4e45-80b2-5de4a93070a5",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c652a9d-8bc9-4927-805e-9854487e57ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a05b381c-007d-4cf1-9184-71a6edfefc6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99f7622-d84e-4557-ad47-14d44d4059f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a71467de-ce75-47aa-9c31-f7aaf236645d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928f3ba8-4829-408a-b692-77357168feb6",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68057742-1bb7-42f0-a37b-e508abf6d983",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d57c1ab-0bba-4f2f-b2bf-974d67e79217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d666ad6d-b9f7-4b9a-ab36-e6c3a7ccd971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "703c2db4-d2f4-4483-944c-ff9006c4f191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b66114d-05be-437c-88be-843ac892a156",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccaeb483-0336-417d-bd72-bd1a5316b401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5956efd-607d-41ba-b64b-98207e9a566e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "662a40dd-fb28-4e60-9782-205cf931b711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec65f16a-6530-4f5a-a416-7a9994acc0cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305913a8-a874-40cb-b368-e6ec5313b713",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906ff532-50db-46cc-99f9-e31784abfd81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e36505-3a26-4ca0-a91f-33d98c844c03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "747f0c0c-2f76-4d10-83cd-82a7d13f7f4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8fd6539-7786-49b7-961e-9c21fdb34437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28d68c6-e3a0-4c7f-98a3-290b7bbc8dee",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7409c32b-88be-45fd-b773-6b29b6b203fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76e3cb75-1c64-4cb3-9cd0-d98d6e339174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0147f380-3d0e-4e65-8a32-f0d259698cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd7fdd0-1e26-4d98-9575-928cf7c7fc4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62d8d83-19f3-41cb-acce-54497c387a85",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414eb4ce-71c7-4dd9-b2d4-8e6178304941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a210abbd-8ed4-4e9d-aee6-81727d7ad44b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abed3b5e-4eb5-4843-975d-2f7c0b5c7cad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b78388e2-5b43-46fd-ba8c-e10aee5f951e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41210b7c-ec1f-42e8-ae4a-46b69eff22c4",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f460851-6031-4d6e-9005-8a84732792aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55221c88-0f44-4778-982b-619d84733546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8527d2dd-81e3-4185-9072-b277b5370860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eca2d8d2-4a98-4c2a-938b-501901003f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85bc70aa-c02e-43fc-ae7d-d1819d39799c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fec7ffa-34ec-47d7-a7a4-5df6b3d2b3af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a465f5-1c58-4117-af3f-80617069d1b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32973268-c42f-47a5-a7a1-755e9024751e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0045e82b-046d-479d-9322-73bad76d4e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f1d6a1-1781-4d76-bd97-cddad5a26628",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab2d39bc-b588-4ab9-bdd5-db1d92eaec91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a73b990-99c7-42a7-99ff-e0804dcfae85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e7878b-d559-4524-804f-f78bf73e765e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e7f9467-4a07-4df3-83f5-b5cb6f918e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1a2dfd-e9af-43a5-bb5f-f169357fb3b8",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09fb2360-289a-44e3-80d9-a0a6378d219c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac4ff836-5fca-4be7-9581-6be9f78046c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c63083-45ad-4139-9f08-e8623e0aeec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "510d6cf7-54e7-4760-8e17-02754c2bbd9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6985232c-b205-4416-b4f4-c0b854579064",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2deec1cc-6b99-459a-ac25-34abe0565305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c8eab42-ad40-45c3-bfca-889acba57dd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89da0b30-6ff0-4f5b-b201-794ce43febaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa54f96a-1e72-4c4b-b509-22d614c4f215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577c827a-3a28-4adb-83ba-8de7aae6eec1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6141d743-29bd-47ae-a78d-13c39c5cdbb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49683dc0-eac1-46f3-85b8-0e58b28a0991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56bd7ec2-9f62-4047-8726-c9898ffaf450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30ee8e5c-e77e-4168-8a1d-8b7f632d095a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88909e86-bf67-4fc5-a142-7cb236fb17d3",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b21868-c18a-4b69-b5a7-726f406a3989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "637ab281-27cd-4388-bdd8-1a67799df840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa4b77d-3b87-4ef0-9c08-00ba8d9b4805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a07ff10-5ca2-4ca0-9879-9298f69cb2bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ef6f66-5010-44f8-baaf-8080ec984871",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25242be2-27cc-4b2f-8a17-463e056133aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de5f5fa-8a7a-4f8b-8f84-e7cf79a8e941"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7eb7e31-9e6b-4b75-a20e-e455e5d98a93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15765a1c-ef7e-4c04-9e7d-f6d32ecc1fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30d65b2-b7a2-46c2-9469-c808683817e6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65916a4-67f1-4605-84c1-8921aa4d042a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff97c7f9-7ea5-4879-a460-312bc75b3cb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9864e794-4078-4bb0-8664-d09ea49fb812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c851f77b-29e5-4453-a0eb-193f79a99dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a420e2-f139-4859-9608-60a94b825b16",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240f2604-6f3f-4799-9795-15d0da8336df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a90b047a-f3b3-4632-910d-33a91d5d3c4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09ef42b-9072-4dd6-a2c3-84e51ac172e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84cab815-501d-4d86-938d-5b4c0c7ed228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62a5adf-2206-423f-940f-d59025b8f4e2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ab56b9-8580-4dca-b2d9-08e68a226a26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef37e63-7e08-425b-8bbf-4f3fdd13b824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b4a20c-b0cd-42e6-ac44-11c4bff85b40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "956c05a8-ddda-4865-8279-e51bb6431c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc6736b-26a1-4402-891c-da252c2ac4e1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f05977-7b76-46a1-be54-ea2599018025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f3e3000-a780-48fd-9424-4a684a3a7257"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c19ea4-da03-4982-9da0-060741b30641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e08468f7-7cab-4d1e-bf2d-ba8b024612af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee454cb-6793-4df0-b29d-153c426e8acd",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51977f0a-399f-4df3-aeb8-cf6ff141576a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2f06e6e-4776-404a-829f-b9ac4fc81dfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30fc1020-e53c-4406-a63c-ac7ec5ada98c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7071ce18-ff82-4f6f-a278-adb7bcb706d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2722fbba-f63e-4f37-a7b0-039d6a40a958",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a94c41-5d4e-4f9d-8795-e27b672e5acd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "107fddfa-4373-4308-9024-14af2f83623c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dcc5ca9-ae0c-41b6-a090-c4892844b2a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a35f94ca-7631-412e-8387-007b85426ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00bc6351-0e90-4ed5-a46c-aa528f09fc01",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74f07a5-d56c-4d47-aef4-df781e81a5db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43c7f0a8-8541-4e79-b530-85aa33677775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb35b64-e97c-4af6-b398-e25c5ae01042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a2afb65-ca37-4fcf-9e21-08fca464076e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebcb198e-cf02-4622-86b6-2ef3b0b886a9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9130c8-b239-4dca-b919-f27c7894e8e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27a079b9-ef8a-4685-b456-97c941d6dd6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c917afb8-6c51-418f-861d-3da9c637addb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8aa37a9-f284-4f48-b79a-d1d47cc70c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497b2381-d286-4e09-859f-7044dbe4c5dc",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1b8d53-a011-447a-b9b0-dbe35b430532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b8f7c1c-82d4-4ff3-94f2-f79b9738c8c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b01d12-36a2-4867-b978-340e1743331f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d34f4a-ce9c-41fa-9c46-a40cfe8a756e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e868632-1c16-40bf-bc8b-0b7408bb8cb4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb275e41-e4f0-4cf7-b3ce-2c4b5324f82f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25611e26-7c74-494f-a227-4617c1a0f8a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdeff13a-926f-4f34-bf1a-fd9908d70971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca1547d4-3ed4-45df-8104-6dfd16a53f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94daa389-b6a1-48ac-b550-6839703309b2",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ac770a-8682-4c6d-9f7d-fb7fa621adfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87670cb9-dd85-47a6-82f2-7d18d40411d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55074b1d-f2ea-413e-bcd7-ae71fb48d41f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f663394e-05a7-416d-9223-bf0fea5b8e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4241203-0bad-4c34-9332-9e9e7ee9875c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24465e4e-1e72-4150-ad90-38cd4f20799b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af69645d-76f8-4e47-a42b-805a874e2fc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3326441c-ee0d-4199-bc6d-9eecd7e2ba6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7581472-6439-4ad8-a875-f6446ee98e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6117c7d8-026c-4400-9487-380436f8a9c6",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9655e7ad-0863-4ea4-8f76-1c8820f63169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7348d08-c615-49ea-9edb-0a41012a77e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b8f32a-951e-4dbf-8eef-05801dec63a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "130bb220-abe8-49b1-a2a1-9419a90d622f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb00afd-84e0-4f7e-b1d9-d099d0b246d4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a323d2f-d32a-45c7-9d05-d51eee5d47ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97925bfb-f514-405f-b08c-94fa62463c61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "190f7716-5386-4f80-92cc-886c2f9484f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca26b2f-a293-4176-b910-665c27ab27aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be75954f-c4c8-4190-93c5-7989bcd44c1a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76aa24ff-cdc0-4577-b3d1-8dc1f9e038fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d14fc0fd-64f6-412a-8c28-0028fee87263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "938c5231-a9b2-4f94-a23e-b9f856d68b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82c98fe3-354e-4bad-ab73-57e2e4b94b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0b3732-e724-46b9-ade1-de6004ea9d3b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03913c24-5f3e-4d7b-9a08-7ba1d14b0d5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a555f9f-90b1-4267-bdf7-b7a5c33b48d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c6cc5e-56c5-408b-a2c1-39c05558ddcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb326630-5030-4fd3-83e6-7aec60d7325a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2dd1023-5c7b-4896-9283-d6c92a32bfa1",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cfbdb37-7a44-452f-8407-bc7920883326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5bb3952-7785-4330-abd3-e9c256f745df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a349ce-ba27-46b2-9c5d-7a7240d0ebbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b917ee-110e-4b39-a657-3d2aa504171f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe0c54f-53a9-4489-9462-f65acd001370",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a022fe3-e546-4e76-88ed-31f73032c291",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b86e79bb-5d0a-4010-af3e-f89fec2ad8f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "811b05da-4ac7-4555-9f06-b8fd255d856d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba09b216-cca6-4a59-a51d-011edeef1d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a6fc6b6-3b1c-4df9-855f-4203bc274093",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765b553c-479a-4797-bd54-32c78090ed3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d10d80a7-b24c-4a2d-9347-471f5d40cce6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a50f063-65f1-4565-b2e3-f8c091dd3579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b29b7b80-41bf-4690-b09d-f7ae978f3975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed16528-a080-449b-a969-b6d34d16f243",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b9feef-837e-45a4-83a6-037cec78f88d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6910afaf-fdfc-45f0-b801-47b555272eca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05128f36-71f5-4048-a9f8-b91d0910c2af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb972397-e029-4f33-b161-e9d291a29362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404d9056-5755-4a93-ba8d-55e592d6978c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77cd9d80-b428-4818-9e83-eed68eaeeb38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6abffd8c-76d1-4dda-9c72-8565dcb40b64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e85cdab-675d-4afb-a9dc-0710baa97c5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64718a94-0be7-4322-a887-6bb001d26d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf33e653-6cc1-496b-9761-8a8aa140223b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f2408f-8b1e-4c60-abfc-e165dc8a6400",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cfa0a51-1cbb-42bc-9cfb-682a64921dfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "891cdef4-009d-48f2-b28e-714148f39faa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93e6f576-4c96-46e3-8c61-f4af7e5f7b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd25150-7958-48bd-be4c-97c955b044b2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f534c7ce-255a-4c26-9f4f-3e7e4556c07c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0115cd6b-467d-49b9-9c41-179ca14a6d27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2164f89-2264-4c48-aa4a-adf6c309f2f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a0dd4b0-6f23-4450-828a-17d14057d585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230a6b4f-fc59-4b0c-a19e-a56c419c738c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088d1b61-9b8d-42de-9481-04dcdd0065d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e3e9c16-174d-4b36-9723-3e638efd6e22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a701b93-3a22-4dca-947e-19d6975f5240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb25f2f1-f698-42ca-80ad-75a396912904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c252d74a-dff4-408d-a406-401b7569af46",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75925d50-b370-4ffd-a8e7-45282c0cf4f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bba164ea-87f1-4769-a56e-6e5b42a8d2f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5d7e9f-aa3f-44ab-8701-b0a362ae3a42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b61f1e54-e586-4a2f-9034-a28c5cd80fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0317bcfa-8ad6-4666-8388-526337984c7a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225a0c8e-b7b5-467b-bf3a-0f6796ee813e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72de7919-c56b-4af5-9550-95ebfbd57159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f4fae9-1dc8-46fc-8211-7aa01fe2b162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a4ff29-b50a-440b-9dc6-efa99304f1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4999b0af-d483-4525-b494-3da272139049",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6656eec1-6f89-4a96-9baf-639859d2ebcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b867ca6c-a4be-49e2-b66e-0b75ac9a892a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5491f92b-e70c-4911-a866-3b8f30eba28c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "049d5e38-3507-4b62-9380-b92b45d334a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691aeefb-7e31-43d8-b05d-3c896b74b25d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc09343-0344-4a33-a2ff-62a5391edfee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5099f65f-efcd-45af-bf89-a285ef35bd63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbf2f13-0dc7-41a7-8acf-0a753a7d4e81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d46ac55a-cb79-45f3-8781-976603609ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8681222e-e3f0-4552-a535-d8fa1bd124b3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73921d3-b4dc-4cad-9f12-b47008355d3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee2368da-43aa-4e17-8f3f-0cdfbd6607af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a3b621-f465-453c-b6f3-1ea1aa4e3591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11ce743e-5a7e-4e15-aec5-15a4a19abf3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1626b117-857b-4578-b18b-14de5ab94fd9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed3162a-7585-469a-b291-ea2b72424a11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e512a78-95cb-4108-80ef-0e221047146e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c69791-f3ed-4d49-b4cd-40041de79d81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e906abe0-4551-44c8-8c1c-0a80e3303d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d565b9b-3534-4213-bc3b-a4893704a313",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5e48ce-84c1-495c-8b19-83f64445297e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f8c8e04-4ff9-4a8d-a574-0100eeccb3ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5dc34e-2d6a-4cfc-be51-f02f6d02359e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96a76228-7b91-46a5-ad59-677483fa8259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32fbdeaf-e093-444b-af46-04e020919dae",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6064ce-889e-4ba4-a57d-3a311ed71a49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43aad857-6a5a-460e-8e58-7d0cc57b33b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc59432-a75c-48fd-8149-9f5f7d635f6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b02da2-39e4-4ede-949b-105fa490411b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ab4c8f-c703-4496-9fb3-e1f8ecd12f38",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ecb85a6-689b-4b10-b3e6-bd8fe5e37a15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32f45574-8201-4fdc-8cc9-692f963514cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8cbc580-c4f7-4ba8-8a8d-1726696117dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d341cb15-e0a8-4980-a223-f1d4ee0e3684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83bdc90f-3937-4532-bf7c-23c7b72fe6d5",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fffb1d94-f240-472c-a807-70eff1fcca26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3738e678-6f40-4ad0-899b-482c1b36f557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "396bf02a-555a-427b-810f-1c0f40b19b6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aecdcf9-29f4-4bf4-a155-efcee0ec556c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ad3988-56a8-4331-b72c-2bb04f7cce94",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d4574a-e94b-42ed-b811-5590914750ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9de3b7c6-e34c-4737-a27f-0057333080a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f460d2-7fad-4bb3-a191-08e149426174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7772ad3-4cde-4046-90c7-32c5ab76d4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2209b02-ff2d-4a8c-a0bc-4a0f92125a56",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac7b393-01b0-40cf-846c-42a1294868b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c743d816-79d2-4e31-8b68-79b70a5ff777"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02cb45d7-43ff-430e-b29e-f232306b851f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25143381-f5c6-4ea1-81c2-61624d51d0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0cda805-081e-4af4-af7c-bd64336fd0ea",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e189c367-ddf1-4f35-b37c-e62fc329bbcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0d577b2-d6e7-41f9-a3a1-f3aa275e397c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5cdea0f-5d1b-41b8-b100-f4a0b77a8ac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "362852d6-9b19-4ea4-8137-ab9275dd67f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4622e982-ae28-412b-a5f3-78a5cbe39caa",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad243bcc-f248-4602-9a50-28c221db845f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "803073a9-ec42-49de-8c48-96601b418694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7354faf5-200c-434d-bb3e-4db6c1007b26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92501317-cd62-4156-9bb5-49666d668392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c267c6-a213-45b0-a9a7-aca8ee104ec1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79224f37-6916-4c07-90bf-bf5b271a7bcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23b384c0-6fb6-4c03-86a6-3fa8e8002265"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9628d5-5dfc-4258-85e5-dc748a53c23a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "034e41d8-c9c8-4e99-a6c6-61fffb6e7ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7b75a8-f7c7-40ce-8d4e-0a020f437922",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841d917a-f8aa-47a2-b3ce-54025c6b9a3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6674563f-e4a8-4985-9858-805baff74300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a91f66-0fb7-4dbc-afcd-31dbef74aae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8b85763-cfbd-46df-b4d7-fbfac0916771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d67dcf-a38f-496a-a23e-dfb0b33fdb20",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5673c229-4c4f-4094-b027-d4f94ac6295c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08aac639-7937-489c-9069-208fd5170854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6066243c-4e4e-48d8-bbe3-66e356b6d027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40819467-dc33-496b-a2ed-43d863ad730a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c88a939-6d39-4d50-ac17-4de716f05a62",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5754a77-13da-410b-b99e-09e1bed4e8ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad27942f-5e8c-491e-820d-7048fa29b73c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe03f77-ce7a-4c6e-88ae-4cef07a9dc51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce44820d-eab7-4a7e-a6d6-e8b0ee1edba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6f8e43-f059-4f5d-82e9-d2c997d72275",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b6c3cf-269c-42f1-8d6d-140b7d3a4693",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b935c79-2cc6-4161-a41e-0c09237b3e21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "841bca0d-08db-49df-adc9-cff95538f0ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5de56287-f342-49e2-b3a6-620b03c17a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ff9cda-17a9-4d9a-98e1-acf990191166",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1779d48-b5fd-4c32-9080-85f92565ce33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46a6fb76-cd33-4913-b2c9-f02fecb79185"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6531ff-d5c2-44f7-af4d-a61682812778",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca04b4cb-a72c-4778-bbad-fba544723a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21ad4da-ed66-4a4d-96ca-3e41ef5ef0ba",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e43a2da-34f3-4c94-add2-f4fc49153dd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4375552-7c62-4394-9724-b6bef53d4ce6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d19415e-6bec-479d-b16a-77c08169c923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9988d21f-37eb-495e-a0c8-40f93b8995fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed90a44-3cb6-4f70-b7cd-0a116aad7704",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e807633-09a3-4d81-8f3e-d7d7b7934567",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5fd60a2-141c-4be5-a384-b04c17ae226e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b5ee77-8eff-472d-9beb-e9bffe4b07cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c61731-8847-4d56-bc89-414e47e7f3fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3681b621-1154-47eb-8cc0-1abab47a1ee8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca4a488-3faa-4595-8e1e-f01888d299ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "add660f1-e1fa-4761-baad-d141c0868959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83136203-bf1a-4e33-9a01-a5e0791068cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1659da5-c7cf-480a-9511-11806f679f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1419dac0-835f-4290-a1bc-57eb868b9176",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61479fa-c284-4740-8a87-b3a2bd8b59ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a4ae2c2-f68a-4140-8a25-1d79f0f5c3f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65635db7-5e12-412b-a69f-28652f4bd960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "763fbb2c-2d9a-4956-9daf-c2637b0172d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6661d227-5128-418d-a3ce-4987a2333026",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcdf6ed7-6e1c-40d7-a1f2-5eae6d8e3714",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9578ec7e-99ad-43db-a2d5-dfbcd3b28024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab30257-82f3-4ac3-8c4d-1eb57de4a76f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be086211-5980-4066-9008-f06bc22d0176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d913ba0-c918-4468-bafb-ac2d7042ff18",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f934dd7-6526-4e15-b76a-6383bfaef1da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b69c6fcc-9850-498d-bb83-bba87e6c0b0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b855aa55-e058-44c3-acf2-c83d63ce2414",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb2ea8b3-baaa-43bf-ba98-45b2529e9ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6292b02e-9104-4d97-bec4-a561101480af",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd5339c-c0fd-434f-a63d-fa7e2d55c85e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78fe4ed5-e898-4d1a-8ec0-0a30f703b6d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "477752a1-8fed-4b65-a930-b9c7f9a75106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b42131cc-1112-4cbf-968c-1233033b8552"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1887bea-581c-4a67-8784-5cd5eaf19867",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45c3344c-fe70-48ae-9eb4-250fbe042dfd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "39057fac-50af-4bc6-ae14-3e8ac7f1fa7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f2493679-033e-4696-a206-71f114091fa2"
                    }
                  }
                ]
              },
              {
                "id": "7ba59de6-6d28-40b8-ab8a-2b9ed940ebbc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f818ec0d-ff21-4fdf-a423-a20d4fffa589",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2806d0c9-fa66-443d-aefa-e735fd8d2da4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "992ba91c-db03-4ad4-b2c3-7748bec6dac2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9aaa4c-85eb-4268-a6d1-94312da48f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d84110d1-4e0a-47a5-a79c-f6d7c20ae8f2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab755b25-fb1e-4adc-bb77-8fa034e78edb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "779b045a-5322-4c56-910c-417a58b57c4f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b05a96bc-1186-4ff8-aa28-5ea4bd22b497",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "402578ed-3f06-46aa-997f-80f6909a4a54"
                    }
                  }
                ]
              },
              {
                "id": "64a2324f-0999-48e9-9c88-51ddc4625195",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b8b1a094-b9ca-43d7-b2d0-41207c7b7fef",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "319aff74-f834-48c9-a01e-28a983a4cf8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "82c153ab-58f2-4903-920b-8371d0929f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c898b1de-5a16-4310-b445-40f413a67f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd3fb74-1e7c-4de0-bbd4-bbf415e8abeb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "00828610-c49e-4453-b05c-5e2e7bb39a02",
            "name": "Positive Testing",
            "item": [
              {
                "id": "baecedc6-ce80-4a79-a7d0-1d507729d0fa",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55374241-97dd-46b7-9042-5440d549e74a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7f97a1e9-b751-45db-9010-499f510de87f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f07d5886-d227-496a-a644-976928d5d290",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "410cf1cc-d476-47c5-8ad3-2a985611b70c"
                    }
                  }
                ]
              },
              {
                "id": "c0dc9554-25a5-4ff5-8526-416c064377ef",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f4de821-d046-4788-86b0-edd224a4af1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ef229aeb-ac8a-49a1-9abc-4b561d33c2a8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81dac21a-e94a-48a9-8e2e-3c7797845d4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83e40518-f7ae-4522-a1df-deb32c04c239"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0284be11-6cc9-4617-bf3b-7292b7265761",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "eb451704-be7c-4ab8-b0dc-d57a5ce6e4d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ab562d2-1781-42eb-9625-696790fbc962",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc7db820-9ce5-447a-95b3-53bb33e60c78"
            }
          }
        ]
      },
      {
        "id": "5e4fa40f-c18f-4feb-acf5-8660deb4fca2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3d7524ee-5c85-4240-82c7-23fffe6d2f70",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0318cdb6-584d-4116-a783-02899d5859d3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d3386f2d-1759-4b11-8416-eab1d0233c7f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8a2d4e-4ddb-48f3-90cb-da324d644b68",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f1b86f99-3b8a-4409-ad1b-66c5a9ca65fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d507e5e2-a12b-4fb2-b579-b37a22c37ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb89efbe-676e-4eb5-afcd-7b03b5695c0f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e60f83d6-a318-4e48-984d-920d1a77d527",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf4e0e46-7842-484a-888c-8d55327f599d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "049c5060-31f2-4d30-a544-d77a2f9901a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13b57bd8-b0b0-4609-94da-5c070310e036"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7fe97249-b7e0-420e-890e-48cda0f46917",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e91a1ea2-622e-47c6-8756-12ad9d6ee48d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2875e857-163c-47c8-b0d9-ffa91624bbfd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "243d476c-7c05-4354-97d1-5263cb5f3222"
            }
          }
        ]
      },
      {
        "id": "521847f3-ab4c-49e6-acbb-0ead3ec9b1fe",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "345df9cf-3529-42d9-9b62-97967598e368",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d40b99a6-c80e-4b89-bb61-94e722d453b2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b5acc540-3d55-4da0-872b-50890ac2d95e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e434318-e317-42c8-a565-feb5f13c56ce",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6dec12d9-c6ec-4c46-9fb7-04324708ed15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed040645-f9f3-49ae-943a-9dbbdd660b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b12413b0-e2fd-47a1-bc0e-97aeed1e6454"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8affbb88-3841-42e2-ba37-640c0e94c7b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5ee7e42-99c1-49ae-a770-f7273fedc05f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b83a159-bb16-4768-abfd-37de36995fde",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0dc186db-7bed-42ab-a415-eaccd1edfe02"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "59699582-b4a7-41e3-aeae-07011788bba0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c7bd9afc-8fe1-4569-a865-2f8ddeb9b39a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bcfa7000-9a16-432a-a653-34ea8c6ec54e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf5f08b6-9915-473e-be87-a4a62e129fa1"
            }
          }
        ]
      },
      {
        "id": "1793ea05-2995-459b-b311-0ee33963224b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "dae62c01-f395-4f6c-a570-26ea5cdba9e9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "767f8a93-322c-4b54-be15-aa0ea5a5f1f3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "244d81c4-51dc-4d61-a0b2-17b69b8d7bd4",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5229fd4-3641-4e67-abb9-d5a18b8fb3f8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4297a7e1-6bfe-46b4-8363-ffa6cda6eb7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59cad02-3620-456f-beab-e467d1ead0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08453c45-bbd2-4ecf-9c8c-99641ebf13c2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4f01c48-d8b8-4e34-b658-0bf860c6ebae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05a4dc79-5178-4a4e-be7e-a22a1523aef2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc922ec7-2e7b-4022-af4c-5b3c8a133cd8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bdb1d9be-7488-496e-bb23-83e51ad15f53"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "69234d11-f086-4186-bdd6-1000b2639db3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0ccd38cf-222d-44dc-b561-8e8ec2f4101a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e659bc1d-4eaa-4afb-ad57-74b0f0dff3dd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3e6f4e7-77e5-4101-a673-ba2b6cc918b0"
            }
          }
        ]
      },
      {
        "id": "1c7a3a80-7c59-4b7b-aa45-45c7ad9bd1b6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87b2ea0d-c67d-4574-803d-7f8d31b7ee5b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c704430-dac7-43cd-8dbe-be78f094fdc1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4d0d6830-4511-453e-b82a-7c02a6ce79f9",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c71bcbaa-2dd1-4aa6-bc0f-d7b53f91e652",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70d8964e-5108-4024-9b59-2761d8445400",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 232.09859154929558,
      "responseMin": 10,
      "responseMax": 7468,
      "responseSd": 486.85014916758035,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1690504701163,
      "completed": 1690504779204
    },
    "executions": [
      {
        "id": "204e697d-a8c2-4264-aaaa-01aec1baa99c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "888e64bc-2a35-4f43-9c78-5e583c93a859",
          "httpRequestId": "2d7d7f1f-8a82-4f59-a592-a0d654516485"
        },
        "item": {
          "id": "204e697d-a8c2-4264-aaaa-01aec1baa99c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5103a822-ade3-48a7-93df-714f8dbb504d",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "6a7a590a-d6d8-42e7-b461-5324e0432604",
        "cursor": {
          "ref": "a42f8ede-b10c-4bf7-966b-759172973503",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "bed17aca-45e0-4fdf-bf0a-a3e528da7660"
        },
        "item": {
          "id": "6a7a590a-d6d8-42e7-b461-5324e0432604",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6f2a6ce1-3934-4577-a398-7278676b2e18",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "4ab09ef6-7aa7-404f-ad71-5b7472a8514b",
        "cursor": {
          "ref": "47642088-268d-49c7-aa9e-a73ae772f0cc",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d4048315-9a71-4dac-8d58-b0df4fed34c2"
        },
        "item": {
          "id": "4ab09ef6-7aa7-404f-ad71-5b7472a8514b",
          "name": "did_json"
        },
        "response": {
          "id": "2dad47da-50d9-45b7-8f94-7f7434113de0",
          "status": "OK",
          "code": 200,
          "responseTime": 1606,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cc806a-005f-4859-8f26-57bccf67aef3",
        "cursor": {
          "ref": "844dcaef-3065-44b5-ba2d-70b5fd17b0fb",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1d3ebf26-8a1b-4b35-be35-7e643393265e"
        },
        "item": {
          "id": "91cc806a-005f-4859-8f26-57bccf67aef3",
          "name": "did:invalid"
        },
        "response": {
          "id": "1e4d5b02-66f1-41f6-9728-e75edecf53bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cc806a-005f-4859-8f26-57bccf67aef3",
        "cursor": {
          "ref": "844dcaef-3065-44b5-ba2d-70b5fd17b0fb",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1d3ebf26-8a1b-4b35-be35-7e643393265e"
        },
        "item": {
          "id": "91cc806a-005f-4859-8f26-57bccf67aef3",
          "name": "did:invalid"
        },
        "response": {
          "id": "1e4d5b02-66f1-41f6-9728-e75edecf53bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5297c424-4fb5-4e0a-be8d-2c89540f0de8",
        "cursor": {
          "ref": "ab543b63-0c9e-4bae-83f9-05f27af17e3f",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "54b3c8d4-e468-4ce6-bd87-7d8901523d02"
        },
        "item": {
          "id": "5297c424-4fb5-4e0a-be8d-2c89540f0de8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b68aa321-90c8-415e-83da-b3ced46a884e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 338,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0c4135-103f-4367-8124-50b50ca36602",
        "cursor": {
          "ref": "a661dc58-b0e2-4a7f-a253-e3309fa94b70",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "faf08583-0024-4073-9a60-d330edbc8450"
        },
        "item": {
          "id": "4e0c4135-103f-4367-8124-50b50ca36602",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3d053e7c-21c4-4222-9416-5844b526fe5a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 262,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a0e0de-5b2c-407f-8a51-d6ffdaca8663",
        "cursor": {
          "ref": "0681cfcf-7d7a-44f5-bcd2-f3a011270247",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "74111bf4-4283-4012-8b14-3d3de79eaedb"
        },
        "item": {
          "id": "18a0e0de-5b2c-407f-8a51-d6ffdaca8663",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "760867b0-bafc-45cb-a497-2fafbf0dad42",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8a02d1-efd4-41d4-beeb-bb81652a7aa0",
        "cursor": {
          "ref": "991ed700-d857-4325-9644-ac57da669c55",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1de27017-8175-4020-8d3b-38f908a0f285"
        },
        "item": {
          "id": "6b8a02d1-efd4-41d4-beeb-bb81652a7aa0",
          "name": "identifiers"
        },
        "response": {
          "id": "0d2847e7-afc2-4c17-bc6d-61e10faf52f1",
          "status": "OK",
          "code": 200,
          "responseTime": 1671,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb67fb6b-37f8-4f56-ac38-b6d437772cef",
        "cursor": {
          "ref": "f98b7a73-0a55-42b3-9854-69f7b9845885",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "fa48ff35-9681-489c-8f70-69a8f5da58bc"
        },
        "item": {
          "id": "bb67fb6b-37f8-4f56-ac38-b6d437772cef",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a3875f1e-48bd-4a08-bc0b-f9f5ffed0c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19bd875f-02de-46e9-9a12-2b0a37e80bb5",
        "cursor": {
          "ref": "e31193a4-3207-4d43-a61a-0bff00067d9a",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0a6201dc-7021-4dc9-be66-d050dba3a427"
        },
        "item": {
          "id": "19bd875f-02de-46e9-9a12-2b0a37e80bb5",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "81b86fa9-7597-4ab5-9f87-f5e17c5179fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 976
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b457e7-3bb8-48ee-997f-0e7b1c618cab",
        "cursor": {
          "ref": "0411c7e6-26a7-4b8e-abfe-8094650e5f58",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "17c889ec-13b5-492c-8e3a-f985ec9ec35e"
        },
        "item": {
          "id": "45b457e7-3bb8-48ee-997f-0e7b1c618cab",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "61f27523-993a-42dd-bbb9-536d888d08f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 984
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5176b1aa-535c-4979-be83-9ad7fa4238f1",
        "cursor": {
          "ref": "a8dd7de4-6542-4f01-a014-2d23da410e5f",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "89d7749a-a57c-486b-8f48-aa3a2bb387a9"
        },
        "item": {
          "id": "5176b1aa-535c-4979-be83-9ad7fa4238f1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7289c613-9c3c-4ef5-b1a0-e809a6f3b4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52012dd-9511-4e9c-b2ab-bfda0854a4ba",
        "cursor": {
          "ref": "256d291d-b6ba-40ca-af9d-9b4826abf007",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "44f228d7-ed44-4ae8-97d7-0c306527a6fb"
        },
        "item": {
          "id": "d52012dd-9511-4e9c-b2ab-bfda0854a4ba",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "73dbf10c-88cc-4eb8-b24f-7470ba29e1c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6f78cb-3c1f-4356-975d-0bab67f1b106",
        "cursor": {
          "ref": "7f540d51-f656-4601-bcaf-4c2821221ed8",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ed43fb39-cafe-4275-af74-14bb4c80360b"
        },
        "item": {
          "id": "af6f78cb-3c1f-4356-975d-0bab67f1b106",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b4b08dc6-5d0c-4c01-85bb-c039c51d0d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1030
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30ff9eb-ce7b-421b-9714-bbff56e6b4e7",
        "cursor": {
          "ref": "9dfabdc5-f526-4740-9e97-ac6eca620155",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e45ec0a0-a25a-450f-8a11-1421cc31294c"
        },
        "item": {
          "id": "c30ff9eb-ce7b-421b-9714-bbff56e6b4e7",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "925def09-8495-43ba-a151-e24def5c7c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c916e9b0-6226-4f54-ad98-af89c8970b7a",
        "cursor": {
          "ref": "2bf3950b-d571-46d0-b792-8236282ce544",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "91148cac-a907-4402-a89d-2bacf14ee816"
        },
        "item": {
          "id": "c916e9b0-6226-4f54-ad98-af89c8970b7a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a33acb1f-45fc-4544-b474-51e53d867fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1068
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9404a59a-e92f-4a21-ae00-1f2b818077df",
        "cursor": {
          "ref": "cbc02570-887e-42e0-8025-a36e98e8ca84",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4d3d5273-1ad9-4ea9-9db3-95c1fe93b2d2"
        },
        "item": {
          "id": "9404a59a-e92f-4a21-ae00-1f2b818077df",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "15689c7a-6ccf-40c7-b897-cfbf6de5b372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eadd36c9-3d50-47be-96ce-582f291b0607",
        "cursor": {
          "ref": "cc8fc7e9-20ce-4a8c-aad8-db77ff957665",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7a0aa35e-4f32-44ca-86d3-891d46f91a08"
        },
        "item": {
          "id": "eadd36c9-3d50-47be-96ce-582f291b0607",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "beb515e8-b84e-44a5-b651-8c87159a1e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee01846-db8d-4b2e-bc98-09ec343b5f05",
        "cursor": {
          "ref": "303e0472-44f0-4783-b089-d752755ce58a",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2adbc36b-e230-4b19-8a2a-362525d0d779"
        },
        "item": {
          "id": "eee01846-db8d-4b2e-bc98-09ec343b5f05",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9ab1fb0e-189a-48d7-b307-5fe275834605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1036
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62d5087-0e8c-474c-9b83-0aa41806be4e",
        "cursor": {
          "ref": "cccd9642-579f-417b-bacc-3675efbd5f7b",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "cead7add-107e-49ca-ba90-d8152b1dcc3f"
        },
        "item": {
          "id": "c62d5087-0e8c-474c-9b83-0aa41806be4e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "bb6a42cf-9ed6-4c64-bf2a-7db026ca153b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1077
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0bbd73-d371-4ae7-a0d2-7f44a84083e0",
        "cursor": {
          "ref": "9d2c98b0-b6c5-44d3-bbf0-dee9b0c51e33",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "933b3658-4f60-4e43-a2fd-95d012d5a747"
        },
        "item": {
          "id": "1d0bbd73-d371-4ae7-a0d2-7f44a84083e0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3e0b2ce5-b8a7-4e4a-8f01-08357eb6e7ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1092
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce644cc9-1b63-495a-bfc1-114cb373826c",
        "cursor": {
          "ref": "fa14c013-240b-45ec-b30b-d9909e7e7eb1",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d63ccd39-a7f1-4621-9f9f-be1f43e99856"
        },
        "item": {
          "id": "ce644cc9-1b63-495a-bfc1-114cb373826c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "75cfcaae-233e-4e2f-86a5-a269f4ce1882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1048
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5541d6bb-dd8b-4f31-9d66-86c97026badc",
        "cursor": {
          "ref": "0ad47adb-caf6-4a5d-aba8-3e8424574071",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ad38a5b2-84d8-4eaf-a5b5-ef8d5201191a"
        },
        "item": {
          "id": "5541d6bb-dd8b-4f31-9d66-86c97026badc",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "59f88a3a-4892-4b5a-af68-0d4059ffee8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1045
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f26ce4-805b-4e8b-b954-c136e24bc1d2",
        "cursor": {
          "ref": "7a7c4b0b-9781-4a2b-92fb-943bdff80876",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b27f24d4-1a31-496c-b8c2-8847673676ea"
        },
        "item": {
          "id": "63f26ce4-805b-4e8b-b954-c136e24bc1d2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "771ecfe6-abde-465d-8571-57ea1471f71b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1047
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a83108-c35d-4f29-9482-0f437d634509",
        "cursor": {
          "ref": "7a7ffb69-b1f4-4397-b155-259baa018433",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fc537056-2752-4efa-af95-cc43116d5adb"
        },
        "item": {
          "id": "93a83108-c35d-4f29-9482-0f437d634509",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f645af3b-39a9-4036-86e1-a0bc3de5e8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22748a36-3be3-4bdb-a487-7a749b3a77a8",
        "cursor": {
          "ref": "8fbaea0e-1243-4c7d-8c5f-3a0aed06a877",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4bb6ed39-cf3a-40e8-aff9-0bbb9f47e4db"
        },
        "item": {
          "id": "22748a36-3be3-4bdb-a487-7a749b3a77a8",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "93291d38-ddc6-4c92-90c7-f1fe3aaa6ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8509ea54-2a81-4838-a03c-67662ef04cc5",
        "cursor": {
          "ref": "4adb4473-967b-4d9f-94cc-ce9d37a4c3c8",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b0ad7f5b-b083-4202-be76-513bd4f9612a"
        },
        "item": {
          "id": "8509ea54-2a81-4838-a03c-67662ef04cc5",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a3d5f3a1-d372-4d86-9879-292d7372939f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24cc755c-3663-4e68-a057-101217398c72",
        "cursor": {
          "ref": "8a99d5ab-a8ef-4974-9e63-690238ab1c1d",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "197a04ac-43d7-4aa0-a74d-ebb56146ee69"
        },
        "item": {
          "id": "24cc755c-3663-4e68-a057-101217398c72",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "48c0c5b6-c9b4-4a34-8436-f4e5049d2102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237a43c0-3157-4eb9-ad6c-ea800c8d73da",
        "cursor": {
          "ref": "dd8fff04-1166-4611-b975-1e4daf296d81",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "20cc628d-b7ad-4e52-a9c0-3ef81825bccc"
        },
        "item": {
          "id": "237a43c0-3157-4eb9-ad6c-ea800c8d73da",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ba14d9d8-bca0-408f-bb8d-20fe462a88de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36fe372b-0721-4161-b608-51c5b859425a",
        "cursor": {
          "ref": "3b4859c3-2d21-473e-b958-e1359ba99e8f",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e2a78508-abcf-4dfd-8bb1-db590207ace8"
        },
        "item": {
          "id": "36fe372b-0721-4161-b608-51c5b859425a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "129bcba9-aa4e-4cb6-b8ce-1d395367966a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d242a33e-0563-4637-b14e-e8d5a6be2bcd",
        "cursor": {
          "ref": "48d549e1-eae2-49af-81bb-35731c03c4e6",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2c3ade09-84f2-46e3-916d-b4917a20917b"
        },
        "item": {
          "id": "d242a33e-0563-4637-b14e-e8d5a6be2bcd",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "11178afb-53f9-4104-85df-cc2083f76719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90281f85-a905-4112-9d9c-4286fe1155bf",
        "cursor": {
          "ref": "6c945ccf-7300-4df6-9b80-67cef4a3d26c",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6c133d25-4df0-4186-9e26-39ac50de5019"
        },
        "item": {
          "id": "90281f85-a905-4112-9d9c-4286fe1155bf",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8f9e89a5-a6c2-4e9c-931b-b7fbbfb0045d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84ac2ae-ec37-46ff-ada6-7d7cfb764584",
        "cursor": {
          "ref": "e1ca0b82-d016-4e8d-b462-206a772cbaa1",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "69588518-7de8-4386-8309-803f996a4494"
        },
        "item": {
          "id": "c84ac2ae-ec37-46ff-ada6-7d7cfb764584",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f17b2732-dec5-4260-89ff-506a9c6ac5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "899a3b9d-fcce-42e7-b551-5510aa963a93",
        "cursor": {
          "ref": "2e806fce-18c6-49e6-9abe-6a1f338fac5f",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6410fb59-85fe-49c1-9071-8d8fbcd76ada"
        },
        "item": {
          "id": "899a3b9d-fcce-42e7-b551-5510aa963a93",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "44fff9ba-932b-4997-a72c-a0dc2cadbe71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47511194-4af3-40e2-9b35-e53340c48baf",
        "cursor": {
          "ref": "a654041d-52f0-4230-8abd-f19de67da775",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "68a9b73e-0d4d-4b11-be58-fe55882eb74f"
        },
        "item": {
          "id": "47511194-4af3-40e2-9b35-e53340c48baf",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d7298385-ba38-4cf6-9d8b-d93c77850a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09cdff85-8bc3-476d-993e-71788f930f25",
        "cursor": {
          "ref": "dc5bfa44-bf3c-4124-a666-2338cf484594",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1e68a3dd-81b8-42ff-8721-85b47cc90277"
        },
        "item": {
          "id": "09cdff85-8bc3-476d-993e-71788f930f25",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "332e257e-0c24-4c55-b297-64af97a095a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48cf15d-b2b4-440a-922a-d9acac2d795d",
        "cursor": {
          "ref": "ba5b8383-27d9-4740-8b1a-7bc4f3112ca1",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4f64996f-8d97-4a83-87fd-0d45cea9551c"
        },
        "item": {
          "id": "b48cf15d-b2b4-440a-922a-d9acac2d795d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "81e9d7c8-412f-4eb0-b964-bdc4732ec5b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de756b83-5cc0-44c3-8af8-e27448f70bdd",
        "cursor": {
          "ref": "62422092-91db-4229-b1c3-02a8f2c101af",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f6b70ea0-5782-4ef4-98f4-e994bd31bdf1"
        },
        "item": {
          "id": "de756b83-5cc0-44c3-8af8-e27448f70bdd",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e76ef357-121f-4d8a-be2c-23eb46b2bb78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c136ac-fd3a-4a8a-84b0-38a771059310",
        "cursor": {
          "ref": "671ce659-73f5-42a2-909e-087c85ea7264",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0e9d5c4b-fb8b-4179-9ea0-9c71b263c071"
        },
        "item": {
          "id": "53c136ac-fd3a-4a8a-84b0-38a771059310",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f81083e1-6e46-46a6-8ecb-f76714d5fc17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2677f60-5c80-4a7b-ae7e-75dbefe4245f",
        "cursor": {
          "ref": "4fcba2f0-d5bc-46c2-b0dd-ed32f8cf4551",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "409398f4-66b8-413b-b415-963834038f1b"
        },
        "item": {
          "id": "c2677f60-5c80-4a7b-ae7e-75dbefe4245f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5350f76c-285f-4ced-a3b0-63de86616349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28769518-318f-4ac4-93cc-9f0ea2789949",
        "cursor": {
          "ref": "08e84b00-1e15-4bfa-89fb-eba037a95f81",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "cd86459b-8652-411a-8c7c-41012e1ad9f0"
        },
        "item": {
          "id": "28769518-318f-4ac4-93cc-9f0ea2789949",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b50e2cdf-6401-49e5-aed7-b9258bd51148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6fa36c-77ff-47ff-8e70-a630c226cc28",
        "cursor": {
          "ref": "150e50e3-25f5-4350-acf1-8b03d52642dd",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4e4d2b17-f628-46f1-98f2-28c4fba06464"
        },
        "item": {
          "id": "fd6fa36c-77ff-47ff-8e70-a630c226cc28",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "cc4538bd-5c98-40be-b679-4570d97cb6d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecb768e-62c0-484b-b18c-0044013f9dcc",
        "cursor": {
          "ref": "389ed104-d941-49a7-81e7-5d89790ecc05",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "369fccc7-91fc-41cb-a3ee-6eca0b82be49"
        },
        "item": {
          "id": "cecb768e-62c0-484b-b18c-0044013f9dcc",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "dfca8904-a23a-4720-8af5-0ee6b66bef03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1808
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bdf5bf9-c8b8-4131-9ca0-0cb5cdbaeb14",
        "cursor": {
          "ref": "959933d1-8988-47d7-8c25-81bc83a8ae3c",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e79e2f47-b465-4499-b5ee-8770c460d89c"
        },
        "item": {
          "id": "0bdf5bf9-c8b8-4131-9ca0-0cb5cdbaeb14",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f1edf084-2df2-4b2c-8065-00f23f767a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df4dd30-03e4-4d64-b1c0-5a86b2f11946",
        "cursor": {
          "ref": "ff0b3a03-fe1a-4e21-901d-489725600770",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "60c6ae6a-3d77-42bd-ac7d-e2b0a6cda251"
        },
        "item": {
          "id": "0df4dd30-03e4-4d64-b1c0-5a86b2f11946",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "118dd582-9651-46a0-8989-60d599595824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30d680f-54ad-4d77-bf4f-e507adfe5b16",
        "cursor": {
          "ref": "c0c7c0a9-79de-462a-ba8d-7fc71f8ba2ba",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5975651d-5590-4ad0-b1b1-c9377f476419"
        },
        "item": {
          "id": "b30d680f-54ad-4d77-bf4f-e507adfe5b16",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "df27dd6e-c017-4d21-9377-0b24b72794de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1e1989-694c-447f-ad64-1af944d4accc",
        "cursor": {
          "ref": "9926b9ef-1451-45b3-bd7c-270fd3845744",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d05f4339-bf38-4be2-ab17-8e0a6cda8f26"
        },
        "item": {
          "id": "ad1e1989-694c-447f-ad64-1af944d4accc",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3966de3f-1dfa-4521-894c-46870d75e1ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1745
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e00f52-eb39-452d-be9b-2c7bdd5ba404",
        "cursor": {
          "ref": "7e826b61-b5f4-4025-a0f5-9265fabff804",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6c16ab39-1d84-425f-aa91-f88d2295030a"
        },
        "item": {
          "id": "a3e00f52-eb39-452d-be9b-2c7bdd5ba404",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "bef93bf4-99db-4217-9b5e-e4e840c95c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f775b2b7-24f7-49a1-89c8-de22bc329d94",
        "cursor": {
          "ref": "91b95ef2-064d-4ba5-b5d1-b91b83c8210e",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7493c0e4-26d8-4a37-8c42-771f7b1ef88f"
        },
        "item": {
          "id": "f775b2b7-24f7-49a1-89c8-de22bc329d94",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "75dcc297-bf7b-45d4-b9ad-c0893f47d71c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae18ecef-ba8d-440d-8c6d-e352c9416ec6",
        "cursor": {
          "ref": "638e8d9c-444e-4ef3-99c2-b72e0c024337",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d75d7254-17c5-44a3-8cd3-24af16d85f84"
        },
        "item": {
          "id": "ae18ecef-ba8d-440d-8c6d-e352c9416ec6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "da5ff223-3719-464b-bc7a-67e11b3cf303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 2147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a11872-6e06-408e-8e13-3810f6eeca9a",
        "cursor": {
          "ref": "c83c8235-4920-44f1-a4b5-ebc27cf4d1b0",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3ac69dc0-e705-4fe7-86ab-d132e0f4a33d"
        },
        "item": {
          "id": "c4a11872-6e06-408e-8e13-3810f6eeca9a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "03b7ba7c-6703-455e-bfdb-1946f8f5f906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed5126a4-459e-4167-9394-b18cd3280430",
        "cursor": {
          "ref": "a85afa3b-32f5-45f2-ad6c-d57c3d626297",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7b370025-a952-4eab-bf9f-57bd0a392599"
        },
        "item": {
          "id": "ed5126a4-459e-4167-9394-b18cd3280430",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "511b46f3-3e48-4e84-95c9-1650f271d984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1035
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190774ae-1614-4d80-90e5-fc763eb92125",
        "cursor": {
          "ref": "b4468282-fd3c-484f-9fa6-1e46de0b548f",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7d4227a1-0daf-4255-86e4-8c8fe4726abe"
        },
        "item": {
          "id": "190774ae-1614-4d80-90e5-fc763eb92125",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e8b0f048-3d12-4d5f-8043-6c3f6044abed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1059
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46dfc456-e351-4e57-8083-8b8aa1434978",
        "cursor": {
          "ref": "afd3f4dd-5cdb-457d-9b22-8b3dbff4daff",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b20c8b28-bc30-4850-8b00-a1674a2cb47f"
        },
        "item": {
          "id": "46dfc456-e351-4e57-8083-8b8aa1434978",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c4ac2a0f-732b-4ec5-a2c8-a007aec1337a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37a96dc-8fe2-4378-b997-6f45fbbb7c00",
        "cursor": {
          "ref": "256c21a0-d80c-4012-b372-7a701814538a",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "744e122e-ab56-4e39-b479-e1726ab38a95"
        },
        "item": {
          "id": "b37a96dc-8fe2-4378-b997-6f45fbbb7c00",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "91dd83b5-d4a6-442e-9614-f7109f73f0c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a569471-77bc-40a6-a7db-3c561cb01d29",
        "cursor": {
          "ref": "ee4a1e3e-212c-421a-9e87-8e2189226eba",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9aa9d6fa-4a19-45ed-817f-f084369b0cf9"
        },
        "item": {
          "id": "0a569471-77bc-40a6-a7db-3c561cb01d29",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6ce7751c-0148-438b-849b-7beff7fd67b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea92dfee-0ba5-499e-834a-09a6d6297108",
        "cursor": {
          "ref": "04ebac4f-1eb3-4a50-9f34-5db56fb0a14b",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "fbf561f7-337d-42ca-9029-50f9e8a2f25f"
        },
        "item": {
          "id": "ea92dfee-0ba5-499e-834a-09a6d6297108",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b870db54-8f14-4b29-b57f-ccb88894b7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4437cf-4a08-46ad-9006-25641d9c1312",
        "cursor": {
          "ref": "e267f917-ca0d-4022-9e3a-4749480959db",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "bef7a364-285d-4dfa-8185-236b3713c0d4"
        },
        "item": {
          "id": "3d4437cf-4a08-46ad-9006-25641d9c1312",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "34a6cb25-7aab-41a6-8ef2-32cb90e4d56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d747c9-82e7-47de-bd42-a20d73d3852c",
        "cursor": {
          "ref": "f0153a86-a9f5-4b8b-b1ba-0155ee9da269",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "04718f65-6df9-4416-8487-ea804eacea77"
        },
        "item": {
          "id": "c0d747c9-82e7-47de-bd42-a20d73d3852c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "533691a3-edff-499a-9509-2dea09e8b5f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b53c72-5c66-484b-9422-a25770276736",
        "cursor": {
          "ref": "42ded149-68fa-4fe4-901e-f793424bf874",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "809bd07b-b788-403c-912c-041d1f209e2e"
        },
        "item": {
          "id": "61b53c72-5c66-484b-9422-a25770276736",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9f11a7ba-3d9b-4a3f-8750-40fce767f158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b3749e-d79b-4940-a255-157662ebb402",
        "cursor": {
          "ref": "b0eef0ea-6d98-415f-a82b-4f8d74d0ceb2",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f4913099-d6b4-479b-a0ef-67059a6b43ad"
        },
        "item": {
          "id": "f8b3749e-d79b-4940-a255-157662ebb402",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d76c559e-ecca-4d5b-b6fb-728b6317cd74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9d19cb-23cd-44ef-9dd0-f3feff0cfa8a",
        "cursor": {
          "ref": "18e3e7f1-0186-470c-95c8-93216481d3dc",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "326bb9c5-52ca-4f5c-af47-79a083d81d68"
        },
        "item": {
          "id": "7a9d19cb-23cd-44ef-9dd0-f3feff0cfa8a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "251b2985-1a16-4d85-aab7-2e7ed752fb21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39aa51a9-eb47-47b5-ae38-905a3dd8363f",
        "cursor": {
          "ref": "b0367c9e-4917-4c18-abcf-d626b57aeae7",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "1711a6ff-447f-4d68-85a1-aa77f4320637"
        },
        "item": {
          "id": "39aa51a9-eb47-47b5-ae38-905a3dd8363f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "59f7c8d9-98d1-4564-807c-d6b99f0295ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c746e8f-f324-4bc6-a045-4ede1ac15838",
        "cursor": {
          "ref": "8a5cd757-d7bf-45fe-b96c-0ca02013145e",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5ffa3114-299e-4787-8423-f039fe352ae1"
        },
        "item": {
          "id": "0c746e8f-f324-4bc6-a045-4ede1ac15838",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2e14d254-4355-4742-836a-5bd82c4374b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f394e1c9-26ef-498c-b2b1-5379e5ad5ab2",
        "cursor": {
          "ref": "4f163ecf-6722-4578-bad1-e60920211e55",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "823997ab-46c0-4371-9d8f-6c81455c9b9e"
        },
        "item": {
          "id": "f394e1c9-26ef-498c-b2b1-5379e5ad5ab2",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "344a6a1e-a0aa-4795-ac2b-8989d6eec1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfde683d-1b2f-4a96-baaf-f7e380226b3a",
        "cursor": {
          "ref": "01e5eba0-77a6-418f-aefa-929be7ea6644",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "0c56cdcd-8e36-4377-8276-8b76730493cc"
        },
        "item": {
          "id": "dfde683d-1b2f-4a96-baaf-f7e380226b3a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "64a57ca6-159b-424a-9047-3eccbffdccff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6a912f-202f-490c-a129-a73958f63c8e",
        "cursor": {
          "ref": "a54ec7d8-cefa-4f26-810c-1e10575af8c6",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "48757395-e140-48c4-bafd-1358a29bc7e1"
        },
        "item": {
          "id": "6b6a912f-202f-490c-a129-a73958f63c8e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "61e1acce-152e-4007-b7ea-d66e2b5cb2d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd34d3c-bd42-4b43-9505-d3f5aaad8c9e",
        "cursor": {
          "ref": "5c9c84d2-934e-41e4-bdc1-525d1c6a225f",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2947481c-4bd5-4a7a-b9b3-4130114bb0c8"
        },
        "item": {
          "id": "efd34d3c-bd42-4b43-9505-d3f5aaad8c9e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e85399c8-b19b-4aa1-9d1d-562d6319fa9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9945625-2507-450c-b8ce-be2f3d161cc2",
        "cursor": {
          "ref": "d09a34db-5f8d-465b-ab09-9a281673fceb",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d15cb43f-9fda-4d76-9236-8e45b179c235"
        },
        "item": {
          "id": "c9945625-2507-450c-b8ce-be2f3d161cc2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "911c3958-18de-4c73-8037-f90cc6e3153e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b24a88a-aa1e-45a2-932d-b1c389d1bca6",
        "cursor": {
          "ref": "8b08e081-2201-4026-b277-e28dc64735a2",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "85613f17-9185-43ff-9cd8-46ceffbd2c92"
        },
        "item": {
          "id": "2b24a88a-aa1e-45a2-932d-b1c389d1bca6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e0b5c0f2-fee6-4573-9da7-bcc03043b095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df6737d-ba70-4b8b-878f-71baa9efde46",
        "cursor": {
          "ref": "350c0672-622e-4ba9-8974-21cd0a11bee7",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3c62b45a-5237-4d1c-a4b6-d7f1ade0eda8"
        },
        "item": {
          "id": "3df6737d-ba70-4b8b-878f-71baa9efde46",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "aa2bc413-ecfc-416e-986d-21d2bf11f25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d922c37-f1b5-4e62-9791-15a342d8012c",
        "cursor": {
          "ref": "215ab932-16a6-44f5-85ee-d1bb02f2cc4f",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fd4e57d5-b108-412b-b663-0e5c711e058a"
        },
        "item": {
          "id": "2d922c37-f1b5-4e62-9791-15a342d8012c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "18c212d2-f696-4655-ae5b-7704b1509e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936126ce-718d-45ce-8764-510a32310959",
        "cursor": {
          "ref": "ae3b62b1-df34-4790-bd24-37ac53d09193",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d3bbe0b5-6f2f-44a6-bb95-2868d09403ed"
        },
        "item": {
          "id": "936126ce-718d-45ce-8764-510a32310959",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "882ac953-e06a-4c94-8f90-071cf5ee1994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bfc5484-5e65-48ed-b057-b1c26e6cce61",
        "cursor": {
          "ref": "c836f66c-ada3-433a-a9cb-3f5e6701d22d",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "96bd0b49-2c6b-4dc0-a116-0487c687191c"
        },
        "item": {
          "id": "1bfc5484-5e65-48ed-b057-b1c26e6cce61",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "966256db-8d1d-48e7-811b-c6b93d2cfab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97877aff-9abd-4a77-b80e-4c1e1f3e7239",
        "cursor": {
          "ref": "5cfcbbc1-70af-4f7b-b1c1-8351701e238f",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8aaf92b4-cef3-4343-bfb3-965766b8222a"
        },
        "item": {
          "id": "97877aff-9abd-4a77-b80e-4c1e1f3e7239",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e37ec9a6-0fc1-49df-8865-15a72b224e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54bbb4f3-a1af-4e16-a441-2bf8a8f6928d",
        "cursor": {
          "ref": "44ee9de4-3025-42d4-bfb8-220373bd439f",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6a2c860c-0067-4254-aa6a-4d2ffce166bd"
        },
        "item": {
          "id": "54bbb4f3-a1af-4e16-a441-2bf8a8f6928d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4a2c9299-dd14-4d0e-b4df-8d8f2fb6aaa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86edef46-a33f-4e1e-b4bb-6f40ebd4800d",
        "cursor": {
          "ref": "caebae1d-86d0-436e-9247-a52f244c731e",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "66a2c6d0-0496-4252-a8c8-2a3e948f8d4c"
        },
        "item": {
          "id": "86edef46-a33f-4e1e-b4bb-6f40ebd4800d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f280dc66-1a2a-4e6c-a548-216e4e936a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fabdd7-1f8b-46af-a318-47edb0534036",
        "cursor": {
          "ref": "930ae0ed-72f0-4f7f-8c71-68e6adcda9fa",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3b240057-146e-4a52-b6f7-12d588c6b4bc"
        },
        "item": {
          "id": "d1fabdd7-1f8b-46af-a318-47edb0534036",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "76fb861a-fdf7-40a3-acfe-a340dd2ee9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac886c9-31e5-4b84-b8da-30ba82a585c6",
        "cursor": {
          "ref": "f556851a-09b2-435e-9fc6-912574d4b230",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "bc1c8fc1-e1bb-451e-89d1-115c4dac1d72"
        },
        "item": {
          "id": "7ac886c9-31e5-4b84-b8da-30ba82a585c6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7008f7fc-cb70-4508-95b1-93bde1adb1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca084bb9-b44b-4264-a1ca-22bcc3608043",
        "cursor": {
          "ref": "3113894b-3574-4f96-aed1-87d587d49a1c",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e63a1002-c987-4870-b39d-2f6058ea4c0a"
        },
        "item": {
          "id": "ca084bb9-b44b-4264-a1ca-22bcc3608043",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a0a2f915-6a6d-46d8-82f2-438c8f0e93d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36463d22-8c43-482e-a53f-6c55c0efe08a",
        "cursor": {
          "ref": "02948c86-5dca-46a4-a2b9-81157f0410b9",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "bd4b5943-db23-44fc-b011-7518c6e1389b"
        },
        "item": {
          "id": "36463d22-8c43-482e-a53f-6c55c0efe08a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "fa3b3530-74b3-4e5e-8d11-6c13d5e464ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504ce8f6-5ff4-49ed-a912-7f5cba697542",
        "cursor": {
          "ref": "e92dc515-ee0e-46f8-bb86-8d21268f79d1",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2e85ab60-9828-4c69-86bc-61fa06c57f9f"
        },
        "item": {
          "id": "504ce8f6-5ff4-49ed-a912-7f5cba697542",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b88883a0-5493-4ea6-8446-262563825d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0e40ae-637b-4d07-8e5f-d4efee05ee8b",
        "cursor": {
          "ref": "00c32d87-166e-4d01-901c-f980defe8939",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f365fd8b-b121-4374-bb00-834b15235dfc"
        },
        "item": {
          "id": "5d0e40ae-637b-4d07-8e5f-d4efee05ee8b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "357866bc-a21e-49b9-a7e4-286a70012bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8a3f45-9a19-4d34-8ac0-6ba31175c81b",
        "cursor": {
          "ref": "153d3c2f-d089-4464-8632-8f15bb14b28c",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "456b2a4b-0167-494b-88ea-33c6582067f5"
        },
        "item": {
          "id": "7c8a3f45-9a19-4d34-8ac0-6ba31175c81b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f0b16c49-bfd8-4767-a942-ea9646ec5f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3635d6ac-db1c-45e2-b885-b9b9b24ee5cf",
        "cursor": {
          "ref": "fc4f467c-4a8f-432b-a29c-be9fa803e955",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "14b388e2-9836-4d25-ae61-58cd1aa4103f"
        },
        "item": {
          "id": "3635d6ac-db1c-45e2-b885-b9b9b24ee5cf",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "42a8d7f1-4d63-49e4-b97a-7b66abb0313f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1d0dd2-5ff7-4458-b923-25a1f2dbc952",
        "cursor": {
          "ref": "90387327-5a12-496c-bccb-6319f410d9d3",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "327818ae-d161-4683-9a82-e13aa9d96350"
        },
        "item": {
          "id": "3d1d0dd2-5ff7-4458-b923-25a1f2dbc952",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "eee69d96-ffa9-4220-a850-07d3f4315b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1064
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e12defe-dbc1-4f08-9e59-d280dbff331e",
        "cursor": {
          "ref": "4eb95057-70ef-4d13-bb8d-b081e0d53bd6",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e9e312ac-5f65-47ec-9464-8f8628cbe979"
        },
        "item": {
          "id": "9e12defe-dbc1-4f08-9e59-d280dbff331e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8283deb6-5719-4a8b-8128-6f1dd51d69fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8907b4b-f1f8-4c0f-978b-3a0f2fd0c291",
        "cursor": {
          "ref": "bc3db77f-f7d5-45f5-9de3-9925d026736a",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "fa4b8205-c4e2-4909-ad4b-009bb3f2fede"
        },
        "item": {
          "id": "e8907b4b-f1f8-4c0f-978b-3a0f2fd0c291",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0e3c1412-62d8-48b6-b493-a0231432c288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6408b827-a01e-41e1-b904-1b845057776e",
        "cursor": {
          "ref": "4c9e8aa5-1bb6-4061-9987-ff4d111d09f6",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "771effec-883e-48c4-8c96-7ed521a90073"
        },
        "item": {
          "id": "6408b827-a01e-41e1-b904-1b845057776e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "821e77b5-4ed3-48c5-95ad-b99557bb5c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ac9ae7-8daa-45d7-b1a0-42512d578100",
        "cursor": {
          "ref": "83c4eb15-7baa-4bc6-b42e-51d399f07757",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0fbcab17-0d8a-4217-918a-822ead690dc9"
        },
        "item": {
          "id": "b5ac9ae7-8daa-45d7-b1a0-42512d578100",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "5c285463-fdc9-4f39-855a-afb44e1c8c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1087
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4411913b-ed81-41f5-b432-d0c6820f49ef",
        "cursor": {
          "ref": "9dfaa599-4ed4-47f4-8361-624142ab4679",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "799793fd-4f4a-4f06-b6b8-fff0200e5451"
        },
        "item": {
          "id": "4411913b-ed81-41f5-b432-d0c6820f49ef",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0d12b88f-e704-47eb-ac0c-38eba6fdeb2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3350ad8c-94a3-4ffa-8437-ac99cd60935a",
        "cursor": {
          "ref": "4d164ea4-1b94-4261-860e-6c2fc383eecf",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1a4bf44e-7eda-40c4-99dd-6f46f9d43f51"
        },
        "item": {
          "id": "3350ad8c-94a3-4ffa-8437-ac99cd60935a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "db80d93e-1087-42a0-b3e2-3244974cb428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1086
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650d31db-d004-4387-b283-10bc8d44db0f",
        "cursor": {
          "ref": "2a2667e1-4a64-4a6f-8203-8864f40d52d6",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "8cc94bbf-4b95-4912-8932-da650d433da1"
        },
        "item": {
          "id": "650d31db-d004-4387-b283-10bc8d44db0f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8a15230d-c1d7-45b0-bdf0-76e9a056a03c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56dd7933-7794-4bf4-9dec-973430a2ac9f",
        "cursor": {
          "ref": "a0d08ded-f132-4491-a892-1a6811bb6d16",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "45690a6b-c626-4bdd-8b51-c6b33e8ba093"
        },
        "item": {
          "id": "56dd7933-7794-4bf4-9dec-973430a2ac9f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c67bddc4-157c-49ae-b528-e1f440f5cfe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cedf01df-7b71-40c3-a57b-fa4a6422fe55",
        "cursor": {
          "ref": "2ea27484-f17a-4014-b9e0-56bfa1d04342",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "cb3903b6-44ee-46c4-8dd2-74f0a7348d69"
        },
        "item": {
          "id": "cedf01df-7b71-40c3-a57b-fa4a6422fe55",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "25a820dd-2632-478c-b667-9c62411b5eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1379
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2633ba-5eab-4a9a-879c-5b1595211613",
        "cursor": {
          "ref": "1bb99143-2f07-4fdd-acde-f0722fc74061",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3519dc92-0831-4fdc-aae4-b54d20a73edd"
        },
        "item": {
          "id": "9d2633ba-5eab-4a9a-879c-5b1595211613",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b6bb22b0-d453-4f8c-bc0d-ca3d7f2da1ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25bd407-76a1-4565-9818-32ccd9a57b54",
        "cursor": {
          "ref": "922f36f3-9dab-4880-b915-2cb2357fb5b0",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0f13d9a6-4ead-4531-a326-4974e4e87c71"
        },
        "item": {
          "id": "d25bd407-76a1-4565-9818-32ccd9a57b54",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f6b9a90a-f8ae-43e8-a76d-1aa84dae989b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1fe2157-5dad-436c-af28-f8081cba91a9",
        "cursor": {
          "ref": "a4f47aea-b381-4f00-8215-d38bd9d9101e",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c232cf74-4238-495a-bec4-9b283667890d"
        },
        "item": {
          "id": "c1fe2157-5dad-436c-af28-f8081cba91a9",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7f25f942-1dd4-45be-8bb8-0e7db5a7f380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588559bc-5cd4-4f14-a7d9-c87dbe24b328",
        "cursor": {
          "ref": "6249881c-5d92-4253-b2f3-6d8ccdd18a30",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c18cd602-672a-4989-b5c0-5ee504e0a56b"
        },
        "item": {
          "id": "588559bc-5cd4-4f14-a7d9-c87dbe24b328",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "de3d5fc0-2537-4ad8-80cb-e57abd8ff542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa9d700-be8b-4216-96d1-c606d5d3d412",
        "cursor": {
          "ref": "198cf9b9-c641-4700-a3f6-86ea2f039c9c",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5fedc0f4-0c52-46d1-8c57-0de5a032722f"
        },
        "item": {
          "id": "1fa9d700-be8b-4216-96d1-c606d5d3d412",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7307cabe-7efb-4659-b1c5-3d85d7bda88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e74257b-1c09-4fa6-b868-31ff429907d1",
        "cursor": {
          "ref": "6ee62535-36d4-4b37-87a0-f620b55c3d74",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "7f85e2cc-722c-4b2c-b6f1-22a40d0fc9be"
        },
        "item": {
          "id": "5e74257b-1c09-4fa6-b868-31ff429907d1",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7fc257d8-f656-4b2a-ad33-268b9f0f0304",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafa4176-3dd1-41bc-8fe0-834eaf164c86",
        "cursor": {
          "ref": "d3a712ae-1396-4e20-9f6c-b321b2a668f1",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "21d78604-19e4-4fad-bf22-a3a0e648ad52"
        },
        "item": {
          "id": "bafa4176-3dd1-41bc-8fe0-834eaf164c86",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2d2f822a-827e-4e0f-b650-8dbd020e2645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:102)"
            }
          }
        ]
      },
      {
        "id": "13fdc4ed-c474-49ce-b794-4c725266b193",
        "cursor": {
          "ref": "56e39e11-3808-44c4-9d93-f3e17e2f4659",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "833186a5-0654-40d3-8521-11a6bcefc159"
        },
        "item": {
          "id": "13fdc4ed-c474-49ce-b794-4c725266b193",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "120dc266-64fc-436e-ac78-a5e55102b643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "95bc94c7-eed4-461c-92bc-a1671aaf205b",
        "cursor": {
          "ref": "3ddac883-c564-48fb-bf58-6c571bf3e5e1",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5f1d1b98-aa80-4b06-8cdf-23665de7865f"
        },
        "item": {
          "id": "95bc94c7-eed4-461c-92bc-a1671aaf205b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0a9a36f5-a6b1-44d2-98c6-c251d6314448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "73be5e79-5885-4b25-925d-6c39fccb2725",
        "cursor": {
          "ref": "1c62042c-3473-4c14-9e43-7de9fab22bf0",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c0bd0a70-b40b-4788-aa6e-2333c3d82ed0"
        },
        "item": {
          "id": "73be5e79-5885-4b25-925d-6c39fccb2725",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "26cabc8f-5309-4b90-892d-12260e6be67c",
          "status": "Created",
          "code": 201,
          "responseTime": 7468,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c85c73-4ef6-441d-b3e7-9f8be221fc12",
        "cursor": {
          "ref": "b4219ab8-9a33-4744-8329-48f285409b8d",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ad1b8b0b-8a95-4db0-91a7-a1f7894dca2a"
        },
        "item": {
          "id": "c1c85c73-4ef6-441d-b3e7-9f8be221fc12",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "58b9e6d5-ac56-4a46-9c2c-aeb4c856e536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "34dbebfe-b707-41d2-baef-c333b40cfbe1",
        "cursor": {
          "ref": "527b67af-f600-43f7-aacd-df208dfe7017",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ba16c196-e5bd-4dc3-be14-3479972aff92"
        },
        "item": {
          "id": "34dbebfe-b707-41d2-baef-c333b40cfbe1",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "52ec2b64-5591-4b4b-b118-1d1341f645ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1190
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "ad815c12-9743-405e-966d-b002fc2407f4",
        "cursor": {
          "ref": "a062fbf3-c6db-4ecc-8c4b-a22ea8d6d24d",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "18041f7c-3d23-41b0-acf2-9816d6d9d5d8"
        },
        "item": {
          "id": "ad815c12-9743-405e-966d-b002fc2407f4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3e657099-f684-493c-81d6-1f2bc921c1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1919859-0578-4d96-bf29-515fe221324f",
        "cursor": {
          "ref": "7b5b1146-bd3c-4142-b98c-d2c9b3c30b24",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f7bd7eb9-3b56-46d3-8ee8-f6f821d5837e"
        },
        "item": {
          "id": "e1919859-0578-4d96-bf29-515fe221324f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b2bd88aa-e27c-4f66-92c4-9dc18da431d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c3bc84-052a-446c-813f-a9963ebfd1ae",
        "cursor": {
          "ref": "9467cfde-0f55-45b1-ad93-444916a127ab",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d4aedb9b-f341-4f11-afc1-de3229645350"
        },
        "item": {
          "id": "d6c3bc84-052a-446c-813f-a9963ebfd1ae",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "12266af9-aa43-40db-a830-5bf30ad99390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509b5691-dbae-4eab-9bf2-1da666fcf17a",
        "cursor": {
          "ref": "f1b6e121-23a0-471d-953a-7ff4641b0188",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c3f8bb74-7ae6-4dda-a835-e0b9d36fa2fd"
        },
        "item": {
          "id": "509b5691-dbae-4eab-9bf2-1da666fcf17a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1a4748b3-b3e1-4f2c-99e8-badef272319f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb373f2-46cb-421b-93e2-9977b5e36db7",
        "cursor": {
          "ref": "657d4347-3a91-474b-971d-f35efb0c7bf4",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "337439e2-364f-41fb-a731-c1c6f2bde038"
        },
        "item": {
          "id": "deb373f2-46cb-421b-93e2-9977b5e36db7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "efce3e58-d00a-4970-9afa-14d6cccea1ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f735dcb5-34e7-4e58-a7af-2f140d19ccef",
        "cursor": {
          "ref": "0ec7900d-bf26-4049-987f-c687790bea07",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6b3a9a4a-15d7-4544-a436-20a70e2c2437"
        },
        "item": {
          "id": "f735dcb5-34e7-4e58-a7af-2f140d19ccef",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ef57765f-66b4-4ad6-9be5-ef1c0766dd4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7a1c3a-739c-412b-9d20-6264c5f31f37",
        "cursor": {
          "ref": "f540c956-8329-4ff4-9efb-b04008094bd3",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5b0380a1-cd58-4cbe-a9b0-8d304530a2ba"
        },
        "item": {
          "id": "6f7a1c3a-739c-412b-9d20-6264c5f31f37",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d51af2ce-1b05-404e-a850-261fe8edd468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1444275-54a9-449f-896b-5c67b0097dfc",
        "cursor": {
          "ref": "f4de1858-20c3-43d7-8b0a-abf65f2fc131",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bbc89a9d-8865-4607-a0f9-7d10ef2e9932"
        },
        "item": {
          "id": "a1444275-54a9-449f-896b-5c67b0097dfc",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d3ea00a9-c8b7-47f5-8776-ea0bbfacde2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34d051e-e65f-4f6d-b7b9-3e6dcfacd68b",
        "cursor": {
          "ref": "6feb1586-cd14-4d26-8be5-cdb90e573037",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9976b46f-83ca-41cc-abcc-755e1ed4d176"
        },
        "item": {
          "id": "e34d051e-e65f-4f6d-b7b9-3e6dcfacd68b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d68defe0-227a-4b30-b182-be3641ae66db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3219541b-17b6-495b-a9ed-32848003191a",
        "cursor": {
          "ref": "2d5943b1-98fd-4fc9-9621-32640c2d94ab",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6e8b392c-4b72-456d-b204-4f63c723807e"
        },
        "item": {
          "id": "3219541b-17b6-495b-a9ed-32848003191a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f63e48a9-c863-4254-a1f7-afb5e35ff2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b803a015-d3bd-4a0e-b855-d434fbcb417b",
        "cursor": {
          "ref": "e21cfc9d-a67a-449a-a8c8-b88b8a5aef2e",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e2cb3c53-5b0d-4287-8a34-0a7f99805cb5"
        },
        "item": {
          "id": "b803a015-d3bd-4a0e-b855-d434fbcb417b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "33a71a9c-024b-4619-aacd-70f261224705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9e5532-0f53-4e61-aee3-f983d02dede5",
        "cursor": {
          "ref": "43cfcd7d-051f-40f4-a72e-f12c266c19c7",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "76765c34-8d76-42d5-bb4f-237c1b67c2ef"
        },
        "item": {
          "id": "4b9e5532-0f53-4e61-aee3-f983d02dede5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9255aefb-18e5-4fa1-8f1b-a96c2de76da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd40e68a-556b-4515-acfb-b899c7e5a8b6",
        "cursor": {
          "ref": "96a0d038-dce1-4173-8c21-eb01cbde1739",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cbdf6050-9b7e-4c48-b54d-b623de1442db"
        },
        "item": {
          "id": "bd40e68a-556b-4515-acfb-b899c7e5a8b6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5cab0d4d-7995-4c8b-a91d-b9c59000572d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d115508c-c2d3-43b5-850f-d2787e92704a",
        "cursor": {
          "ref": "44a67c83-98a2-4a77-a64d-28e804b0a025",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8c84c2cb-7628-4882-ba28-db125dddd7f4"
        },
        "item": {
          "id": "d115508c-c2d3-43b5-850f-d2787e92704a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "79277ee7-3333-430e-8032-7ddabe013dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748d3193-f607-4cc6-ae48-021b5d5a5e57",
        "cursor": {
          "ref": "7682049c-7dbb-4952-9e9a-9a533ecaa122",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8bdb4f31-179b-48ef-9fcb-1de9249d78ce"
        },
        "item": {
          "id": "748d3193-f607-4cc6-ae48-021b5d5a5e57",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d9b954b7-ae9e-434f-a085-a051a4f5dc2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27df3d63-669f-46c4-b0e6-f776f90b3381",
        "cursor": {
          "ref": "f9fa959e-79e3-4b36-9a3c-acdb06436330",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "bf7b8914-1ffa-42d2-bd8c-007aa6c9f99b"
        },
        "item": {
          "id": "27df3d63-669f-46c4-b0e6-f776f90b3381",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6c9aafa1-cbf6-431b-ab26-ec385619b25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e021270f-341d-4ce0-904f-3895e8e426aa",
        "cursor": {
          "ref": "4dffe98f-72a9-4586-8019-97956a648c6a",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "cbd49b36-a884-47c0-9a08-bfc9a2cf34c5"
        },
        "item": {
          "id": "e021270f-341d-4ce0-904f-3895e8e426aa",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9cdf0812-a2c8-4e8f-b77b-0ae3319f2f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b32042-e2c9-453d-bcc2-cfed30fe7253",
        "cursor": {
          "ref": "5e583575-d525-43fd-b575-1b437ff70a05",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "46d08ac3-25a4-48c1-a37e-82aa717bf51f"
        },
        "item": {
          "id": "21b32042-e2c9-453d-bcc2-cfed30fe7253",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ee3e25f8-0cc6-48fe-8dcb-4ef0a5acf1a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e546fea-826a-4b99-8ab7-6e4b9fd54d8e",
        "cursor": {
          "ref": "48072dbf-dc49-4d75-b34c-efbadd240cf9",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b7ca8f99-2008-4d3c-86a9-bdf044607ecd"
        },
        "item": {
          "id": "9e546fea-826a-4b99-8ab7-6e4b9fd54d8e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "743c8bee-afa0-4d2b-9077-f7cbc1b2e9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005d0fa9-065d-4c05-b819-932967ff2c9f",
        "cursor": {
          "ref": "ebe75689-b4be-4675-937a-2046f7865c43",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e80dd51a-5505-447c-a315-6953d3221a48"
        },
        "item": {
          "id": "005d0fa9-065d-4c05-b819-932967ff2c9f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "bec3173b-f30a-4d44-8590-15661e099ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3881b69e-749b-4b94-9048-6d5689b77a83",
        "cursor": {
          "ref": "9bd03455-dae8-40a8-bfac-91835fe6723d",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6b8caf69-1cdf-44ee-9c42-85bfeb8f82e7"
        },
        "item": {
          "id": "3881b69e-749b-4b94-9048-6d5689b77a83",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "604223c3-54b4-4088-b352-7012e3f1a404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47daab29-e250-4f66-9add-0ab06f00bf12",
        "cursor": {
          "ref": "7b2b4eac-ce13-4444-9093-4f091e5e91af",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d7bad249-6587-4fbf-83c3-64d5b7060189"
        },
        "item": {
          "id": "47daab29-e250-4f66-9add-0ab06f00bf12",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fba0eda1-213a-40a3-9765-9515d6fd104e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eca4b40-35fc-4031-8b20-18e94f14048c",
        "cursor": {
          "ref": "9e8f9ade-246b-4ffb-9365-01b37e226e19",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9f07921b-22f2-4610-997e-50bba45cd64e"
        },
        "item": {
          "id": "5eca4b40-35fc-4031-8b20-18e94f14048c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ef09215a-3d41-4451-a57d-5b0d933976ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d229487-67bf-4c3d-9aeb-9f5edc83e000",
        "cursor": {
          "ref": "7f7f8ca5-c89f-4269-99ee-5c829cb79d2a",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "65916bc4-b044-443d-9e43-e5f96dd6a197"
        },
        "item": {
          "id": "4d229487-67bf-4c3d-9aeb-9f5edc83e000",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "89b02c79-4369-41ea-9436-a67a084ed4c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a64a06-6a49-47f5-ba6f-427f2742f62a",
        "cursor": {
          "ref": "00a53b12-7290-497c-8f1e-28d952701472",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "2c354e63-512f-4122-a144-d3ccf65f47b3"
        },
        "item": {
          "id": "87a64a06-6a49-47f5-ba6f-427f2742f62a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1795e7b2-200c-47e1-8b42-b5d0c5c338ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd49b08a-0ce0-4908-bfe3-f716f51a09f2",
        "cursor": {
          "ref": "69284778-9db2-4b2f-a310-868795d9ddeb",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "29e7b759-6341-4401-8d6f-927e91fd7b53"
        },
        "item": {
          "id": "fd49b08a-0ce0-4908-bfe3-f716f51a09f2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2e2b592d-97ba-4316-84f9-04ef4d4f3bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9cfbecc-aeee-4caa-bd54-cd37699efd76",
        "cursor": {
          "ref": "6f9e0db7-c2d9-4b90-9850-6e6578928d9c",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "94659d91-4106-4a8d-a2c1-eee3fd7e9cc3"
        },
        "item": {
          "id": "e9cfbecc-aeee-4caa-bd54-cd37699efd76",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c02a4507-d24d-4925-9697-4b4b59ed90c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2c7392-5f27-4340-a1cf-6dec2b90f078",
        "cursor": {
          "ref": "98a92ac7-69d4-454a-a809-73f2b4502b5d",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "53e63a44-12c7-4a97-9da6-e0fdc5683e69"
        },
        "item": {
          "id": "3e2c7392-5f27-4340-a1cf-6dec2b90f078",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "03310ad3-a5e7-479b-b078-1f1c226ed7fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089b728b-80cc-4f32-8421-92320601f5ba",
        "cursor": {
          "ref": "90daa127-3bbb-4ed2-bcd6-3b87dae281fd",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "355b09d2-fbbe-4885-94e3-7dd94526c3ce"
        },
        "item": {
          "id": "089b728b-80cc-4f32-8421-92320601f5ba",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2f8edc9d-6157-40d6-85fb-ae5c235d785d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46713a20-a1a0-4aa6-a821-787c61c0a8ce",
        "cursor": {
          "ref": "312fd668-da19-4860-9dd3-fd768e8d3aa5",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9193bb14-a883-4a2b-840c-6864f8b34a05"
        },
        "item": {
          "id": "46713a20-a1a0-4aa6-a821-787c61c0a8ce",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b6968c22-d712-46a8-8122-91198dd30adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b18a9a1-5f38-41fb-a324-5ea873340c1d",
        "cursor": {
          "ref": "41809b98-4614-4909-932c-c7af0246a758",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "bb43040c-acfd-445e-a3a5-834f5d4282cb"
        },
        "item": {
          "id": "4b18a9a1-5f38-41fb-a324-5ea873340c1d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "61a07107-3307-41f0-ad60-c25798f13595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8048a242-6373-4fbe-88c3-b084804d966d",
        "cursor": {
          "ref": "345b5553-548a-40e3-b307-1378bb6b7eff",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "39eb0ff8-b632-4bfb-a6ba-78cbfc694323"
        },
        "item": {
          "id": "8048a242-6373-4fbe-88c3-b084804d966d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d814a4ca-99dd-4b64-873c-cded66d19c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721da4e3-6441-412b-81c2-de41f5f0a4b7",
        "cursor": {
          "ref": "67e5784d-359c-4d23-a16d-aff2e91ab4db",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "08242639-03ee-4317-b2b7-ba3fac45acd1"
        },
        "item": {
          "id": "721da4e3-6441-412b-81c2-de41f5f0a4b7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4e8264eb-ac59-4f8c-b0c5-6903b2639eb8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f78662-82d4-48d5-8dbe-14d4ed1a051e",
        "cursor": {
          "ref": "eb614448-ab60-48f7-9fdf-f2a2f269686c",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "424155cb-a0a1-4cab-a481-b72c90b4bc91"
        },
        "item": {
          "id": "e7f78662-82d4-48d5-8dbe-14d4ed1a051e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2bda3891-1490-4a58-bc58-7caedb74956c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1428d987-cfd7-4eee-ae4b-fecda7c74d68",
        "cursor": {
          "ref": "fc4cfe60-854c-4bcd-8779-5297a4afb16c",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a2bc6330-dd50-4f52-ae23-dc38240d5c90"
        },
        "item": {
          "id": "1428d987-cfd7-4eee-ae4b-fecda7c74d68",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "29b39741-9dd3-46cd-b1b6-82eb906bd44b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c814ebe8-f4ac-4cbd-99aa-e8e1af1444c4",
        "cursor": {
          "ref": "570bd27a-eeed-4866-8391-d18a1fdf67ec",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "fdb50d0d-1702-432b-9db3-8318891960bf"
        },
        "item": {
          "id": "c814ebe8-f4ac-4cbd-99aa-e8e1af1444c4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "13a00146-c400-46d8-8c42-331b69f5f279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff09d7f2-7eaf-4687-8028-b0fe653d5e74",
        "cursor": {
          "ref": "1847205f-a6db-47a7-83f6-6fcd9d1f02fc",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4bc40d86-4e43-436d-bc18-baa8f8a6e930"
        },
        "item": {
          "id": "ff09d7f2-7eaf-4687-8028-b0fe653d5e74",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "89eccc86-e3a4-4666-a771-374c1f6d3e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c4dd21-04c9-4289-8757-6c574c0593df",
        "cursor": {
          "ref": "64e8ddca-70af-4b62-97bb-5deb44cdf00f",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6e6463f2-cecf-43b9-95e0-234a65774897"
        },
        "item": {
          "id": "c6c4dd21-04c9-4289-8757-6c574c0593df",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8a5785ba-a4c8-47b8-912b-aed81d15a342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15febe44-cc26-4f2b-9f1a-c68d75c9a776",
        "cursor": {
          "ref": "e457de6e-d3b2-4993-b783-9a56c7872f90",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "032a5912-5fc8-4ac8-a4fb-c9d8aaaf1cbf"
        },
        "item": {
          "id": "15febe44-cc26-4f2b-9f1a-c68d75c9a776",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f13474f6-0dc6-4c7f-b058-71f4f42d07a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb424054-e079-4a55-a744-37d2da172e59",
        "cursor": {
          "ref": "9a8c60a9-fa7a-4922-b7ef-1e60e0c668b7",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9e4b1de1-ba25-4d35-99c8-977ed1625bc0"
        },
        "item": {
          "id": "cb424054-e079-4a55-a744-37d2da172e59",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e39094c3-210d-4db9-b9d0-b9b869991ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2adc2a8d-86da-4819-9ba3-6d2b9fb752b2",
        "cursor": {
          "ref": "21673bfe-382f-4fb7-a4ba-64f9943c4a34",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c017ccce-44dd-4119-91d9-745b3085ebf8"
        },
        "item": {
          "id": "2adc2a8d-86da-4819-9ba3-6d2b9fb752b2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "87129046-509c-4a88-a337-747efcadf87a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b5a04c-820c-468b-8fa5-e319449eb06f",
        "cursor": {
          "ref": "40c42b66-37e7-47dc-ac0e-6c9246e0e6db",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "83dd715a-3e73-4bb7-aa53-7cb084d08404"
        },
        "item": {
          "id": "08b5a04c-820c-468b-8fa5-e319449eb06f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6d9a01a1-1c74-49b3-b035-4c2df9001618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb5122e-094e-44ca-8fb2-66d004cba774",
        "cursor": {
          "ref": "f06fee7d-703a-4f62-b52a-8f14bf889229",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9671b8ac-594e-461d-a800-c6db54603f24"
        },
        "item": {
          "id": "5eb5122e-094e-44ca-8fb2-66d004cba774",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7dcbe6e1-4b6e-4414-a107-a70dbc3bcc17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb889d00-d089-4eae-b208-992e96d46536",
        "cursor": {
          "ref": "dbbdb419-f9ae-4fcb-aeb1-673b1835b2d0",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a6bdf25d-48a2-41ff-87d1-073c29892055"
        },
        "item": {
          "id": "fb889d00-d089-4eae-b208-992e96d46536",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a93bdaa2-ca08-4320-b5f7-f9f3559abe58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df6f79d-0e60-4631-adc3-f0cdca72955d",
        "cursor": {
          "ref": "adf481f7-2d02-4aaf-bfa3-826e302f4420",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "db79cfce-75e9-47d6-9955-178330115ba2"
        },
        "item": {
          "id": "8df6f79d-0e60-4631-adc3-f0cdca72955d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6dc5b38b-39e2-4a77-b80f-10fd8565ff32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd13a0e3-b691-40f3-920f-b1421f983de6",
        "cursor": {
          "ref": "c3e657e2-b55c-4aab-9f00-d17de59649cf",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c76642c9-c75a-47af-bac2-8aacba9c2894"
        },
        "item": {
          "id": "dd13a0e3-b691-40f3-920f-b1421f983de6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7a809fd1-9fe2-43c3-8cca-8b6b695e13a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32577145-2204-4ad4-ad22-4e4ee845cd2f",
        "cursor": {
          "ref": "135690fc-8525-4275-937d-d6fa16e0270c",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7771c3a2-5c53-4c60-9f18-85d942e589ba"
        },
        "item": {
          "id": "32577145-2204-4ad4-ad22-4e4ee845cd2f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8525a24a-4e5d-406b-a318-59d641aa4fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed5396e-9fca-4611-8c7c-5ae4cf0d0a84",
        "cursor": {
          "ref": "72e663d0-5ceb-44d5-9991-bc1c0b673292",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "93729164-6d46-4b65-9948-7b5c59bc1826"
        },
        "item": {
          "id": "fed5396e-9fca-4611-8c7c-5ae4cf0d0a84",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "99b9a1f7-2204-42e6-ac87-a332270cd7a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e6a61e-ec3c-46a6-85ee-f57fcdf32da2",
        "cursor": {
          "ref": "cc875aa5-9932-42ce-8446-5377d0c1c942",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9944f4b8-2a6b-4a43-950f-7970c08caa39"
        },
        "item": {
          "id": "34e6a61e-ec3c-46a6-85ee-f57fcdf32da2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a55a2a4a-665e-4c41-919c-50cfdc9498a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfdd6833-2e79-4136-96d3-7e8a3d23fd9d",
        "cursor": {
          "ref": "4782f7b6-d8c7-4929-879d-4b447e18d3d9",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "10c6b36b-039c-46df-a050-630decd9c06d"
        },
        "item": {
          "id": "bfdd6833-2e79-4136-96d3-7e8a3d23fd9d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e94cd13a-aea2-4eba-9dca-168331f00dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b376c71-d82e-4c54-872d-b8a95b26ccf6",
        "cursor": {
          "ref": "d16a53d7-c8d3-492b-8ade-f3ecbfbb6788",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "08cd45c7-be31-403d-adf5-04dc4f9ca366"
        },
        "item": {
          "id": "6b376c71-d82e-4c54-872d-b8a95b26ccf6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b5e40b8f-143e-4f15-822c-65c2df25d548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb9d8e6-ef3c-40ad-9843-226e4788d318",
        "cursor": {
          "ref": "a384c85c-95d2-4aa9-a73d-9f900bd8b441",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b9616933-943b-456a-bf1c-035295192d7d"
        },
        "item": {
          "id": "efb9d8e6-ef3c-40ad-9843-226e4788d318",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a92a778d-bfbb-4ddb-989e-a8b632fdf725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21bf1f95-f0a8-41e8-a7a2-b77e4b3ba6da",
        "cursor": {
          "ref": "9d3db41d-08d7-4774-a4fa-7823e8d9d061",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2737922c-a6cd-4888-8426-e17782e4e94d"
        },
        "item": {
          "id": "21bf1f95-f0a8-41e8-a7a2-b77e4b3ba6da",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6d9ae021-291b-4f58-8eea-161c4e085252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe3df14-3bbe-4fdb-a464-712d7d3f7f65",
        "cursor": {
          "ref": "b119d719-48c2-49d6-812c-20eb63f40f0a",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4dc3202b-93b0-4d97-aabe-22c68140ccea"
        },
        "item": {
          "id": "abe3df14-3bbe-4fdb-a464-712d7d3f7f65",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6890f517-ee51-4739-81b0-7d71dbf730ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01db50fc-b41a-4ea5-b56d-05489633d0fe",
        "cursor": {
          "ref": "9285dc1b-0fca-40ef-a9ec-ea442ae8c148",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "235dcdaf-3288-4c1d-8e28-27428b136188"
        },
        "item": {
          "id": "01db50fc-b41a-4ea5-b56d-05489633d0fe",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4b24b773-04d1-4539-a0e2-15b8b2994c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3a8ff0-4529-457f-bae6-e7c833de7a14",
        "cursor": {
          "ref": "46d9b932-fb75-4444-b321-857142063029",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c807b2ad-765b-4a80-9b0e-1e7a1154b169"
        },
        "item": {
          "id": "4b3a8ff0-4529-457f-bae6-e7c833de7a14",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e0dcd96e-017b-4760-92b5-a3e2ef0d1cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f8f12c-ee21-4a76-964a-4b82e4a98dc1",
        "cursor": {
          "ref": "0e0e5634-7626-49cf-86da-92d8261a2dba",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e4fb05bc-478d-4c7b-8523-8d787ba78853"
        },
        "item": {
          "id": "68f8f12c-ee21-4a76-964a-4b82e4a98dc1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a303cbba-6021-43f3-83e8-44970d401a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7ab7df-01d6-4679-8890-675eb41e0a34",
        "cursor": {
          "ref": "49145411-d169-4368-87c9-50f035042094",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "560d081d-c2c2-47a5-ad7a-9955929ad3d3"
        },
        "item": {
          "id": "0f7ab7df-01d6-4679-8890-675eb41e0a34",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1546ce6e-42fd-4e55-b0e3-83dda20041d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d502f4c2-5f73-483a-bf8a-5804b946c14c",
        "cursor": {
          "ref": "3cc97cf3-4817-4400-bb9b-c57fb0e17089",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f4cc87d9-759f-40a5-9336-2c9bc2bcabe2"
        },
        "item": {
          "id": "d502f4c2-5f73-483a-bf8a-5804b946c14c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d75b4599-2f06-4008-8733-0bf7f46e1987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20cd19ea-fffd-45f3-902d-f7a871a3e770",
        "cursor": {
          "ref": "2c94158b-c57d-4102-9e67-1d5a1a6558b3",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "140837db-0b36-4577-a014-c2326af9e54d"
        },
        "item": {
          "id": "20cd19ea-fffd-45f3-902d-f7a871a3e770",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "677f6eba-7332-42b7-a333-910f2b4b6471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ace8b68-74ca-481b-b8dc-2242b47b296f",
        "cursor": {
          "ref": "42dc255b-9510-4e74-a910-8b8f8a4e0381",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "92b2977f-f0bb-4399-872a-9c1e864df69b"
        },
        "item": {
          "id": "9ace8b68-74ca-481b-b8dc-2242b47b296f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "36b6194c-6c92-4d0e-86f0-eb75e84fe1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0658a47f-a122-48d0-820f-a9f3800ca9d9",
        "cursor": {
          "ref": "3877804f-b883-473b-af72-fd3986b34c89",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "28a61dc0-d18b-4147-a9f5-b02debac243c"
        },
        "item": {
          "id": "0658a47f-a122-48d0-820f-a9f3800ca9d9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c73959dc-dbf1-43ef-b4b4-3451e8d3ea68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4649b3-0f1c-401f-801f-4a797208de19",
        "cursor": {
          "ref": "a3e8849e-aeb4-4d10-8072-0b52aeb0b94a",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "cc31609e-631c-4ba6-bcc3-7231ecc4ba59"
        },
        "item": {
          "id": "8e4649b3-0f1c-401f-801f-4a797208de19",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6c0be91a-8969-4f80-ac67-cd2597dbdc77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc043bf-a7e4-4b15-bba3-d6840e4c4e5b",
        "cursor": {
          "ref": "320b64f8-0324-41fd-85f1-31e21029b134",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5d0e8915-d0c8-4c7e-ad63-2e7b1301f16d"
        },
        "item": {
          "id": "9cc043bf-a7e4-4b15-bba3-d6840e4c4e5b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e8b7bb4e-fa50-4252-9955-aabaf68213d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0acf3d-4c7e-4ff6-a6a0-22189ba5e8a7",
        "cursor": {
          "ref": "cf57f625-cbf0-4196-91e2-3b1f99e498fa",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "93f1994c-93b6-4136-94ea-d1306b893473"
        },
        "item": {
          "id": "5a0acf3d-4c7e-4ff6-a6a0-22189ba5e8a7",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6e3f574b-dd70-41ff-b3a5-047c0219052e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82174b11-36ea-41ac-9a5e-7b0f473048e7",
        "cursor": {
          "ref": "d71e5a82-96e9-4161-88a4-2e60b6d4853a",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8dbb5634-6b17-4c60-80b5-532765eebdaa"
        },
        "item": {
          "id": "82174b11-36ea-41ac-9a5e-7b0f473048e7",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "24b8a7d6-1899-474d-a0d4-d11f6651dd93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972e9637-150b-458d-95dc-030f17878b9d",
        "cursor": {
          "ref": "64f6bf7f-6524-4847-8d11-95b1997bfc8e",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3869c9fe-dcf7-4394-b21b-baccb0ffecd6"
        },
        "item": {
          "id": "972e9637-150b-458d-95dc-030f17878b9d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "080d9e17-38ba-4270-aee4-ec5f4413abe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea56727-49af-4d87-8183-45d9f95ac02b",
        "cursor": {
          "ref": "51e263ca-cb96-469b-a14f-115a15326934",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "cd6e83b7-163b-4560-ae24-0b9633a58236"
        },
        "item": {
          "id": "8ea56727-49af-4d87-8183-45d9f95ac02b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b9359e26-e314-41ef-9ccf-ebbda94ee79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7041d3f-4082-43a9-aa69-36e3e47c6247",
        "cursor": {
          "ref": "48dcfdaa-62b4-4088-9a72-ad831dc6716b",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "03680361-092c-441f-b8bb-c5d758f1d8c2"
        },
        "item": {
          "id": "f7041d3f-4082-43a9-aa69-36e3e47c6247",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "76d70504-d248-4fe9-a67d-5768d3a97410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a78dd37-7291-4165-b6de-94bb3b038c68",
        "cursor": {
          "ref": "fd6f202c-c603-4546-9e76-9b059c933f0d",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7213d101-7280-4ddd-afa7-4e6ce6cfe1a1"
        },
        "item": {
          "id": "6a78dd37-7291-4165-b6de-94bb3b038c68",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d1a170f7-d7fa-40dd-adb4-90d0ad0c0e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb3665e-dbf2-416b-a504-d4e677f951c5",
        "cursor": {
          "ref": "094f68e0-5f14-4ebc-aa61-633f5f459b14",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0e006f56-f521-445e-ab98-208c144036c5"
        },
        "item": {
          "id": "afb3665e-dbf2-416b-a504-d4e677f951c5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3ea4ec65-9889-4832-94c9-2866f1f78c85",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6962e6be-a4a6-4ff9-8175-a56f152e703c",
        "cursor": {
          "ref": "31662f73-af07-4af2-9ca9-058406ddab29",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ae27ff98-5e03-41a3-bba4-81f506f0747f"
        },
        "item": {
          "id": "6962e6be-a4a6-4ff9-8175-a56f152e703c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c7131120-9947-4962-99ca-a26993bd28a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306ee740-430b-42fe-95ec-accb6fdb8050",
        "cursor": {
          "ref": "a5350a8d-6322-4617-89e9-f15f4b6e65a6",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "13d725fa-de2e-4d48-ae9d-055b99154463"
        },
        "item": {
          "id": "306ee740-430b-42fe-95ec-accb6fdb8050",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e4160463-58fa-475f-b9ba-d26a102c74c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d025d3fd-d3b3-442b-b253-83886edc797f",
        "cursor": {
          "ref": "101d345e-b6e8-4353-937e-25ec79bb91ca",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "dccae51b-872d-42bf-987a-2d88cbb5a8e8"
        },
        "item": {
          "id": "d025d3fd-d3b3-442b-b253-83886edc797f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "37744b20-5101-49e3-bf73-981c4f6bbd45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f0646c-a253-4f9f-aa3f-1b1fe7c1d467",
        "cursor": {
          "ref": "cf38602d-dfe0-40c5-8908-16d66bfdb62d",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "74310b04-7dd8-42f2-8dc3-724061fa7fcb"
        },
        "item": {
          "id": "d2f0646c-a253-4f9f-aa3f-1b1fe7c1d467",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d79676de-003b-4fde-8da5-9b459963a95b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bab2724-1ca2-41af-8261-97a998c0d1c4",
        "cursor": {
          "ref": "6afb3988-5baf-4f51-9f9f-b1259e6987da",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e0c74d9d-6465-4553-a2d7-3ba67f52b378"
        },
        "item": {
          "id": "3bab2724-1ca2-41af-8261-97a998c0d1c4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f370b36b-903f-4fdc-aa5f-c175f81580ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148afd5a-0917-4916-b23f-e400c8485d03",
        "cursor": {
          "ref": "4d291b33-8e22-49c3-9827-c4ed135ee4df",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "24578de2-6e14-449f-a785-554a5c13615f"
        },
        "item": {
          "id": "148afd5a-0917-4916-b23f-e400c8485d03",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "64e089ea-fda1-4c5b-9483-b828193f3ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73ca33f-bb08-432e-80f9-995b1130bdde",
        "cursor": {
          "ref": "f9de6af0-b867-4e85-94ae-a56a009915ed",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7eb55ecd-1c58-436f-9d2a-377a41fdec11"
        },
        "item": {
          "id": "f73ca33f-bb08-432e-80f9-995b1130bdde",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0afb6101-bc72-4262-94d9-5bdb79b9771d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ffa29b1-4feb-4323-a824-a68b1946f941",
        "cursor": {
          "ref": "bc8437a9-71f0-4b4f-9ced-1c0b39fd7377",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "97e8ae1f-f8f7-4513-8e10-adf511095a9f"
        },
        "item": {
          "id": "1ffa29b1-4feb-4323-a824-a68b1946f941",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a508f4dd-15b7-4d3d-8bfe-0da38f0a0e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91c9236-4ce0-4e67-9516-b817b012da24",
        "cursor": {
          "ref": "9b619b05-709f-41f7-9148-14ea580bb8bf",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0cd0ccac-e226-4cfe-8633-d447c82d8bb0"
        },
        "item": {
          "id": "b91c9236-4ce0-4e67-9516-b817b012da24",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "cb147887-0606-4a5f-9141-a9715a49ff85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e29a66-50ff-4c5d-9e44-95dcf9183004",
        "cursor": {
          "ref": "7a1889bd-5c67-4a28-a4d3-08a82b5872ea",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7415370b-0f59-43fe-bd62-40c1c1e29543"
        },
        "item": {
          "id": "59e29a66-50ff-4c5d-9e44-95dcf9183004",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "26e13f32-7368-49fb-bd8c-93fa6c91a758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c2d3f2-71c2-4d06-a6d1-f13dca6f131c",
        "cursor": {
          "ref": "586c39cd-e5c0-435e-bdcb-b5d76cc2e047",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "bfd7e71c-ac2b-4e1e-a73a-86f6a4459982"
        },
        "item": {
          "id": "e9c2d3f2-71c2-4d06-a6d1-f13dca6f131c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4eb8bbc4-0d11-4b04-b200-fd6549c41fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2301beb-efd4-41e7-ac64-4ae979fd0bb2",
        "cursor": {
          "ref": "fdb7a5b9-05e3-4c79-9266-f55c0c456ed1",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1c42c71a-22ea-4d33-be4b-a46044c63964"
        },
        "item": {
          "id": "b2301beb-efd4-41e7-ac64-4ae979fd0bb2",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "14340ae2-99a9-4d3c-84bb-ad7a28ee6b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46565e45-b66f-4141-ab3b-ec3958c8508f",
        "cursor": {
          "ref": "5dceb471-a733-4cd5-abe8-4edf705e4b6e",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c8eb3255-0536-485b-9f9c-9c14db8a6bb5"
        },
        "item": {
          "id": "46565e45-b66f-4141-ab3b-ec3958c8508f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6a1ad0ea-e607-4779-a39d-680d9b2df80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17a2d4c-5f11-4b01-883b-a75e8b3aecb8",
        "cursor": {
          "ref": "93a59554-2cbc-4b63-b5d6-772e57860242",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f4938f18-b368-4ef6-a57d-328bb5dbd2d1"
        },
        "item": {
          "id": "b17a2d4c-5f11-4b01-883b-a75e8b3aecb8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1f4faa44-e987-4ef1-8e77-d3a9a9f3d445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa32dcf-e636-45bd-82ad-c8d7a8a83abf",
        "cursor": {
          "ref": "384b0685-bef4-42d1-91c1-bd45b8e6cdbf",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b7aacfc1-787c-4872-a97d-6ad6e4332c80"
        },
        "item": {
          "id": "3fa32dcf-e636-45bd-82ad-c8d7a8a83abf",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9d5f6fed-371f-46cb-bbaa-abcae60b097c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ab6202-b672-4e1e-8310-24f71b60d63e",
        "cursor": {
          "ref": "8b6e8dfb-369f-48b7-b34a-86e1ee97c25c",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2c204daf-f0fb-43cf-9349-39779a17fac7"
        },
        "item": {
          "id": "e1ab6202-b672-4e1e-8310-24f71b60d63e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c379ce32-96dc-41e8-b4bf-72aaaa3f9274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0e7f4b-de20-44e3-9aa3-afb160bcf45a",
        "cursor": {
          "ref": "46dcb008-9754-4fd8-9a96-60f995bd0b3e",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "cc621802-0991-4853-b2f5-84d02a7b1d18"
        },
        "item": {
          "id": "1e0e7f4b-de20-44e3-9aa3-afb160bcf45a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2591b4fa-53ac-4078-88ac-d48dae4c5969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea803f8-ec2b-4da2-8e22-d91314da4d9c",
        "cursor": {
          "ref": "9c0d17b9-d206-4452-8ff2-696993fc66e8",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6f631b9f-0812-4f00-a5c5-6c7ccae1fc9a"
        },
        "item": {
          "id": "3ea803f8-ec2b-4da2-8e22-d91314da4d9c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "bb9eb5a5-a546-41d3-a780-bba09c02e489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87785b6f-a9f9-4d41-b62e-580fadb705e6",
        "cursor": {
          "ref": "8e1ce98f-b33d-4f99-8173-9883577d51c9",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "07339069-3e73-424b-9ee5-4df415d09dd5"
        },
        "item": {
          "id": "87785b6f-a9f9-4d41-b62e-580fadb705e6",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a4e1bcf4-d120-4e6a-9a27-47fb5ddb8164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916cc489-5f89-49d8-aea9-e3d6b2f5d260",
        "cursor": {
          "ref": "58ba3809-8717-48ea-a4cb-01a8e248424c",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "342ebf58-bb50-4674-87dd-109ca92f66cf"
        },
        "item": {
          "id": "916cc489-5f89-49d8-aea9-e3d6b2f5d260",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "19cc05ff-0124-441a-8ad7-007c79ffdb7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed83b46-d2f8-476b-9320-f0b620334a9c",
        "cursor": {
          "ref": "e080b741-62ab-467d-84a5-b8ca35756c8c",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5e042cc8-43d5-4b31-8b1f-13ef9d20a8ef"
        },
        "item": {
          "id": "4ed83b46-d2f8-476b-9320-f0b620334a9c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c51055e5-b6ba-45a7-92d0-ec9bc9a1c2de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1a14a1-99b0-493a-a498-6331f986bee3",
        "cursor": {
          "ref": "d9ba2a07-786c-4c90-9de8-5660b0e74bd8",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "104f5e46-5408-4dbe-9ca0-851a88469605"
        },
        "item": {
          "id": "ad1a14a1-99b0-493a-a498-6331f986bee3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "dc0a8435-0b6f-404e-8967-00e323081ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842193f4-eaf9-4041-b99b-e191ed03c7a4",
        "cursor": {
          "ref": "c5daa36b-c500-4bb7-9ec2-60d0fb39102e",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9ca223d3-e48b-47d2-9015-e2051f979033"
        },
        "item": {
          "id": "842193f4-eaf9-4041-b99b-e191ed03c7a4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "acec7a40-0632-447d-b287-b6fe20ccc4d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4290a7ce-5182-46e9-9b72-fd2f176065f6",
        "cursor": {
          "ref": "780833fb-9b55-4830-a033-5abbbae2ee9d",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1814c39e-4834-4add-9941-58d8a4d82285"
        },
        "item": {
          "id": "4290a7ce-5182-46e9-9b72-fd2f176065f6",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "99d13796-29b6-4193-aff7-402ccf33601a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747d3c59-d52d-4c43-9757-54bfc9e86578",
        "cursor": {
          "ref": "31f8cb5b-f733-4c59-9fc0-449595ba15a5",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7160771d-8f05-4859-8a93-5a8d3c7c4ea4"
        },
        "item": {
          "id": "747d3c59-d52d-4c43-9757-54bfc9e86578",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e1c4eedd-4125-489b-904f-430d8d687bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d605d20f-43be-4a09-a6d0-d76969902333",
        "cursor": {
          "ref": "e4cf1e08-0bfc-4740-a06d-b22334294807",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c1c9ce1e-f9e9-4480-be89-2d13fd495b8e"
        },
        "item": {
          "id": "d605d20f-43be-4a09-a6d0-d76969902333",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c72fc13b-f6c7-4365-8d85-360ef4778256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1125bf5d-1b46-4e2f-b4d3-63590aba0471",
        "cursor": {
          "ref": "223d6f89-0406-4596-9728-7b33fa5443f9",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0a456f1b-6c6c-41b3-b4c2-b37d990ee7b8"
        },
        "item": {
          "id": "1125bf5d-1b46-4e2f-b4d3-63590aba0471",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "570d29cd-d684-4d56-876f-344f0efc7b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84cd29b7-c892-48c1-abff-af083ed0ac21",
        "cursor": {
          "ref": "d45ba622-7d47-4dd3-a50c-330b9d273774",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8ac7affc-0ea5-4789-a02e-e47bf53f85d0"
        },
        "item": {
          "id": "84cd29b7-c892-48c1-abff-af083ed0ac21",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c80d399d-1282-4b9d-ad2f-7774bdb2e24e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f720333-1ef2-415e-83c3-13523c06435e",
        "cursor": {
          "ref": "236a76e9-5c73-4bd6-acc2-ed7891ebe261",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9507589d-a73d-4176-9077-39b1c686379f"
        },
        "item": {
          "id": "9f720333-1ef2-415e-83c3-13523c06435e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f052572e-c973-4efb-aaab-0e83e20998b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4428539f-e418-4630-9f8f-9ab9cd772f47",
        "cursor": {
          "ref": "65e65da7-fd79-481c-ac24-05efb0928231",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e3f3c24a-5460-4f43-9296-fe3c967b6de0"
        },
        "item": {
          "id": "4428539f-e418-4630-9f8f-9ab9cd772f47",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ebabadb0-6cfd-4d45-92a0-06888a199f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f397395-24c7-4531-8054-ed4f41914c98",
        "cursor": {
          "ref": "c6ae911a-6193-4c30-bcac-81de0be79feb",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "118482a6-55ba-4576-9550-0f912296c0f2"
        },
        "item": {
          "id": "6f397395-24c7-4531-8054-ed4f41914c98",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8e7f35a5-a067-4ad9-8b72-59303a7871e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19ac448-ffb6-4851-a089-8db445d26259",
        "cursor": {
          "ref": "4bf879ac-5f35-4bb3-aa4f-8b05fdf846c2",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a1aebe23-045e-4e98-ae6f-0e9b088b614c"
        },
        "item": {
          "id": "f19ac448-ffb6-4851-a089-8db445d26259",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5ca7dfa9-0c8a-411f-9ff1-b87facb376e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5cdbc2e-c6e1-4e45-80b2-5de4a93070a5",
        "cursor": {
          "ref": "102b352c-b201-48a8-95a1-5e6921507a7c",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f88d4dfc-7812-4651-b97a-afde608a7e9d"
        },
        "item": {
          "id": "b5cdbc2e-c6e1-4e45-80b2-5de4a93070a5",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "63c3e4b8-9332-4ed7-91ac-0bc19f763f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928f3ba8-4829-408a-b692-77357168feb6",
        "cursor": {
          "ref": "764e3eda-daeb-4884-9b91-fb194add73c1",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8cee0e88-8aa5-460d-b839-044bf6773de2"
        },
        "item": {
          "id": "928f3ba8-4829-408a-b692-77357168feb6",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cea163dc-8640-4ec1-9860-c70801420559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b66114d-05be-437c-88be-843ac892a156",
        "cursor": {
          "ref": "e5296a4f-89d2-402c-baae-9b9c2b72269a",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "75f33e35-d613-4bc6-9231-0da212640ec8"
        },
        "item": {
          "id": "2b66114d-05be-437c-88be-843ac892a156",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c7d231f8-10fc-467f-a7e9-51087f886bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305913a8-a874-40cb-b368-e6ec5313b713",
        "cursor": {
          "ref": "85981f63-0e53-4915-bb3b-906f2a0b8bd3",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9d171c75-654d-4574-bfbe-d579408a7363"
        },
        "item": {
          "id": "305913a8-a874-40cb-b368-e6ec5313b713",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "fe5c9886-98f3-4167-9562-39e69d8f094d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28d68c6-e3a0-4c7f-98a3-290b7bbc8dee",
        "cursor": {
          "ref": "be2efa7b-20cd-45bc-9665-073af801a8a4",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "42a0f725-ad13-4096-b7a4-06d419a5380d"
        },
        "item": {
          "id": "e28d68c6-e3a0-4c7f-98a3-290b7bbc8dee",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "250841e1-c7c8-4409-8fd3-edeca815da78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62d8d83-19f3-41cb-acce-54497c387a85",
        "cursor": {
          "ref": "a976227f-6424-4271-8396-6edbd15db3ab",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6a038806-032e-424f-894d-5749e0942cd7"
        },
        "item": {
          "id": "f62d8d83-19f3-41cb-acce-54497c387a85",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9bc02118-ef92-45aa-96a1-fa76ea589354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41210b7c-ec1f-42e8-ae4a-46b69eff22c4",
        "cursor": {
          "ref": "487daa28-2c84-4bf3-ad44-a330e77f0701",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1dc25ed2-0590-41ab-a0fd-6fb6cb2ab5b6"
        },
        "item": {
          "id": "41210b7c-ec1f-42e8-ae4a-46b69eff22c4",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f377dfc8-3b4c-419f-9e28-888f266fc982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85bc70aa-c02e-43fc-ae7d-d1819d39799c",
        "cursor": {
          "ref": "5f3e32c2-259e-4641-bf76-4a27489127ad",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "209feb74-daa6-479d-ad02-f18e67db3e11"
        },
        "item": {
          "id": "85bc70aa-c02e-43fc-ae7d-d1819d39799c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "47d2a728-c290-491c-b9a9-0b3ee21f0c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f1d6a1-1781-4d76-bd97-cddad5a26628",
        "cursor": {
          "ref": "72096544-6bdb-4ec5-9f27-783b0edd1aed",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "44354e12-1440-49f0-b8a7-b3db2787dd01"
        },
        "item": {
          "id": "88f1d6a1-1781-4d76-bd97-cddad5a26628",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d8d3110f-28c9-498d-bda7-e3081bbe9bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1a2dfd-e9af-43a5-bb5f-f169357fb3b8",
        "cursor": {
          "ref": "3676ca4e-c080-4e21-93fe-96cc91a8bb09",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "10b6f2fe-fe8e-4ab4-8727-e6f751a80ed9"
        },
        "item": {
          "id": "ff1a2dfd-e9af-43a5-bb5f-f169357fb3b8",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d34f6e54-9784-4b9d-96fd-a4683aa6acf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6985232c-b205-4416-b4f4-c0b854579064",
        "cursor": {
          "ref": "60a09ef5-9400-4e62-ba8e-f49eb5756ad3",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "dff7e09e-5f11-4da6-9d0c-bdab216c6d1f"
        },
        "item": {
          "id": "6985232c-b205-4416-b4f4-c0b854579064",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "862307a4-9542-4b40-b947-5112890a7aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577c827a-3a28-4adb-83ba-8de7aae6eec1",
        "cursor": {
          "ref": "1c7985f5-f30c-44bd-932a-ed69518363cb",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a1d32696-eed9-421c-bc30-6c544f1aa9be"
        },
        "item": {
          "id": "577c827a-3a28-4adb-83ba-8de7aae6eec1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ec3bf125-2e7f-40f0-a55b-4bb1bec4bae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88909e86-bf67-4fc5-a142-7cb236fb17d3",
        "cursor": {
          "ref": "55bc8aa5-a33a-435f-b5f7-6b21503b8104",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8801e6c4-9e74-416e-9058-d46e57ef621d"
        },
        "item": {
          "id": "88909e86-bf67-4fc5-a142-7cb236fb17d3",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "228b6253-aaa3-4f01-ad12-ae2edce91f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ef6f66-5010-44f8-baaf-8080ec984871",
        "cursor": {
          "ref": "1c871591-2646-4a45-a6cf-3cf07a1f3a0d",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b425215d-261a-47aa-a73c-7d714f4b188c"
        },
        "item": {
          "id": "89ef6f66-5010-44f8-baaf-8080ec984871",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9c6a0b15-6cdf-4325-8c06-93e4ff5f20fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30d65b2-b7a2-46c2-9469-c808683817e6",
        "cursor": {
          "ref": "ef594017-b208-43b9-978e-d8125602cbbe",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "54b73645-d469-4103-a9b2-58a2df68c23f"
        },
        "item": {
          "id": "e30d65b2-b7a2-46c2-9469-c808683817e6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d43a6a43-0892-4233-a252-4a4ec27ca245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a420e2-f139-4859-9608-60a94b825b16",
        "cursor": {
          "ref": "92d9884c-8870-45ce-941a-36b040ddd5cf",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "68a2361b-6af1-45af-9b72-3e80f3816728"
        },
        "item": {
          "id": "c8a420e2-f139-4859-9608-60a94b825b16",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "895d5fd1-bb74-4eb8-b4a6-1e66da974e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62a5adf-2206-423f-940f-d59025b8f4e2",
        "cursor": {
          "ref": "d033aaef-c7a5-47b7-918c-ad3a3fc77606",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "cf6748d3-ee66-4c43-bf90-c9b859303f9b"
        },
        "item": {
          "id": "d62a5adf-2206-423f-940f-d59025b8f4e2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2d60773a-f1f7-4dfa-a3ff-aca81fc56e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc6736b-26a1-4402-891c-da252c2ac4e1",
        "cursor": {
          "ref": "7e32a5f4-6bdd-4d00-9b45-9ecfbbd0f0a1",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ad3b39db-6914-4867-8c5a-bf3b2e1e6901"
        },
        "item": {
          "id": "4bc6736b-26a1-4402-891c-da252c2ac4e1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c7d062f3-13f9-4e0f-a90f-b43b584a17fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee454cb-6793-4df0-b29d-153c426e8acd",
        "cursor": {
          "ref": "cd3c4acc-a866-4ff8-9622-dc852d078de9",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d863f714-370d-4174-be3c-c0548472e47b"
        },
        "item": {
          "id": "fee454cb-6793-4df0-b29d-153c426e8acd",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d36c10dc-cdfb-4b57-a04b-8b383ddd2b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2722fbba-f63e-4f37-a7b0-039d6a40a958",
        "cursor": {
          "ref": "7b813b02-e75d-494f-a3ae-a987e412046b",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "cb61bcf5-b539-4725-8af0-28723f958407"
        },
        "item": {
          "id": "2722fbba-f63e-4f37-a7b0-039d6a40a958",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9835350c-d65e-4618-bc30-5f27f7e089b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00bc6351-0e90-4ed5-a46c-aa528f09fc01",
        "cursor": {
          "ref": "b4a4c1df-73a1-4b16-a9ef-3966ed638051",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f258920b-3d87-4b91-8161-eeec3fd00096"
        },
        "item": {
          "id": "00bc6351-0e90-4ed5-a46c-aa528f09fc01",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a02d576a-56e1-46cc-be63-29c5fa576f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebcb198e-cf02-4622-86b6-2ef3b0b886a9",
        "cursor": {
          "ref": "1f3e30d5-ecd5-490f-9615-2a824fc14cb4",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fdc57a97-4be2-40ae-a007-bae834fb69a0"
        },
        "item": {
          "id": "ebcb198e-cf02-4622-86b6-2ef3b0b886a9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "69d74130-4f89-4b4d-8901-1eb63e5c5476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497b2381-d286-4e09-859f-7044dbe4c5dc",
        "cursor": {
          "ref": "8cf1cdea-e077-43e6-81d7-06dfab8894a3",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b8b44d69-1d0f-4211-bc39-ef0d657ef81f"
        },
        "item": {
          "id": "497b2381-d286-4e09-859f-7044dbe4c5dc",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ea9f476d-3894-4bed-9992-f9a2a533be6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e868632-1c16-40bf-bc8b-0b7408bb8cb4",
        "cursor": {
          "ref": "b5d9128d-995e-4012-95c2-acffbd29ff5a",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5cecb964-c121-49de-9c80-f65dae619cf1"
        },
        "item": {
          "id": "8e868632-1c16-40bf-bc8b-0b7408bb8cb4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "08decc9d-d286-4f9e-9f08-b5a0243493f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94daa389-b6a1-48ac-b550-6839703309b2",
        "cursor": {
          "ref": "1556dfc1-fb05-4dfb-a98b-7bd788dae759",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d74b04c4-d8d5-494e-aa10-e70abed3f79d"
        },
        "item": {
          "id": "94daa389-b6a1-48ac-b550-6839703309b2",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1fec87cf-e8af-45e6-9b9e-fdca893368ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4241203-0bad-4c34-9332-9e9e7ee9875c",
        "cursor": {
          "ref": "43aa1472-2477-4bb9-b4a7-9b23b5aa4ae3",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7c53cd51-5ad1-4741-9813-59310388ec14"
        },
        "item": {
          "id": "f4241203-0bad-4c34-9332-9e9e7ee9875c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4989a561-01f4-4054-af83-36cbcac70bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6117c7d8-026c-4400-9487-380436f8a9c6",
        "cursor": {
          "ref": "b5d97ebf-6360-474e-95af-c8fb7ab335a1",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "18a05585-76b2-4922-8bf4-efc270c7087b"
        },
        "item": {
          "id": "6117c7d8-026c-4400-9487-380436f8a9c6",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "94939f87-47bc-4006-bca0-4e455e64f6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb00afd-84e0-4f7e-b1d9-d099d0b246d4",
        "cursor": {
          "ref": "955d1189-dde0-43ca-88b8-2de5f66bb839",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b62f3f98-aad3-4359-a171-32f3ddb30ef4"
        },
        "item": {
          "id": "3eb00afd-84e0-4f7e-b1d9-d099d0b246d4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "afe5e122-a9c1-4b52-9dec-884211168446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be75954f-c4c8-4190-93c5-7989bcd44c1a",
        "cursor": {
          "ref": "8a842c95-8e50-40e0-8b36-8844a720230a",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "89ca543c-2a0b-4952-96c4-0435a1474f54"
        },
        "item": {
          "id": "be75954f-c4c8-4190-93c5-7989bcd44c1a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7d3d2eca-6b6a-4d36-9ddc-4f111b2ab6d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0b3732-e724-46b9-ade1-de6004ea9d3b",
        "cursor": {
          "ref": "8655192b-52f1-48bb-9abd-ef82410f4785",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "82d00d30-b3ac-45c6-974a-d9541343c52e"
        },
        "item": {
          "id": "0a0b3732-e724-46b9-ade1-de6004ea9d3b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "586378c7-17a1-4894-aa00-f12be234ba49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2dd1023-5c7b-4896-9283-d6c92a32bfa1",
        "cursor": {
          "ref": "9fedf8e5-2a9c-4f60-9d27-3cdaa826f16d",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4f85d395-aa87-4460-980e-90ad23331c05"
        },
        "item": {
          "id": "d2dd1023-5c7b-4896-9283-d6c92a32bfa1",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d11aecc0-a2a1-47b4-ab20-bf1d8c7ae0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe0c54f-53a9-4489-9462-f65acd001370",
        "cursor": {
          "ref": "5c1c02f7-3818-4ec3-b1c2-6aeebfdb25bb",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "84b1ca70-0082-4983-a8e4-c5aa58ef6f29"
        },
        "item": {
          "id": "8fe0c54f-53a9-4489-9462-f65acd001370",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a325efaa-0765-487f-ab56-3847afb12b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a6fc6b6-3b1c-4df9-855f-4203bc274093",
        "cursor": {
          "ref": "6fdccee3-9763-403a-88c8-160d27444471",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a25e5671-941e-4c41-b752-3ea4311248cf"
        },
        "item": {
          "id": "9a6fc6b6-3b1c-4df9-855f-4203bc274093",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "660adf95-ba4a-4340-8012-409f4ed885b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed16528-a080-449b-a969-b6d34d16f243",
        "cursor": {
          "ref": "8d16f555-ae30-4ebf-a0af-ab6cfb3cf017",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f7be9a1d-2d9a-464c-8800-01122e2095de"
        },
        "item": {
          "id": "4ed16528-a080-449b-a969-b6d34d16f243",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "387cfdbe-601e-44a7-b7cf-2fe7d9f6f1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404d9056-5755-4a93-ba8d-55e592d6978c",
        "cursor": {
          "ref": "6483653f-cad2-4377-b4b2-ae94e750a1eb",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f4827a4d-9007-4354-9846-a5f9274a8f9b"
        },
        "item": {
          "id": "404d9056-5755-4a93-ba8d-55e592d6978c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b8ee705b-0853-4dab-93d2-b733ca4541e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf33e653-6cc1-496b-9761-8a8aa140223b",
        "cursor": {
          "ref": "a15ac4ed-d9a0-4840-b8c2-be38e4a98a94",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3d11c804-caa4-4fb6-8831-5084af115584"
        },
        "item": {
          "id": "bf33e653-6cc1-496b-9761-8a8aa140223b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "95d0491a-8196-4973-9b08-6768a279dc76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd25150-7958-48bd-be4c-97c955b044b2",
        "cursor": {
          "ref": "08073771-a0da-4d07-b396-a1c109d0e0f5",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d0ca7a11-f7a1-4b79-8b09-153935466c28"
        },
        "item": {
          "id": "7cd25150-7958-48bd-be4c-97c955b044b2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5098b177-5883-4298-9c6a-e041399d7dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230a6b4f-fc59-4b0c-a19e-a56c419c738c",
        "cursor": {
          "ref": "587655bd-0238-402c-b21a-5ec5cf3cc229",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "018d42d1-8883-4253-816e-343f4db774ad"
        },
        "item": {
          "id": "230a6b4f-fc59-4b0c-a19e-a56c419c738c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6147bff2-720f-4c99-83f6-2e6e038ed604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c252d74a-dff4-408d-a406-401b7569af46",
        "cursor": {
          "ref": "96434a45-9aec-451c-80c2-fd89374f88b3",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "637de4fd-79b2-4d44-b8f6-0041b1922e19"
        },
        "item": {
          "id": "c252d74a-dff4-408d-a406-401b7569af46",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9ad4d1c3-3821-4b41-a598-e50463493ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0317bcfa-8ad6-4666-8388-526337984c7a",
        "cursor": {
          "ref": "61ca94ce-6cda-4154-a730-9663ef561049",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0ce02b76-0990-41d7-adef-bd4f5a9cd81e"
        },
        "item": {
          "id": "0317bcfa-8ad6-4666-8388-526337984c7a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5df7d4c5-ac66-460b-995b-838aff28257a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4999b0af-d483-4525-b494-3da272139049",
        "cursor": {
          "ref": "55ad1823-a0de-4c99-ab00-145d5b284002",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "53c8ac1b-5463-4789-921d-3a9dd3ad24db"
        },
        "item": {
          "id": "4999b0af-d483-4525-b494-3da272139049",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "65f1c84f-438e-45e3-81af-f93d2055b1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691aeefb-7e31-43d8-b05d-3c896b74b25d",
        "cursor": {
          "ref": "c58b01f4-931a-4adb-b459-64d012c191f5",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "32ae521b-42a0-498c-bc43-54e02b2ded87"
        },
        "item": {
          "id": "691aeefb-7e31-43d8-b05d-3c896b74b25d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ac3c5a5d-2a24-477e-ba37-d108206f4c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8681222e-e3f0-4552-a535-d8fa1bd124b3",
        "cursor": {
          "ref": "a7a45456-ca6a-4986-90dc-583f2e365ae4",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "b1082317-3bb3-4db6-8d17-1a5540a2cd36"
        },
        "item": {
          "id": "8681222e-e3f0-4552-a535-d8fa1bd124b3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "995267a9-7755-42df-971f-010c410cbedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1626b117-857b-4578-b18b-14de5ab94fd9",
        "cursor": {
          "ref": "82ca3562-7058-4b11-8cfb-efb53ba9cbda",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "49cda280-226b-47c7-be57-7befb9c31f90"
        },
        "item": {
          "id": "1626b117-857b-4578-b18b-14de5ab94fd9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1ec15fd8-d1d5-4067-bda2-9307c4b3fcbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d565b9b-3534-4213-bc3b-a4893704a313",
        "cursor": {
          "ref": "a3fd3919-b38c-496d-9db0-d2d6181f1038",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "41127cd7-b114-46a3-a858-15ae3f2a5452"
        },
        "item": {
          "id": "0d565b9b-3534-4213-bc3b-a4893704a313",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "369a9afe-c180-4fd6-b1f0-cad46dd3b23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32fbdeaf-e093-444b-af46-04e020919dae",
        "cursor": {
          "ref": "5ce7cad4-1715-4c96-a4b7-6ce63e4acc24",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "b48cf36b-ced6-4bdd-82ee-c854755f323f"
        },
        "item": {
          "id": "32fbdeaf-e093-444b-af46-04e020919dae",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b4bb76fc-391f-4572-a770-95a5e807de80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ab4c8f-c703-4496-9fb3-e1f8ecd12f38",
        "cursor": {
          "ref": "25a1f41d-0686-4f42-9f4b-e7c7ebb7052e",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "7752c4ad-10f5-4339-ab96-0c3a1dff1e53"
        },
        "item": {
          "id": "82ab4c8f-c703-4496-9fb3-e1f8ecd12f38",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "07a1e3b7-0314-421c-8d8f-c3287fd3cb18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83bdc90f-3937-4532-bf7c-23c7b72fe6d5",
        "cursor": {
          "ref": "e3679a14-e68c-4aae-a514-3d586890f2b8",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "9d59eabf-5488-4fbf-8f2c-0c9f709b694d"
        },
        "item": {
          "id": "83bdc90f-3937-4532-bf7c-23c7b72fe6d5",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "996c1a36-c02f-44fc-922b-71d3138932fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ad3988-56a8-4331-b72c-2bb04f7cce94",
        "cursor": {
          "ref": "81b08c56-b870-4b32-b4dd-858a93dcbc75",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "aa865bbc-99eb-4dd5-9437-8ddf33062d13"
        },
        "item": {
          "id": "75ad3988-56a8-4331-b72c-2bb04f7cce94",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8bc7870b-2af7-4c30-87fc-307fdc5fd9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2209b02-ff2d-4a8c-a0bc-4a0f92125a56",
        "cursor": {
          "ref": "a248ecc8-277b-4ab8-9d28-9c9f55082afa",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "445ae9ca-bc3e-45e9-bccc-3dc73903d9a1"
        },
        "item": {
          "id": "d2209b02-ff2d-4a8c-a0bc-4a0f92125a56",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5712a540-1dc2-464a-92b1-03476bd60fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0cda805-081e-4af4-af7c-bd64336fd0ea",
        "cursor": {
          "ref": "08ede6d9-a547-4c94-ac59-23402dee0a84",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "452d78db-1ef1-4eb3-8a51-1592d8f76362"
        },
        "item": {
          "id": "e0cda805-081e-4af4-af7c-bd64336fd0ea",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b31a5e93-e83f-45e8-8797-67fc8adacb06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4622e982-ae28-412b-a5f3-78a5cbe39caa",
        "cursor": {
          "ref": "80aa85ae-43b5-4842-80be-a80a82a5f5fe",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "d0024ffa-b0de-4146-925c-6ebb0f3510df"
        },
        "item": {
          "id": "4622e982-ae28-412b-a5f3-78a5cbe39caa",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "84c4d40c-1163-478f-9332-3d0485f7d9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c267c6-a213-45b0-a9a7-aca8ee104ec1",
        "cursor": {
          "ref": "b46c1693-aa0c-49d1-bae7-b09dba349eeb",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "57ae0eca-e2c9-47a4-986a-3f71c3593d5b"
        },
        "item": {
          "id": "a4c267c6-a213-45b0-a9a7-aca8ee104ec1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ffffa0bd-8960-4c79-a143-9055789b5c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7b75a8-f7c7-40ce-8d4e-0a020f437922",
        "cursor": {
          "ref": "eebeea30-0b2f-412b-87d7-e7ec0c1a8b1a",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "459cc5f2-dd9e-4a17-8001-dcc0485cac70"
        },
        "item": {
          "id": "4a7b75a8-f7c7-40ce-8d4e-0a020f437922",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "904086cf-c019-454f-8203-a21f2ace0417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d67dcf-a38f-496a-a23e-dfb0b33fdb20",
        "cursor": {
          "ref": "cc55d5b4-cdaf-4ca2-b66f-0555fbbe3e08",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "58e39436-8dbf-4533-8aac-cfb2a9f1fee1"
        },
        "item": {
          "id": "11d67dcf-a38f-496a-a23e-dfb0b33fdb20",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "33666af4-1f2f-416a-8855-12566e83931e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c88a939-6d39-4d50-ac17-4de716f05a62",
        "cursor": {
          "ref": "ec93af1f-ce40-4249-aee7-0f9bd1ecd330",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "713ddf28-28ae-4662-b820-51837d4706d5"
        },
        "item": {
          "id": "9c88a939-6d39-4d50-ac17-4de716f05a62",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f6aa6682-95e9-47f6-b108-341d1f4860e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6f8e43-f059-4f5d-82e9-d2c997d72275",
        "cursor": {
          "ref": "f501494b-cd3b-409e-a23a-11ffbceb6131",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "3846f6e9-6e42-43dd-8957-37bf5969d816"
        },
        "item": {
          "id": "4d6f8e43-f059-4f5d-82e9-d2c997d72275",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d1322c82-1998-4ff2-aed0-02c98465bd91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ff9cda-17a9-4d9a-98e1-acf990191166",
        "cursor": {
          "ref": "82fde37c-3f02-411d-9eae-9c5b58870d1b",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "2d0c8c5f-9be9-4773-8214-ec49aeab35bd"
        },
        "item": {
          "id": "72ff9cda-17a9-4d9a-98e1-acf990191166",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a2b05cab-92b4-47e7-a474-1def51e7acc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21ad4da-ed66-4a4d-96ca-3e41ef5ef0ba",
        "cursor": {
          "ref": "db16e6ce-8721-436d-bbe3-1ec730b09df5",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "08ab2a9e-9b2e-47d1-a7e2-1f7be03f9008"
        },
        "item": {
          "id": "a21ad4da-ed66-4a4d-96ca-3e41ef5ef0ba",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a731d430-b4c4-445f-a8c5-54d996e0bf75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed90a44-3cb6-4f70-b7cd-0a116aad7704",
        "cursor": {
          "ref": "bd0a25ba-8081-4a39-a444-28391cc67ebf",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "74821a7f-83fd-4b95-8e30-f4353b5db6ae"
        },
        "item": {
          "id": "bed90a44-3cb6-4f70-b7cd-0a116aad7704",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a3e18a82-100d-4b0c-95ac-00f86b18adbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3681b621-1154-47eb-8cc0-1abab47a1ee8",
        "cursor": {
          "ref": "a836bbf7-9c7a-4617-bb7e-7dc2a513cb8d",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "e34c6c14-49ad-46ee-bb7a-47604686dec0"
        },
        "item": {
          "id": "3681b621-1154-47eb-8cc0-1abab47a1ee8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a5ca3a25-327e-4a31-9ab1-a600a45e06b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1419dac0-835f-4290-a1bc-57eb868b9176",
        "cursor": {
          "ref": "a13101b0-ff64-49c7-b459-971b8a7d5e57",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "b93ea95a-4260-49c5-9f79-b2606e40eeee"
        },
        "item": {
          "id": "1419dac0-835f-4290-a1bc-57eb868b9176",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "60de64af-e850-42f1-920e-b2692e73c811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6661d227-5128-418d-a3ce-4987a2333026",
        "cursor": {
          "ref": "a3b0eb0a-5113-4caa-a13b-f3ddb4628d55",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "64643def-5440-4f4c-82dd-3f715d77864a"
        },
        "item": {
          "id": "6661d227-5128-418d-a3ce-4987a2333026",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e4ae44cc-877c-44cb-b07a-99f178621d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d913ba0-c918-4468-bafb-ac2d7042ff18",
        "cursor": {
          "ref": "ab6c06a6-bb68-4b05-952a-36ba2492ad0a",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "a72becc7-4939-4b0e-a452-c7387441c42b"
        },
        "item": {
          "id": "9d913ba0-c918-4468-bafb-ac2d7042ff18",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "37909b15-af55-44d1-864d-7f30946e9da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6292b02e-9104-4d97-bec4-a561101480af",
        "cursor": {
          "ref": "651076f5-5795-48c0-a774-5fdafdb379ac",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "31c8e593-5ed0-4721-b348-de8fc875a347"
        },
        "item": {
          "id": "6292b02e-9104-4d97-bec4-a561101480af",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "25b80860-e74c-419a-8f61-748e5e0b5493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f818ec0d-ff21-4fdf-a423-a20d4fffa589",
        "cursor": {
          "ref": "4cfd6955-1b1d-43e2-8c71-28689b5dbed2",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "5ea0db3f-339d-47f3-b557-142b198dd24a"
        },
        "item": {
          "id": "f818ec0d-ff21-4fdf-a423-a20d4fffa589",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e0def2a6-f385-4e7b-8a16-74cb85ef9aef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b1a094-b9ca-43d7-b2d0-41207c7b7fef",
        "cursor": {
          "ref": "c56afe69-e51c-47b6-8c70-da79c60a0009",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "97f76a52-04b8-467d-b13a-9fc995643924"
        },
        "item": {
          "id": "b8b1a094-b9ca-43d7-b2d0-41207c7b7fef",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f769bbdb-43a2-48da-9dd0-317a9353f2c2",
          "status": "OK",
          "code": 200,
          "responseTime": 132,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "baecedc6-ce80-4a79-a7d0-1d507729d0fa",
        "cursor": {
          "ref": "a45ab4aa-2fc4-42d0-b9e9-43239dacd15d",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "e81c7826-0372-4cf3-b112-0cca1d0fbb0d"
        },
        "item": {
          "id": "baecedc6-ce80-4a79-a7d0-1d507729d0fa",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2f344858-ed18-49f2-be27-901f8a0c2efa",
          "status": "OK",
          "code": 200,
          "responseTime": 1542,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0dc9554-25a5-4ff5-8526-416c064377ef",
        "cursor": {
          "ref": "736ddf69-a184-4ce3-95d7-acefecba9e30",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "716a6986-9930-48d7-b650-e2b6967ba070"
        },
        "item": {
          "id": "c0dc9554-25a5-4ff5-8526-416c064377ef",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d3b7c94c-f2cf-4909-b58c-3ba9cb3adcfc",
          "status": "OK",
          "code": 200,
          "responseTime": 1914,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3386f2d-1759-4b11-8416-eab1d0233c7f",
        "cursor": {
          "ref": "06ed2d53-caf6-4a3b-a5e1-bc96da3b1a29",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ee72017a-a784-499d-906d-4b3d868dc873"
        },
        "item": {
          "id": "d3386f2d-1759-4b11-8416-eab1d0233c7f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "be2e6755-4c7b-4961-9be3-b9d715bb14cd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3386f2d-1759-4b11-8416-eab1d0233c7f",
        "cursor": {
          "ref": "06ed2d53-caf6-4a3b-a5e1-bc96da3b1a29",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ee72017a-a784-499d-906d-4b3d868dc873"
        },
        "item": {
          "id": "d3386f2d-1759-4b11-8416-eab1d0233c7f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "be2e6755-4c7b-4961-9be3-b9d715bb14cd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5acc540-3d55-4da0-872b-50890ac2d95e",
        "cursor": {
          "ref": "868940e3-3776-4bba-809e-65aecf22bd75",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3d33e5a1-7a28-42ab-9dd8-213c6ec89854"
        },
        "item": {
          "id": "b5acc540-3d55-4da0-872b-50890ac2d95e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4740125e-a68f-4945-8b66-f4ea3d3e0de9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244d81c4-51dc-4d61-a0b2-17b69b8d7bd4",
        "cursor": {
          "ref": "7c543d99-2c6e-4d59-b0d1-5f071529107a",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "b0883686-2776-4f73-8492-c600f4e53b2f"
        },
        "item": {
          "id": "244d81c4-51dc-4d61-a0b2-17b69b8d7bd4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f11b12ec-236f-43cd-81ff-bd06049071e3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}