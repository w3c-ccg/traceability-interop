{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d4e59238-9645-4461-877f-5059de5f079b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "bcb5dbf2-8f06-4227-9107-75dd7f101b11",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ead1d6cb-454a-4710-8d26-88d93d51c641",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "374359b0-9e5f-4e35-8ee2-610f7de546ed"
                }
              }
            ]
          },
          {
            "id": "3c5d8028-3285-4273-89de-a573f6e61343",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7fe1aaf3-44e3-4fa3-a48e-afad0b6916e8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b3e29351-f7f7-45e4-bb7d-69872ba8a16a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ed2d0c5e-db8b-40d3-b28e-43f0dcdcbb39",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c6c04499-9492-463c-981e-418f6f2f2faf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c86fdd61-06e9-4452-92b0-92a0a38e7300",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "17b862a2-6841-4ee9-823c-38f46ce65fd2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "009c43dd-1cc9-4131-a5e4-784f34dc8600"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b878eb7b-0310-43cf-9359-96ba94982b93",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e38ce092-dfbd-4b85-b8cc-22f8f2b3e6cf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1535850d-b1bc-4abd-af80-7e531b3d0ae2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a55ee810-2540-410a-8f7e-ce726b8d3de6"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bacc796e-594c-40ad-b8bd-9ac1057bf82c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "239b1c99-517d-41c9-af48-41ff5730fff5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7383f69-6aca-4f99-92b3-91a8df9d17a4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "261caaa8-7349-463c-9cf0-62c48dd0d78c"
            }
          }
        ]
      },
      {
        "id": "06f74a44-baec-4774-8160-87cb43d945d5",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8ed81003-de4c-4576-8e33-cde327faf2af",
            "name": "Negative Testing",
            "item": [
              {
                "id": "246392cd-078e-46a2-8295-04d1584cc7fe",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dd42759d-5b76-4533-9f1c-1ec075d8a3e2",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "185f3abe-f4d3-4f95-ac33-e1d7b6b97e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b72473fd-241e-4b4f-a8c8-11e98ebd3e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "954a0581-1277-4d21-9870-45cb3e0558f9",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "874c5fd4-9eaa-4aab-88ca-768194f66007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ee4c043-d404-4b86-a38b-4420b0bd22fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2e3f74-8b18-4ba8-94b6-eecc904957ce",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bdb7403-63e5-44bd-b6f7-cea2814f142d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd1ab5f9-ac3c-4b9e-8cbb-4306c4bbaec7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d57bf92e-916b-419a-8781-56b64a2ccaa3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "822060f7-f6b9-4c26-9f4d-4209342cd731",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83c438c-91e8-4dd1-8b8e-ddcb4e98ebc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01b7eddd-c178-47af-a516-4de20577d0be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bde7b21-c795-41d4-b346-9db055f3dfe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe97a664-a9b9-4d86-a38d-f52bd52b685c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "14f15e8d-8d04-4e43-a7f6-e80d611e2bad",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7554c7c4-c17a-439b-9bc1-8c3f27ff757f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "03228a42-8fb6-4cc5-ab1f-5c3e13ca3904",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0cfc17a9-91ec-4bf8-bcc7-6609624ea046"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "68a812af-b906-4045-813a-1f3cb7c37b25",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5b6f47eb-c12e-4284-9107-faadb2ef2402"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c41f461b-fd21-46ad-a11c-e0d1e43062bc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "35b94221-9efc-42aa-acd3-bdca679a0018"
            }
          }
        ]
      },
      {
        "id": "4f411a10-bb21-4092-8a1b-62eb35850fc4",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "91ceadc7-5206-432c-bf39-4316e4c80246",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e44910e6-01e4-4801-81f7-c35bedeadb11",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d56bb2ff-bfb4-4ab9-b02f-3c65f4fd504b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af00f46-1546-4cf5-afe7-8f25506adf93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ede3403-e3c2-4158-a775-f1836cd2ad45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94368486-4c22-46fd-b6f7-dfa8beaf9856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a01cccb-5ff0-419e-9004-723cc286f872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db12def-6f3b-4e33-b65c-64e9e17063f9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39410c72-5a96-4df9-82f9-818959874ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f50cf0a-6f8d-47ff-936c-607d4e544d73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb29ed96-d110-4046-a924-e7e75cbbf30f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff48119e-4559-4b0b-9934-b10f6f2bb71d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2ef474-747d-4163-8d11-559a6d1379ed",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41277c93-a24c-4936-a453-cfb2665e51ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58099d88-df46-462e-94a8-fccb84a2a329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d27e5538-bc0d-4775-a46f-02eed091c088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f60903d-1562-44ec-b89d-8550d0cdcb4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5c6e29-a980-4f88-aa8d-04a7123aa2e8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "096a6414-ffc1-4283-bb7f-c66145a26b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "313eaa00-7d6a-42ed-a798-b17301049361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32574c7d-d2ae-4c43-8dea-cde31f7df4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48ca82ce-9814-41a3-a3c9-ab0cc0e74263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8d14f6-527f-4a1a-9078-45520bb8698e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c513fd4-96d6-499b-9ea5-2f5dfa1348e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d899eb35-6cca-4d43-b81c-325f6b24d5df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2929e3bb-594b-4a5c-a818-ad7221851fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29fe00e1-3535-4459-b828-867ac686a4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99172d1-40f5-4e70-bbf8-64bc78c213a3",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cee901a-d921-44a4-8a5f-de598fa10ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50b594b2-9342-4899-816f-fbb9e7068b84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e76b0d-49e7-43a9-a552-d0a2949ef1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "176f7ed1-99f9-465b-a051-6446ce6f08e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8bf74af-50ce-468c-977e-1812c5e8c2ed",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "518de767-6f43-4fa6-aae5-50eb531c7b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "796716f4-639c-470e-b9a5-bb735f5da94a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fddd33-6b0c-439b-bffe-25daa789fb3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1ca18b9-22a9-48f8-bb2f-cc6c7a7ab6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637c5c2f-2fa6-48c1-ae71-59eef0a60a52",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2eca94-44da-48df-a13c-b02351a1a8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7578d0ac-0e4d-4cc1-9047-2346c061c134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315e6457-d0e9-4fbd-90dd-444fa55734c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a92cc515-4f97-4341-8d5f-e6d3d4fdc09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50885d8-6f20-4b17-a4f1-5ba94d8eb136",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f01af4-153a-4e1e-a587-a085b13762f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f79765a3-38c0-4a65-a0d6-e290f11ded6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31300dcb-d346-471b-be71-afb19e4e821d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b86b1e6-3c0a-421d-8c99-13036300e6cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735ac443-7259-4f43-99d7-0099a7f59620",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cdbcfc9-f9fa-4789-bf31-99f57396fc0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4284ae79-d7a9-4c9c-a152-c0ab5b355a78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c079447-737c-4f67-8b7a-88787f0db5c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42542278-a3e4-40d7-9e35-ab3750d82236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc03902-51e3-4ac9-ba3f-eb26a08cea4a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1077484b-2fd4-40ee-bc33-22f0754c1eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544d0390-30a1-4eb6-944c-e7d542a42f8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55cf0e5-8759-4dc6-a649-4f13c74992a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55f288c3-2cae-43ca-bf26-df340cecacef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96314712-ea31-42ae-8191-8fed9a0a2c39",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf13149-917b-4f63-bd16-206cd8f94348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4321a40b-a57f-4c7b-9ef7-1158cebf9659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75fa80d6-0d79-42ed-ba64-01a6d2b0a26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c269d26c-fc86-49af-812d-32bd4b0a28fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1aa537-8163-4efd-b67e-e7b5187e4012",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93dbb11a-cd8c-488e-abec-4cd1095c0e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af780fc3-1223-4ec6-8eb3-9fefdddb3cae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9567ae46-fd72-4319-bc20-a8e55ec0797b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04d7a22b-7dc1-4e6e-9af3-a503ecaebd9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dacbedef-fa00-4acb-bfb1-c7dc510917f5",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8147f1bd-1f3e-4f47-8a40-0f754c9e1226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "607e6d3e-70a9-4eff-99bf-126230429c84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2efeed73-0396-49a8-a2f3-eb813f1add22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26dd432f-d366-4a2c-b48e-502503a8f006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34087710-45d8-4e2e-9545-12b1e6b5ff7e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a4aa88-04ab-498c-891a-5f76e1b69bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bcdb1fa-5e57-49fe-98ea-94c6cc5a51e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f9eb3a-9a24-4d4c-bfe4-5a44fdccb71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "589a693b-36c0-4834-9872-166301a4630a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e784c26-fe52-42b8-8f37-faa9ac6c09bb",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5579baa7-d31b-41e0-b305-b59e34cbf759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f561252c-96c2-4a98-a7a7-6130fc8d9313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72fe6060-70b9-4eef-857d-6d6c14eb41ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e1100c7-3fc3-4529-aa5c-2e7ff131c188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23be6b75-55fa-4322-9721-b2331f8b6fd4",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c7f96c-158e-41b1-a0e0-4dc6a73ab140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc32a13f-13d7-4a49-a16a-e0bf3b98d10e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22c9728-108e-4e74-8402-f3b645d895a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd1a7a53-a80d-44c8-89a0-c3f3f4818bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2bbe42-9794-4c6f-ba84-0d746a373913",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8272e2-4e7d-4323-b36b-240bc6de22b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d77411b0-0f71-408c-80d8-2e8275f599e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0b5fcc-afff-4829-8046-c9ba86b38f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b61c6a88-8f6d-45db-b745-da60e8f06be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12b9a77-7ef4-4a88-9ac2-2157097416ac",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ccdf9e-d7d3-47de-bb96-23e6a1bfbd20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0475af89-49de-492c-aec2-25af7f31f06d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28674874-0743-494a-b130-80f3e3e1c722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4d948db-4726-44dd-ae4a-6a43df905923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0ce14d-897e-458c-8fae-2647c5b82cf0",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795070fc-25d4-4015-b11c-52a15f9ae7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c52b06cd-7fe7-4e50-a630-769569c64193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18be46ec-2820-4f8d-8e5e-1691c0ebe726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ddeb2d4-4113-4328-a714-35f05bc76ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a2521e8-02ae-4903-81e3-232db7cdcd9e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ec1b50-fdce-465b-bb5f-ca145b8776d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "992b83b7-7e8a-4ab9-8175-e6589f917d54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba013d76-0756-48cf-86fa-ec377e7b1350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "381b3a3f-8108-4d33-8d19-8eb1dc4733e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096147c4-2dcc-4162-b61c-340f93559c4e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fae7706-2a81-4eb3-afa5-b3beff880ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a12dfe9-be45-4cd3-a76f-472a90fa6f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0555656-e394-477c-ac05-80415a7841ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c80d541-d9b8-49bd-aa57-0f388871bebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f13607-cdd2-4f5d-9c1e-4d589b81b3a1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41b1f2a-cf01-4b52-9c0d-b56def545903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab7d4fe8-5ee4-4c3e-a763-2d259e9eab7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068127c7-e089-4988-a9a4-ba80c6cde84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0d461b6f-cb60-488e-b2ed-2578210e7384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b4da9b-b45a-445f-aafe-845dd68b2f0c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa225f6c-d877-4bdc-b54e-1b30a621e832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01dc80a0-97c8-4373-b3e1-2ea075056bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3a619a-591d-47a9-86bd-2a229a2dbec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfaddd86-8664-4d57-8191-9815d4ab297a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4609dcf-8f7c-414b-b344-ab62a6b9dc49",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c415171-d5f2-426b-b468-c96b14a5ae91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df251482-8fd0-4ba1-bae5-26a3b37f0e86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0154de6a-400d-4466-9d96-83f29b44d234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "df9aa788-ce3f-4a50-88a6-5a62adb1f910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7769fa-06df-4756-8713-07c0f5240f6b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8606c145-4c61-489e-8e71-a1eae1a6759f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02fc6d7d-959c-4a49-b56f-a7f0f3c034d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db76535c-137e-4076-8d5c-3bda78172702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd1a6995-a5b9-4131-8211-85440aac156f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4e34ce-86a1-494e-bfac-82bee4da7683",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bdb7dde-3093-4000-aec3-7af2ad2a0e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2d59ffe-2b59-4117-add5-55fc41a062b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d5112d-570c-4670-8094-43548e93592d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "738cab07-b167-4cbb-91f0-ffaa19c1607e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9cdfdd-0c0b-446b-ac6a-3d0ccd45d51e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3189e0-47da-4011-81e2-a047ee597820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5915e5f1-39e9-4885-a08f-f4d5cc689152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93db35cb-7b47-4064-a06a-2f4eb6c97ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae90e3cc-69c7-4993-9015-55ac99cc36e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf077e82-e434-4a99-9bab-0a83c0491d3f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df90ec6-ce17-454c-b720-54780742b7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbae804e-f066-4681-a857-d84b0b7e2d0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd4c6cc-833f-4ad6-8175-dc2b32ce6cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "75e4d748-6ea8-4145-9bcf-417757a62372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb6093b-908b-40cc-90c6-bd8b1da3c05d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21568b1-a4f7-4ca0-88cd-9f911ccc97f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d46d1f-e58c-44a8-a09b-f26ed0a7de66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810df685-51a4-4c18-a26a-a6efdadc9a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "35571408-252e-4f7d-8b76-eca0fbae7bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd94849d-29c0-4f92-a3f5-7ae588eea75b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2904d906-c7fd-4814-a2ac-cc1b0ef5487f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "360d79f1-3561-4219-bb22-4eed699639be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4fadb16-9534-42ae-b397-6f87d1255312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "da8dc216-97ef-4991-bc5a-2d1b0d5d0873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a705684e-dbae-4d1f-b783-b68e6484c72f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32981be5-bd54-435a-afb1-aaa56706f529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c4e30be-360b-468b-be71-db099a240fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f59d5a-16a2-49ef-a408-c1a6dbbbe2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "581a3331-2689-4693-a401-3978a960690e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bcc1929-134b-4f35-914a-ef57b8058700",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7e312e-04c8-4133-942e-62ba339a3e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4bc816e-66e9-4447-98b8-cdf24aa885b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6079de51-4035-421c-b6a9-5baa900c1ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06c26cf3-d80d-4241-bd69-500d336bb1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15ccc2e-7bd4-4bce-9ccb-946bdf8f6f34",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c210b7-cae9-4324-a494-8db44d5572ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "634c9e90-c034-451a-a173-d3b6508bf15e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6917b1b7-e7cd-4615-9ee4-afd810daa353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b9370d0-12bf-4b0a-a9be-d34f87e8ca52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4deaa43e-1a9e-4290-b63a-9e31dabaeab3",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c751400-e7b5-40f9-b91e-bf2b1e0cf1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c54ac93b-7b27-4e79-bcc8-528817d50012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "210a8439-6ca8-4b4a-a449-9d4133d8e547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c96d2867-5c3c-4e18-b8ee-03e9cd4ce0b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a5057d-f52b-4f67-9c89-d25bea75faa9",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbbb93d-26d9-4a0e-b3ab-0f31d858f097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a5ed41b-64f5-4abe-8c73-7ffec38130b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb48432-7000-46ed-943e-f2b3790d2974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a56a7b2-b9cf-4da7-8393-e8fd98bf6c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d55e06-6663-4818-9509-f8d8f524e25f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d1aefe-2634-4908-806f-591308afe6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b8d84c-7c0f-4a88-87b3-afc40338b106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5ffc04-9232-4f21-b7e6-8f2f07670814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3df26166-65ca-4041-bc1f-06eb20f51420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877e9446-9b4e-4782-b40b-7091c0d47673",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd09c61-5f28-4777-8f93-05b1ccaf71e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a0e32e2-60f6-47e4-84b1-0721af25b1c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eabf183-ec63-4440-97f9-6a30d468c933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ef0e56c-c10b-4aaf-860a-b4c601c072ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0ced5d-c54c-4c22-92f2-defc1daaaff3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4359c8a-21ed-4888-a74b-dd9e129bade7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cdfd8e8-085f-4a16-9433-63ad9ebdd193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf650fe-9a53-4541-84be-5c310edcff4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc4eeb41-0acd-4241-a148-13ac0faf8659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61980123-f4f5-427a-9a6c-6d58f6714e47",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab97466-b16f-4955-983e-f8b7f8f68822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd6821a-4616-448f-9875-c177e6bb8015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26fdebca-3611-4fbd-862c-f5dccd1bcc11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7790789a-1ff9-4799-9781-01c4df735215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34299c93-ad2c-4527-83f3-46fed7d19a17",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff687dc0-1f4c-4e20-92fd-f9a19dbc7980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab2d8655-5b16-4c56-a0a2-23afeadb4e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c48877d-9047-4a84-9e42-bf569f02d923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "07392d9d-dc60-4557-8f5b-b16c2813713a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a8c550-1943-43b2-b226-a5fb4d147986",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf06bd7-e451-4765-85d8-3b4809bff832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c06d05b5-a0e5-45df-8b9b-c63c8bf46877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3a0583-8354-4eed-9005-a01b51895891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "034c0b25-7ee3-4bbc-9787-fe608e90200a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f353ce9b-6bbb-4501-bd6c-ae45761858d7",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6949ad88-4ab1-4db8-b0b3-49f05120b045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f36730f3-30d3-473d-9a3f-36c0924f4abe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9977cb-3823-4c2b-9125-dc2f1a36d41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a4d61e4-513b-4d8c-9684-6e5821f47b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33703acd-f99a-4b75-aabe-3f888268ea3c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e16c1d-062b-4c23-8016-500c4ed427e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "417afcdb-e964-4fbb-8ed3-920657358e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393d15e4-73bf-467e-b72b-e0816d59380a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ff1e544-4f2d-4aed-8ded-c94165cf42de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368c7c71-cf03-4e33-a361-9bd8fb6dd297",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca9daa6-c2c9-4be6-b222-a8fc8c405618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30dd927f-0711-4468-b4eb-8b3f3ef34ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5bbe8c-6807-424a-9957-f908c74e68b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb670416-e973-4287-8111-d88d303e8ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4178863-b34c-43d1-9749-70044ffe96af",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34e990f-9d9e-45d5-98f1-2d5ec780bc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a4a613e-2519-4e27-851d-e6780fc32fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80cb60c2-051e-4f4f-9202-03421386085f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3439395-31e7-4122-b46c-d110847565ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7472fff5-103f-4426-83f0-d67787d62b02",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d53918-4732-481e-9423-d7c48daa685e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0145c091-6e08-4950-8af7-1e1fcfeccac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54eadf19-4564-402f-bb4a-96cedc61a550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "344561f3-6571-4f55-b0bf-03f490638be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9242f854-e376-43a8-a902-dcd90c498f60",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53cbe9df-8116-48f1-8575-1107ee701da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b602f33-6a4e-457d-bbef-d382320639df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357bc0fb-834c-4f43-bd94-27f152317910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d10a6319-ebb9-46b1-845c-81fb5cd1d78d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8370079a-3cb4-4fed-a13b-bba3d4bd26e4",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2bd89ed-0a24-45f3-ba42-59802dcf4865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c2330a7-30cf-47eb-a801-75abd1a49bab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997857b6-20df-40ea-9f87-8267eb94d83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3a7af2d-e6f1-4bd6-88c7-bbba29cb1ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8adba345-e84a-4703-accd-fd81c3f83ea6",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c967fad-ced8-4d36-936f-fd67dff50ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c3b44f7-7389-4263-aeb7-c89e618014b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e364fb-80d0-4f71-a179-a2bc3a8fd66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "345cbc2b-d765-4cd7-ac64-b0eddca445f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0ff76b-edb6-41eb-be92-4ea4c692512e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af45da8d-181e-4978-9bd4-743c5912e239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09fc79cf-8026-4f8d-8e13-96cac56eeb2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39cba6c8-8653-4cd4-a33f-7986dbd9564d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "efa0c4d6-7cf0-43d3-a198-c45c3d48fda5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10926ce4-1a2d-46ac-849c-9b00332b5a9a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "410f623f-46a3-41ae-b598-9d88b7993712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c8a850d-182c-430f-a5f2-5efcbc641e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e576e300-8f0b-4499-93b1-5522ab875728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ef99f62-8172-4f0e-b7f4-f45907915790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d3224f8-1110-46ce-97c8-2cac1b9c3fd3",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d03087-cf83-439c-bd45-2465448735ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5e5fda7-d773-4a14-8644-ae1af871ab79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b3363ca-2867-4481-9301-e3054560805e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "88de03ce-77af-4a2a-bbd3-317a037da867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1f3d28-888c-4be2-b877-21c7cb9a3e34",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5a1661-f453-4db0-b983-eccc8eeef886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95638012-e415-4a3e-ac7f-a74c5d3039ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f374326-0a47-451d-b927-34ccc2681652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c444d1ce-411e-4228-9d86-b1c82c4c5160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7eecd9-1a40-450a-85dc-0579e2f236e9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b215dd7-b47a-4d7a-8ae8-c231d991ab91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "539318b3-af4e-4260-8acb-99f5c06753c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d644fac9-83ce-4f6c-ae10-a0dab24123eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec18987a-4073-4ad6-bb4b-259ea5a87b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e750507-1033-4880-928d-ebda7f03ce42",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb1962f-7336-433e-9065-f86ef023a90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70941631-f084-4712-adc7-2c31b1fe8f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d6e152-6a88-4a6d-8014-d680fecda2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d2bb2977-bcbd-4f57-96e3-97e90db9292f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d728f156-d2cb-4404-bfad-857b87eecc49",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d23c1b-79ca-49f7-a93f-57ff93c6d676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fa44b81-5327-4080-85b6-a99573399244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3984d1c4-a632-4317-b3ae-12e19e57dade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "df1d6d6c-84ed-43b1-91d8-874a1b2a4b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9d65eb-1734-4300-8d22-2d1fa84411dd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "577c86b0-826f-4d83-8367-c637e2ccd02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08fc28de-f458-4833-9933-18c8e9bc4cd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f500cd-7ca9-4b52-9b81-fe9635e80818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "aef63f10-28ab-4799-a511-05f55bca8884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a21af8-cf18-4ca5-acd5-dd1a28035179",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89817c5d-c055-48d1-ac46-988140c70cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95371534-851d-4988-bb53-af460e47c162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c5189d-3437-405b-ac50-25f9b11696ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "31306df4-5a0d-4351-be67-6f4027ed0eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ee40e8-a78c-4523-a1ff-7b4c8a5f2ce0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3852c6-6433-47e1-831d-ac9630e3d450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdf6831b-a997-4c0c-bada-c71d6aa56c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8036a33e-3784-4414-a6b1-3eb89fc06335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "07ed8ffd-5cca-4950-8a0f-cc59c8ab471d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b705819a-cada-4059-a0e7-5136dc759005",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f430f80e-e076-4625-a48d-9d3e545cff3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6614fd0-34d2-4571-a2c5-b5c4a5a5de7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d921c5-eed0-46bf-b303-4b60d215b7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "295f836f-173a-4a03-86b3-b72ef516165f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52fee818-5c65-4499-8747-1ff0c6f981ca",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114adcb6-7cb7-4360-98c5-e23dcdfaf8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1992b0a-29b4-48fe-b8c1-a603b53af258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa6900c-832c-491a-b518-3f774fa53e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef070add-719e-475a-b8f6-d6ca088c80e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e313c3e-cf52-47e4-8f68-ed07a5e8bdcd",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c39e65e-8ab4-474d-a7d8-67a9dc796f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69883406-0bff-4b75-b0a5-6865e2838bf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c5d24a-7271-48a9-9863-1e49f4a60ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d420483-a168-43d3-8382-6d5855bbc32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d32b525-6ba0-41aa-82de-b8dd61eb0121",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3fe2ba6-425a-4bd8-a239-c3fe1f701b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cdf3183-0725-4037-9635-07a717a942ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86366c5-a699-4d47-8a8e-6eb8c495f9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f67561e6-862a-43ea-8da1-8da6fab9aed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0d6074-0699-4a7b-89da-f7b29774428f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a8288c-1e35-4fb2-b67c-4eb825d434d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04b7e4e5-4238-476e-8129-e8d271779566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c47852e-cbf9-449d-98de-570067d75b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8660b66-9d87-49fc-b66d-01c2d2a1fe35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e394a656-d9b2-4ef8-b342-0389fcaac7c8",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74781137-5a3e-4e41-99e0-9c0b1114c3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab368612-7ef6-44c5-89a7-a1be50faf309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e426408-49af-41f7-a9a7-9026e3bfdb91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6f97d9d-c3b5-4f07-8832-5c9ce5daca11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5040be3-02de-41af-b077-73c0105532a9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b0a4f5-e408-4479-b93c-aa3f4cbdae77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b43be08-bf0e-4ea0-8fd8-3d417c6e26de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec4c24c-da92-463d-bd89-8a97bbdce4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8b40fe7d-5f02-4d6d-b490-1af2cd607714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ee5e74-9389-4074-8a70-7fa1887a10c7",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96fcbf44-e994-497c-a713-dc27ffb0df21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a1cd6b3-eb37-43e9-9bba-ef67bbc5c835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1500f3d6-0bf2-42a6-b671-6d021c239566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "99e8db2c-7df6-492b-8c94-d8a5eb4fc27d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5f0238-2d04-47ca-ab6a-07aa0eb2bb25",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88377f63-ff34-4d55-9fca-6bac6440ade1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5edd9533-7fa3-43af-82ed-f7fbdce419f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d9f47c-31b1-47d8-a7e0-c7dc4a4aac1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5c9beb8-3ac8-4ba3-ab1a-7d4f4af2e1af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d3e3b7-f8c1-4332-94c2-aeda0f3cbba0",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a4a094-f399-4e40-a7c8-2fd9f43df4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b964e9be-5b76-4e6f-9f31-4e76048eb537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e7535b-9245-4dc2-9667-814591558c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2855e08a-c217-42ba-913d-315b135bbd57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f3c5ee-2650-486a-8db3-d993ff4fa76e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0da73db-4314-4a2a-a5da-7e40554501c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7d70560-c20c-4a54-8cd0-640dc317956c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b762526-367d-421a-99c1-febc47a653f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2f7ae8c-1acc-4da9-b6c6-a45fa041538c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178e4d53-51f5-4e56-a61b-29979f970c1b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d677674-0a24-4cd1-884d-1c146987e555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03ea2e5c-9d3a-426c-a505-759bc6223a98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c893e08e-eeff-451b-9b91-c5980050b2da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c91647d-b680-4051-87a0-2efa08e389b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83537c96-eb15-434f-a8a6-3d15b3ad436a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df91720d-a677-4cea-8828-be1291520c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d5cea3-b357-4407-bf3b-84533f99a97d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21dbf783-7451-4d06-9c8c-2afd94d79fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f43487c-05d9-452c-9085-906d2cb29d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9140d37-24af-402b-91fb-470a7e2c9a0a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7748487b-806d-46e0-9d11-809d0dd36d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e7796f-9fce-493d-9e6c-32c4909bb1aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be02a59-f759-40b3-b53e-ca38f43b3e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "74fa04fa-cdc7-45c9-bd54-946d3b9a2842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328bc2ce-354f-4dd4-aee0-e55b486c656f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70827382-83b7-462c-90fe-4415f7d3f7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb341d07-17b8-4ef2-b9c5-5ffd50b6f429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b860c0b-1b5d-400f-a665-2c7ffe5341d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4543118-fcc7-48db-aabe-0f53c3eea366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73a9ec3-a149-4fb9-9590-dd5356f42dc7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23132018-390c-4ae0-a9ad-87a1151633fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc5619e5-343c-4c20-a4a0-5aa905e6ccdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700840da-95df-4fb5-8c34-aa78f102d17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bd1fb2b-3341-4868-be03-8099d1e04f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f6795d-69c9-4e74-97a8-d547a573a09d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfc49db-4a3f-4252-a85d-1fbb8734e32c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0130e1af-6701-4d9d-ab5c-4cfefdd8ef56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f7b123-15c1-4e6a-b28a-46034f7260ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "baefaa2e-1f44-4dd9-89f6-8c065573996f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65fdba34-a611-425c-b6d3-94d9a29e20b6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7beb9be4-1aa1-4daf-9cfb-6b8060ecf81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2043f4e2-0d44-4a5a-9eeb-04a746d2e3cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67e1f20-7950-4447-952a-2df79007552e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37f0c397-1ccd-4323-9e5c-a3af574d9b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da2ca70-415e-4e7d-b6ff-8dc0365fbd0a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ffc858a-12f4-403f-9936-b1514e114c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaaa782b-f359-4358-bf52-3932d354f895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87f5fdf-5008-42da-b211-80d7ec5838a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "66a4fa8d-300c-4ae3-8a72-35829f5f0217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00de74ad-eff4-4544-b30c-4cf409dd66c3",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f969db6f-2094-4086-ac42-9710bf735532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4fcb172-7baf-46ec-b289-cac98b23e3c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4edcea58-975d-4f14-9799-3c4d61082668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2d8cb68d-b4aa-4c2b-aa0d-3d25dfbf575f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb5c384-3fc8-4be3-810e-476d7dfe429f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f28810-9826-43a4-b105-a379ef40c714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7042f374-70e8-484e-935e-5049bd9b87ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f714d88-2adf-4aaf-b837-7cc89e222a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9531486-bd7b-4655-8c96-6e7268817ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705c844f-a0c5-4566-a659-30a21aad5050",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee36d59b-7880-41df-9c78-fe1e7684619b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63bf39c3-a978-4eff-96f0-cd9b89aed327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea01f5dd-588e-43f5-bd04-b4a7fd582852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "85243ea2-d2a8-4397-899c-d4e9bf21b966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56a0c7a-cf84-43e3-a963-73e90ac232cb",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "493413b7-c1e2-411b-abad-220c67028d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c64ec1-18fe-4ee0-8e1b-2df8d44d0f3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5b5f73-9422-40b4-aac5-961417a86e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "698ebce9-a201-4f80-83f8-9bac9b4a802a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa662300-3ec9-41c5-adc2-4694b1af179a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e554bf0-faba-4ed0-aef5-c1a92303918e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4df6863-6fb8-416f-8440-6b21ddbb81e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6c7c41-1e27-4247-a05b-792c02fb9d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a9c7153-f9a1-43aa-b465-fd79abeebd0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368b995e-4ee9-4ad9-9a9c-66a9c1200a2e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1598bfff-3bd1-4efd-b7e9-a20603152a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eefb2e1-df17-4a1a-a2c1-0335b756e697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15339959-49c0-4a5a-9edc-b55a4471d89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dedb4c29-7160-425b-a114-18c147ceeae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3bad75e-0178-4b64-9285-67c062c205e7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7abb8b01-fd89-4a05-8dbc-f0429cdf1f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8e342df-2d3b-4a52-abbd-10a106cb2534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4917f1-ef68-46a2-b88d-b96a2e776b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "62f87d72-09fc-4e79-8dae-945ec85fc2c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fedfad5-f1c5-4825-9f17-03e885d0d12f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da543eb-5d18-464b-a4b9-72ff07e20b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9044251-925e-4a64-aa2a-38d43787d3d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e10e75-dd1e-4e9c-a770-95bc68d29f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc45200-85c4-4fe7-b154-c9aa23b43f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9600560-9b5c-48ca-8c8b-2356c4c2d899",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fef1316-ffd7-41ce-955f-5acc662c8f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b84c39-8316-4e95-8008-a88e5750fef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc995aa7-e901-4ad6-a8f7-f28081f56f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "db125085-d7d2-440a-9cec-b0fa51e77a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b651e2df-5fc9-4c2e-b208-4e3e5f3e72d6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd3aa27-b04d-4009-89ca-16d843c418b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7311c638-551b-41d8-92e9-8f19648e3340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6877b9-454d-4a01-9e41-343d0b7e3d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3df44f9-db70-44c1-ae72-37eba3152c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453e3afa-1682-43e0-9e50-1c417d734949",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea79af13-5fe2-459e-92e5-ee342d361018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b410b08-41ea-4f58-995f-acac0bcb57e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f65e729-bc5c-4805-9d5b-b68eb52d2175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf5bfd4c-8ee6-4f6f-ab6a-56f80e8ae954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5cc65ee-4537-476e-a625-df22b250a3ec",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4668502-4fba-4cf1-a26c-4cd26e65c392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e6a841-cba2-4c6a-a362-8fcf06c173e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaee727e-7cea-4308-861f-551faef1e577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "37baab65-caf3-40ea-8fcd-75b2df3a1b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "605a42b8-aaa0-43b0-a7ce-6d88f24eef93",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba1d57d-1ef0-452c-bb34-80fe31e3693d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a71df8f6-3896-47bc-8263-728cb4a4ab55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f26f511a-2563-4757-95a8-b0451082558a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a09b6d0b-f5d7-495d-9e66-5ebe6439457f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "02a8bfaf-8bc2-4321-a4a4-644a3607054a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cfd6813d-d3cc-422c-b466-dab3b5e9998d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ead40b4-e96f-4e8e-9e15-172ad399b764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15922dad-7654-45d2-b9f4-762d5a40f331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1d81ca-bd65-473b-8b8f-a807637f99dd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19e611bd-48e3-4e69-a887-2cff1c41e89e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd25bf2b-9e90-43b4-94c4-aad42143e279",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7aad729c-cf56-46a9-bd36-3ab76b8bf504"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8570fb2f-21fd-4f55-b2a5-3aeec0a42dad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9cf1ee98-ae82-4565-8c2d-22fe16e9d4ea"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a20fb16-cace-4513-838f-5730cac46620",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "afe383ad-2853-47e8-b21e-8c7e48c3bb0f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "482764af-5ff4-4580-bb41-e77231e00a14",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e97fa54d-0eb3-4560-993d-dd21d5e1ee9f"
                }
              }
            ]
          },
          {
            "id": "8797eaf3-fad5-4f2a-98b0-36cec5915f31",
            "name": "Positive Testing",
            "item": [
              {
                "id": "74da6abb-9d9a-4dce-9b1a-0d0372b334ef",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08e71531-a6ec-4d99-8181-313f8ed78dba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6cdd06cb-39a5-466b-9dc8-59fd02bffc05"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e64668b-a96f-4e0f-a3bc-4341cd85dc2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5380016a-260a-4a2e-93d1-62897b1ca025"
                    }
                  }
                ]
              },
              {
                "id": "ac5e1343-3914-4b0e-a6f4-7de5934825c6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "190b3e36-97f0-4684-911a-6af3bb47ef86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "da00d847-e554-4ad2-bf7c-aaced8402dbc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "510d58d4-c2db-44c5-bc97-3bd3723d2ab2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "119a4961-b937-4a9b-a37e-3cf42e84499e"
                    }
                  }
                ]
              },
              {
                "id": "4684bcf5-658a-4250-ac09-e874c51969ef",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "79415ea7-5fd4-4058-b80d-2e79f58c4488",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "62b6c525-7acf-483d-9f7f-0ec66e21e914"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bed84bac-f9d3-4d69-91b9-9c9073439ec0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "40ff5105-d70a-4bf2-883f-0f0fdcaad71c"
                    }
                  }
                ]
              },
              {
                "id": "d9758375-dbe0-4abc-8b4e-256b8bcb1916",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e8d433c-fc5b-4ea4-94cf-32f35e90fbf0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "65b88500-ac93-47b1-b4ef-d4677d81e3ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb1e0eef-4900-4335-9a11-bb737670e962",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "101348d7-b906-46b4-aa64-c3142013bab3"
                    }
                  }
                ]
              },
              {
                "id": "e5468c2a-ce48-4d3f-8f5e-7075947281f1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "11c16b19-cb2b-48f4-a25f-c30570a0af4d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ebd477e1-25d3-42f7-83ae-e300cf8772c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "548e3fd2-fcef-4dfe-8736-876305ddc0cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f2520564-551f-41d6-b00d-896b53ddae8d"
                    }
                  }
                ]
              },
              {
                "id": "bc90f2cf-4834-468c-a7ba-5ae255e068df",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8665d393-9520-4596-8ac8-11d8d6cf4d69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e3a2822-0536-41fd-a61e-6dde788bcfd3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eeb7f145-412c-484f-acd1-20264c738610",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "52e946a7-8ae5-4834-8468-e02712293747"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "708b06d9-e961-4bdd-ade9-ba5ec5410a19",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fc67e228-1738-4ed0-872e-25caa473f7df"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e9ef7a5d-a955-4fc8-8337-c014d2569693",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "88c5eabb-4187-485f-abb3-cb7bc95d2831"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01b66f43-09ef-43d0-86c3-5905f20b8ac3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5264a4c7-cb92-4ea8-b8cd-a8e9cf96aafd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "66709e25-6279-4c0c-b0d3-b4a2fcc98d9d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e9c8ea76-48ab-4027-b99c-9a7fabf03031"
            }
          }
        ]
      },
      {
        "id": "b480a8d8-9722-4eb0-b4d9-515d81fc436a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0f767bdc-a23e-41df-90fd-d6d312bab883",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ab84d609-bd75-435c-b4a2-d28d5f81a0d1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "be76353c-6d9b-4565-ae33-a417f21b1152",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c954294-ce53-4944-903f-8098f845a758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc3d251f-13e7-40cf-ac46-6b100501b720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da95ce2-0cef-4e6f-a017-53638aaa2933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9df3fffd-bdbc-4dd1-9e74-2e404731c5e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575aa056-bf7b-439f-a59a-adb40a4e3e1c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de47b68d-c66b-4256-8af6-4faa3564384a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efbb0d8e-e545-4738-8e05-c28a4416ce40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e0eb80-8deb-4071-8881-16e94786dd2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e098b9d3-ca72-45d4-88ae-0ca0c9171eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0080f36-f66b-47b0-b2f9-15ccf5c23ff4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4216b7f5-1ae5-4978-b970-ed55322cb474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "451c8c02-4494-4fac-9b9d-fdea4e14e519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe18c290-f1f4-432e-bdbc-439e66a7a1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a10a88e-ad45-45d0-b9f8-86a60bd99099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75afa45d-84f1-4a53-948a-15c059141786",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55972615-95d8-4b71-a991-47febb377109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f20760b-683f-419e-81ce-ed14c709a504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097418ab-a1e9-417e-90f4-f643aa345880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cebc507-7e85-40f6-a90b-54d6fe005463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92335c8-9e5c-49c9-a160-c1a0b51d05fd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9e000f-c380-4ff0-b091-46a671125fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a109697-1661-4f7f-9044-22106aa7cbd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbf8cf7-d6a5-48a7-a077-b3a1893a0613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "20f34ff7-dddc-472c-a890-bba90868fab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246f946a-c0a3-4b23-b7d9-1c1cdb903592",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2567ed7-8a38-491b-915d-56eac9cb6efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29632cf5-3344-4c55-880a-1bf72ce0c458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7028b1d-d222-40a5-bfcd-9af9ffee775e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d7ff234-372a-41a4-97e4-ca3797498b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca66845-e95f-4c83-81dc-bdddcaea2225",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adfdbf6f-358b-472a-973e-106bc2b50425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb8b7d2-c733-4f09-aae9-264cd0eab135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f3a19b-5fa9-4724-bcf3-ef2dc8ac2190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a65022bf-7787-41de-abd1-96757c965731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842eea5a-defd-4c0b-b78f-354b4f11ff20",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c34a5e-f612-4f59-8f2d-1cbde279b856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c884c5a2-37fe-4f9c-afdd-0977d1e74707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20808242-e718-4ef8-b46f-43278bb265df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd08a0be-4d86-44c2-a9ae-5059e56adfa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2de7eea-c9bb-4867-b4bd-795a67520a90",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a08e7c7-80b8-445a-b6da-29b9cd6b623d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef4803e8-a61b-4f31-b3cb-e18bb9af6b4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5730e49-743a-4909-8a10-8dfb6f16dcfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba8b813a-5cfc-43fb-b163-95de0f76b33d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9011763-b259-45e0-a493-c7c1c82f1037",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64704050-302d-41a7-8c5f-6c0298a96839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5631edbd-104c-40da-97a3-ac475b1e9d4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92601239-460b-4971-8108-4320996abf8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6902214a-d565-4cc9-abe9-1accb19f0cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f754362-60aa-4026-b768-812c293b7b10",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f741da1-3ea0-4d1d-8ead-06bdaa25d09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d80a1c0-7714-4b74-812a-2a4bb63ecbaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e7e842-5894-4ed5-9cf5-eab7678d3196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "973852f0-ce07-4a80-845f-a7ea210af9e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce5398b-bef0-41b1-b72d-3c98ff40322b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f487e0b6-db0c-4e95-b903-2e1e56dfe4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afcf5602-6f6b-4de3-a082-52edfd503181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84df3021-0a32-4c75-9a66-96f0ee452caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d0656d69-8478-4b43-942c-09a5959bfd53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68beac1-c017-4b79-8bac-40ac62539e11",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f8b9d4-a9ac-4b20-991a-6a6f040a75d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "819b0ec9-aa87-4aa3-b85d-371fd61469be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bedda5b2-4f81-4cff-9356-00924829958e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bb1d88c-992b-4681-95f5-d1412c98a5f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047ada36-3660-45be-9457-3b9f236303b3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52587432-0395-4a4c-b3a6-cfe6f9dee290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3ccb6f4-2542-4734-90af-a39e31d4d6c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e97f1f-87d5-4805-bc2d-ee71d33b60c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba35fc90-76b2-44a6-b53a-2f21e8f16841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5feaa2-e68f-4ea7-a46d-4f06d039c5e5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db7eeb4-136f-4645-af58-9690eb5edbb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef5f3124-2ea8-4572-86d3-01222194e08d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca0ae92-2075-4509-8ff0-a6a20929cdee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a71bcda-31c2-4532-aa9d-43fdd701c04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9045b188-63b1-40f0-9fcd-e6780191ba6d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e682f02b-4f52-4670-88a2-123a22756197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8f8818f-c750-42e6-adfd-48823b94b75b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a185a2b0-9529-4a7b-9e70-8a47e7972f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecce043b-1fdb-486c-90fe-c946adaec642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2904c2d2-0c66-4dec-8558-f7b888f6fec9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c553be4-d34d-4450-913d-4a9940c11812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08b7bf4-3540-457a-aacf-07ed23a7bd39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac84ebc-17b8-4c09-89a4-57585fcf1a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "57d6440a-d6e4-4d7b-9362-b17b0eb831d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b17c93c-dc53-44d1-a22e-c7f1e99ef4b1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6308df7-ad30-47f9-bf00-7049fb1823ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "398fd422-a8f2-487a-80f2-23edb6c64e23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a91bc60-f845-4dfd-921e-26fe74e9a328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "68b91417-3450-4c83-b294-b109b18f52a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659b6c2b-56ff-49b9-a2b4-b7d71e1adbce",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c9ced0-f498-40b9-860e-4f89af4bcb10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12f83529-e78d-4c30-8317-d71b015de8c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c63f7a-ba22-4023-88a8-66b19426f3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8be6bea6-131d-45b3-95bc-6e01019f81a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c22e44b-3153-42f4-acd5-814b78f04eb9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11028f05-3ba6-4091-96d5-8892132d95f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc00fe25-aac0-4c9e-ac3c-84778f0e9e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd52629-68de-468c-86a7-e2701a1abb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "782f860e-1299-41dc-9e9d-06ef14b2c4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef798cb4-8929-498f-9ba6-46f5e0c411e7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a07d7e0-c87b-48db-94a1-60c56708d53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cda4b29-38aa-4c16-9ca2-8b914c6fb18b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ed472c-7c76-4f43-a240-b261a9a5933e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5905080-29f9-405f-96be-52cc3b60c1fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c60b33f-966d-4778-8b57-9a5636438054",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb52926-bc85-42c6-ac21-7a25ecf767f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f38f07c-8009-4c39-9e4e-c0b781495dac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5e98cd-c085-4e57-85b4-5dee115f7e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a98ac4a5-c3f3-498c-a155-13a701818fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc00f9c-1671-4005-980f-2ca3a8f83fad",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2f3487-b13f-4439-baa4-619790a9010f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77bf301f-da00-4af0-9d43-c6199f7ddc79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc12133-73bb-49e2-97b1-92f9a2ba6d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81c45150-27b4-4ce3-8805-dd284f6e2847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443fd1d6-31eb-4d3b-afe2-1aa18831807d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f6dc1bf-3cf2-4bc2-943d-c8572c38bfdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1803fc5c-0915-4406-9f53-8a98624171ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9613a80e-c0f0-4d55-8c69-bd0c29bbe340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71d0a168-f89b-4542-9905-f4de8c2dd6a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a577fe00-0837-4196-ba65-86619256a8b3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44b6964-adc6-430e-8c40-65fceee0f2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f973f6b7-2b31-4c02-8260-94645fcfaa2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74fe0fd-c8f6-4464-97f4-b9edcc3759e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e907525-083f-46bc-9f5d-4ac135980c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640010ec-8eec-4015-ac7b-e84efef654c0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d651301-457c-48ae-aea6-c2f2535109b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "217f90d7-1765-478a-ad71-bd707529d779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c57b722-40d9-4e59-a63e-4a135eeaee7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93a5cb0a-34b9-45ef-8995-b9be8336e754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd26e30a-ec07-4ce8-9484-a8257d524a34",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ed74f9-76b7-429b-91e5-54bc71e65575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa27ec62-02a0-4460-8950-f46e74a9fe45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73c8e10-86c9-4d40-8e07-9209c3953992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9822750-029b-4088-ba42-9033f92ee8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a0760c-cbcb-4f0a-bb7d-38bfee5fc912",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a14fb34-70f1-4249-a436-4b037e6c02aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f809df44-5b2b-4440-a40d-081af02a2d8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc238f9-670b-4730-962d-cc54cf230f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8abfc9ca-f11c-4b88-a272-7d66c3707355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9849fbc-6bc3-44ac-93f3-ffb0b6d6bdaf",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef59355-d1da-4a90-9c4a-a5d02d038344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb0b1be-922c-458d-bf62-dd4d56d77ac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a6333a-507c-420f-84e6-3a701b5a23a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d6fb113-2460-406f-ad52-c4f923ba92cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc4af701-cbd1-4e96-9024-c11ffae07b6f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35f2041-99b6-441d-98c7-91fafde40895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f2d4e51-c107-4f4b-999c-118e1026843c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2be306-d306-4da2-9198-0f138bc3a8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec9b1bb-988c-428e-b47c-fb43bf604c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20dd33bf-04ff-48ce-9db4-3fe9ecf4942c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50829a83-2f5a-4666-8d2a-400f138af156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26bb0ebe-e57b-4494-84a9-379149859de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02614f09-49a8-4e91-9764-c00beca3c6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad6461eb-0269-40fe-b1d5-74b2ea01476d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f1debb7-6409-4c8c-8029-d9b2a42ae403",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3893e1-2846-4483-a583-2b8baba012cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27f73565-7122-4fe8-8335-8f468947888e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9faa62-3b73-4ee7-bb42-75a94d56b6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68959c90-efb2-4d62-a460-4067dfaaab39"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4753431d-22a2-46ec-ba01-24c312d5ec1e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "18150461-7422-434c-8b48-119c4919fbb8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ef164e-56f7-4d03-876f-8446391943a9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4453ece1-b6a4-49a0-93cd-5d3ae09a7549"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24adca6d-7e33-45ff-97b2-e699945027c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86083c27-701f-40e8-90e1-fa4d02ee6623"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbe98543-461b-474d-bf03-7a65b6e1188b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5fa00edc-34e3-4f99-9d0c-60c7e31fbc50"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2306876-d20e-4218-995a-35ddab05dcbf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c07102a0-0911-4499-90c3-1dc38203cd4c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3fa9384a-7ca4-4427-a015-1cca4b20fc6b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "69ae9db5-1ce8-4d91-b3c2-ddf81b28cca1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "856a88b1-d28f-443c-85b1-59217d68d194",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a5c71176-e325-4440-b3f1-924614732ae8"
            }
          }
        ]
      },
      {
        "id": "0cea6bf7-1623-4785-b2a9-34c039057b04",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "6afff954-7efa-4139-a3b4-bb0749e40014",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0c17ec79-1125-463b-89c3-215c9e74803b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "112b97c4-8d1b-4870-b8ee-402f6771e171",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb0a26b-4673-4306-b7bc-ccecc0535584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "550ba6dd-fc7f-4fba-b5ad-f0e300690f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96538b41-48ab-4f4c-81a0-b8b1b47042e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "58c24129-7606-4c96-8d6a-8d9edd0b6c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21046878-3f3e-435b-84cf-0600b9d54712",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f79e56-7781-4016-9e20-5c9be034e626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fa1d5c1-7a04-4fa2-9f08-becb6763683d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f85670-62f0-417c-a122-e0f5bc904433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "077e867a-0481-49b7-82a2-b252d4905480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0237f196-0574-4d7c-8548-3ecb6bdfea68",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca64632d-15a0-408b-81eb-b9b7f80d5680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37c80d49-8ac3-41c2-a9f6-b069a69b82da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed15965-871c-4f07-873c-2ff30284122f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff464285-1bba-4671-a052-8f1a37cf22bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c4bb9c-bb74-4273-9a44-9508ef7e0ea5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ea096f-4abf-443c-aa00-15c0cbef8fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a2a6b60-6126-4d8a-afb0-74ae7a1d66fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "537e25ab-c788-4527-a2b2-befb1f8089cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "afbdba30-ea61-45db-ab43-0680cd783272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db829f2-d77d-44c0-856f-e7488975e2b3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38dc9d5-ab4f-4e94-9200-f04188eccd40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28fd21d4-cf11-4ff9-be0f-3aede2454348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe7c491-d6f2-4bb3-918f-1cefea0d817d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa44bcb2-f45a-42c7-8589-b4b8b1d5d0bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef92f2e-010e-4e9f-ae38-643cb18b5667",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34df7de3-b702-452e-94fb-6b183e1dc37c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c534bb-ea01-4416-8a9e-ae091ef401b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ac6876-47cd-40ec-bbfa-e1f9554f4c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ce99c52-2653-43a7-9219-2180a771d427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe214c8-d27b-4990-b504-337be13dc5ef",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae04402e-602b-4394-b703-6c0962b48fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f954436-95aa-4512-99ba-2eaf276a6fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bda4df7-4ade-43c2-90ba-bdf640c115b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0bc6b57-54b9-45b8-88e7-ae2417a90ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17be6a41-617c-46fd-8a5e-70485174edae",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9bb25d-e240-4668-88ed-fd58b386cc64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d3f56ca-3741-4d21-ad7f-927853e4cd6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f834b7-a0a2-43b4-a87b-5bf50647233a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "29399f56-b220-41c3-8891-d620d7ae3c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e90256-f0ba-4499-b168-c9bd6182da78",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed48eff-d2de-4bfc-a6dc-acb8d654948f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b9e197c-61ae-4c4b-9cde-e08b8809e3dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c29fb2a-a913-41ab-b1c3-54c1ac4b0d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1a1619b-4c9f-44ff-bacd-3fa21dda0e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5587d41-4a55-4883-a914-766ddfa23a15",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1440c09d-966c-4b60-8689-d8ca0030d1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec45cc44-2f23-46c9-aa5f-d1874ba37449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c79604-f47e-4eb1-8fd3-9bddb7d2a397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dac4e703-e337-4663-8097-c78b6e352493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae500f2c-6749-485e-93cd-4ff283fd0c34",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf453c9-3c69-4484-b3e4-5b3c5badbb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8247c035-b4da-4a9f-a7ac-bbd1597b6b42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b438df2-41ce-48ff-b71e-cf05f4329fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "59141203-6883-45b1-972c-00bfa4de05da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f0dff1-395c-41d7-8589-69324d0cdf58",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70405c3-ac62-4ce6-b585-94d37c2316a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8c737c3-0073-4386-aabd-26b9eaf7cc7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b717cb-1bca-4976-935c-d156e3e1e999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a3efe404-7d93-4e3d-998b-25245c869f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc5a95e-2c88-4267-8216-6ce62a938ed0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "385224a4-7444-46d2-b85f-e1153bcdcdc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e95d5ebe-58c0-4e20-81c3-75ad45231ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ba2c48-1679-4b1b-9c57-2d4122f611c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0973af3d-099e-4431-87ef-66a5d7a4a625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e716821a-b25d-4af9-97f2-962d184d3c6b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e422c38d-d1d3-469f-b824-e9f6d084f798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3fe25e9-af3d-4362-a50a-cea9c17bae44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d10af9-d7ef-4f83-b024-718213a8b5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5e2440e-4562-4960-be94-2807d4d0e526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb94437f-7f51-4cf0-96b7-c3e94a33fbe3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f264ecda-e19a-4dfe-9d6d-70174771b568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "489f02b7-b2f2-4e10-bb3f-fbea0747aa9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870fa13b-e151-4711-988d-4da109b9a722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "99b28797-937a-4735-84a8-7314bb6b6aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bbf6122-35b6-4cbc-bb34-48ad7222c6cc",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7be83be-8a55-4d2b-ba63-e5fa80f6d29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9654ca5-d34d-40c3-a03a-c977893c7fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae50eb9-b129-49ef-a24b-9218be0a603c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d5acbe3-75c9-4d3a-94a5-1d29119fcb6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d683256-28b2-4cb5-bdf6-05dcf9320082",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6890c3a-208e-4d43-baa1-f6f81558a5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df43af2-09b6-4830-8bd0-081463690364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2731af4-51fa-4736-a2d2-e0ef54dfec6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a32453c-0bd0-49b0-807f-b8a36af0278a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83edaf7-b689-4067-bf33-3ba06daca0fc",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3fd00bd-c93e-49b4-9f82-089a6fb93400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47be5f64-0bb3-4369-b837-eec04abace97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05acd5f7-ed0f-46b8-8ec5-a253a1bce694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7ad777c-e888-49ef-93c6-081743d57e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a089f62-5afa-4226-8686-85c54ee90ad7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad88ad45-4a7b-4b03-a1b4-cffee0fbb21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5965abf0-4116-4286-a280-4c92eb60ca7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7260003d-8f3a-423b-836e-711067de9cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abc8c869-e002-469e-b61a-277f4e16942e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e81bdf-6c04-4f4b-b5a0-413770544e88",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4c4784-dc48-469d-babf-d8695f33e945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d33ba5ef-dc38-444a-aeb0-2e6b0bf9a7f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4774368-6ab6-4ff4-b9d3-cda97a974335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b780f01-a829-4682-94bf-e2e55bb36c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a8edd2-11ed-4b91-bb63-609d3812061c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61125ccf-9a1a-4262-9162-cb76aaa33e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72fd1013-e42c-4711-a65f-c0b3269e53bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad726ae-5597-4d03-993c-acb3b3feb9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "515ea232-3070-42b2-b15c-5d6b707d01c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a039981-14d8-4e18-b8ee-1a323f5c9a44",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e63879d-9f96-4f36-877d-daa84e3e8435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6baff69e-dda0-4dba-953e-204e8567a32d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1bec440-e3aa-4642-9219-b589c72a2f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be7aba67-dbc9-491d-95f6-c30c5a0ed876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ad65b9-810c-4c14-93c6-5db64421aa0e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e17f968-2359-45d2-8895-12db53ab4cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05ad274b-5861-4b2c-a861-86cbb79e2a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4234f0-5d73-46ed-8a20-4b1d564869f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "895f75b8-3277-4dc2-a2e3-0879726cb191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606c1672-f0c9-4815-828e-5832557312c8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3360055c-efd2-4c31-adbb-def8a4d0c913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d92c7c7b-3583-4b22-8d5a-1b287e1b67b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0d30e1-4458-4661-acf8-2080ee895541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78be1ef2-6747-449e-baa5-c1eadbd0cf88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860e010a-4377-467c-9a96-95e45ef4d071",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d8948c-ebff-4a75-b70f-228a46b255c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3703548-7512-4723-ac1b-0a83393ffef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5158607-487d-4b26-92b5-2a22ad795c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ad8ac8-7858-4b82-8120-62b3ba094b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd07ce1c-a014-48ea-b3d3-7040b72375c8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beac06e2-21f9-426a-973e-b298dcd2b0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "543922ba-31c2-45fa-a47e-9681e2e46ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "581a381a-2a60-44ef-a1d7-ed2c2c46c2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10127b43-6ccd-493e-a995-23231da400ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb84599d-a9b5-4ad2-b1a7-9bd2b14cb8de",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a607f3-12b2-4d0b-9805-2ef80636a063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09e5ad77-7533-4814-bd00-aaf8eb48c7ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a306e88f-c691-4572-abcc-c313952db2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2b3d6cf-b899-41da-9fcd-872a85365a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba74f0b-e8a9-49ab-a774-055144b39216",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61be8097-46b4-4f6c-b430-0929802faa58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da7df26-505f-4734-91d1-643845edbdf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b155bd16-33db-4714-a810-c74a83f958aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfe13fcb-13a6-4cf1-8ce5-cbf6ccd5383e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d8e003-34e7-4133-947f-c3cf8acb7fde",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9482bd0d-1b81-4fe5-b9da-ad3686dcab7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31cb34f0-a302-43db-a0bd-0cf1f1847767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e8cd19-2352-49bc-aeab-9befd60756b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be89ecc5-840c-4b7d-988b-744db155ad40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d69e3a0-a0a5-4f76-aab1-13dc0244a24e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b16a0c-a337-49b5-912f-678b62fbb6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97c4f6cb-2880-472c-a265-6343d2db708e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db01486-797b-4817-a730-0e5df9fe3091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1016d4e8-a9d1-4a6a-84db-0a30afa3d454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb68b02e-90f9-4ce8-8b1c-6c241bcf5c27",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef29ce3f-cd59-4ec6-8bed-9d088b3d0efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b14545-e64f-41fb-bbbb-5ee51c5e2640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae2456e-9993-4c81-900d-dfa4a78878f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f18fb62a-d5de-4714-a1ed-ef6f1f12cd98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4e787f-15e9-40c6-a793-b3e86d3e0266",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0396f748-0208-4ceb-9d53-0333f5248b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f03aa57d-ff31-483e-8cbc-23638156dc17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea167d1e-893b-4f74-95e5-32300f9b853f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e53d2841-5907-4be9-9970-c07323208b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f147630-d4ad-41e1-8f93-a41e3e31ce0a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45789d28-92b6-4031-b85a-0129a6effa57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bc3c241-ee03-4095-800e-457a11ed8ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6988664-4851-41d4-b91b-b364ffb413f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a1b836a-502b-49eb-9f04-e45d37c06916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87610662-063c-426f-8401-ce582b633f92",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70dac44-59b0-4048-95cf-c3671c691a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fd8413a-93cf-4311-b5af-aecba7a0b6d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4652b8-cb86-4451-b816-642e0ef54004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfc8316e-7dd5-4c8c-a3e7-bf33fc6bd6e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a76e31-9f60-4394-8e0a-f7af170ae101",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf815736-1ecc-4937-819b-a80fa7578d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb082b88-920e-48f9-90e6-5159ab99650c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2f60e9-6411-41a7-b54c-5eccd8b33324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f0d8f2d-d842-4341-b0af-f09cb872dcb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736f4e57-f64a-4af0-bd45-2d5f9cab3d0c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf5f7ca-9dc8-4a40-8bd2-67e1a85e8120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c1c42a9-c33d-4dcd-9ce4-33e51b9b0f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04afd21e-61d7-4d0e-8cae-d7aa68bf98e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6dfe3d8-ff4c-4e4f-9bf4-f4c66f0862b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66e64a9-8e23-4369-90f1-eb5ac4857655",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eba70b7-8a22-4dd1-a51c-a7c38e2348e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b04731-7b53-43db-a354-66b8cdc45770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1646f511-9e3d-4186-b9ac-753b4db376d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34e6df56-1ab4-485a-9394-af59aa13ad90"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d0ea3155-063f-4ca1-926f-7372ec52b97a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "389a232c-0d76-45cb-a92d-091f134a4a11",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9d1c98-c050-4145-9e62-0d793092a0e2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4b406a21-3667-4526-98ca-42fa883a9632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34efdd1-482e-4cdd-bc7d-ed200943fa8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8989f59-6791-4111-8957-119934980576"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9b17466-4384-4dbb-a50c-9f0a67e6f030",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f72d6f3-f7dc-4709-bc24-24e212f46366"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "22f9e21a-d153-46c1-9efc-9200abf0d779",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8b651a7-0077-45fd-ad7b-6307d51142f5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7d3a6825-f005-46a3-9d70-115b114647df",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7946f6bc-5faf-497c-a2d5-d4191c7827c5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e2547f9f-633d-49e5-aa82-d4bf5115b3b3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "823303ed-330f-4ae6-865f-14aba857741f"
            }
          }
        ]
      },
      {
        "id": "0fbcfba2-03aa-4ea5-a61b-bd5a5834e048",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5b833067-4468-46f3-8c15-21daccf3dcca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "50fa6ffa-0f5d-4508-aeae-cb9fcd76f10b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f5a5ae56-91d0-4ab0-bc7a-77199479348e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8fa39c7-dc0d-46a3-a49f-86828b8a8ab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39266316-14bd-4f2a-9633-a4609a61f671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648f3641-01bc-4d4e-bd1d-4cc49d57dd6d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69543fe1-3891-46b9-b8e2-135a15029b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c942e32a-d91e-46cd-9fcd-850356de1e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1a7e28-f7b4-4151-8205-ebded87e0c38",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77bebd44-9f6c-4dca-8ece-aef47b814654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f78325e5-aa5a-435c-b2fe-e93978a22ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a19d567-0c89-4830-a53e-6b7908248fcf",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60947c32-f5aa-47c6-86b7-1b3749f5240b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d56995-9552-4194-9c41-6a636edc2e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db9ebaf-dd49-4e3f-9e46-e7b9f54e00ae",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38f8ac3-c106-4add-ac54-7ac797ed4bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e97e5271-87e3-4b26-8e92-bde92981771e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c321cff2-8dd7-40dc-a938-da1b3da7b73c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "317b87c3-358d-40c0-a134-6c6512836b44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d549ed74-5cf5-4647-a4f4-743360aba95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd513e8-2402-4221-a884-dfff44bb4265",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb7617e-a7df-4ef6-81fb-b70d9daa759c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa5aaf65-7a62-4ae9-8d9c-7522f27a3f45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2afd774-a8db-49ed-b1ae-cdfbbdfcfad2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14405de2-b442-4329-93e0-dd3c0374db3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaededec-0309-4345-aeb7-876ab68e3432",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba3a1d0-41d5-4553-96e1-edbfb9157f0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcffc3f5-324e-4344-884c-4d90f65a2ca4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f022e17a-d801-4e00-b115-efd5ce534e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b61cc4b-1126-498d-a05d-23baecd55e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c3d749-9875-41ae-b283-4912e8904bd5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e766e39-8f71-44a6-870b-ffd60ea35832",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad7092ba-cea8-4b28-83ac-16089f0ad7bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfc58e2-f7f1-4fcb-af31-82ab1e12a1e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31acb444-5b68-48ae-a7c3-df5ae811a522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb68612-82a1-4b77-9c40-2c08a1af80e8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a97a9c1-cefa-4872-95c7-b9a56a26b7b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "194bd82d-871d-446a-a758-989b5b2ce727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43730d1a-113e-4576-9e71-b05122168e5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7834ad7-7092-48b1-874d-b53007fc429f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d22a65-e45e-4651-9a97-dc17257c50ee",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ba6cef-a75e-4e14-bca3-d7cb3a27aca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c428d9-aca7-430b-a6e0-2b8db64b4c1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e081e8d-d85b-4bcf-919b-f233e5c4d34b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35d3cae3-5453-445e-819b-d918840b1564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1f1b9c-5c5a-4d9c-8425-087c2307d9a8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10baeb8-8c09-4e37-a81a-327adf4d28b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b65761a5-76f5-4913-9324-4b7fa2eab452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d243741b-d181-40dd-8996-09797581cf47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78af7c72-ec1b-4c48-8125-c40ce946390d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829d47e0-4b86-48ab-a739-dcebdfd5e6c6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a60612-1a8a-4384-ba03-7534f50d27dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6197dcb0-0681-4a76-ab0a-ebb6130f6121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c386c082-3352-4d4b-af75-cfc22fc6a57f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "124b8e17-1057-47da-b177-dadcf73478df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ce59f5-edc6-479b-8429-8c3bee1e3e24",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be2cf8bd-464b-4db3-a466-0d2fa2800de1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f584e2d-3c44-4e00-b235-7b238aaeaa48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "547d6776-8ed5-4283-9468-cd892c0d8db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce5fa524-4050-4531-b4b3-4fdd7a8a06ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8d1edd-153d-4747-83ac-eac7554ab955",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b44d5a-14ae-4673-b5d7-eecaf6339d10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17a299ca-806f-417a-90e3-b6f7eb6af8e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe348820-37de-4791-8e9a-8c66a1e922e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa5ef810-521a-489b-864d-80efb174a68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be44098a-c202-4669-9ca1-fa18e235e4e2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69314549-666b-40d3-89c2-c3a9bf8cec72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ece95c6-a5ae-4b70-8a5e-cfad0399db88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59fae8eb-3702-4b4e-970c-af9e16a79ba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d416ee1-3523-4ece-90ab-5f3d9b96b04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd1d8b1-780c-46eb-a830-1ac86b6eb8bf",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6757168c-69fa-4501-9eca-ef219bd8bfae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48975f0c-26cc-42fa-81d7-7d1045ec703c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afc4e74-0f1a-491f-882e-9b338bd2bc2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d7c0950-e390-493e-887c-d93c0022c18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ae6c8f-1c61-47b6-956f-7fa16770df0a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a853b9-be6c-4a8d-8adb-253a29778778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e91c11b-2037-4844-8ec2-ad43f42324af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98979a80-a4ad-43da-9afe-758d302fbc54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe86f028-e6cf-4944-a9fe-82dba3209174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c0174b-c05c-4810-a5fe-44f95423bb43",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2faa5ef-c134-44b1-98b2-375c014f60d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca88c17-9742-42f2-9ec3-dca80ff22c22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3b0135-25ca-4358-bc43-5e518e35eef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88d8109e-216f-4b15-972e-34174e369446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8cff75-ed2b-412c-a2ff-f23e143fa305",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b219bd0-29db-4dae-9c01-7c63bec0786d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e65e7404-6459-46ca-9ea6-f44e40e66b02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "063855e9-a066-48da-968c-5f6201524aa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31783128-d313-43a9-a2b4-1656b0978dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1efbe0d-22ff-48ca-9929-78a2d99b7a55",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1440146a-7012-49bd-ad7c-77d815ba3010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "697c024c-5b42-4d14-b76a-1e4c1389627e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "010321f1-b86e-4a60-bc33-b0890630e1bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d57a11-c00b-4da2-8eb4-1bda1da43232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d549f9b-d485-4a42-baff-ff72dce8b275",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e937ce3-10a6-4373-bba9-c600b14e08ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c17685-62ae-471d-826c-315a5493c835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b67d00-6b35-49e8-ad47-18dff2e76b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d58588a0-8e9c-44a6-9fd0-41145f283182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3195a116-3e8d-4493-847a-ee3b47d1ead0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a8e395-e0bd-42be-b512-bf70d7dce18d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd53cc26-0579-4f5e-8af7-65b3f7a6c7d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46289245-f4a4-481d-8719-d5b9f444ed7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f86e654f-d1ac-408a-8ca7-3490e996da63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c89ee36-85c9-429b-a0c9-0030ce9d23c0",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "538f9e87-1899-43d6-b135-bdea8b0eb41a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6371f22a-96ed-46b3-8e4b-c97b37a9f8c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a7c7fc-d0a1-4d10-aeab-49fa3bd5d047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c903a1-44c4-4703-962b-9273bdb619b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72731a59-8246-4946-aee9-332ab46db9a9",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b113a039-2bd5-4ace-9f93-70b4bb09ec2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "606b24b9-b461-4673-a23e-9ff171c16ef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4723eb8a-6f86-4dec-a8c8-cba3db087857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "986c754e-50df-435f-94e2-0bd1a2e8c1b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a8b308-0ca7-4fa3-8a22-b68677497a17",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81eeb417-6e5e-4c8e-b0b5-872ab41d242b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "105c428e-037c-481c-9d00-bd670e89ca01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22ca7a4-ad97-42db-b0c2-5eb91e60039b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3e8930f-677f-4cdc-8590-f97f97d1f39b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7fb2cdf-342a-4a56-9216-b5cccaee5328",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4c9367-1968-4695-bc50-f18b483fe480",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c18107a-649d-4f8e-8617-fb15b4c55732"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6aafd6a-8d7e-4be5-b516-e1911cdf04f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9e3f62c-6ab4-4810-9f65-107c7f5d8e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c23324-deb2-435b-9fff-68498a844c1b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d9fcec-ef75-4bcd-808f-787d5a95e1fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0fa5dda-7ea2-4a3d-b8c4-4c3ed2f45696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4d75bd-236f-4bdd-800e-f0bc6528899f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5047f3bc-c9de-44f3-9799-5f85f2eed281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c45e28-d7ee-4dba-be56-fcbd212fa539",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b89bdb6-e021-444d-a29e-bce3dce4ca74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6014398-6945-4b99-b6b1-41e9b1f3976d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b059c6e-07cf-4910-ac37-c060db543126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef84c12e-97fe-4c91-a87b-f7e86bf1137c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf61c28-d3a5-4852-a572-1695018f8cf8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c97025-6297-4edd-bae3-55a1c1c21865",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37f20b4d-f473-4cd3-8396-ef6941477056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1776c7-7550-4c94-9e41-ca08116f668a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a47dc26-0f53-4a6c-8619-ece63a2e6832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d1a7bc-7237-4297-9cf3-ac4eb4c166ac",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea927073-e1bb-442b-a469-fbdad11d8154",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fc5503c-aab7-4166-8fda-ff7ead4187b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0cc900f-7faf-4fe5-a278-83b98709ad08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10231271-de47-418b-936d-5b526ad56403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf3d112-2a55-4310-94f9-6fc7aa478cbd",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bcf06da-5648-4c30-88cd-920952309746",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f2650f3-d8c0-4733-b082-be29304646a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38483759-c93c-4ae7-a7c6-0a5bd4ea7eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acc3589e-9c9b-46a5-a7b7-5934e0d2e556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa9c247-dc09-49b6-a7ea-4c14194f1688",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d69a004-21d9-4bac-9087-1690652ce57e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff0d4c40-1607-4b90-88a5-15429381bd5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed9aa2d9-f893-4bfa-b4b2-5dbf165f1d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "264046d6-eb43-418b-9b4b-661e51235cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02abb047-fd6f-4bad-9797-1a0e65618fee",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b17b790-f26c-4dd4-8ed3-ee3589ec2100",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac5fdce7-042f-47f0-93e8-fb52fcc7bad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce3f88f-db9f-45e2-96fc-b27b72cffd52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e21093d9-d8a2-4b4a-91f2-a1fad7f939f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ae11c4-4400-4232-ae59-d4f2d12f21f6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49ede01-8d52-479a-856f-0b65f0340a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e66babe-abd9-4f48-91c3-a2d76bfdeae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2799c4e2-d272-42ff-9663-ea459df06204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a55f415-b0f2-414b-89dc-b1d6e72366f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7510e7a8-755a-47d5-b628-8dd5d125871b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edddf53b-e9c2-4014-8198-32e75af03b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b99c2af6-337f-46e5-ad30-0488071b1451"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "227c755a-179d-4d17-ab21-db411c10abb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c64b018-881d-421b-a526-7ce7295c2066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912b4226-4219-4212-8efb-5aa415e5ab9b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40954bb4-c31e-4c7e-bcf4-ad7dd35ff011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47fdff37-01fd-454c-b7c3-f0e6a4a60aea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62528f99-e7c4-423e-b5e8-33b5e5adaab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9570fe0-d71d-478b-927a-38d1299b5bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75481264-7435-47ea-b724-c76275e8b893",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec002991-7f6b-40fd-a197-75a1721c236b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ca7479f-ff31-4052-858f-4374516c18d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d394a4a-15de-4808-8e50-dece4c25e8ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cdf189a-8eff-437c-bd15-377ad1fedc61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267d5055-f918-44f8-bae0-7836e9c61aab",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dedec94d-829f-4e34-b3ef-8d68ebaacba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3154a1b-26b8-4fd5-8b5d-b7ec5bd81b9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3eecda5-d458-4625-9a00-ae8f88513c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffe35919-75a7-4d2e-9534-d843c7c4121a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc8404a-e97d-4dd7-8457-1b040a3faa3b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "876c385d-f284-45dd-8f5b-6440f3a4b097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fece5445-2d54-4436-850b-edbeb68399cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7865b82-02aa-4a84-b147-4c48e8855833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d884c9-37a9-4f53-b717-5655fecebc84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a578539d-0abb-40ca-bc39-ffa58f867058",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e7666d-9cb8-4f18-bebd-dc859de55316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b24ebbd-6818-4d90-bfb2-511ad15acf02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d593c99c-02e7-4dc7-915d-63080fea7d5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c717a9a8-ee9c-466f-83b9-e5dc56ba763c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d47481-e84e-4aa6-a060-afcc27c9ab59",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec788c05-a3a2-4471-a2ca-8e0b930cf997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eb25d65-2519-400c-a926-c68c0fd49dd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd4761e-ab0f-439b-be13-fb05fbcace60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae2756d-7b7e-4284-94fc-1593cfccc0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8a77ec-33cc-4b0b-be11-c31123b1c8fa",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05dc5b5c-0c7c-4080-9bcc-5f361a358c2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd90a160-a886-4def-ac64-f3b8dfc8cfa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1685a7-aea5-4688-b1ce-ecccd9422b2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a075a1b-42b3-488c-b45f-0a3352903337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5ce695-6793-4777-824a-73c60d9692f5",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e763ce-59f2-470c-accd-1d2ffc0c14a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "595d672f-e05d-409e-b2d6-2958ec61b99d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1207ed-f260-4791-bde7-5a8093cead14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c436ceaf-cc29-4105-a3ac-00eb8007e059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc4fb9b-e46e-48e6-bdf9-5bd51d54f1bb",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc33c6c6-d6d3-4d77-9fb3-4faee132e409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58bc55ab-ff7f-4354-b464-26ee42dee17a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d24c61-6c5e-4d70-a946-f55bd23921ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d0df924-a58e-4e51-830a-0c54033bd60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6c5ed4-4633-4f6a-ac5d-65b8179bfc8d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5105ce56-7d79-446b-80fc-584e54c4354a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d39410a1-7a43-4a8e-a8ac-4c067ccc28aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ac0c97-43c3-4847-b092-b4e6852bd8e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81e40620-71d2-481e-a56f-f340db3f1de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0214c366-77e1-4423-85c8-2f122c43a3e5",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3248176f-e6d1-46b2-a0f0-83d709d52b6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecd0f2eb-7ad1-409b-9113-ebe2ecd13f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "211ab830-aba7-4fc7-b0b8-769f778c02b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "102090ea-924e-41a0-b569-748ce560e502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245d1da3-9c8c-4ad7-8463-6628098e060e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3358bf4-aad9-4dfa-901b-864cdf1eeaa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f06ca7-25bf-4aaa-ae64-f02bf5310858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2f6a14-ec7a-49fa-9d64-0efb2277d579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "150e18fc-ba2e-4772-a54b-ad54020941d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f3aefb-aa3c-4f49-89d7-fb33422b1a79",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697eb07b-7b9a-478d-94de-d22c33eb10a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7a3393a-83b8-4e45-9811-2265dac6471a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e7bd4e-bf5e-49dd-bda1-1dd59e5fc5be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b666db-bd3e-47ee-a1fc-6ad846060a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505f1dff-b715-4e17-9014-faddbf784cdd",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1fc8a5-fe67-4157-92eb-b3136440616b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b42c8733-967a-4224-9579-1ffc1caf6976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b72449-6ba2-486f-a640-a295dfb620ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5800c03-be4c-42f9-a2a0-5aedf6f1796e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e8f769-565e-4ac1-9a3e-61f541d5aaa8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c968a57-638d-4490-83a5-f60217fdd075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab5266b-c57f-4521-a95a-7ff051479ab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9265d8e9-95d5-4493-8498-3101c5867179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc350dc4-430f-479e-9e72-8432e94d9d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb05da38-4b26-4535-935c-b25a7cf41e5d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818fdc2c-588a-4b03-a14e-2d9052458daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac229a78-6d43-42d5-b627-9c18e6eb8830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37eb1a5-67f3-4715-b754-35c10236ebd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63970b6e-9522-456d-8f9f-34080239a449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581b8efa-3b7b-46a8-9577-c054d11af429",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2950cf9a-0a37-4ef7-8d65-06aa1eca0b90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ef321f2-ac92-4b5a-afd2-e02d18e61a7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d640de1c-b709-4f29-a9b7-91fa7c1e245e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46813d2b-ae41-41c1-9741-573d4b1958b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1ed37e-f281-4d48-80e7-2e47da550541",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f020e4f0-3ce2-461d-87e1-e84132dc89e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "360abe63-3384-4b6d-8d7f-b2de6353a4d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad667d6-33c1-479b-bc39-18c31d27d8c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46aeeb4e-cfca-4be4-acc8-9c83a43eb9aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da096ab4-1106-4212-99c0-3585dcc20799",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80aabff4-2279-4d92-9a82-2d04ab4c35f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2029ac52-e7fb-4fb8-b4db-5cd18a2f5dd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b59d73f-91d6-4fb3-b07a-111caad39fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c880753e-2464-40ea-8b2b-fc3766d6b2e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52eb095a-8d80-42b8-864c-69e845b8782f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38679f7b-bcf6-40e5-b5fb-6ee026084aea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81fa2841-6b02-403c-8f69-f5fd48d7c8d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ae7a82-842b-4014-9edc-9b5c0c0b877b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4bc7a15-f0b9-43ce-a7bc-7649bce500ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d550978c-8c06-4084-8fa3-568a01f4bded",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c195656-9d8d-4696-ba5d-e3ef26072bec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3731ff2-d1c9-461a-9da6-4d515287ac90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38c149e-60ab-4a1d-ad7a-62692e9b6922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cf93044-f767-479a-aebc-d40bf773efd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105fbcc8-ac3c-4b2a-ad40-e3112ca533e4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014f8c88-9ccb-4206-a7f0-13a00153fa4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f4c7812-806f-420c-8fa6-4f94cb8544cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac76d03f-db0b-4318-9f3c-11dbe1bdab8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3431fba-3c9d-41b4-8a70-1260e0b96f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59245e46-ce07-4106-b8a8-64dc4d603b19",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17729970-06ca-4b31-aaa6-e711f157e323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7543673-57d4-4fbf-809b-63e40cf43bdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f755c572-87fd-41db-a3e9-6873007eda74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49470f6f-4ca8-4c3b-a27c-7eeb08a14d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8aa7ad2-fca3-4704-a90d-c66551142246",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4df852f-129f-454c-b241-ef6ade91b774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5773099-1f09-4ad5-9d7f-f7a541c0fadb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "996b72ba-0811-4fc7-9b5b-f31f5d5b590c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4f67897-223f-4d0f-baad-c8cff1a32817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6570fb89-4c5a-4fc2-92b0-23a6d4234af8",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1019b940-c640-43b6-9dc1-a388b54a65af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce3d79f9-a583-444e-a121-afe2a198f6e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21911e5-f261-4b43-bcc5-7eaeed77a13f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f00895d4-7262-4ece-857c-35d223f8737f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555ba017-3d81-45ef-9491-20afeb2da622",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73ead1c-9ddd-4da6-bfa3-8b1003c956ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be0fe585-35c2-4a37-b61c-cbbf931ab996"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2d9001-fdc1-4239-be7f-aed3b5c96225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2997a43f-3b9b-48a1-86dd-0af83698216a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db0fca7-b63a-45c5-8f1e-84d60d03f24b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8065e4e-6a33-4864-9864-f8acb6c609f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c726cb-193a-4d93-9c87-6c87c458e7df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d446cd-2ece-44cf-b903-091decf788cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c51b22b5-7109-4fb4-8466-e92da5494a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d255161-2899-4330-8d76-99369f64c6b1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57618f8-5bbe-45ef-af7b-4a355baf9e11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9049edd-ac8b-44f4-bac5-6f5ee3011c03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ce4bcb-dcc3-4f53-ae5c-c794870acb6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d9a072a-e847-4745-9aad-9d0b8467c9de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c33948-ce61-4bdf-b0d8-a17bd1dce0c0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d83239-79dc-42fa-b148-52c5e5ec0373",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11209913-a8e3-4779-96e2-9736efa4f25d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6cc250-60f6-4c40-b473-a76791cb7cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f6d073-333e-4535-b5ad-1f43fe299280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577cac37-23b7-4fa4-8cfe-13b6eef4dbf3",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8424e34-0e05-47f1-b3ee-1c23f2c4b5cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5952f231-7409-4cc8-bf72-5f6445455812"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d503f481-7ff8-470f-8097-4c2279158777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcbb1a4f-5bb7-4b32-ac0f-d419e6ed154d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de64086c-70f9-4ff0-9d77-85446dcf72fa",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de47fbfc-ff42-42a7-b049-8f8c6a11cd71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da52ad2f-20d2-4e49-9089-42e0ffce75d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3aa18f5-db1e-472a-a414-3c723f88a345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed3d8e41-9e7c-4320-b9f4-f9d524ec466f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b064875-287f-4b01-b6a7-cb1f893fa0b8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb15c1d5-6fb8-4bfe-a059-6378496a922c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c610acf-4823-431b-b3df-1cced4ef86df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa1405d-cff6-42f1-841c-a0eb4c802902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26b45ed3-2e84-4f07-a0b2-82993934aec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446ecda5-ee03-4a30-b7a4-91d4ba851384",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5103466-db2a-404d-aab9-ce55443a9564",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07a8119f-6fd2-400b-80d2-9778e894728f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03416f1b-13c5-4879-8cc4-3991972ddcf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82625285-6137-4d9a-9784-bb92b618c95e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a401bf-a952-421c-8b73-66e822dbd052",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d61e34-4fc9-4774-b0a2-1a07f95be70f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50df87aa-a34d-4725-85af-da2eeddde5b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ee1386-63a5-4522-9bbc-5b9706405dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42559dc2-7a76-464b-9392-53ca12edcbac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85fa7d0d-7bba-42ae-9a2a-0e638f83111e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5edf8de2-9a73-4152-b767-1800e60f1f8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df6535c2-b4fe-417c-9aa4-cc3f7aa1a9dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f11d2f2-64bb-4580-8d80-9cf8bc0986ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bffdf3c1-d6d2-4812-a7be-db91a2e855b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e1dc0e-42af-4fb6-b5f0-7d5295623629",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cfa38d3-425b-4021-bd5a-779f0380a367",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1253ca4-62c7-4d37-8035-174315dfcd74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87a14cf-22f1-412c-8152-faeea5179009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20fe79d0-4b5d-4873-9832-c8e105a50a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a366de-25f3-4574-b689-2c90919ed7b4",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a947f36d-4c1a-4eea-8e7b-6354f03587c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "526b270e-60ee-42d9-953d-cc7f3cffa10a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61afc9a-a6b9-428b-ab89-eae21a0d80f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b0c8e7-5db8-43ea-9468-d1ce6874923a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5889316-b45a-4333-8a04-405ad77ac370",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49fa619d-97fd-4e5b-92ba-ad1b4bc0592c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cfcc5db-a92a-4a72-8d3d-9408fc3813b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d95deb9-a2f9-463d-9938-318dd544df2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b67c1f8-a764-443e-8a17-1ac6f3ff502f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfbb978f-6998-4336-8b0c-0fafbc2a4a51",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596c6066-3633-4acd-a1ca-c9a4a419a12e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c1bd7eb-3a41-4111-ada3-4957aa6aac12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ffb2df-1b70-42bc-8fd2-42116eb2904c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a7605ab-2dbe-487e-bc6f-ed1d2688d7bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383c5742-17eb-4eac-89cc-01132ed9b7ff",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab7da8f-1ea5-4228-a6b9-066ecd6896e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "759197f2-e072-47ec-9a3a-7da31e07969c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db20057c-f20f-4d0a-9f2b-1a5ec74a8f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "493a5348-48c5-4793-87c5-9169398fb68f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97721cc-8e4a-43b3-ac17-f01ddf9ae956",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6a3194-644c-4f4a-b5a8-622f28367484",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8c53cde-b5c8-4b54-b152-9684f64c21c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c038df89-d704-465e-b8be-a5eebb2a6b03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab4c611-e656-40b2-87f7-9d088467f650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f71c0be-48a4-4cd7-b8d4-d8a4345af78a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a74a86-a937-44b8-868d-169426a90784",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8786729-9814-425b-acb9-b488088dcead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "752f5662-7ef4-47be-97ce-74144d015658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4a64105-04c0-4b3b-b500-5b42a54de1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c391d6bb-899b-4495-a625-9ff9c0c49f51",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9eafe3d-a806-45a5-b89a-64a53fbfee4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07a990ad-213d-4d80-9e28-9247d46a4caf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e067c81b-e0dc-4730-bb3c-ea9c9c623b2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede47545-5946-4c48-947e-c9c088c5c4f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d45c95f-83bc-4c0f-a93e-bbb509903e04",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68a3616-55c1-4408-8f8f-b170f3b1c6f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83c19124-9b7d-415c-84a5-51d1a6e4129b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b037c4-968f-4bef-9f55-3eb7c4a9e73d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d33e7684-40e0-4eb8-a630-86c6bcee05b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aefa0e6f-f2c6-4c71-867d-d4714b9c0e19",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c53895e-84f1-40e2-8298-b288d4910988",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4291084-bd8d-41cf-9e23-88f3f67f9a73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c173475f-cd3a-42c8-b7be-ed08bca9addf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c97b1c-6ef5-40da-8028-0857ea513428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ddd20d7-ecb0-4a36-bb6a-8dfc48384243",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc9a08e-a58b-4065-ba9c-02ee928b43bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13104d59-ae28-4fe9-8e46-c4b33251ec8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0cb534-108d-42b2-9b40-4a939ecdf640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f692674d-257a-453d-942e-03e488a1baf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43455080-0d62-44e5-a7a6-810f934f5f98",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc3393d-e84e-4aa6-a63a-45751cc149a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a26b75b-b861-4a65-8f14-127b6c41d438"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde5df0c-67ec-483c-9dae-03d173d93587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d24893b-6e88-4380-83df-10e240ee34bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0450af-5558-4a7f-b0de-68471a6bd2a9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6056922e-1754-4145-a629-4cf73092124f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb7d18a0-9251-41dc-8084-42c5fc45823f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53762736-86bb-4d71-b554-0da0647a8499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bd00cf0-7d09-46ca-a99a-4a7a334a4553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988d7cbc-9568-41b6-89e3-5647d6910651",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89cdc9d4-9286-423c-8dd7-e0a5cd59472c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af9e98a4-8349-4589-a198-3a9dec0e12b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b6deaf-c00d-4373-87d9-1ae931c43d7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff2a443d-cd39-480a-8e0c-e4d40368f2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55b5f76-e140-45e3-8e76-c6ed82391627",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f209a101-49c2-4029-925e-c71627ddb85c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1c5a3e7-dcd8-4c33-a4b8-feef68199a81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faffa725-7358-4ed2-9b0c-3d26d2c0ba01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c97c33-fb4f-4cd4-ba89-f03fea492673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdad1047-278d-4fcd-9752-0873dd2a4077",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a174bb-07b6-4f83-a551-0cb65c2e0abd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f107f9d-8cd6-44b2-9f91-0eb67c246830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "644539c2-2ae0-4f6a-a1e0-0897f45853a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb61199f-c342-439d-a674-f6f0251fb044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bda04e9-326a-4dc9-8eb6-8cf419d41e6a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60233880-5058-4cc1-b0e5-c512cace3ff4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a55dd66b-ac80-49bd-96da-83aad809abf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "096958ac-194d-4006-aecb-26918738c99d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e31a291-fc8c-444b-b0c4-9a2ea1c6eddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5497f008-5ec6-490f-82f6-fefdc619ac7d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e8e679-3cd9-46ec-b59a-10848feece54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e51ab17a-c127-41aa-839d-70d706600d0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abcb6cf8-c692-4891-bc11-91d283a4d6e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d181692c-2149-455f-a9d3-9b986e4e6a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9bd8103-a714-46aa-a09f-945ce7eacd2b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75fbab61-bd27-4b5d-bc08-0cce345129b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c9afd35-ff63-44ba-b70e-159446918e0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e0f406-6f4c-4fd3-9076-ff31bce8298a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf9b82a-fdd1-4013-9352-54cbc5988408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11a534b-d701-4567-915a-8c19ec763ec6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7e081f-0d61-426d-8433-4e1f4feee194",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d05d8ce3-a02b-4618-9177-425910eceff6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feba2f20-7660-4336-ae3c-d374cf112e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0836ee1a-c8ca-4ac2-8adb-87a682defdcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad79b49e-99d0-41c2-9b68-44060876ebc9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929d16dd-29ac-4cfd-a1a2-ba79e491ff8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b509560d-3f5a-4248-aea8-f2b04849a6e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "193079f4-663f-4d35-8356-4a83077e7844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c50af149-261c-40a9-96ca-437dbd5ea93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267d7151-d203-4cc9-b6ae-1f87c3df47ab",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1caee3c-4b76-4290-9a5a-f233e1473dc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e470fd2b-8232-4532-8f2e-c918027d81b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ac6b8b-12a7-4f05-bb75-51f29dc3957f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "556d2bfc-35da-4dc9-a02b-25c61f7c280d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43a88ed-4a0a-4f72-b756-63ac5951a1cb",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619b999a-1725-4d2c-a43a-9c262ca8934e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "230290f3-302a-484f-b2d4-48a8631c394d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a7ebf7b-ca41-4c4e-9120-0bb27e1e439a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef3a4251-d4bb-4596-afe7-c4e630b9fa00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72695b22-b865-49d7-b4f2-9b82df876640",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f072767-f817-4192-9f5b-955cc0774937",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54bd4938-f921-4a23-8d98-e26348b68afd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "758564a5-9b2d-4f1f-b19a-c35ab71613dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f9cff0b-f6cb-461a-b175-692b9eb3559a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28191da7-3ece-4378-8d40-a713929b4a66",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f924b905-03cc-4df1-a17b-76ba628b95e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d1cb8dc-f236-48b4-993c-77a2b64ef312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45fbcfc7-5a3b-416a-b050-f1d086c4fc72",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0127722f-c89b-4494-87bd-d1c3a97f53e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd991eba-1505-4ef8-9db0-2e76a1f7bca8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c69ebb-741d-41dd-ae56-cc4fc4a47ff0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "620f9125-1a74-4cb4-a37d-5a3eb86ae951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "702e2e7c-2d4a-4f78-890e-e03197e4cf48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94614469-2acb-4de0-a678-dc77b128d79e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "348abfe8-82be-4a35-8e8a-d756ee3dbc8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33416b04-79fb-4353-9297-b6b3045c0caa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "272df646-f9da-4778-ae68-e9ed5c2d9cbc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4fb1b0e2-748a-41f9-b286-21cfd8a6ffc1"
                    }
                  }
                ]
              },
              {
                "id": "9583b2ad-9442-416c-86ba-fc7e93985d5c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "62e4b255-8b8b-468d-92ff-cd0ff8143d51",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c20116-f3c1-4bd0-97ea-6c37f734ea51",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "29daf7b6-e894-448a-a65a-f23deb499135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f373ec4e-754d-4663-b9e4-c313d86d37e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4d971ad-af19-4995-a730-5d3ed3716a58"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "baffd1fd-2eca-421f-8061-95c8dc6093be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "694f1ef5-ab67-4ec8-a699-a6a483d1c748"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "58f3c577-afdb-49dc-9827-5a7e0e6e2541",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a02ba431-d02f-4eb3-96b9-31c8f90a3a0c"
                    }
                  }
                ]
              },
              {
                "id": "e6bfed42-b225-44d6-944e-2ce75b970561",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "93a2cdb6-e71b-485f-b906-892794f284a5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e50a80-66b0-4fd5-b7ad-e4a7e2b947c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c2ff276b-300f-4bdf-85ba-c4c92bcd0357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28160768-6e23-475a-b575-810a9d5e7dec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2213d702-4646-4cf8-9ef5-b6f2d0dd3571"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8e2702d8-9fc4-4a34-a1b5-1ba7baafee4f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2fba148d-8e88-43c4-98f5-c8656d05af7a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58d84bb3-aee4-4ac9-9267-d2cd0d7dc70b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4f6aa69f-a176-480d-ac7d-762944146707"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f87b51f-2708-4ffb-bf9f-feec378b653a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29c0571e-0c48-425c-822f-b79495f84124"
                    }
                  }
                ]
              },
              {
                "id": "fbeca20c-f5a8-4602-8533-6189da26fbb6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e36c41c-93f5-40de-a57b-b8a98f87e79a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f361a6da-2496-4d2e-85ee-0fc6d7830115"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13d0a83a-cd11-43cf-a4ec-6278b612aa3c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01f6ab25-bbd2-49fe-85df-092eb332dcde"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c74470f0-1e66-4488-a989-a54817894b0d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1ba128e4-f7b7-4dd8-827d-ffceb232bc57"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c11e530c-cd57-4849-a4d9-6d531de13ad6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a5450ba2-6d3e-455f-9947-d7b2c7d8bdac"
            }
          }
        ]
      },
      {
        "id": "89aeecce-bf16-4f8d-b587-69a9f2f62ec5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a10f395d-e263-434f-ad3f-99490b498c8e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d496f346-d261-43ff-96d6-bc81c2db0966",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c7cc479-3f90-44ca-a500-d04d1bd41406",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab863494-e1cc-4ceb-91c6-44a58cd3369b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e2ac3a38-fbce-4bd1-b506-5b8af7f4d0f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d192640-223f-4cdb-9eb2-7a011940497f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de2d5202-1111-433a-bc37-8ca09b741bdc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "daaad766-ab2a-433a-b223-2a3c8a3ec4dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a91d084b-aa06-4ae7-8b78-b292174b7da7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "695c0c99-d977-42b6-8399-7afe671bb96c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2b471e9-e8f5-4051-9036-5aecae4ca753"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b574b3cb-5ced-46c5-a4ac-a1f2ca3c30ac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "bf40c6ee-7a6d-4f23-9dbe-d2d1bf3b8d64"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "af630c60-1c54-44e5-8766-355ad19a5dfa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c8a2a21-a3e9-4898-91c3-e385da82f72a"
            }
          }
        ]
      },
      {
        "id": "08f12e1d-0b29-4e7c-9607-d05031f9f76c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "10f6b1cb-df91-4c44-b3cb-45ba0c7df972",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a50aded7-7a85-48fc-a591-b858dadfefc3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1f8ac68e-0570-4124-b4de-f617bf627dd6",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10907a75-f7b6-4878-ba39-e30b3761c922",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20d983a6-821d-4d4f-89e1-1ff538eaa86d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2fa8d31-e091-47dd-a7f8-da775baf62e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42ed960a-9c87-4a9a-a313-0f02d31749d9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "107b874b-372f-458e-91dd-d81fd1bbf279",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a083710-5e76-4026-8ad0-9a40042de5bb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "112eb465-2621-4742-b4c2-16497f8be631",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fea0fe05-fd5e-4dc3-b27d-4ff3d9efbffe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff48e9e3-7874-4e6c-a12b-ab3dbba262bb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c9443d36-9536-4795-bd5c-f3f5c22bea3a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72e20baf-0682-474e-a15e-42b1374db76e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2b3b82c3-2436-498a-9faf-3d6670f5ceda"
            }
          }
        ]
      },
      {
        "id": "32497965-c470-46d0-aa5e-9fcd3f92db20",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3ac6c19b-8434-4a4b-ba17-5c4182f1bbd6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2a75ba91-c288-4454-841a-6f70d59af6a8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "933fdadf-db84-4580-939c-0dee606dc6ca",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb64fd3-1c3d-43e4-abd0-95502c0c9f5c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38fb3005-0898-4794-94ea-192916118474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "436254fc-551c-481b-ab65-975110a5a439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e37b99de-91e7-4516-bcef-568a5162780a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "226940d7-d513-4ee7-9554-445e93c49c8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca6ce9d6-f17c-47e7-8103-37b51de4f382"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b39e7187-ce4a-4c00-bd51-28ce9249679c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a539785-ded3-45fc-a2b0-77cf3263bde7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8027a390-e272-421a-8bfc-cd7b46ac6b36",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c936ef29-efbc-4ef9-9d78-08524a7d4519"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "25f08690-cdd5-4a4c-a61f-6c0a494a4827",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "89eb4efa-d5b5-43d0-8dbf-c70051a6e683"
            }
          }
        ]
      },
      {
        "id": "f0fa4a07-dba6-4791-af54-5186ec2849ab",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "85ee8819-cbca-48b7-aa37-f81958004ac2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a667fead-ece1-405d-9048-3fd0d5d86cee",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a32128e1-39ac-4976-9964-3c8e96173d74",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c58ab384-e00d-47de-8be6-4bde9dd3739d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9b8cff1-7aae-41d0-a9b7-041d53cb3d9d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 203.80985915492954,
      "responseMin": 6,
      "responseMax": 5533,
      "responseSd": 560.3954581188738,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1696552423548,
      "completed": 1696552495965
    },
    "executions": [
      {
        "id": "bcb5dbf2-8f06-4227-9107-75dd7f101b11",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "323d0987-d16e-435f-9620-ea66c8be3327",
          "httpRequestId": "329873f6-1ffa-41b7-b334-25c8e72f7d2f"
        },
        "item": {
          "id": "bcb5dbf2-8f06-4227-9107-75dd7f101b11",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "91342f80-7deb-484d-abb1-904f0984fca2",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "3c5d8028-3285-4273-89de-a573f6e61343",
        "cursor": {
          "ref": "8d6b348e-1380-4bd0-812e-15b81a0fde2d",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "68b42121-a27b-44b0-a588-f270e9bfe6fe"
        },
        "item": {
          "id": "3c5d8028-3285-4273-89de-a573f6e61343",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a8e1a8f8-ce00-436a-bbd6-1826ff092758",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "c86fdd61-06e9-4452-92b0-92a0a38e7300",
        "cursor": {
          "ref": "a2a1a836-9215-437b-ab2c-a0678a4f2670",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "deb77331-b206-4ed8-88ad-68df62ff118b"
        },
        "item": {
          "id": "c86fdd61-06e9-4452-92b0-92a0a38e7300",
          "name": "did_json"
        },
        "response": {
          "id": "b17a3732-0d8a-4993-8154-7f090062a7d0",
          "status": "OK",
          "code": 200,
          "responseTime": 284,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd42759d-5b76-4533-9f1c-1ec075d8a3e2",
        "cursor": {
          "ref": "8045cfb7-c64a-4a90-8b4f-974b0c2a69f9",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bd0fc030-3bdc-494d-9ab7-7182eeedadcf"
        },
        "item": {
          "id": "dd42759d-5b76-4533-9f1c-1ec075d8a3e2",
          "name": "did:invalid"
        },
        "response": {
          "id": "264caffb-08d9-4231-a1eb-ade63dc54603",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2163,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd42759d-5b76-4533-9f1c-1ec075d8a3e2",
        "cursor": {
          "ref": "8045cfb7-c64a-4a90-8b4f-974b0c2a69f9",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bd0fc030-3bdc-494d-9ab7-7182eeedadcf"
        },
        "item": {
          "id": "dd42759d-5b76-4533-9f1c-1ec075d8a3e2",
          "name": "did:invalid"
        },
        "response": {
          "id": "264caffb-08d9-4231-a1eb-ade63dc54603",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2163,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954a0581-1277-4d21-9870-45cb3e0558f9",
        "cursor": {
          "ref": "91ed8e3f-b516-4593-a814-11863bee3e09",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4dc47bce-d8e0-485a-bc89-2b3c4feaf2a2"
        },
        "item": {
          "id": "954a0581-1277-4d21-9870-45cb3e0558f9",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "137d1822-0dc0-44ac-871f-c42a31e78a1e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 348,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2e3f74-8b18-4ba8-94b6-eecc904957ce",
        "cursor": {
          "ref": "a5fbec62-27cc-41ac-88e3-5d6f1544311e",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "fb2b5cb5-b54a-4d53-a9bd-ea9eb50b2ce7"
        },
        "item": {
          "id": "4f2e3f74-8b18-4ba8-94b6-eecc904957ce",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "cbc3d41f-d763-4fb4-88ac-0492cf410987",
          "status": "Not Found",
          "code": 404,
          "responseTime": 570,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822060f7-f6b9-4c26-9f4d-4209342cd731",
        "cursor": {
          "ref": "6c0d74a8-ba88-42c1-a0ec-acc5c3a01291",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8063c8d4-3f60-41e3-aa00-252a885c67d9"
        },
        "item": {
          "id": "822060f7-f6b9-4c26-9f4d-4209342cd731",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e832332b-3e93-4782-9e09-094307b232f6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 520,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7554c7c4-c17a-439b-9bc1-8c3f27ff757f",
        "cursor": {
          "ref": "144c765d-e87a-425c-a3bf-1f405a996b42",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "21334367-adea-4ab4-b1cb-5f1b942b9084"
        },
        "item": {
          "id": "7554c7c4-c17a-439b-9bc1-8c3f27ff757f",
          "name": "identifiers"
        },
        "response": {
          "id": "f98a4ad7-cc95-42b6-99d5-f7a592be1ef9",
          "status": "OK",
          "code": 200,
          "responseTime": 422,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56bb2ff-bfb4-4ab9-b02f-3c65f4fd504b",
        "cursor": {
          "ref": "c79518ea-2083-4f97-915c-67939bd15f6b",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "013915a0-a659-4018-aab9-774bb575b5b5"
        },
        "item": {
          "id": "d56bb2ff-bfb4-4ab9-b02f-3c65f4fd504b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8a0a9ab9-d7f8-48db-a54b-8a084bd327be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db12def-6f3b-4e33-b65c-64e9e17063f9",
        "cursor": {
          "ref": "090fc9be-b017-409e-ad44-596d4016e517",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8bebe4df-a6e0-4016-a9c0-b9475b81efa9"
        },
        "item": {
          "id": "6db12def-6f3b-4e33-b65c-64e9e17063f9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "21c5239e-53c8-4e9a-ac90-4885cd5fbe07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2ef474-747d-4163-8d11-559a6d1379ed",
        "cursor": {
          "ref": "da5244ce-82d7-4531-8dd0-c7edca6a4090",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "78cc4899-db15-4eb8-a0e6-3738d11f95ca"
        },
        "item": {
          "id": "9d2ef474-747d-4163-8d11-559a6d1379ed",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d0dc4f9a-8bf7-4bdc-a409-9ed26f28831a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5c6e29-a980-4f88-aa8d-04a7123aa2e8",
        "cursor": {
          "ref": "8a03fcde-7b36-411e-bc53-6ce038136148",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "077dd4f1-a1dc-42ff-a23f-5c6e03d37938"
        },
        "item": {
          "id": "bf5c6e29-a980-4f88-aa8d-04a7123aa2e8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "25500fed-9eec-4631-9d27-c2aa78a38874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8d14f6-527f-4a1a-9078-45520bb8698e",
        "cursor": {
          "ref": "e0069013-f18e-48bb-b338-8ef29dad69e9",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e6851e13-0e96-4eaf-ad1b-abb6b5d1af59"
        },
        "item": {
          "id": "8b8d14f6-527f-4a1a-9078-45520bb8698e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7e2a3b96-67f6-4f8e-a200-1b1da347b6a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99172d1-40f5-4e70-bbf8-64bc78c213a3",
        "cursor": {
          "ref": "7e2aabeb-e384-4bac-ac4a-fa22610f7cb8",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "76970536-80ef-4317-bc75-6a101961342d"
        },
        "item": {
          "id": "a99172d1-40f5-4e70-bbf8-64bc78c213a3",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "bb934ef7-2e53-4340-af72-a9382ef4e7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8bf74af-50ce-468c-977e-1812c5e8c2ed",
        "cursor": {
          "ref": "3fe7c704-f937-462d-bd60-1568a22c1217",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "11c07e86-4022-4515-95a0-c07d770e6e3f"
        },
        "item": {
          "id": "c8bf74af-50ce-468c-977e-1812c5e8c2ed",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "81e28ea4-bb6e-4f0c-9418-8160054c8f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637c5c2f-2fa6-48c1-ae71-59eef0a60a52",
        "cursor": {
          "ref": "08008921-668e-4080-b4f4-46c0527610af",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "921f84d9-dca0-4b6b-9ba8-d2be8580d002"
        },
        "item": {
          "id": "637c5c2f-2fa6-48c1-ae71-59eef0a60a52",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5be6b4be-1212-49fd-942e-51446a2f05a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50885d8-6f20-4b17-a4f1-5ba94d8eb136",
        "cursor": {
          "ref": "0ffb57f4-0103-4669-84bc-fed5fa8d179f",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "48b21125-d639-4e49-9ade-98054fe92006"
        },
        "item": {
          "id": "e50885d8-6f20-4b17-a4f1-5ba94d8eb136",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "96e15a91-323b-4bbc-a559-d396746e14cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735ac443-7259-4f43-99d7-0099a7f59620",
        "cursor": {
          "ref": "8ba1d669-6762-4374-a96c-cba304e04b18",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "98f75b81-0eaa-454c-9328-f8e50e28764e"
        },
        "item": {
          "id": "735ac443-7259-4f43-99d7-0099a7f59620",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "db0bb6b3-08e5-4e77-b8c9-83201c1c52b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc03902-51e3-4ac9-ba3f-eb26a08cea4a",
        "cursor": {
          "ref": "cf603943-4118-420e-891a-5317764cdb0a",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a32defa7-c04a-4d61-8ab8-0df6ed68662c"
        },
        "item": {
          "id": "1dc03902-51e3-4ac9-ba3f-eb26a08cea4a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f2b63980-a858-42b6-84bd-5a4a2d09f7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96314712-ea31-42ae-8191-8fed9a0a2c39",
        "cursor": {
          "ref": "c5c44633-03ee-4f3d-a229-593a7db423e5",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3f6a6438-6e1d-48e2-8e32-066ece3e842a"
        },
        "item": {
          "id": "96314712-ea31-42ae-8191-8fed9a0a2c39",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0b7b188e-fa20-4d53-85da-cad850657577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1aa537-8163-4efd-b67e-e7b5187e4012",
        "cursor": {
          "ref": "5fc071ec-61db-4fb3-8b7d-d7f6fc5d2aa4",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7caf8c1d-a08f-4da9-b7e4-c16fc13b3d1e"
        },
        "item": {
          "id": "0e1aa537-8163-4efd-b67e-e7b5187e4012",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d6c65026-4189-43f9-a6b7-2dab7de3b654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dacbedef-fa00-4acb-bfb1-c7dc510917f5",
        "cursor": {
          "ref": "4012a2f8-0945-4234-8a22-f2ca11c733db",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "25be44a4-6572-4004-adac-57795917948e"
        },
        "item": {
          "id": "dacbedef-fa00-4acb-bfb1-c7dc510917f5",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0803f2d9-de15-4b9f-8b6c-0d6214b1e586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34087710-45d8-4e2e-9545-12b1e6b5ff7e",
        "cursor": {
          "ref": "9f87fab5-44d1-4d4d-9022-ddd380d60f75",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "76dfaa5b-e140-4667-9613-01710ef44b8b"
        },
        "item": {
          "id": "34087710-45d8-4e2e-9545-12b1e6b5ff7e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9b59c82f-42cd-4169-b4e2-0ac6017bcf25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e784c26-fe52-42b8-8f37-faa9ac6c09bb",
        "cursor": {
          "ref": "bc8d784b-292e-4bff-bf8e-61e0b42abc53",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c4704e35-a64c-4cc0-94f7-fa0e3a30c433"
        },
        "item": {
          "id": "1e784c26-fe52-42b8-8f37-faa9ac6c09bb",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bf723285-58e5-460f-a12f-2023fea84f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23be6b75-55fa-4322-9721-b2331f8b6fd4",
        "cursor": {
          "ref": "7df2d857-6ba5-460b-8f87-5e4d1f52dc8a",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "57dffd59-216a-400e-9e79-5446d00ab04c"
        },
        "item": {
          "id": "23be6b75-55fa-4322-9721-b2331f8b6fd4",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8b8a8b20-aac0-4abb-a0c7-dc3af021fadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2bbe42-9794-4c6f-ba84-0d746a373913",
        "cursor": {
          "ref": "a0bf3145-6735-412d-bf9f-3ef80363b889",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3c119906-8591-46bf-852f-d61dd2193f54"
        },
        "item": {
          "id": "6c2bbe42-9794-4c6f-ba84-0d746a373913",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "17fce015-690e-4bed-be53-6f9c65e95448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12b9a77-7ef4-4a88-9ac2-2157097416ac",
        "cursor": {
          "ref": "8e3c2c19-9cfa-4ebc-81ac-70dc2d6902f0",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4f2fbfb2-6b1e-471c-818e-060edd8439d9"
        },
        "item": {
          "id": "b12b9a77-7ef4-4a88-9ac2-2157097416ac",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0831b3b5-ff06-4854-bbfe-5d801b89e71c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0ce14d-897e-458c-8fae-2647c5b82cf0",
        "cursor": {
          "ref": "b4ebdfca-8890-4562-a693-23e3a0ceb216",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "75abc71a-39f1-413d-8a2b-5b78e21cc0a0"
        },
        "item": {
          "id": "db0ce14d-897e-458c-8fae-2647c5b82cf0",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "05fc2842-b2f7-4ecf-9847-b574b2f389c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2521e8-02ae-4903-81e3-232db7cdcd9e",
        "cursor": {
          "ref": "f24d40f4-fd80-42f9-b2f0-50ec9ff80307",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "705ae48a-883f-436a-bae1-97ca0c463d8e"
        },
        "item": {
          "id": "0a2521e8-02ae-4903-81e3-232db7cdcd9e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "836d955f-b9cc-4211-93af-a1c1f723507d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096147c4-2dcc-4162-b61c-340f93559c4e",
        "cursor": {
          "ref": "e665aa0e-64b0-4ed2-b8e0-c26ccb19597a",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "22810b0e-25b1-4223-b9e2-322e0cc54339"
        },
        "item": {
          "id": "096147c4-2dcc-4162-b61c-340f93559c4e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "cdccc42b-55b7-4b0f-b90a-c0ce696e7736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f13607-cdd2-4f5d-9c1e-4d589b81b3a1",
        "cursor": {
          "ref": "4f547193-9235-4ed7-a763-a134be51cd7b",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "864f2c37-61ff-40f7-90df-358327c00a43"
        },
        "item": {
          "id": "02f13607-cdd2-4f5d-9c1e-4d589b81b3a1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3a6733a1-7f6f-434e-b977-ea1040fd9824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b4da9b-b45a-445f-aafe-845dd68b2f0c",
        "cursor": {
          "ref": "61c4a601-bb86-4ee3-8a11-970f32810b72",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c57a4f78-03ae-46ab-9855-fd4579a639b5"
        },
        "item": {
          "id": "88b4da9b-b45a-445f-aafe-845dd68b2f0c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "902ef09b-7e0c-48bc-910b-b5179930f2c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4609dcf-8f7c-414b-b344-ab62a6b9dc49",
        "cursor": {
          "ref": "f930b1bf-7119-4552-ad75-0da7af15b4ed",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "fae65b79-e694-489c-b321-81624e6b09a3"
        },
        "item": {
          "id": "f4609dcf-8f7c-414b-b344-ab62a6b9dc49",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "056bc524-d222-4597-885d-6b29ab3c70b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7769fa-06df-4756-8713-07c0f5240f6b",
        "cursor": {
          "ref": "d3fa7450-ad04-44ef-b1b1-0674110c483c",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "91059c69-dbce-4f10-a389-3aa44798fe77"
        },
        "item": {
          "id": "4b7769fa-06df-4756-8713-07c0f5240f6b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7002e307-4ec8-4eec-9ad6-b729b1b65e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4e34ce-86a1-494e-bfac-82bee4da7683",
        "cursor": {
          "ref": "76722163-a55b-4e6b-8f04-0673703b5937",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a615bfff-b9a1-4d28-be75-78b557871b8f"
        },
        "item": {
          "id": "6d4e34ce-86a1-494e-bfac-82bee4da7683",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6171dc24-f797-4773-a852-2e2365276023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9cdfdd-0c0b-446b-ac6a-3d0ccd45d51e",
        "cursor": {
          "ref": "c695139c-96b3-4dd6-8617-1f45bda6a5e6",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d3bcc3df-3a6d-46bf-9237-6763ce5ff0c9"
        },
        "item": {
          "id": "6a9cdfdd-0c0b-446b-ac6a-3d0ccd45d51e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5a849d7d-4481-4b81-ae01-9ac968a66a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf077e82-e434-4a99-9bab-0a83c0491d3f",
        "cursor": {
          "ref": "b03beac3-088f-4d61-acb1-d2d227caf2cd",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6fbf5908-4498-4139-9fbc-14041da9db19"
        },
        "item": {
          "id": "bf077e82-e434-4a99-9bab-0a83c0491d3f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f9aef5f2-a17d-4f46-a3fd-e6b869b9f056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb6093b-908b-40cc-90c6-bd8b1da3c05d",
        "cursor": {
          "ref": "b837dcf2-82fc-402e-8ab5-b4a548cf0ae8",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "40b38450-61ac-4c90-8d73-3030c28ce236"
        },
        "item": {
          "id": "cbb6093b-908b-40cc-90c6-bd8b1da3c05d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7feca9d8-29c9-4d66-a9b0-88014798d76f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd94849d-29c0-4f92-a3f5-7ae588eea75b",
        "cursor": {
          "ref": "f66d48c5-e603-4f30-b335-be42817a9d22",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3c1f7e8e-85a6-4f35-b2d3-81a6bba52b93"
        },
        "item": {
          "id": "cd94849d-29c0-4f92-a3f5-7ae588eea75b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6e6193ff-5aed-42a7-a838-b6c6768e4bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a705684e-dbae-4d1f-b783-b68e6484c72f",
        "cursor": {
          "ref": "71c0991e-fb2d-454e-9332-c70949940b23",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "97d4684b-2146-489d-ba76-8255a4d2ca0f"
        },
        "item": {
          "id": "a705684e-dbae-4d1f-b783-b68e6484c72f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4f4fb1d1-0cfc-484b-b6bc-49b8802eec0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bcc1929-134b-4f35-914a-ef57b8058700",
        "cursor": {
          "ref": "a1dccdfc-fc23-44b0-bb10-9278b962cd20",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "33dfb80d-ebdc-40d1-abc6-cd8dc7ba1f1e"
        },
        "item": {
          "id": "2bcc1929-134b-4f35-914a-ef57b8058700",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a8142df7-50b8-4452-a828-e01cb9903b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15ccc2e-7bd4-4bce-9ccb-946bdf8f6f34",
        "cursor": {
          "ref": "edd982b9-f053-4890-beb2-f05848299182",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2b5d348a-c081-4821-af79-cc259efcb691"
        },
        "item": {
          "id": "f15ccc2e-7bd4-4bce-9ccb-946bdf8f6f34",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "98023dd9-fe2c-4e25-9d67-83d4e012d64d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4deaa43e-1a9e-4290-b63a-9e31dabaeab3",
        "cursor": {
          "ref": "57b511b9-ccea-4e81-b341-97ecc6ba2336",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "eb6e6939-df97-491f-8ee1-21025731d7b8"
        },
        "item": {
          "id": "4deaa43e-1a9e-4290-b63a-9e31dabaeab3",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "bb1a4998-d5f4-4ad1-95d6-8118f9b45762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a5057d-f52b-4f67-9c89-d25bea75faa9",
        "cursor": {
          "ref": "70483baa-5153-4a47-ba55-2e6a0a69a2dc",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a60b45d6-ad51-4e11-84f3-314dc7e96a32"
        },
        "item": {
          "id": "42a5057d-f52b-4f67-9c89-d25bea75faa9",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "66b2053d-0f56-4bda-8c77-bd843bb8be37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d55e06-6663-4818-9509-f8d8f524e25f",
        "cursor": {
          "ref": "237c5676-c678-44df-ac35-6630d73da21d",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6591253d-cdc2-458e-b0a9-532822b5c641"
        },
        "item": {
          "id": "01d55e06-6663-4818-9509-f8d8f524e25f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "56c75e53-6ff1-47d5-a12e-cf48626590be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877e9446-9b4e-4782-b40b-7091c0d47673",
        "cursor": {
          "ref": "fc4e4ba9-90b0-440e-918e-0b1e4ac53ee7",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4b372bd3-0153-46f8-b19a-11e09d849aae"
        },
        "item": {
          "id": "877e9446-9b4e-4782-b40b-7091c0d47673",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c871e3d5-4d9a-456d-a1e6-77f0e60741bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0ced5d-c54c-4c22-92f2-defc1daaaff3",
        "cursor": {
          "ref": "0f2db481-1884-41ae-a742-495a494d6160",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "be6d99a4-1f67-4b92-9b60-4bc9ca23dd33"
        },
        "item": {
          "id": "2d0ced5d-c54c-4c22-92f2-defc1daaaff3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "dfbd9e90-8320-4ba1-8d83-e29b8e8d9ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61980123-f4f5-427a-9a6c-6d58f6714e47",
        "cursor": {
          "ref": "c7116288-9ec8-4674-8eb2-d19b39f0671b",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "da42a156-3354-42e5-a87f-8b8d887103fa"
        },
        "item": {
          "id": "61980123-f4f5-427a-9a6c-6d58f6714e47",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "abcb68ee-dee2-426e-a446-b30c45ab6653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34299c93-ad2c-4527-83f3-46fed7d19a17",
        "cursor": {
          "ref": "944fe9a8-ea29-4803-bc54-063b7c751a63",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c138aea0-f17f-4179-aed9-dc46045a3b82"
        },
        "item": {
          "id": "34299c93-ad2c-4527-83f3-46fed7d19a17",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f18f6483-9c52-4df2-a32a-f4cc530c215a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a8c550-1943-43b2-b226-a5fb4d147986",
        "cursor": {
          "ref": "6409ee9c-e16a-44c1-9b67-3763bc49e110",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9482d02d-8157-464a-b2b0-559f9eb3c4cf"
        },
        "item": {
          "id": "30a8c550-1943-43b2-b226-a5fb4d147986",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d6153b1d-7612-4509-8a78-ed5ffbe68856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f353ce9b-6bbb-4501-bd6c-ae45761858d7",
        "cursor": {
          "ref": "d5493b65-5ffb-4864-8cd4-0db97f915333",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7e2716eb-7715-4247-9657-d7e9a39fb849"
        },
        "item": {
          "id": "f353ce9b-6bbb-4501-bd6c-ae45761858d7",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "dc03cdf8-56ae-4226-8cc2-092080ea831b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33703acd-f99a-4b75-aabe-3f888268ea3c",
        "cursor": {
          "ref": "ba2577dd-cf22-44f1-8844-810882e181c0",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c8d69f34-3472-4f43-8828-13375786b207"
        },
        "item": {
          "id": "33703acd-f99a-4b75-aabe-3f888268ea3c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "011d55cf-5e18-4407-8173-deecd6875dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368c7c71-cf03-4e33-a361-9bd8fb6dd297",
        "cursor": {
          "ref": "57dea465-a9d4-4785-a431-5118fe828fa4",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "69c62b62-b1c9-4b46-b6cb-316c066b34a6"
        },
        "item": {
          "id": "368c7c71-cf03-4e33-a361-9bd8fb6dd297",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f2c94a6e-cfb9-49b2-93de-cfbefd0ba1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4178863-b34c-43d1-9749-70044ffe96af",
        "cursor": {
          "ref": "fe5298b3-2653-454d-9e39-d1b1acf2cff5",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6f0c4cc6-54bf-4e9d-a6fa-b8142739c0b9"
        },
        "item": {
          "id": "b4178863-b34c-43d1-9749-70044ffe96af",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a8ed1339-35f4-4f46-9737-f19496469bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7472fff5-103f-4426-83f0-d67787d62b02",
        "cursor": {
          "ref": "c4ba2733-e909-4385-87cc-885919cdb28c",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b3912729-5461-4db8-957e-4ebfefeb8327"
        },
        "item": {
          "id": "7472fff5-103f-4426-83f0-d67787d62b02",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "be8bea8a-7079-487a-8d29-c7dcdbeb2d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9242f854-e376-43a8-a902-dcd90c498f60",
        "cursor": {
          "ref": "7410154e-6985-4d8b-824b-8ec9a1d14c59",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "862db52a-78f3-40ec-913a-1861d2119ed1"
        },
        "item": {
          "id": "9242f854-e376-43a8-a902-dcd90c498f60",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2565c07d-120a-4416-b573-9ca3660ccd91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8370079a-3cb4-4fed-a13b-bba3d4bd26e4",
        "cursor": {
          "ref": "d4f7a6b0-4ca5-4de9-9b69-0fcbb9c26683",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "cdd3d83e-9c9d-4469-a5f1-cdd7fbcf4c2b"
        },
        "item": {
          "id": "8370079a-3cb4-4fed-a13b-bba3d4bd26e4",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0ccec98c-06ff-4330-b7e4-a5eeb220e641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8adba345-e84a-4703-accd-fd81c3f83ea6",
        "cursor": {
          "ref": "7887622a-2788-4345-8d2c-379d16735676",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "01127b18-9cfd-4aaa-93f9-b04b29baee75"
        },
        "item": {
          "id": "8adba345-e84a-4703-accd-fd81c3f83ea6",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b0be4c88-f6bb-4869-a1fc-4ae6a4474a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0ff76b-edb6-41eb-be92-4ea4c692512e",
        "cursor": {
          "ref": "f492ff8f-d54b-43fd-8bb9-0b2aa4b506e5",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "11e1e9f1-aa26-4ced-9cc3-d39d7d2abbe3"
        },
        "item": {
          "id": "fd0ff76b-edb6-41eb-be92-4ea4c692512e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c7b34b0f-22e0-44cb-980c-398d339793dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10926ce4-1a2d-46ac-849c-9b00332b5a9a",
        "cursor": {
          "ref": "e3b261bf-91d0-49d3-8247-065b3714e787",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "931ed550-e7e4-46d8-bf15-968ee132d198"
        },
        "item": {
          "id": "10926ce4-1a2d-46ac-849c-9b00332b5a9a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1f7ebbe2-9b43-4264-9d8b-18e05ae5725c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3224f8-1110-46ce-97c8-2cac1b9c3fd3",
        "cursor": {
          "ref": "7fe25e24-606e-4340-b698-90fd9ac7f171",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ce4d8624-a702-4c68-a418-7331bcee1f17"
        },
        "item": {
          "id": "1d3224f8-1110-46ce-97c8-2cac1b9c3fd3",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f23c3a74-78ee-4574-bb40-ea18e7cc0f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1f3d28-888c-4be2-b877-21c7cb9a3e34",
        "cursor": {
          "ref": "dd3c5f35-8c19-4731-ac16-ba0160aead02",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d234f7e4-acf9-4013-9785-b8ff99901e43"
        },
        "item": {
          "id": "cc1f3d28-888c-4be2-b877-21c7cb9a3e34",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d214e79e-0a27-456c-a42c-d1d47daf5897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7eecd9-1a40-450a-85dc-0579e2f236e9",
        "cursor": {
          "ref": "8a5968d3-a9ff-4805-bfdc-6a3a82d154c5",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "85b20b22-8088-4b36-a919-f8cb50594ed4"
        },
        "item": {
          "id": "7a7eecd9-1a40-450a-85dc-0579e2f236e9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a7d1894a-d698-4f5c-b8a9-1c3d2852ca20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e750507-1033-4880-928d-ebda7f03ce42",
        "cursor": {
          "ref": "a9424696-b4ae-4f9e-8a14-767292135617",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "620b3216-d334-47e4-afe7-8a54ae309ddd"
        },
        "item": {
          "id": "1e750507-1033-4880-928d-ebda7f03ce42",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7e98931a-2459-4945-97cc-e98a21c66f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d728f156-d2cb-4404-bfad-857b87eecc49",
        "cursor": {
          "ref": "77b62519-8e83-4493-a469-db813755e913",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6c15dedd-81bb-47a9-8cb1-a00aeb07aa46"
        },
        "item": {
          "id": "d728f156-d2cb-4404-bfad-857b87eecc49",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b6e9add0-f7ab-4819-ab58-6efc8429bb96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9d65eb-1734-4300-8d22-2d1fa84411dd",
        "cursor": {
          "ref": "49bd874e-3726-4019-b468-9bdbd477f946",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "aaae5ff6-e6df-4a88-914a-b3e38d2ad81c"
        },
        "item": {
          "id": "2d9d65eb-1734-4300-8d22-2d1fa84411dd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "35c72334-931a-4ed0-8cba-67616f630b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a21af8-cf18-4ca5-acd5-dd1a28035179",
        "cursor": {
          "ref": "1fdb155a-e4bb-4dc8-8ee5-b1cfa6a7d61a",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "04e4f199-02e4-4dfa-8230-8ec3c5054cc0"
        },
        "item": {
          "id": "47a21af8-cf18-4ca5-acd5-dd1a28035179",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c35105df-25a1-4da8-b44a-1cfe0b3fe3f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ee40e8-a78c-4523-a1ff-7b4c8a5f2ce0",
        "cursor": {
          "ref": "a7845955-1ad8-43d5-93be-d0b54c77cc6b",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "24000e10-5b23-48a7-bfa9-e6b555c3055f"
        },
        "item": {
          "id": "b0ee40e8-a78c-4523-a1ff-7b4c8a5f2ce0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f6618617-dcfb-4839-8ab2-e032728b1321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b705819a-cada-4059-a0e7-5136dc759005",
        "cursor": {
          "ref": "4aa6c3fb-daae-4691-a2a7-b2d511dabc69",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "903701ff-9ed1-4365-9ed2-819a80176611"
        },
        "item": {
          "id": "b705819a-cada-4059-a0e7-5136dc759005",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1ee7619f-0160-4cb3-8694-843293a0d380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52fee818-5c65-4499-8747-1ff0c6f981ca",
        "cursor": {
          "ref": "84f87a3f-0dce-408b-bd64-b38825340dc1",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "466c9bf1-4a9e-4249-a7a0-6aa61eb2e73b"
        },
        "item": {
          "id": "52fee818-5c65-4499-8747-1ff0c6f981ca",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4cca8341-feaa-4b02-ae06-fc3fe1e43e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e313c3e-cf52-47e4-8f68-ed07a5e8bdcd",
        "cursor": {
          "ref": "8ce00e2e-63a3-4136-b3da-6498dc9188b2",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ef82c861-51f9-43f7-a5af-8967b719b509"
        },
        "item": {
          "id": "4e313c3e-cf52-47e4-8f68-ed07a5e8bdcd",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "76f91182-de94-4b4d-aa36-8699924798eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d32b525-6ba0-41aa-82de-b8dd61eb0121",
        "cursor": {
          "ref": "407afb96-8e4c-4ef3-b0cb-a5ba6b9139bc",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "679679cf-4655-41f2-a55d-5209d69b9894"
        },
        "item": {
          "id": "7d32b525-6ba0-41aa-82de-b8dd61eb0121",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9f3c323f-2419-4163-9535-2a1d1a936b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0d6074-0699-4a7b-89da-f7b29774428f",
        "cursor": {
          "ref": "56803686-5292-43b1-9bc6-a667a9da7ba7",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "344cba4f-b43f-41fd-b79e-3d7521ea9d26"
        },
        "item": {
          "id": "3a0d6074-0699-4a7b-89da-f7b29774428f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "bd91f305-ce2b-40bd-8745-f715828265e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 145,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e394a656-d9b2-4ef8-b342-0389fcaac7c8",
        "cursor": {
          "ref": "4781c401-5ca8-443d-b803-b3942f43e5df",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "fb1ccb4f-5f83-4364-88b9-1778cc230100"
        },
        "item": {
          "id": "e394a656-d9b2-4ef8-b342-0389fcaac7c8",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7a94ded5-f71f-44d0-bf1a-d309f4dd5a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5040be3-02de-41af-b077-73c0105532a9",
        "cursor": {
          "ref": "fb8e42e9-e749-46cc-8b3a-4ccfeef1738a",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "496ca023-8e7f-4187-aab5-9a951c2d9d92"
        },
        "item": {
          "id": "a5040be3-02de-41af-b077-73c0105532a9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b97ee933-e5c8-4f97-8434-e086add922b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ee5e74-9389-4074-8a70-7fa1887a10c7",
        "cursor": {
          "ref": "0cfd74f7-7e03-42d1-8587-706ac597e0f3",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "fd9328c3-aa2a-4d09-b484-abe738df3935"
        },
        "item": {
          "id": "d6ee5e74-9389-4074-8a70-7fa1887a10c7",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "6413aa18-ae59-4c7d-8f43-7e5b9658264c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5f0238-2d04-47ca-ab6a-07aa0eb2bb25",
        "cursor": {
          "ref": "37babd7d-e4f7-4260-b1da-f126356d9eef",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "34fd74e4-25e4-42be-8ff1-573683d8f071"
        },
        "item": {
          "id": "ef5f0238-2d04-47ca-ab6a-07aa0eb2bb25",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "844f0ed4-79b4-483a-8cd4-83d3c627449a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d3e3b7-f8c1-4332-94c2-aeda0f3cbba0",
        "cursor": {
          "ref": "2fde9799-5965-4282-966b-8e979f647931",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6cb1420a-8abd-4e43-a792-bcefdc1d568e"
        },
        "item": {
          "id": "e4d3e3b7-f8c1-4332-94c2-aeda0f3cbba0",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "205adcc9-5f1b-496e-9ec4-407759e4e48a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f3c5ee-2650-486a-8db3-d993ff4fa76e",
        "cursor": {
          "ref": "9e9daeeb-39e0-4251-9bf9-89a4ba5be5c5",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5c281829-fdc9-427f-81aa-e423c501b9e2"
        },
        "item": {
          "id": "91f3c5ee-2650-486a-8db3-d993ff4fa76e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "00a6695e-4c61-4cb8-b902-1283a5584707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178e4d53-51f5-4e56-a61b-29979f970c1b",
        "cursor": {
          "ref": "346beb51-9b8f-4558-b7f7-93e219437574",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9f414323-55f1-4896-8b66-f84d99dfb73c"
        },
        "item": {
          "id": "178e4d53-51f5-4e56-a61b-29979f970c1b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "00bb6779-4a00-46aa-a855-2adde097ce32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83537c96-eb15-434f-a8a6-3d15b3ad436a",
        "cursor": {
          "ref": "4351de41-bf2b-40c8-b770-0c4e11e8dd99",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ea957f52-7cd0-4c9f-b733-d7b46d99b832"
        },
        "item": {
          "id": "83537c96-eb15-434f-a8a6-3d15b3ad436a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "290fd255-06cc-446d-a656-a3b6085d7107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9140d37-24af-402b-91fb-470a7e2c9a0a",
        "cursor": {
          "ref": "6e4f08d3-33f1-41cd-a54e-e89b3aabf448",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "dcd7aa13-3ebe-47ea-a36f-bb6dd2ce529f"
        },
        "item": {
          "id": "b9140d37-24af-402b-91fb-470a7e2c9a0a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6299ca00-4c25-40c4-9381-b549dc6ddf62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328bc2ce-354f-4dd4-aee0-e55b486c656f",
        "cursor": {
          "ref": "ffeb27f4-31f7-438f-a6f4-2f13a8f0d834",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3a866973-5acc-4b4a-95e0-7b0f9ca121b5"
        },
        "item": {
          "id": "328bc2ce-354f-4dd4-aee0-e55b486c656f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "451279bf-8681-482a-8fe5-014ed722a217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73a9ec3-a149-4fb9-9590-dd5356f42dc7",
        "cursor": {
          "ref": "530c4038-3c0e-4edd-9588-d3971d242610",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5c1e6930-a76e-490e-8587-dada2b122919"
        },
        "item": {
          "id": "a73a9ec3-a149-4fb9-9590-dd5356f42dc7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d5aff9f8-55f9-46b5-9e2b-c5e1ada72e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f6795d-69c9-4e74-97a8-d547a573a09d",
        "cursor": {
          "ref": "4cb54ea4-7142-4e83-919e-5d8179cdc566",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5deebb15-7ef1-47e0-9314-3c82447bbf48"
        },
        "item": {
          "id": "20f6795d-69c9-4e74-97a8-d547a573a09d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "97f136e9-ce72-40a5-b5df-a278da90c440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 834,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65fdba34-a611-425c-b6d3-94d9a29e20b6",
        "cursor": {
          "ref": "cbdd755f-cab5-443b-bca2-a248e3b9f071",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0571ca57-8895-4899-bcb0-6cecb43d7d1d"
        },
        "item": {
          "id": "65fdba34-a611-425c-b6d3-94d9a29e20b6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4a34499f-8445-420e-b10d-6b7392382100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 845,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da2ca70-415e-4e7d-b6ff-8dc0365fbd0a",
        "cursor": {
          "ref": "46543585-0437-4fa5-ad51-f0161d7ec50e",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5e10b635-3253-425f-9ca1-76907163073c"
        },
        "item": {
          "id": "6da2ca70-415e-4e7d-b6ff-8dc0365fbd0a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "14dc5059-f2ff-43b3-a62a-25e8fa44d7d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00de74ad-eff4-4544-b30c-4cf409dd66c3",
        "cursor": {
          "ref": "22f0f79b-132e-4929-8a65-1a682d75b1f7",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b4aec2e7-5056-43b2-a893-38f7a68026d5"
        },
        "item": {
          "id": "00de74ad-eff4-4544-b30c-4cf409dd66c3",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "69472971-a46b-43d6-8c0a-2950cb3e9f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb5c384-3fc8-4be3-810e-476d7dfe429f",
        "cursor": {
          "ref": "5e37dbce-1d93-46d8-918b-3d7186a6b350",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "191fe842-82da-4661-81e6-8c33ceba9202"
        },
        "item": {
          "id": "3cb5c384-3fc8-4be3-810e-476d7dfe429f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f7a40b57-c981-4dcf-8af0-1652575f522d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705c844f-a0c5-4566-a659-30a21aad5050",
        "cursor": {
          "ref": "60832723-b161-4801-95f7-e26a29ab038c",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3d291424-8e08-4de0-83d8-6ad288a22bb5"
        },
        "item": {
          "id": "705c844f-a0c5-4566-a659-30a21aad5050",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7b37d322-ee24-48c8-8131-924cb68001e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56a0c7a-cf84-43e3-a963-73e90ac232cb",
        "cursor": {
          "ref": "40df4232-9e05-44dd-a2ca-d879104495a6",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "827e2618-4d7c-4f08-9929-8501488b7e7c"
        },
        "item": {
          "id": "e56a0c7a-cf84-43e3-a963-73e90ac232cb",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "182375ec-fb60-42ea-b05a-a863c488dfc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1016,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa662300-3ec9-41c5-adc2-4694b1af179a",
        "cursor": {
          "ref": "74dd3c2f-26a9-4d71-b5fd-4b7263c9f660",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f8675915-fc28-4420-b161-ed5e7eb0b9f4"
        },
        "item": {
          "id": "fa662300-3ec9-41c5-adc2-4694b1af179a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "89b1f8dc-6531-4ff8-8fc7-a43930e85fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 841,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368b995e-4ee9-4ad9-9a9c-66a9c1200a2e",
        "cursor": {
          "ref": "ee1ea4de-ddc8-46e9-b46e-869ed5a54657",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "193359b9-fba3-4621-8678-185c659854cd"
        },
        "item": {
          "id": "368b995e-4ee9-4ad9-9a9c-66a9c1200a2e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b8f4b405-41eb-42f0-900a-3ae2df63fe2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 201,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3bad75e-0178-4b64-9285-67c062c205e7",
        "cursor": {
          "ref": "98171e98-c9c6-4e2a-b67a-321b90496b87",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9e16dd01-3e88-440f-9a2b-4c62e8ded1c0"
        },
        "item": {
          "id": "b3bad75e-0178-4b64-9285-67c062c205e7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "421f2386-2459-48f1-9653-3f59059bf2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fedfad5-f1c5-4825-9f17-03e885d0d12f",
        "cursor": {
          "ref": "4028e6e7-070a-4781-8575-a0f44ed0985d",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ea218bc2-63e9-4d4b-a719-e87603a2e766"
        },
        "item": {
          "id": "6fedfad5-f1c5-4825-9f17-03e885d0d12f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "fbb04614-18f8-4307-9a38-24ae1741f596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9600560-9b5c-48ca-8c8b-2356c4c2d899",
        "cursor": {
          "ref": "608f8fc9-a82f-4b3a-9109-8960e0331a4f",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f46ea3b9-dd49-4fd8-a7d6-98c166b780fe"
        },
        "item": {
          "id": "f9600560-9b5c-48ca-8c8b-2356c4c2d899",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "75aa34c8-986f-4e1f-a4e2-d389fe94d60d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b651e2df-5fc9-4c2e-b208-4e3e5f3e72d6",
        "cursor": {
          "ref": "c6a9cb99-9a95-47bd-9bf6-2d094cd0619d",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "41c2d3e0-cb99-4953-8862-ec65fed8cd4b"
        },
        "item": {
          "id": "b651e2df-5fc9-4c2e-b208-4e3e5f3e72d6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f92284c7-4fb6-4552-b972-307e7028694f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453e3afa-1682-43e0-9e50-1c417d734949",
        "cursor": {
          "ref": "ed2b1d9d-5d76-4fe0-98d9-bddba3361fe8",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bbd87700-2e49-4bc6-8724-b6e357ebb837"
        },
        "item": {
          "id": "453e3afa-1682-43e0-9e50-1c417d734949",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "13e9add1-d0f8-40ab-999e-50162317e7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5cc65ee-4537-476e-a625-df22b250a3ec",
        "cursor": {
          "ref": "5afdf8b9-d69a-4460-9248-714d2aadab62",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c37c8534-e539-48b6-ab2a-ea77e234b91b"
        },
        "item": {
          "id": "c5cc65ee-4537-476e-a625-df22b250a3ec",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7c255e55-6844-4868-8a97-e387561087ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605a42b8-aaa0-43b0-a7ce-6d88f24eef93",
        "cursor": {
          "ref": "f63963da-e1f8-4fbb-b3d3-6103543d4993",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4efa1784-3b62-4dc7-93b0-6d479992e53e"
        },
        "item": {
          "id": "605a42b8-aaa0-43b0-a7ce-6d88f24eef93",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "60fc440d-f59b-4612-bec5-a68884fcc150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd6813d-d3cc-422c-b466-dab3b5e9998d",
        "cursor": {
          "ref": "5801a97a-c666-4b76-9fec-ea7699f96700",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c918ab25-8e03-4f4c-9550-07c99475b37e"
        },
        "item": {
          "id": "cfd6813d-d3cc-422c-b466-dab3b5e9998d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "61ed51c9-7d03-440e-b2a9-e02c48c3d84c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74da6abb-9d9a-4dce-9b1a-0d0372b334ef",
        "cursor": {
          "ref": "f63d3b9a-0256-435a-8b60-7b3c96f8fc86",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "53330ac9-17f2-4931-a872-b8ff0de63e61"
        },
        "item": {
          "id": "74da6abb-9d9a-4dce-9b1a-0d0372b334ef",
          "name": "credentials_issue"
        },
        "response": {
          "id": "dd0638af-d7e6-4eda-a0bd-857a844f48f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "ac5e1343-3914-4b0e-a6f4-7de5934825c6",
        "cursor": {
          "ref": "c95063cc-5393-40e2-9a26-de11a38888b9",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e3837e19-c96a-453b-bb9b-5fed521dcf68"
        },
        "item": {
          "id": "ac5e1343-3914-4b0e-a6f4-7de5934825c6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ea552a9a-2cbc-4532-89fb-40c8f3ac97fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "4684bcf5-658a-4250-ac09-e874c51969ef",
        "cursor": {
          "ref": "6898c49c-ad8f-430c-b4a7-8fb45a2332fd",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "45ecb0d9-7dfb-437e-83a4-ef329b399e89"
        },
        "item": {
          "id": "4684bcf5-658a-4250-ac09-e874c51969ef",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "835e3de0-d4dd-4691-974f-3879c7bac3e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "d9758375-dbe0-4abc-8b4e-256b8bcb1916",
        "cursor": {
          "ref": "d348c30c-bb26-4b6f-a463-726deb0d4453",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "454632b8-7556-4798-9d0c-6cc3d7ba570d"
        },
        "item": {
          "id": "d9758375-dbe0-4abc-8b4e-256b8bcb1916",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ab178b00-984b-4892-b009-f6e8b99de461",
          "status": "Created",
          "code": 201,
          "responseTime": 5533,
          "responseSize": 994
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5468c2a-ce48-4d3f-8f5e-7075947281f1",
        "cursor": {
          "ref": "f2d1731c-96a6-40b1-95cd-88e09b5adca0",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "89b66d62-be0b-4245-a16f-c07fad35a3f7"
        },
        "item": {
          "id": "e5468c2a-ce48-4d3f-8f5e-7075947281f1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "00a62280-dbfb-4394-898e-7cabd387770f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "bc90f2cf-4834-468c-a7ba-5ae255e068df",
        "cursor": {
          "ref": "db189df5-47f9-4c2f-b90c-f112703ba6a3",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8ff19101-cf2c-4b27-8a2f-5ebbae6102be"
        },
        "item": {
          "id": "bc90f2cf-4834-468c-a7ba-5ae255e068df",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c82fdc18-3c3c-4902-a082-7d7cff753b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "be76353c-6d9b-4565-ae33-a417f21b1152",
        "cursor": {
          "ref": "fa1058ea-873a-4952-8f9e-e84421009d67",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1f56eb0e-932e-4653-b23e-1eacf24ad658"
        },
        "item": {
          "id": "be76353c-6d9b-4565-ae33-a417f21b1152",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "899c4444-2890-48bc-a1ec-1bd98d2f8ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575aa056-bf7b-439f-a59a-adb40a4e3e1c",
        "cursor": {
          "ref": "492f3eaa-0135-4931-bc26-5657987cfb2e",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b70c8825-c3d9-4924-91d6-f9d4a12e69fa"
        },
        "item": {
          "id": "575aa056-bf7b-439f-a59a-adb40a4e3e1c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "18cde358-694e-4557-a86f-542980e8718a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0080f36-f66b-47b0-b2f9-15ccf5c23ff4",
        "cursor": {
          "ref": "ae0ea48c-4b67-44d7-bfd8-b8f25ab1136f",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8fc897a8-c460-442a-aec6-67d334f29cd5"
        },
        "item": {
          "id": "d0080f36-f66b-47b0-b2f9-15ccf5c23ff4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a186bce2-450a-44b2-9596-f9e8f16ac30a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75afa45d-84f1-4a53-948a-15c059141786",
        "cursor": {
          "ref": "64133a56-c8b0-4eac-8fb7-f8bd3555b45a",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7d2b003c-28fb-43d1-b4ba-26d8438e068c"
        },
        "item": {
          "id": "75afa45d-84f1-4a53-948a-15c059141786",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d79b7c4e-9cb0-472c-8752-162c9b5eb8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92335c8-9e5c-49c9-a160-c1a0b51d05fd",
        "cursor": {
          "ref": "a3761ab1-26ea-4aa3-9320-05a3208ea361",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "991b2005-1338-4afe-a9f5-77cef1997357"
        },
        "item": {
          "id": "c92335c8-9e5c-49c9-a160-c1a0b51d05fd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "86e857d9-cb8f-464f-9752-2da42eec8323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246f946a-c0a3-4b23-b7d9-1c1cdb903592",
        "cursor": {
          "ref": "a9e80057-cedb-4671-987b-d544537496c1",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "fc7f2431-515e-47df-b372-c0e5a02d12ff"
        },
        "item": {
          "id": "246f946a-c0a3-4b23-b7d9-1c1cdb903592",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "359388f3-9558-4f4e-a58a-4877f5fcf891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca66845-e95f-4c83-81dc-bdddcaea2225",
        "cursor": {
          "ref": "d1b23f1d-dd4d-40d6-baaf-49d55459837c",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "fe8ba8d3-aa12-4608-98cc-d0a24f94e7c4"
        },
        "item": {
          "id": "dca66845-e95f-4c83-81dc-bdddcaea2225",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e13cbd19-d23e-4d45-acbf-b7206804a8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842eea5a-defd-4c0b-b78f-354b4f11ff20",
        "cursor": {
          "ref": "417882dd-f9c6-451b-9513-1b51e3fe6d43",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "49d1b163-2d8a-4724-9ec2-24cadffc09f5"
        },
        "item": {
          "id": "842eea5a-defd-4c0b-b78f-354b4f11ff20",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "324e3211-ab6a-4dde-aa7b-e1811bb3d3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2de7eea-c9bb-4867-b4bd-795a67520a90",
        "cursor": {
          "ref": "e4af3dad-6fa4-4565-afe5-e372467b4df5",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "dafc5418-b4f0-4f47-bb82-a022de082d58"
        },
        "item": {
          "id": "e2de7eea-c9bb-4867-b4bd-795a67520a90",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "661279dc-5cab-47fb-8794-f04c129590e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9011763-b259-45e0-a493-c7c1c82f1037",
        "cursor": {
          "ref": "ded2e652-6752-44d1-8bd2-7f5de79fa288",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b82ced63-34e2-4ee7-9e29-3a33923ff0ca"
        },
        "item": {
          "id": "a9011763-b259-45e0-a493-c7c1c82f1037",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "19c5a031-e159-4f0d-8eec-32477fa8e949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f754362-60aa-4026-b768-812c293b7b10",
        "cursor": {
          "ref": "ba1a5b6c-df87-4b49-a230-6d172dee3665",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "17761402-d79c-4d51-9bb9-60f8744dc119"
        },
        "item": {
          "id": "6f754362-60aa-4026-b768-812c293b7b10",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5c485fc6-6d42-4f58-8667-02cc6f3e3127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce5398b-bef0-41b1-b72d-3c98ff40322b",
        "cursor": {
          "ref": "d2749705-9ee4-4d83-90ff-3f7ef4771667",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4e4da910-8d93-4cc5-a68e-6411fd17e2e0"
        },
        "item": {
          "id": "6ce5398b-bef0-41b1-b72d-3c98ff40322b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "89781da2-f465-474c-8b46-934898a840c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68beac1-c017-4b79-8bac-40ac62539e11",
        "cursor": {
          "ref": "ed134495-3636-46a6-89f0-82dd2ec7a45e",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "53fe468a-1b66-420a-8e28-0ddc54769452"
        },
        "item": {
          "id": "e68beac1-c017-4b79-8bac-40ac62539e11",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "219e5f60-e282-422d-9887-0e0bf048bb9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047ada36-3660-45be-9457-3b9f236303b3",
        "cursor": {
          "ref": "b712ae87-602c-4103-8721-99b0b1b923c6",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "99d19990-0b11-47d2-97fb-ab7bcfdaa9c9"
        },
        "item": {
          "id": "047ada36-3660-45be-9457-3b9f236303b3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bee20517-6fcd-459a-bf32-75c78956b085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5feaa2-e68f-4ea7-a46d-4f06d039c5e5",
        "cursor": {
          "ref": "134b4773-aa88-43c2-8e0a-c9887a3008d0",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b9f279a5-0ea5-4a6a-a7ca-bea37ee46713"
        },
        "item": {
          "id": "3f5feaa2-e68f-4ea7-a46d-4f06d039c5e5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "517fe110-87f0-4dc4-8f62-a336671224f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9045b188-63b1-40f0-9fcd-e6780191ba6d",
        "cursor": {
          "ref": "63c2e943-08b6-4525-830f-2ab669e23a91",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "233c2fbb-e581-4116-a973-dfd152e7f526"
        },
        "item": {
          "id": "9045b188-63b1-40f0-9fcd-e6780191ba6d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "79df77f3-8dc0-4849-8412-2c9b070c4d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2904c2d2-0c66-4dec-8558-f7b888f6fec9",
        "cursor": {
          "ref": "89d7cf82-236e-4881-813f-7881814363f6",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "cd06fa8b-e288-4cff-be5c-499b9b5a0413"
        },
        "item": {
          "id": "2904c2d2-0c66-4dec-8558-f7b888f6fec9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "308bff20-0ec5-49ac-8023-8e9e96122b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b17c93c-dc53-44d1-a22e-c7f1e99ef4b1",
        "cursor": {
          "ref": "49f08bb4-250a-47f7-a7f9-776604b2067b",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3dd72f9d-46af-4ba5-90af-8b69afc8f086"
        },
        "item": {
          "id": "5b17c93c-dc53-44d1-a22e-c7f1e99ef4b1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1fc98e9f-8903-427b-b1ca-638001b15fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659b6c2b-56ff-49b9-a2b4-b7d71e1adbce",
        "cursor": {
          "ref": "6513b4f1-05f6-4fa5-be9b-3075b75dd33c",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "157bc927-a1f8-4105-b9f7-9ed7d4fc2c61"
        },
        "item": {
          "id": "659b6c2b-56ff-49b9-a2b4-b7d71e1adbce",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "85547761-10ad-4572-a640-ba401c64e322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c22e44b-3153-42f4-acd5-814b78f04eb9",
        "cursor": {
          "ref": "4eea2347-0db0-4ebd-b57b-d1e0a842009c",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "8421671e-33c8-47d1-9133-f185151d7f60"
        },
        "item": {
          "id": "5c22e44b-3153-42f4-acd5-814b78f04eb9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ee15d7f0-99ba-4254-ad9f-a371ca06672e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef798cb4-8929-498f-9ba6-46f5e0c411e7",
        "cursor": {
          "ref": "1ad0752f-04de-4cab-adca-d7d30f894447",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "bb70286d-ac3e-40d8-8afa-4c8cfaf4a387"
        },
        "item": {
          "id": "ef798cb4-8929-498f-9ba6-46f5e0c411e7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "236e262b-b672-4ccd-b161-1de5ae4c37e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1095,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c60b33f-966d-4778-8b57-9a5636438054",
        "cursor": {
          "ref": "583a3100-d0a6-400b-b025-b4c30ad48812",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a04afd1e-0aab-4377-8f42-2c7fd0517416"
        },
        "item": {
          "id": "9c60b33f-966d-4778-8b57-9a5636438054",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4e634453-8d96-4bbd-9aff-3e84be7b835f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc00f9c-1671-4005-980f-2ca3a8f83fad",
        "cursor": {
          "ref": "5de2ea9a-34b5-437a-bfe5-e8df171e8716",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7160def6-8ab1-49e4-a7f8-95b2098da1b7"
        },
        "item": {
          "id": "ccc00f9c-1671-4005-980f-2ca3a8f83fad",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c2106699-68b1-42af-b573-cd9b177c3ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443fd1d6-31eb-4d3b-afe2-1aa18831807d",
        "cursor": {
          "ref": "5384b307-6ee8-4b86-863b-f6ef5285a574",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ebb608b5-dc66-4add-a77d-1d84fd707f95"
        },
        "item": {
          "id": "443fd1d6-31eb-4d3b-afe2-1aa18831807d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e69a581d-eae7-4605-aac2-f889cc873a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 880,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a577fe00-0837-4196-ba65-86619256a8b3",
        "cursor": {
          "ref": "652526ad-ed1b-4a7b-923b-819eccdcc5c7",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b4f3d83f-9218-4af0-a87c-c3b4934dbc5e"
        },
        "item": {
          "id": "a577fe00-0837-4196-ba65-86619256a8b3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8cde21f3-e6b0-43f2-9c51-036021fd874d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640010ec-8eec-4015-ac7b-e84efef654c0",
        "cursor": {
          "ref": "74d3cc2e-e2ec-426d-bea5-4957e19bd5e7",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "9a5bed04-f7ae-429a-9a27-88621765ed35"
        },
        "item": {
          "id": "640010ec-8eec-4015-ac7b-e84efef654c0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cbe1d05b-e908-47b5-bca4-d8593192a1c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd26e30a-ec07-4ce8-9484-a8257d524a34",
        "cursor": {
          "ref": "ef0f07fd-fb4a-47d0-9a41-8e77e0d313dd",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "23c4cfc0-46fd-4506-ad3a-b0c236ac6bb1"
        },
        "item": {
          "id": "fd26e30a-ec07-4ce8-9484-a8257d524a34",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1fe45df8-e9f5-47f3-8764-60a59bbcf80e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a0760c-cbcb-4f0a-bb7d-38bfee5fc912",
        "cursor": {
          "ref": "f01a2b1d-dd5a-459e-8dc9-c4f4f9c1e960",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1bf4b924-b92e-4c4c-a1f6-cef37f06e64b"
        },
        "item": {
          "id": "82a0760c-cbcb-4f0a-bb7d-38bfee5fc912",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c1140413-a974-4f43-ab69-2620515c3c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1206,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9849fbc-6bc3-44ac-93f3-ffb0b6d6bdaf",
        "cursor": {
          "ref": "b6e2f3b6-144e-4a9f-985c-393053fa8765",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0042c4a6-4ef9-4c10-a7a4-f780573d5fce"
        },
        "item": {
          "id": "a9849fbc-6bc3-44ac-93f3-ffb0b6d6bdaf",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c2cb2851-a3bc-4c3d-8454-a6f164e2ffe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc4af701-cbd1-4e96-9024-c11ffae07b6f",
        "cursor": {
          "ref": "d8ebdff1-b915-4c44-8ca5-23269ed4f028",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a4ffa4a2-e52c-418a-bd2a-e96e88f2abba"
        },
        "item": {
          "id": "cc4af701-cbd1-4e96-9024-c11ffae07b6f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6c8920ec-16b9-47e6-b7ae-a057986e74d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20dd33bf-04ff-48ce-9db4-3fe9ecf4942c",
        "cursor": {
          "ref": "03e74489-c702-4cc6-86f8-30a9622e7dfa",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "034feacf-7f6e-45f1-9fae-49e4898b63a8"
        },
        "item": {
          "id": "20dd33bf-04ff-48ce-9db4-3fe9ecf4942c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b79c9ebd-d34b-4a2c-9866-0bbef2d136f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1debb7-6409-4c8c-8029-d9b2a42ae403",
        "cursor": {
          "ref": "e1f6a170-e50a-4a12-9dfc-4baac516a5e8",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "77001794-deea-4aa7-9465-04910f059fde"
        },
        "item": {
          "id": "1f1debb7-6409-4c8c-8029-d9b2a42ae403",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "3fe86f61-d362-4b20-8e42-a5b5e103e2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18150461-7422-434c-8b48-119c4919fbb8",
        "cursor": {
          "ref": "cceb13fc-3a48-4dbc-bc53-d2781484c2f9",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a8a4719a-e02d-4fac-b34c-c0ac97e8dd75"
        },
        "item": {
          "id": "18150461-7422-434c-8b48-119c4919fbb8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "85fd38cd-5b5c-483a-9e47-39bcb6159618",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112b97c4-8d1b-4870-b8ee-402f6771e171",
        "cursor": {
          "ref": "b2b36fc6-aeef-4780-8621-b5dd20f4ef27",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4708dc5f-d801-4e9e-95c5-8996f524558a"
        },
        "item": {
          "id": "112b97c4-8d1b-4870-b8ee-402f6771e171",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2d602895-65f5-4656-8ea6-36948e2dd867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21046878-3f3e-435b-84cf-0600b9d54712",
        "cursor": {
          "ref": "5571da8d-9930-46d1-86f6-9268d7ead2fe",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "94767512-57a3-47b3-90c1-25ecef3a4c76"
        },
        "item": {
          "id": "21046878-3f3e-435b-84cf-0600b9d54712",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6ae9bbe8-7939-4109-a8e9-4c9ea78af74f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0237f196-0574-4d7c-8548-3ecb6bdfea68",
        "cursor": {
          "ref": "eb248c12-07fa-4ab6-a1b6-32d2ee68e165",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1b8ed945-e67d-415b-b886-6ced3eea3b40"
        },
        "item": {
          "id": "0237f196-0574-4d7c-8548-3ecb6bdfea68",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f4597304-e2e1-47a9-a1c8-c0a1cc8524be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c4bb9c-bb74-4273-9a44-9508ef7e0ea5",
        "cursor": {
          "ref": "806d59ca-5597-445a-a0c4-f05c2c8e6cf5",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5443ccf7-6e18-4860-86b2-bec7881de930"
        },
        "item": {
          "id": "46c4bb9c-bb74-4273-9a44-9508ef7e0ea5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e146779e-c0ac-4f28-be29-dde87457767b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db829f2-d77d-44c0-856f-e7488975e2b3",
        "cursor": {
          "ref": "58292aab-96b2-4dc9-ac32-448fabaae001",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0cd463eb-1a0a-42ba-96dd-6794df0ee689"
        },
        "item": {
          "id": "7db829f2-d77d-44c0-856f-e7488975e2b3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e51a4d6a-203a-4bb3-bdc7-bae55b357f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef92f2e-010e-4e9f-ae38-643cb18b5667",
        "cursor": {
          "ref": "4a789f65-9cfc-4702-abf3-101d37c6bd00",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "83fa6a5e-d565-4170-8932-063a9d4c9da7"
        },
        "item": {
          "id": "0ef92f2e-010e-4e9f-ae38-643cb18b5667",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5d0f2bab-0344-4e92-b9c6-3af662f44c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe214c8-d27b-4990-b504-337be13dc5ef",
        "cursor": {
          "ref": "aeecf020-fa99-4af5-bfbc-83440647214f",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "89530dcf-b728-4e43-a8bf-82e58efc97ec"
        },
        "item": {
          "id": "dbe214c8-d27b-4990-b504-337be13dc5ef",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bec2243d-2626-4d65-b8f4-a99bf01308bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17be6a41-617c-46fd-8a5e-70485174edae",
        "cursor": {
          "ref": "7a0f3a0e-ada7-4f8f-8269-a98201060b04",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "60518142-6967-40ca-a204-6073c42ff7b2"
        },
        "item": {
          "id": "17be6a41-617c-46fd-8a5e-70485174edae",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "090c3d65-5cb4-4872-a2a1-ab8c27e8a5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e90256-f0ba-4499-b168-c9bd6182da78",
        "cursor": {
          "ref": "24349964-7595-47d0-a930-656daa89e321",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1c3d3e4d-b18a-4fa6-93e0-98dd11a4a010"
        },
        "item": {
          "id": "b0e90256-f0ba-4499-b168-c9bd6182da78",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8e61d2af-5867-44ee-a1cd-1c942b74bd63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5587d41-4a55-4883-a914-766ddfa23a15",
        "cursor": {
          "ref": "6211d0ef-6dac-4e03-80eb-684326f4e842",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "01f09fb2-7c16-4519-8097-618abe251672"
        },
        "item": {
          "id": "a5587d41-4a55-4883-a914-766ddfa23a15",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "655b9f24-adf8-4884-8166-7c0093caa56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae500f2c-6749-485e-93cd-4ff283fd0c34",
        "cursor": {
          "ref": "f7bee488-f2e7-4ba5-a95c-03ee6d4fb697",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5174960e-37c2-47cd-ba03-ce19d3d964b4"
        },
        "item": {
          "id": "ae500f2c-6749-485e-93cd-4ff283fd0c34",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "832d370f-ee43-4de9-8408-95c3878fc942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f0dff1-395c-41d7-8589-69324d0cdf58",
        "cursor": {
          "ref": "a76c7820-d85d-4e89-8bd0-546d3d41b7db",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5f59d060-e0ef-4e57-a040-6ea0767f7a6d"
        },
        "item": {
          "id": "54f0dff1-395c-41d7-8589-69324d0cdf58",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "aa24e2d2-a776-4f0a-9b93-756c9a7ee8f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc5a95e-2c88-4267-8216-6ce62a938ed0",
        "cursor": {
          "ref": "b4dedbdc-26c3-4a60-bb1b-c580b5d45287",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d7ec4eb8-27da-4027-81fc-f695f1d93d3a"
        },
        "item": {
          "id": "bdc5a95e-2c88-4267-8216-6ce62a938ed0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "60275ec9-7650-4494-a1f1-aeac80e81b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e716821a-b25d-4af9-97f2-962d184d3c6b",
        "cursor": {
          "ref": "9dcf39ed-9a90-499b-ae5c-cbc3622f6c5a",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b8f6c813-1106-467e-b9ed-02dec3357fd5"
        },
        "item": {
          "id": "e716821a-b25d-4af9-97f2-962d184d3c6b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "aab5ed7b-26c3-4e70-8e1a-3f7ba7f3cad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb94437f-7f51-4cf0-96b7-c3e94a33fbe3",
        "cursor": {
          "ref": "78cfe6e0-e4d7-4cde-93ff-f143c41a6eec",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "80a3c109-4e09-4f82-976c-7b8cb573bd4d"
        },
        "item": {
          "id": "bb94437f-7f51-4cf0-96b7-c3e94a33fbe3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1fc0ed67-eba8-4a4c-a544-b079ac328ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bbf6122-35b6-4cbc-bb34-48ad7222c6cc",
        "cursor": {
          "ref": "17718b5b-fb32-4402-83e7-a3f084db3cab",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2d53771a-092f-4d1a-b923-04213ed5aa23"
        },
        "item": {
          "id": "8bbf6122-35b6-4cbc-bb34-48ad7222c6cc",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "109939be-dcf2-4cfb-ad51-ec439bf26051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d683256-28b2-4cb5-bdf6-05dcf9320082",
        "cursor": {
          "ref": "af775653-2524-43df-92e9-b6effbdcd5d7",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b621c7c2-b4c4-4dfc-af21-149c5b807cab"
        },
        "item": {
          "id": "4d683256-28b2-4cb5-bdf6-05dcf9320082",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b3c9c972-71b2-40be-9967-a9f049f8aae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83edaf7-b689-4067-bf33-3ba06daca0fc",
        "cursor": {
          "ref": "74c14892-15af-4f5f-a01c-0bb24b9ca435",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1338b13d-5d12-43bd-b9a5-0d993041738b"
        },
        "item": {
          "id": "d83edaf7-b689-4067-bf33-3ba06daca0fc",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d6e29072-7ad5-4f29-bf43-fd3fc8b86c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a089f62-5afa-4226-8686-85c54ee90ad7",
        "cursor": {
          "ref": "b5fa92e7-07ba-496d-b9cf-c965f148fc7d",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a058841c-4fea-43a6-a4e8-c8f508919d06"
        },
        "item": {
          "id": "2a089f62-5afa-4226-8686-85c54ee90ad7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a3def40d-710c-43af-9af9-eadbf7ef521b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e81bdf-6c04-4f4b-b5a0-413770544e88",
        "cursor": {
          "ref": "26720247-da4a-4412-a445-2af008ec6e90",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6d17ef72-5839-4e4e-b0e4-5399fd13416a"
        },
        "item": {
          "id": "d7e81bdf-6c04-4f4b-b5a0-413770544e88",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "996ff8f7-df04-46fa-b91d-480041753440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a8edd2-11ed-4b91-bb63-609d3812061c",
        "cursor": {
          "ref": "deed22c8-bf92-44e1-8c16-bf345117b6c1",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "766bca27-1cb1-4479-8b5f-939948d1f6fb"
        },
        "item": {
          "id": "62a8edd2-11ed-4b91-bb63-609d3812061c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c86da7ac-b3b6-42b1-9bea-ee867c8a9083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a039981-14d8-4e18-b8ee-1a323f5c9a44",
        "cursor": {
          "ref": "6cceedac-0bb5-4129-8af1-5c0b4e7755e0",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "223b7a8e-d300-48cb-b1fb-4cfb4dedbed7"
        },
        "item": {
          "id": "7a039981-14d8-4e18-b8ee-1a323f5c9a44",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7f9c5af3-5c1c-4c09-97b6-9f42b4f62598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ad65b9-810c-4c14-93c6-5db64421aa0e",
        "cursor": {
          "ref": "8188bef3-3825-4902-bfc1-e31f6a8f6eeb",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5b02e9d6-5919-446a-b6b9-df899229278a"
        },
        "item": {
          "id": "d7ad65b9-810c-4c14-93c6-5db64421aa0e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c0ad4dd7-56e8-4d32-b203-6019c4c39a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606c1672-f0c9-4815-828e-5832557312c8",
        "cursor": {
          "ref": "fbb946af-f11c-4442-8597-b3c05550aba2",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1344f0a9-e1c6-4e67-9031-3a455e74a934"
        },
        "item": {
          "id": "606c1672-f0c9-4815-828e-5832557312c8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "379af3aa-3100-4f66-952d-4acd7834ef7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860e010a-4377-467c-9a96-95e45ef4d071",
        "cursor": {
          "ref": "d0919d49-6165-4fe8-a7ca-a01637c408d4",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "fcfd0560-8222-4c99-90a4-caa12faf7eb3"
        },
        "item": {
          "id": "860e010a-4377-467c-9a96-95e45ef4d071",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9aea997b-3786-4680-8dd5-e2a5f2343d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd07ce1c-a014-48ea-b3d3-7040b72375c8",
        "cursor": {
          "ref": "bb05baea-c5e5-4abc-ad4c-b30b2534a55f",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a4c10d75-f2b5-444b-ba48-e705401b7252"
        },
        "item": {
          "id": "bd07ce1c-a014-48ea-b3d3-7040b72375c8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "173bc603-6fe6-47fc-aa24-61396e35d648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb84599d-a9b5-4ad2-b1a7-9bd2b14cb8de",
        "cursor": {
          "ref": "62b154bd-cf1a-40bc-aa45-8c98524f404c",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "bb8b139d-2dea-4838-ab6f-88bae6101fea"
        },
        "item": {
          "id": "fb84599d-a9b5-4ad2-b1a7-9bd2b14cb8de",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "17dba010-dced-4266-ac68-8b589b4e3a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba74f0b-e8a9-49ab-a774-055144b39216",
        "cursor": {
          "ref": "46e94fc7-d9e1-491a-8817-b710ea44809f",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f07843f0-7a5b-4550-9e98-5494256ec4fa"
        },
        "item": {
          "id": "0ba74f0b-e8a9-49ab-a774-055144b39216",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8416d707-6d4b-412e-9bde-25365669cb01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d8e003-34e7-4133-947f-c3cf8acb7fde",
        "cursor": {
          "ref": "70264600-0a5e-4b30-95f5-3f6380909b39",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a2e47689-8910-4887-ab8f-9c1993bf4e1b"
        },
        "item": {
          "id": "c6d8e003-34e7-4133-947f-c3cf8acb7fde",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "74c9fe33-909e-4711-b98e-b0f5b24489d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d69e3a0-a0a5-4f76-aab1-13dc0244a24e",
        "cursor": {
          "ref": "a192361f-00fb-4182-aaba-fc7414268350",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b0ffca91-e45e-47ea-9c56-223a21d4eaf6"
        },
        "item": {
          "id": "5d69e3a0-a0a5-4f76-aab1-13dc0244a24e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "dce31602-5e37-47e2-951f-f4921fbb3f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb68b02e-90f9-4ce8-8b1c-6c241bcf5c27",
        "cursor": {
          "ref": "25975149-303b-44c8-89a4-5fb76feffa7f",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d96c502c-7d4d-45f9-ab5a-82f919a07509"
        },
        "item": {
          "id": "fb68b02e-90f9-4ce8-8b1c-6c241bcf5c27",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "264ffd1b-1497-4385-8e30-fa394e2de5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4e787f-15e9-40c6-a793-b3e86d3e0266",
        "cursor": {
          "ref": "6e2cfcfb-3fdc-42da-9b53-274646081040",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "33632b02-2f17-4719-9ded-ad0fa64a3a3c"
        },
        "item": {
          "id": "ad4e787f-15e9-40c6-a793-b3e86d3e0266",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8d8cff36-9dc7-4c23-a645-0bec73bd1d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f147630-d4ad-41e1-8f93-a41e3e31ce0a",
        "cursor": {
          "ref": "7e39bf9d-af9a-42a4-9311-16efa1edf1c2",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "95f98b7e-95c3-4d4a-a566-1f0523a74679"
        },
        "item": {
          "id": "2f147630-d4ad-41e1-8f93-a41e3e31ce0a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "23aee68d-4d6e-43b7-87ff-cfd16f03004c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87610662-063c-426f-8401-ce582b633f92",
        "cursor": {
          "ref": "318ccb6b-da3a-4689-b59c-e748bffec42c",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "67466d76-17fe-4d50-9e7e-71ce818cbf0b"
        },
        "item": {
          "id": "87610662-063c-426f-8401-ce582b633f92",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ee634431-d021-4a6c-acf0-cc2c51b895e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a76e31-9f60-4394-8e0a-f7af170ae101",
        "cursor": {
          "ref": "fd36d51d-6c0a-4207-a07d-106ec99debf9",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f02e286c-4f4a-4f32-ae5a-563e4c244ec5"
        },
        "item": {
          "id": "74a76e31-9f60-4394-8e0a-f7af170ae101",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "908f807c-978f-4097-bd06-87148e08c750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736f4e57-f64a-4af0-bd45-2d5f9cab3d0c",
        "cursor": {
          "ref": "cd92fc28-0ea7-468d-9a0c-a03a6d150ba7",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "3a9f393f-0604-43eb-88d5-7b150fe20ba6"
        },
        "item": {
          "id": "736f4e57-f64a-4af0-bd45-2d5f9cab3d0c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2240b1c7-b27c-477a-93e6-8c34647ba97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66e64a9-8e23-4369-90f1-eb5ac4857655",
        "cursor": {
          "ref": "ccd25e6a-c592-4015-9052-891a7fe02030",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b8ef75ed-e1d7-4d46-810e-b8d30e3e1440"
        },
        "item": {
          "id": "d66e64a9-8e23-4369-90f1-eb5ac4857655",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "993b6aa4-70b7-4df8-bcaf-d39efb3d33be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389a232c-0d76-45cb-a92d-091f134a4a11",
        "cursor": {
          "ref": "8d1a7042-60ff-4cd7-8cd5-0149dcdcf3cd",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "33f6401e-133e-4e51-a010-79330a5fda18"
        },
        "item": {
          "id": "389a232c-0d76-45cb-a92d-091f134a4a11",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b6986bf4-d515-4d00-8dba-d683b3c6ae38",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a5ae56-91d0-4ab0-bc7a-77199479348e",
        "cursor": {
          "ref": "2b364f4a-0759-4980-9e1a-6ee1db4fec20",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "011ede1d-81be-431a-9725-006e236349e7"
        },
        "item": {
          "id": "f5a5ae56-91d0-4ab0-bc7a-77199479348e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5b10b529-e070-454f-98f4-dd4b01171d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648f3641-01bc-4d4e-bd1d-4cc49d57dd6d",
        "cursor": {
          "ref": "08c990b0-20bf-4a8d-814e-7ba31e092024",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "594748f1-cf15-4244-8696-ff7d8626158f"
        },
        "item": {
          "id": "648f3641-01bc-4d4e-bd1d-4cc49d57dd6d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "285c8aa7-1be8-44a5-b739-f430b6770ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1a7e28-f7b4-4151-8205-ebded87e0c38",
        "cursor": {
          "ref": "4e8b5ce8-3f82-4bb3-a6f7-10235d80ed7f",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "24db423e-33b5-49f0-8cdc-9d815ff19873"
        },
        "item": {
          "id": "4c1a7e28-f7b4-4151-8205-ebded87e0c38",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "82fa2c4d-bf0a-4171-96d5-f9a5601b2ec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a19d567-0c89-4830-a53e-6b7908248fcf",
        "cursor": {
          "ref": "a0bdf980-4ddf-45fd-aacc-535f9d4aa4bb",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6e9a18c4-ca74-4572-857b-fb35efdcb188"
        },
        "item": {
          "id": "3a19d567-0c89-4830-a53e-6b7908248fcf",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3c3e3c8f-f70d-41d9-8d93-ac7cdeef2c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db9ebaf-dd49-4e3f-9e46-e7b9f54e00ae",
        "cursor": {
          "ref": "c81b72bf-425c-4182-a5ab-e1353445373c",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d429bec2-c23a-4e4e-95dd-3f6f822110d4"
        },
        "item": {
          "id": "6db9ebaf-dd49-4e3f-9e46-e7b9f54e00ae",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6090c061-7a28-4aad-987c-eb9b0060c26a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c321cff2-8dd7-40dc-a938-da1b3da7b73c",
        "cursor": {
          "ref": "0599cc45-f4fd-4b3e-a32b-e16fd22491c4",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "15b7df85-21a9-44e3-8a8e-5094863fb8c1"
        },
        "item": {
          "id": "c321cff2-8dd7-40dc-a938-da1b3da7b73c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5fc11065-f1ab-4535-a144-7bdc72feaa28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd513e8-2402-4221-a884-dfff44bb4265",
        "cursor": {
          "ref": "bc844407-028d-4e12-b084-8fcf7956335d",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0f8bead3-49d8-42aa-8831-9ad6f2574641"
        },
        "item": {
          "id": "4cd513e8-2402-4221-a884-dfff44bb4265",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "90130974-0b46-42f8-a332-bc6ac07a38bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaededec-0309-4345-aeb7-876ab68e3432",
        "cursor": {
          "ref": "98546a02-ad40-425f-a82d-47351806b7cc",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "72e19f98-d63f-4f0d-be00-280b2f1cb204"
        },
        "item": {
          "id": "aaededec-0309-4345-aeb7-876ab68e3432",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8339582e-e955-46f6-b0bd-5fb45ed3fe97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c3d749-9875-41ae-b283-4912e8904bd5",
        "cursor": {
          "ref": "c277fe7d-40bd-4366-8db9-0ee1e99e81a5",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1f894439-8de4-4549-b3bf-6e887481eb35"
        },
        "item": {
          "id": "06c3d749-9875-41ae-b283-4912e8904bd5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "26cf73be-a7b3-4dcc-9a28-0a1f7f8412f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb68612-82a1-4b77-9c40-2c08a1af80e8",
        "cursor": {
          "ref": "b27d3d0d-9dff-4667-beaa-2318920544a7",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "daf48961-b4cc-4824-a88f-0c402661efab"
        },
        "item": {
          "id": "dfb68612-82a1-4b77-9c40-2c08a1af80e8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4525f21c-ba92-4b37-a313-b87b46368e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d22a65-e45e-4651-9a97-dc17257c50ee",
        "cursor": {
          "ref": "58e4129e-3ca0-4a15-95a0-5c53bdc366aa",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ed259064-92d2-47e2-9595-c7357d851582"
        },
        "item": {
          "id": "33d22a65-e45e-4651-9a97-dc17257c50ee",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "40b11531-6f11-48cd-b5f7-f5c6cebf2184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1f1b9c-5c5a-4d9c-8425-087c2307d9a8",
        "cursor": {
          "ref": "941f548d-a3ac-4196-a5ba-c55f65389c8f",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a06423c9-3d89-445a-b653-a47e2a9aaf8a"
        },
        "item": {
          "id": "3e1f1b9c-5c5a-4d9c-8425-087c2307d9a8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "043af913-40d7-43df-a73e-d16c7790bee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829d47e0-4b86-48ab-a739-dcebdfd5e6c6",
        "cursor": {
          "ref": "7fa2cb05-af92-4c15-a1e6-b4e77a569cbc",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c2eba2f7-85d6-42b0-9729-a6978ab82621"
        },
        "item": {
          "id": "829d47e0-4b86-48ab-a739-dcebdfd5e6c6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "16065ed5-6dd8-4f9a-9291-82a3bfaa74a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ce59f5-edc6-479b-8429-8c3bee1e3e24",
        "cursor": {
          "ref": "e308680f-b02e-46d4-bf07-34031f6907ab",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "36518861-e4ec-4ce3-9fbe-c468ef94508a"
        },
        "item": {
          "id": "c7ce59f5-edc6-479b-8429-8c3bee1e3e24",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7ad8accc-ed56-4542-9245-4b9c964c30bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8d1edd-153d-4747-83ac-eac7554ab955",
        "cursor": {
          "ref": "32ff3dca-c4ec-4fb4-aba8-10dc3775ccd7",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "13558e8e-54d0-44fb-8d13-416ed98055de"
        },
        "item": {
          "id": "ab8d1edd-153d-4747-83ac-eac7554ab955",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "56b84c5c-9489-4e1b-8fdd-21695a06a857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be44098a-c202-4669-9ca1-fa18e235e4e2",
        "cursor": {
          "ref": "019b862d-8188-47af-8c39-20a908cedbf2",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "62e14bae-3f88-40e7-9c95-968e6e7b2b40"
        },
        "item": {
          "id": "be44098a-c202-4669-9ca1-fa18e235e4e2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d63b8a46-ed74-422e-b6c8-743ddf3fee4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd1d8b1-780c-46eb-a830-1ac86b6eb8bf",
        "cursor": {
          "ref": "3ad5bc64-d421-4e9b-a4c1-cb672ea309ea",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c9901b0c-71de-4072-87e1-427e99379aed"
        },
        "item": {
          "id": "2bd1d8b1-780c-46eb-a830-1ac86b6eb8bf",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ac49086d-af5a-48e4-9b30-edbdaaa8c6fa",
          "status": "OK",
          "code": 200,
          "responseTime": 138,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "a2ae6c8f-1c61-47b6-956f-7fa16770df0a",
        "cursor": {
          "ref": "267af9fe-809b-48c3-9a3c-b3f8144ffccc",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "299160f3-2f4f-4d54-9e77-52230fd70d4a"
        },
        "item": {
          "id": "a2ae6c8f-1c61-47b6-956f-7fa16770df0a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5da3848c-0a4f-4b33-93f9-a06eb95b5d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c0174b-c05c-4810-a5fe-44f95423bb43",
        "cursor": {
          "ref": "935642fe-52f4-4f98-9b0f-8681b533e87f",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c59b9b7d-ca1c-412d-8a94-6180cf50e6c1"
        },
        "item": {
          "id": "d7c0174b-c05c-4810-a5fe-44f95423bb43",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "94880f57-4de4-41c5-8705-b008f32613a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8cff75-ed2b-412c-a2ff-f23e143fa305",
        "cursor": {
          "ref": "ba532861-d8d2-45c1-95a9-dd022b92b40f",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b7ac54a4-b4e5-40e6-8542-b7a19a2824fa"
        },
        "item": {
          "id": "6b8cff75-ed2b-412c-a2ff-f23e143fa305",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "267b3f5f-40d4-4cb9-a7f7-a497775ddcfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1efbe0d-22ff-48ca-9929-78a2d99b7a55",
        "cursor": {
          "ref": "efa6a26a-a8d0-4146-884e-b36a9a76a24f",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "49ad8af5-09db-45ae-bdd4-056fb1b9a5a6"
        },
        "item": {
          "id": "a1efbe0d-22ff-48ca-9929-78a2d99b7a55",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5a3966ed-ca1b-4ef3-90db-0e9f6bc8569a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d549f9b-d485-4a42-baff-ff72dce8b275",
        "cursor": {
          "ref": "8d3cc96e-c6ca-4b85-95b5-1b7178b2c5fa",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a06d3342-53f5-424e-a995-5f639b8030c7"
        },
        "item": {
          "id": "4d549f9b-d485-4a42-baff-ff72dce8b275",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7d2c3b15-1fb1-43ec-9c60-ef7542978cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3195a116-3e8d-4493-847a-ee3b47d1ead0",
        "cursor": {
          "ref": "5d70ce0d-5f49-45bc-8be4-f267e1a865d4",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c9296445-bac5-4461-aff7-22348dff0347"
        },
        "item": {
          "id": "3195a116-3e8d-4493-847a-ee3b47d1ead0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6c480d4d-c3c1-4d57-9b43-3cae0b376480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c89ee36-85c9-429b-a0c9-0030ce9d23c0",
        "cursor": {
          "ref": "4ab3e7bd-4492-4e5b-beff-f219256ef6f5",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3e755682-550d-49f1-84d0-0a3c1e6d5df1"
        },
        "item": {
          "id": "2c89ee36-85c9-429b-a0c9-0030ce9d23c0",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5fe24e74-402a-4e2b-be76-07685bae1673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72731a59-8246-4946-aee9-332ab46db9a9",
        "cursor": {
          "ref": "9824eeea-721a-41c4-9e90-ec891c8053b6",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e206e0e5-b5dd-4989-b933-c5e7d4fa8646"
        },
        "item": {
          "id": "72731a59-8246-4946-aee9-332ab46db9a9",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "cbe2d349-6f31-4946-a4e9-48f18a4f4223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a8b308-0ca7-4fa3-8a22-b68677497a17",
        "cursor": {
          "ref": "5c634390-3b06-45bf-aa1b-d2f7b1473026",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c555b2b9-4270-47e3-abf9-c47053ddd5e1"
        },
        "item": {
          "id": "18a8b308-0ca7-4fa3-8a22-b68677497a17",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c46da7f9-fc36-4ac1-972f-54dd830ceab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7fb2cdf-342a-4a56-9216-b5cccaee5328",
        "cursor": {
          "ref": "2319eb1f-5266-46c2-8566-1c23a2c5529d",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fb3b218f-9d0a-41bf-95c7-7325d08521b9"
        },
        "item": {
          "id": "b7fb2cdf-342a-4a56-9216-b5cccaee5328",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d1117ecf-403c-44aa-b1fe-301c6870429e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c23324-deb2-435b-9fff-68498a844c1b",
        "cursor": {
          "ref": "a76cf0f1-e155-495a-b644-3b3cd50e2ec9",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b46ce06a-ee04-4b30-922e-92fa815357e0"
        },
        "item": {
          "id": "81c23324-deb2-435b-9fff-68498a844c1b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f5751637-74ff-4ade-9c5d-bec1b3976786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c45e28-d7ee-4dba-be56-fcbd212fa539",
        "cursor": {
          "ref": "2849dbf8-50e3-4cf7-933e-eea0e2052d6b",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e4e2e8d8-d609-42bb-945d-000fd0276871"
        },
        "item": {
          "id": "e2c45e28-d7ee-4dba-be56-fcbd212fa539",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "35264ae5-4132-4b17-8d57-08c36b168fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf61c28-d3a5-4852-a572-1695018f8cf8",
        "cursor": {
          "ref": "1a5c589a-aab9-4eac-ae72-cab7439d39ca",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b8ca8dce-72d8-43df-a801-1abe43162dad"
        },
        "item": {
          "id": "ebf61c28-d3a5-4852-a572-1695018f8cf8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ea9c777c-83a4-4045-948d-06e83dc23437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d1a7bc-7237-4297-9cf3-ac4eb4c166ac",
        "cursor": {
          "ref": "529744eb-1ba8-4783-bb7d-50cc2dcc2055",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "70fd1d22-de53-482d-a770-b0bc5ce6906e"
        },
        "item": {
          "id": "91d1a7bc-7237-4297-9cf3-ac4eb4c166ac",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "db5d8a1b-3d1a-476a-a961-b9274930838d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf3d112-2a55-4310-94f9-6fc7aa478cbd",
        "cursor": {
          "ref": "f737b184-8a3f-465b-bc9e-574e4a66c09b",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "19ed55ef-23e7-4910-83ac-e32a34bb161c"
        },
        "item": {
          "id": "6bf3d112-2a55-4310-94f9-6fc7aa478cbd",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "211ceb50-1e35-40d0-aa96-032123f63b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa9c247-dc09-49b6-a7ea-4c14194f1688",
        "cursor": {
          "ref": "7236663b-c636-461d-8953-eca5795c64ba",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c4c45c0c-3a69-42b4-8aea-a6ade0e5c7de"
        },
        "item": {
          "id": "5aa9c247-dc09-49b6-a7ea-4c14194f1688",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "57d19e13-255b-42f9-96a2-bd2ee0680621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02abb047-fd6f-4bad-9797-1a0e65618fee",
        "cursor": {
          "ref": "9826e3ae-29a1-4a05-ae44-574664815c36",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "faa65b3a-de2c-4840-a36a-b309972cd971"
        },
        "item": {
          "id": "02abb047-fd6f-4bad-9797-1a0e65618fee",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f5aceb1b-8001-458a-b998-e917ae399b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ae11c4-4400-4232-ae59-d4f2d12f21f6",
        "cursor": {
          "ref": "187048dd-4340-4436-8c9d-fbf2654e6e1d",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e4eb7c25-4c03-4760-9dac-ba32247042d5"
        },
        "item": {
          "id": "05ae11c4-4400-4232-ae59-d4f2d12f21f6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b8c9eb82-6e45-4405-88e5-271820dfcb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1181,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7510e7a8-755a-47d5-b628-8dd5d125871b",
        "cursor": {
          "ref": "2c2a339e-f8b6-4eae-8c83-f0b88abc6e06",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e8acc4d3-f644-4a87-9861-82920978c511"
        },
        "item": {
          "id": "7510e7a8-755a-47d5-b628-8dd5d125871b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2eadf54e-1f1b-4154-ba1c-b3ca79f43a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1595,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912b4226-4219-4212-8efb-5aa415e5ab9b",
        "cursor": {
          "ref": "786fbbc9-1f02-40cd-bee0-22a6646e3373",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0c27047f-a4c6-4c3e-b12b-3dab897f1338"
        },
        "item": {
          "id": "912b4226-4219-4212-8efb-5aa415e5ab9b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ab56d560-cd8b-42fa-87d0-cf77af553812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 874,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75481264-7435-47ea-b724-c76275e8b893",
        "cursor": {
          "ref": "6d44b248-b77e-48b0-ae8f-5e5e36f2525d",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "85bd17b1-ae6c-4cc0-942e-5284115f0016"
        },
        "item": {
          "id": "75481264-7435-47ea-b724-c76275e8b893",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1115749d-f259-471c-9e4d-bbc813c2fc4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267d5055-f918-44f8-bae0-7836e9c61aab",
        "cursor": {
          "ref": "7e3178a7-6fc4-4bd8-87b3-539a9ba97b0c",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2817a2a5-8951-4cc3-92ad-24f72c3d1104"
        },
        "item": {
          "id": "267d5055-f918-44f8-bae0-7836e9c61aab",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d0b93677-dd1f-4336-ab88-c2bd4cb0391b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc8404a-e97d-4dd7-8457-1b040a3faa3b",
        "cursor": {
          "ref": "ba83994b-45cf-4c8c-afc2-c4c67c1389c2",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "da9d1527-0fb7-41b7-9fd5-543f6803ff7a"
        },
        "item": {
          "id": "bcc8404a-e97d-4dd7-8457-1b040a3faa3b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8ff0087b-de21-4ea5-a02d-68f472af3944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a578539d-0abb-40ca-bc39-ffa58f867058",
        "cursor": {
          "ref": "9693556e-c47f-4ce3-b75d-1e69051a7398",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f4be5f5e-8314-49f7-82fb-0b7b8639d5e9"
        },
        "item": {
          "id": "a578539d-0abb-40ca-bc39-ffa58f867058",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "dcd46d2a-99fd-439e-b66b-72479487ab0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d47481-e84e-4aa6-a060-afcc27c9ab59",
        "cursor": {
          "ref": "5fd5f0ec-7923-45bb-97ee-867e0b3fcca4",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "bd5b35ae-f115-4627-942a-cd6068fc08c1"
        },
        "item": {
          "id": "f2d47481-e84e-4aa6-a060-afcc27c9ab59",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "bd22cd1c-9b02-4539-aeeb-2117b4b565fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8a77ec-33cc-4b0b-be11-c31123b1c8fa",
        "cursor": {
          "ref": "39c452d6-3631-4538-9641-0e9843fa125a",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f3537463-5e71-4d8a-bf5f-545aab0c2b9d"
        },
        "item": {
          "id": "2e8a77ec-33cc-4b0b-be11-c31123b1c8fa",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "79224b07-cab1-4188-bc2f-27646de52cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5ce695-6793-4777-824a-73c60d9692f5",
        "cursor": {
          "ref": "4ac14734-a2c4-4564-9495-83619ae100b9",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ff13f4f0-80b3-4089-8312-988472c4dee3"
        },
        "item": {
          "id": "6b5ce695-6793-4777-824a-73c60d9692f5",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4decdbfc-5d2a-4f90-83b1-8c5e9596bcfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc4fb9b-e46e-48e6-bdf9-5bd51d54f1bb",
        "cursor": {
          "ref": "7083ff6c-fe30-4216-a04e-06466b74f43e",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4dc1cfeb-5366-4d1d-9f57-9730849d879b"
        },
        "item": {
          "id": "6fc4fb9b-e46e-48e6-bdf9-5bd51d54f1bb",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a269c923-e55a-4656-af19-64b36ee44187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6c5ed4-4633-4f6a-ac5d-65b8179bfc8d",
        "cursor": {
          "ref": "a5dc373c-40ee-4d4d-8474-2f20f6a33563",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "32d7caef-3410-40e0-9be2-d314cf3425e6"
        },
        "item": {
          "id": "8a6c5ed4-4633-4f6a-ac5d-65b8179bfc8d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d20dcef0-e038-4a49-be23-3dea8dc7599e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0214c366-77e1-4423-85c8-2f122c43a3e5",
        "cursor": {
          "ref": "f44290cc-2efe-4dbf-8f9c-a948d91002a3",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "914a5f39-c73e-490a-8e03-8670c3f19795"
        },
        "item": {
          "id": "0214c366-77e1-4423-85c8-2f122c43a3e5",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ea031f93-30b1-4f8a-86be-1e1e93746f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245d1da3-9c8c-4ad7-8463-6628098e060e",
        "cursor": {
          "ref": "3efdb44f-3558-4931-be17-bc734a9bbc29",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "664a0c43-bfb1-4d09-9587-7f8f191a522b"
        },
        "item": {
          "id": "245d1da3-9c8c-4ad7-8463-6628098e060e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5602c2a2-3e9d-4d34-9d16-433cc8fd0c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f3aefb-aa3c-4f49-89d7-fb33422b1a79",
        "cursor": {
          "ref": "c5b9706e-461e-45ff-ad81-2d2ef75d64d3",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a70310e7-f1d4-4d20-8d68-7c44d49552e1"
        },
        "item": {
          "id": "d7f3aefb-aa3c-4f49-89d7-fb33422b1a79",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "64fd2211-a089-4d15-89e7-0189ee977355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505f1dff-b715-4e17-9014-faddbf784cdd",
        "cursor": {
          "ref": "cb194292-7e89-405a-ba93-769b4b570ae1",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1196ef54-c933-4d35-865d-bc64a9c653bb"
        },
        "item": {
          "id": "505f1dff-b715-4e17-9014-faddbf784cdd",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "559d6f5c-0485-4eda-9b41-82738f04d45b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e8f769-565e-4ac1-9a3e-61f541d5aaa8",
        "cursor": {
          "ref": "72c6c27d-2e3a-4ab2-ae74-67772ed1e23d",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "13b000e1-88dd-40a6-b847-b5328d997dcc"
        },
        "item": {
          "id": "31e8f769-565e-4ac1-9a3e-61f541d5aaa8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d88e4d42-2bdd-442d-aa8a-da736634c478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb05da38-4b26-4535-935c-b25a7cf41e5d",
        "cursor": {
          "ref": "656cdedd-f008-4281-8e2f-02f5af54bd8d",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d00b0ca7-3964-49e1-9adf-20faeeea6404"
        },
        "item": {
          "id": "eb05da38-4b26-4535-935c-b25a7cf41e5d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "596676d6-c788-42ea-a49c-da15dede463e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581b8efa-3b7b-46a8-9577-c054d11af429",
        "cursor": {
          "ref": "e1c1ab75-8db4-406e-8ca0-b036742a9516",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "bdf3db66-f317-49aa-99d9-bd75f1ea8aa8"
        },
        "item": {
          "id": "581b8efa-3b7b-46a8-9577-c054d11af429",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "847b69ea-ee82-4949-a7f8-bc470f6379b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1ed37e-f281-4d48-80e7-2e47da550541",
        "cursor": {
          "ref": "ed358a1e-b32d-4430-be18-902e9b5a09b7",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a5e8f91a-3ac5-48d6-927a-5dc6cc02e2d2"
        },
        "item": {
          "id": "bf1ed37e-f281-4d48-80e7-2e47da550541",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "34a17f88-b1f6-4ada-bb14-6b615d17e52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da096ab4-1106-4212-99c0-3585dcc20799",
        "cursor": {
          "ref": "fa54d679-05cd-4c03-8b8f-1b22ca658726",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e95ec13b-dab5-4e0f-83a0-5ce8231c0164"
        },
        "item": {
          "id": "da096ab4-1106-4212-99c0-3585dcc20799",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "234a27f2-b14d-4860-9743-c52383d03e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52eb095a-8d80-42b8-864c-69e845b8782f",
        "cursor": {
          "ref": "2b2a5785-54aa-44f9-be85-7072a6289df7",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a94ee414-f908-4b11-b091-ebd5985de657"
        },
        "item": {
          "id": "52eb095a-8d80-42b8-864c-69e845b8782f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0d93b267-e29c-44ae-bbe7-ab50d9966204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d550978c-8c06-4084-8fa3-568a01f4bded",
        "cursor": {
          "ref": "5b1f85e4-c991-40b6-b636-1ad97ba24dc8",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9ea69481-8c96-41f8-a864-f60f39d0821d"
        },
        "item": {
          "id": "d550978c-8c06-4084-8fa3-568a01f4bded",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ba552383-0c6f-469a-8830-281dc565ef55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105fbcc8-ac3c-4b2a-ad40-e3112ca533e4",
        "cursor": {
          "ref": "0db0f0a5-8b7f-4c9b-a51d-f420ca34c748",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c41f1037-3720-4f38-9922-5364fe4da944"
        },
        "item": {
          "id": "105fbcc8-ac3c-4b2a-ad40-e3112ca533e4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3301b269-7b9f-429b-ae2a-e21c1fe53640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59245e46-ce07-4106-b8a8-64dc4d603b19",
        "cursor": {
          "ref": "fd101bac-6408-48c0-9102-b2455dd1d13e",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "11ca770d-b226-4118-b9e4-c865f1da0358"
        },
        "item": {
          "id": "59245e46-ce07-4106-b8a8-64dc4d603b19",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "37a0c656-3ba6-4709-8c0f-f8b06d951473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8aa7ad2-fca3-4704-a90d-c66551142246",
        "cursor": {
          "ref": "847841cc-b355-4200-aac0-052f3754ee89",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ca60079c-23d2-4e62-ba57-9e424e7dbf79"
        },
        "item": {
          "id": "e8aa7ad2-fca3-4704-a90d-c66551142246",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "102a1b55-2715-47d5-bc38-490b17239c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 851,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6570fb89-4c5a-4fc2-92b0-23a6d4234af8",
        "cursor": {
          "ref": "951d1404-4f7b-444f-9d9f-5267948d6e8d",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "3bc200f5-d5f8-41d2-bdff-a56c5c321904"
        },
        "item": {
          "id": "6570fb89-4c5a-4fc2-92b0-23a6d4234af8",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "01358c3b-507d-4803-9798-50f74cb4e093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555ba017-3d81-45ef-9491-20afeb2da622",
        "cursor": {
          "ref": "0f9ebc7c-eae7-4bb8-9b6d-726362ea6dfb",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7738803e-85ab-486f-a838-343f3c614f19"
        },
        "item": {
          "id": "555ba017-3d81-45ef-9491-20afeb2da622",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "391905ab-194f-4471-9770-45f601c57e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db0fca7-b63a-45c5-8f1e-84d60d03f24b",
        "cursor": {
          "ref": "c7aed7b8-0d5d-46fe-a8fc-951256ec25ad",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c2991ba8-fd7e-4baf-9c0e-c5de5bec4881"
        },
        "item": {
          "id": "3db0fca7-b63a-45c5-8f1e-84d60d03f24b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f8ddf3fe-a74e-4c23-b9f8-bcfeec70c01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d255161-2899-4330-8d76-99369f64c6b1",
        "cursor": {
          "ref": "17f327e0-a18a-450e-9836-64020a406912",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "272e29b9-f455-4b45-97e1-fa413847aa6a"
        },
        "item": {
          "id": "0d255161-2899-4330-8d76-99369f64c6b1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "bbd2fef1-dab3-4844-8743-ddfd50b88080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c33948-ce61-4bdf-b0d8-a17bd1dce0c0",
        "cursor": {
          "ref": "8ae61f74-3ecf-4347-acce-f27edfa1ad85",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4cd62cb1-516e-436d-830e-f76d0566fd83"
        },
        "item": {
          "id": "28c33948-ce61-4bdf-b0d8-a17bd1dce0c0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b4e462a0-1831-451d-98a0-fec0187ff2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577cac37-23b7-4fa4-8cfe-13b6eef4dbf3",
        "cursor": {
          "ref": "dc0e0949-5d02-4746-a6f5-5c714e3aedfa",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0524d98e-fea2-49af-8fd8-6ca0132a62a9"
        },
        "item": {
          "id": "577cac37-23b7-4fa4-8cfe-13b6eef4dbf3",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0fa36f50-97a4-4fcf-b797-01d6db0f06bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de64086c-70f9-4ff0-9d77-85446dcf72fa",
        "cursor": {
          "ref": "85cb9f94-f229-44de-80f0-5dcabde53d77",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ef14da2b-0814-4aab-95bc-3e85a179c3b8"
        },
        "item": {
          "id": "de64086c-70f9-4ff0-9d77-85446dcf72fa",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e9108362-de77-4e8f-8761-a40ae22d28f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b064875-287f-4b01-b6a7-cb1f893fa0b8",
        "cursor": {
          "ref": "0b6e08ca-34cb-4670-a0a0-7eb5b20c025b",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ade862bb-273b-438f-8f13-9be92f5feb01"
        },
        "item": {
          "id": "1b064875-287f-4b01-b6a7-cb1f893fa0b8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "557f8e1b-6fd9-4054-b5de-b1ab721af25f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446ecda5-ee03-4a30-b7a4-91d4ba851384",
        "cursor": {
          "ref": "ff31469e-ffc5-4328-951d-eb7378be68b8",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e7a5804c-b211-438a-b842-ee0ba829f99b"
        },
        "item": {
          "id": "446ecda5-ee03-4a30-b7a4-91d4ba851384",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b9b6dde2-d176-4df6-b4df-edfc29161d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a401bf-a952-421c-8b73-66e822dbd052",
        "cursor": {
          "ref": "2b1ef1c0-926d-449c-bfb9-5970e6dd3610",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bbae2eb5-1bd3-45e9-a56a-8dae758c094e"
        },
        "item": {
          "id": "d9a401bf-a952-421c-8b73-66e822dbd052",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6da78fed-0c1a-4f71-b2cd-aa8da8a2ac79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85fa7d0d-7bba-42ae-9a2a-0e638f83111e",
        "cursor": {
          "ref": "53e8b651-b062-4a1e-aba5-468484fea042",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a4c846c7-8037-4840-86ae-ee7dd75de2fe"
        },
        "item": {
          "id": "85fa7d0d-7bba-42ae-9a2a-0e638f83111e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "41d2e37c-f160-437e-90b0-5073f234e9a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e1dc0e-42af-4fb6-b5f0-7d5295623629",
        "cursor": {
          "ref": "40e586ed-b023-4f28-a906-706a2561955a",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "fb1d109e-d204-420c-9972-6ba35bca2a7d"
        },
        "item": {
          "id": "44e1dc0e-42af-4fb6-b5f0-7d5295623629",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "bd3312fe-52b8-4329-9992-8d97a385ba95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a366de-25f3-4574-b689-2c90919ed7b4",
        "cursor": {
          "ref": "fc554e26-f1e1-4e2e-a7b9-236eb35e7c7a",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c1cf0088-d10d-40cd-98d3-6c7ed83bb030"
        },
        "item": {
          "id": "68a366de-25f3-4574-b689-2c90919ed7b4",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e6c9039b-3e30-4b6b-afa7-d997c5c26181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5889316-b45a-4333-8a04-405ad77ac370",
        "cursor": {
          "ref": "5c81391e-0fad-4ea7-a524-5d2c65273ac2",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0acb14dd-a9f0-4177-b200-aa896c00ccf5"
        },
        "item": {
          "id": "b5889316-b45a-4333-8a04-405ad77ac370",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "fe5efa0d-a4e3-4827-a7e8-ae6ba764b992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfbb978f-6998-4336-8b0c-0fafbc2a4a51",
        "cursor": {
          "ref": "b6d72461-fde6-4222-9795-7b823c763580",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "238c2413-4dd5-48db-9119-25e5051509fc"
        },
        "item": {
          "id": "cfbb978f-6998-4336-8b0c-0fafbc2a4a51",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f0846908-b156-4072-8d28-ef550b78898c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383c5742-17eb-4eac-89cc-01132ed9b7ff",
        "cursor": {
          "ref": "881e685b-f0ce-42f2-b0ca-c86cff80a0dc",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "02248cf4-c798-415c-a4e4-99b5276c13a8"
        },
        "item": {
          "id": "383c5742-17eb-4eac-89cc-01132ed9b7ff",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "638e986e-837b-4ae9-a8e2-ccf956d72969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97721cc-8e4a-43b3-ac17-f01ddf9ae956",
        "cursor": {
          "ref": "e76c6353-e6ff-4f64-9917-d975391d44ab",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "bba68965-85bd-4e22-98d9-425513db5f4d"
        },
        "item": {
          "id": "e97721cc-8e4a-43b3-ac17-f01ddf9ae956",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "378344e6-a340-44ca-b7e2-82030a8bc4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f71c0be-48a4-4cd7-b8d4-d8a4345af78a",
        "cursor": {
          "ref": "eee1de68-8880-454d-aa18-741083722766",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "191ef439-f963-4fa1-8372-b91f1362ed91"
        },
        "item": {
          "id": "9f71c0be-48a4-4cd7-b8d4-d8a4345af78a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b0ae3bcf-e081-43b8-84c3-cb48fae34160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c391d6bb-899b-4495-a625-9ff9c0c49f51",
        "cursor": {
          "ref": "e9fcf388-d755-465b-9f20-7003bd788340",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "7d3063fc-6b59-4b4e-8693-54ad36738ac8"
        },
        "item": {
          "id": "c391d6bb-899b-4495-a625-9ff9c0c49f51",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "fc5c8365-fddb-480e-a893-ec793f9a1c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d45c95f-83bc-4c0f-a93e-bbb509903e04",
        "cursor": {
          "ref": "0f5b3d07-b6e4-4d24-8ed9-63b75a26756a",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "5ebe11b0-009e-4286-a3b3-9bd5471d12b9"
        },
        "item": {
          "id": "8d45c95f-83bc-4c0f-a93e-bbb509903e04",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "83c2d54d-5348-41fb-b659-6b4f18f3a35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aefa0e6f-f2c6-4c71-867d-d4714b9c0e19",
        "cursor": {
          "ref": "53373568-9be5-46b0-a114-088004602719",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "98d9e4e0-7e3a-4780-8124-733ecd6e6cc9"
        },
        "item": {
          "id": "aefa0e6f-f2c6-4c71-867d-d4714b9c0e19",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "de552069-f210-45b8-8a68-dfa70b798496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ddd20d7-ecb0-4a36-bb6a-8dfc48384243",
        "cursor": {
          "ref": "5c6513a3-27fb-4b17-a046-26046bfa68f4",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "5648ec50-f972-424a-8a2d-b082bf13234e"
        },
        "item": {
          "id": "6ddd20d7-ecb0-4a36-bb6a-8dfc48384243",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "10648484-d61d-47c7-b6b5-d972854eab9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43455080-0d62-44e5-a7a6-810f934f5f98",
        "cursor": {
          "ref": "f2f08018-5eb1-48be-a400-be3a9a870154",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "d3c398c7-9b0c-44bd-a519-db1a5a1e1be8"
        },
        "item": {
          "id": "43455080-0d62-44e5-a7a6-810f934f5f98",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c9dad55e-e615-4dc2-b804-a221a57087ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0450af-5558-4a7f-b0de-68471a6bd2a9",
        "cursor": {
          "ref": "30849a8f-0f5e-4bf6-84db-b3100edc186c",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "3fa1a791-75ec-4992-a066-ce133e648d4e"
        },
        "item": {
          "id": "3c0450af-5558-4a7f-b0de-68471a6bd2a9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6ee982a3-4cbb-4852-8f1e-3cd2c461e655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988d7cbc-9568-41b6-89e3-5647d6910651",
        "cursor": {
          "ref": "82949ac1-8226-45ba-ad99-24aa9142f725",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "2c762849-3e1d-43b7-88d7-740c49504d47"
        },
        "item": {
          "id": "988d7cbc-9568-41b6-89e3-5647d6910651",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a4ba6f62-5934-40a4-843e-b08de43562c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55b5f76-e140-45e3-8e76-c6ed82391627",
        "cursor": {
          "ref": "b1d26d21-82cd-49b6-b844-72e21d92f468",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a1fcfe28-3945-4ac5-926c-2863088afc3b"
        },
        "item": {
          "id": "a55b5f76-e140-45e3-8e76-c6ed82391627",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "98ab4a07-cc10-422d-a376-6e2cdb4e8a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdad1047-278d-4fcd-9752-0873dd2a4077",
        "cursor": {
          "ref": "1483d702-5bd6-4432-b301-8f05c4497027",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "1bfbc1bb-059b-4b80-8299-36933afee8a2"
        },
        "item": {
          "id": "fdad1047-278d-4fcd-9752-0873dd2a4077",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2e024aaf-6a54-4b77-9a7a-59241a7da3e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bda04e9-326a-4dc9-8eb6-8cf419d41e6a",
        "cursor": {
          "ref": "0c02c31e-dfb9-4940-b353-0372e3d4a39f",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "38a00e87-12c2-408e-833c-0b7819398e24"
        },
        "item": {
          "id": "8bda04e9-326a-4dc9-8eb6-8cf419d41e6a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1ab4750c-01b9-4d13-8463-b376b410d303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5497f008-5ec6-490f-82f6-fefdc619ac7d",
        "cursor": {
          "ref": "ee1ebbba-21f8-4ecd-a9fb-e441c89aa1ea",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "d4fae014-ad42-4504-8184-96d73ed887ae"
        },
        "item": {
          "id": "5497f008-5ec6-490f-82f6-fefdc619ac7d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "70159530-2a1a-4585-97fb-71325b1b9c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9bd8103-a714-46aa-a09f-945ce7eacd2b",
        "cursor": {
          "ref": "dcb04f53-ecf5-47bb-b5fe-53408d53a79f",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "576428ac-b0ff-4d82-933b-a7f4a91dc092"
        },
        "item": {
          "id": "c9bd8103-a714-46aa-a09f-945ce7eacd2b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e0fb7ed5-dc63-4bfd-bf74-42172134ee3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11a534b-d701-4567-915a-8c19ec763ec6",
        "cursor": {
          "ref": "a4bad054-e156-47d8-a554-0293dee91d14",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "2a9de466-e100-4ea7-8094-e4d159e4e6fa"
        },
        "item": {
          "id": "d11a534b-d701-4567-915a-8c19ec763ec6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "29f7a621-efdf-4582-bce8-bb6ff7e582cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad79b49e-99d0-41c2-9b68-44060876ebc9",
        "cursor": {
          "ref": "503a730e-83b5-401d-992b-31e38215f8fc",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "214082ce-d3be-4e32-a2fe-d0e166827366"
        },
        "item": {
          "id": "ad79b49e-99d0-41c2-9b68-44060876ebc9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8066fe60-b455-4b42-ba02-0efe799652d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267d7151-d203-4cc9-b6ae-1f87c3df47ab",
        "cursor": {
          "ref": "65a7285f-33ed-4394-bb48-89bc4f182d08",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "476c09fe-987f-4f40-a7bd-f14e3d3173ce"
        },
        "item": {
          "id": "267d7151-d203-4cc9-b6ae-1f87c3df47ab",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0f56ed85-ac98-4a90-9539-7ccb53a33156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43a88ed-4a0a-4f72-b756-63ac5951a1cb",
        "cursor": {
          "ref": "b401e4f3-23c8-46cf-96cd-fb1fd82eb2aa",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "d92457a9-2f18-4674-b95d-a39dbe114302"
        },
        "item": {
          "id": "b43a88ed-4a0a-4f72-b756-63ac5951a1cb",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3f7df0a3-7e52-4338-b9fb-e37d3f96ec38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72695b22-b865-49d7-b4f2-9b82df876640",
        "cursor": {
          "ref": "b86329c6-c5eb-4576-a5fb-1d74276580c3",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "4b30116a-d75f-4c7d-ba88-b1eb2e414a08"
        },
        "item": {
          "id": "72695b22-b865-49d7-b4f2-9b82df876640",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f2bc62b6-ce91-499c-8a52-6453dd4d5866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28191da7-3ece-4378-8d40-a713929b4a66",
        "cursor": {
          "ref": "fc70ba74-1137-4d20-962c-2ce9bc3aa821",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "b3630e0d-9994-409c-849a-65b51071f1cc"
        },
        "item": {
          "id": "28191da7-3ece-4378-8d40-a713929b4a66",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3779396a-5593-4165-9904-2f96c9f8eb04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd991eba-1505-4ef8-9db0-2e76a1f7bca8",
        "cursor": {
          "ref": "79feca8e-152e-4027-b2e5-5dbf0d593034",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "de883ce7-37ec-48b8-9737-bf09d1243474"
        },
        "item": {
          "id": "cd991eba-1505-4ef8-9db0-2e76a1f7bca8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "56c91af2-b707-454a-ade9-9d0e002b582e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e4b255-8b8b-468d-92ff-cd0ff8143d51",
        "cursor": {
          "ref": "d40750a8-fb00-4ef4-a3ba-788d48ac98ae",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "40530f27-9857-46e4-b8eb-6fc3f2cd8a67"
        },
        "item": {
          "id": "62e4b255-8b8b-468d-92ff-cd0ff8143d51",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "34260ac6-92ee-400c-8773-2557a012a790",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a2cdb6-e71b-485f-b906-892794f284a5",
        "cursor": {
          "ref": "abe466e6-576d-40a3-9a94-75c5e8714d5b",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "38ea1028-9f7b-4397-9765-b3f466baedfb"
        },
        "item": {
          "id": "93a2cdb6-e71b-485f-b906-892794f284a5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6dbe9108-2788-4d2b-afc6-33cb8ba3f28b",
          "status": "OK",
          "code": 200,
          "responseTime": 91,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fba148d-8e88-43c4-98f5-c8656d05af7a",
        "cursor": {
          "ref": "4d857ad5-fb16-454e-97e6-b5b8331d616e",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "23d8b488-919d-423a-a750-3666043f254e"
        },
        "item": {
          "id": "2fba148d-8e88-43c4-98f5-c8656d05af7a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6806deda-0731-494c-b480-a1a1c0cc7a81",
          "status": "OK",
          "code": 200,
          "responseTime": 4460,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbeca20c-f5a8-4602-8533-6189da26fbb6",
        "cursor": {
          "ref": "7f46c84a-90d1-4164-ac46-eb876a5886ce",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "a907c7e4-d346-4bdc-be5b-535a2fe60cab"
        },
        "item": {
          "id": "fbeca20c-f5a8-4602-8533-6189da26fbb6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8eed95ba-6936-4e5f-8562-99dcee2322f8",
          "status": "OK",
          "code": 200,
          "responseTime": 3145,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7cc479-3f90-44ca-a500-d04d1bd41406",
        "cursor": {
          "ref": "0074e36a-acd6-40ed-8c70-30652d9929ac",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e5dae18f-7dc1-4e72-9bbf-7061e26df83f"
        },
        "item": {
          "id": "8c7cc479-3f90-44ca-a500-d04d1bd41406",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9ffc83bd-e5f5-4f2e-8843-29923a17630f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7cc479-3f90-44ca-a500-d04d1bd41406",
        "cursor": {
          "ref": "0074e36a-acd6-40ed-8c70-30652d9929ac",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e5dae18f-7dc1-4e72-9bbf-7061e26df83f"
        },
        "item": {
          "id": "8c7cc479-3f90-44ca-a500-d04d1bd41406",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9ffc83bd-e5f5-4f2e-8843-29923a17630f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8ac68e-0570-4124-b4de-f617bf627dd6",
        "cursor": {
          "ref": "0ef46d25-ced9-4e40-b8fa-3821443b5e05",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "dfec2dae-3f5d-4d3f-8511-d4cd93642144"
        },
        "item": {
          "id": "1f8ac68e-0570-4124-b4de-f617bf627dd6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "238a8b5c-ac4e-4109-9649-46cff7799e8c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933fdadf-db84-4580-939c-0dee606dc6ca",
        "cursor": {
          "ref": "b03841b6-0045-444e-8dc8-cb112831263b",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ba2d65ca-22d8-4fdf-929c-2d93040928eb"
        },
        "item": {
          "id": "933fdadf-db84-4580-939c-0dee606dc6ca",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fe955cb6-c4ad-46e5-a3ab-39c732113912",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}