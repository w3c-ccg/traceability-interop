{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "037cc7ac-dfa7-4824-ae6e-ac0d63961ce7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8a3c0efe-2b99-4fd9-b68e-964861e4b664",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c0764da3-96cf-401d-b09d-54e39d7d3b7a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6d4257ee-8c77-41ad-9cbd-e9d41b77db2d"
                }
              }
            ]
          },
          {
            "id": "eac784bd-ecb0-4d00-bf3c-f7b0ba1e9b57",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b6b71f3f-95b1-4c99-8494-74c00a4d7f1c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "05acf893-f4eb-492f-941b-4596a018dda1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7057ef3c-9a1c-414a-a851-98f0113a03c6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "66be6a41-9666-4801-9a8f-d5f7dd43bf47",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5f8960bd-f164-42cd-861b-c453b93a54f8",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf9c68ba-a317-41c4-8c6b-decaed2baa1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dd115ab5-54af-4c08-83e1-86751b8c9e49"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "15d18811-e76c-4c6a-9389-63ea153fb210",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "da046403-a8f3-4fd5-992d-acbf810e6368"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cf8c03c5-6559-4c62-a34a-5d9df0877711",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "970d9ce1-7515-44cd-a351-31b97c61167e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "68cdc6f4-371b-4cf2-91ef-f9d89b03e528",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c02c5ee5-3264-43f6-aa0b-13f49b4f7a9f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31de7826-287b-4a50-b934-032cf753ed0b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3605b973-8a3f-494c-b569-737c8d857824"
            }
          }
        ]
      },
      {
        "id": "30c53f66-d857-438a-b982-3002781ccdfd",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "0101afbc-d99e-40db-8472-7aefad3d1918",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5956a231-b7ae-49bc-909f-575598deb65a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ab9d99e4-9fe5-40d0-8d53-9c92719f6f72",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9833482-4f44-46e9-8e9c-488e23cc37e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "16a0efdb-4a75-4d4f-b4ba-d23ba50fd577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906163a5-71bc-4f24-806e-6489c554f77e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45664b93-1440-431f-91ec-58e50620d82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b8561dc-bcc8-42ea-825e-dc91f19d5926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef44ffdb-b5ad-4c83-9df1-e9a1e03b652a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd25ebcb-77b4-4c23-8451-87d93ce3ab2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fbf9e217-314d-4651-93bc-36ed1312dc13"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "474a260d-54e9-46f2-a219-26f1b77e8759",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6b3d1719-5ee5-475d-8757-5085093a0376",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8457d5-3e40-4717-8182-8708393f7986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "adebde77-f9c3-4cdd-8563-19d5abe27f71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6638cf4-2395-46ea-8dc4-adc6d7abb006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b983062-b769-41b0-940d-19a23677a2e7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "28db2a84-b87d-4671-90a1-335701698fce",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6cb96331-2c63-403f-8a33-5a87dcd32a1a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bb51586-4f87-4f22-8c14-57c4eb9f3225",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8a0c0313-75ed-474f-a9a5-e6aa9d29ae1f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0eaf0abd-6a7a-461e-87ee-2d546849abe2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "daaade8b-0a03-4687-a2f6-ad70ef007be1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1204e184-6859-49e1-b1e7-c44f21dd4e98",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "32029cf0-9146-4d76-a329-c9de0c17b7ac"
            }
          }
        ]
      },
      {
        "id": "3c78f2df-4986-4220-8b62-d7913b70c756",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e39597c3-5078-4485-a39a-91bee15af6ff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ec77a58b-a172-4159-891d-ab6e1e5609ed",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "33b29bdf-afe0-45a1-aa6e-45a26be35438",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79069027-cd33-4b9c-8941-49b4887b326c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26891368-d38a-4fbc-9f5c-a23e52f9f985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab26ff8-937c-4258-99c8-70dae0c67d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e097dd66-416c-470e-97f6-0827823ac724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5a25c7-b9d3-4a4b-bfb7-7e9ca16ee276",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20cd3acb-a7a9-481f-a7fc-34fc830d58ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "231f294f-b872-451c-8d0e-f2985531aff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9d1aa0-096c-4ca4-8992-085805515253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f98dec9-aaad-47e9-9d66-7f9a91362b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd93fc1-6423-436e-861c-2bff390cb6c5",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebbdf2d-61c1-4a44-9c34-7c35cc666ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6e33910-4bd1-4403-83e6-f6a7904f42a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b3c8bd-d89f-4996-a696-e1a3be179ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5f97125-9c3f-46f2-84e4-cd4cdebb0b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b2c8c0-7dea-4e41-8f07-08b911ca5537",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c98870-b30c-462f-ba54-5c2110da48b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b407026-faae-4525-8175-1b00aa44d332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461a61d6-c51e-463a-8a15-3388eca946b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bec03c66-cebf-4796-8590-4e42cd94ccbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c3aa2c-99f0-4fd0-9a83-a7c3ad4d7900",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1a6430-8d02-4f24-bfa3-3c2bd1089e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8210be90-9159-43e8-bc95-9ddd3044f63f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c755ba17-6697-4e46-9bb8-1669e4a472b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e52a77b-edd4-4516-bea5-0455af7bdd7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82dc96fe-784c-4cdb-9cc9-a1d6c62c1975",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2b8fb8-4908-42c0-aabd-d7d994b478af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72a0a6bb-162e-4628-b59b-406120966e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37021ad7-e197-459f-b780-4ff6308e7c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c858d90-0ee6-4c25-92d2-2ca7996ab3e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "985ef0b6-5a8a-484f-a40d-dca53ada8de4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "542b3dfb-425d-407c-800c-1f7ec8e96308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c1af2de-20da-4234-87cb-16046fbfd564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937a3478-f26c-4ec5-840f-4ea6def1037c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7222ad5-d8d0-49b5-87a9-c41f6a5c5655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf65d6b-c611-4ef8-96cb-64c831cd5e91",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "880d7245-0d90-45d1-9d05-13feca90e306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0386ad0-34e8-4822-ba9b-7aa9760f7839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6f6d4f-7179-420b-999d-5c7397e8558c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16c3785c-fbbb-4b8f-8948-9601e0a0eae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb76f0d-beca-4939-83b4-5fee92f25ba4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4370cb-a352-45ce-8532-a3448134a4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271a850a-92b7-4fd2-9736-f97b33676e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3074fbf6-d9ec-484d-91de-c11a4c2cd457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9182be45-887c-4cee-b08c-17c6f5ecba97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b408161-3752-4aa5-9691-674af917dd09",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ee9b69-beb9-4048-8e32-8d2ae44266b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ae2664-889d-4631-bf16-7dde25831e74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec704e2-481f-485f-82d8-80d9e79f2d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20783af8-433c-40cd-b1d9-d6cbd906e534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9591465e-c858-47b8-a1db-f30f74a43d60",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21c7f35-9345-4a91-872a-69412fc7dcd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9c6144d-a74f-4919-8243-851d3f7274cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50088b2-0f43-461d-b0d4-fa47e4678c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "951f218c-f3fe-459a-94f4-70959264934f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b525f3b5-c665-4915-b82b-8d7f2f25fda7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55550b25-7125-4eea-a4f8-e0f3acbc3dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "593c9928-488e-48a8-a4ad-eef6142d140c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49a13bc-614a-412d-b2de-870320ec6abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb486eeb-4894-41ef-97b2-79c1b7677ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15300feb-2a73-4cd0-85e8-5e8b06770b24",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925d8222-1083-47a5-ba6c-3696d986e529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a29a1413-03be-45ec-8618-a1e099a29d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15266187-b7cb-44f6-817d-f6aa01e112d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c47acc27-549b-43eb-be02-79af75d86869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376101c6-8c39-4698-bab1-2ce05f0f65c3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b1382a-50f8-4107-b8c5-c840df4389a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58d1f60e-4347-4250-b209-11262f59ec8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab409a4f-4f6e-46c0-842f-bab7841aa038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "100feb05-2530-473b-b74a-8e5ee46bd6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d77b3dd8-d5e7-4278-8178-f70aa6e72879",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d327547a-ac2e-4cac-80e4-2c4ccdafb16a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92fea635-c13f-4cf5-b227-9e97f16d02d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30d3d0e-4fda-4df3-be92-0af1a78ea302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90cc49ba-fcfd-43d3-94ce-8444fcbe3f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5cb468-57c1-4013-bd8e-c52d98cc23d9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25c6735-9dc1-443e-89c3-94ebe0830646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c31cc482-f979-4960-8b07-ec2271c47e4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9663b9-5355-4f29-8438-2adc9f2357d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf993bc3-268e-4a01-856d-4b598bb3983d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7fbd82d-c251-48b7-aec9-4c47de09e41b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93869c37-3807-46d4-b808-29c7818b6e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15c22d85-5cb6-4320-95df-4c275cee64fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a852ce73-1fc9-4ff1-8d80-797ee0a21a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd1210a7-9cad-4e4d-b5a1-033c8ecab55d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736b97d7-3133-4a50-a1d5-002e58afee85",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edda630e-42b3-4073-9cd9-6e3782fdcc4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac6e58d-a3fa-486b-b0a9-e134973ed2d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f21f359-5a28-45fb-a5b0-fce1febc9f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7506c1e5-7ad7-4af0-9a75-aab3aa892960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af34705-b4a9-4699-83b6-42f29ac66747",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd22ce8-81bb-44f9-85b0-148800f031b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0702a89-4bf8-4031-acf8-42f9c43f6df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd80a7f2-7e57-4db1-bc1b-8ecf170be72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44659c59-e6ca-4dbf-aedc-813202c1a00a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f247ccc-84c7-42a8-8e80-a49063920adb",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc21de0d-f690-4c4e-960d-1de8019cbb67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76ad1aa-628c-4df0-ab69-07b27ede9062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8c6558-b035-455a-8800-d9584c2966d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c94f325-ee25-4660-8776-fca090abc964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88504d5c-f8c3-41a1-b3b9-eee4d5467efb",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2957e4d2-7dd8-4623-bd08-ae91af9af0a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b560c2aa-845c-4f39-8410-95e11a8c6443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac6bc43-a0d9-46dc-b0ee-325f67c3aef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccb028a2-76ce-42dd-8a00-66408d557408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481204ca-b4b3-4932-b6f3-481e7590b060",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a645f53-db0c-4f04-96b1-0a5341a78fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48cbdc04-958b-4b43-8520-373ea076228a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "522aaa29-dc2b-4fea-8497-e64e6bf9aa30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "35c4715f-141c-447b-b023-58fff31ba38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed4c958-226f-46c8-a651-60d4153b6f15",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb84e419-1d5e-4ee5-b537-e4e0f29b610d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6410434-2336-4f07-8090-c65d39bdd1b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c157a897-be39-47ec-9d6b-6f0da93529ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "faf19a22-303b-4d9e-ae9f-f7e57bc0772f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789521c6-78db-4be2-b65d-32df2d2ea9e4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e77f625-e63a-4331-aa16-ed199ca1403b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2960d497-c5fc-4ec5-8b6f-f264db59f05c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "018caaaa-ea41-49aa-97e5-317523a0230e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "32ae4b87-8b22-493d-861c-43e8fcbd4c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ecd6c7e-af46-4889-86e2-f57f94b20cc9",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75c6ac0-620f-4bc3-839a-a8b303b7bb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e388bb7b-6645-4294-8596-237a3372d19c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bae7b91-bef4-48f1-a9ce-812ef8622025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7769139f-6b10-40a3-b1a0-d33b71a54c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b49ce2-6b80-4901-af60-663a2aa8e86f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f0887e-3bdb-4900-b57f-913a992e365f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9ed0223-9fbf-4e3d-903f-3f4a613ec98f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80fcf682-d4eb-41b4-88a3-6a0d6d02080a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "14bcc625-9308-42c5-bc80-d63a4f37360a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4826837c-65bb-49b0-a248-a9ebfd0105f7",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "207891e2-b961-4fa1-aaf7-3b15f6a486c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a489b78-5a24-48e4-81fb-36c6a9dbf8b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025be329-bd5c-42ed-a522-55d78547fe89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb9948b2-0c22-41f2-9d89-d5fc970a6c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f701b9-005e-4450-b1a6-97a2bab3761a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ede0a5f-a8cf-41c4-b260-daa487edcda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7ed698b-6648-4f22-9814-dd23b5eb27d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9582239-b9d1-4834-afa4-498a2fc025c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c03e21e9-78a6-4c60-8606-3a9541f7adee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb921fb9-3539-40c2-bc25-1dd926713cc7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6cb5805-96e5-4d9a-8e26-f4800d0a343c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe0f8b08-a8bd-4f7c-aa00-627c0d16d873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1c7fef-93fc-4aeb-b64f-49a2e84d0642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a8c400c-51cf-43d5-91cb-8bd6b59c4303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd33f75-3c14-46f7-927f-006f4efd227a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac73e31-035b-4561-b74e-851b283a04eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f0a37fb-0c6b-4b96-aad8-d57a6ce634f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47e8430-6ff6-46e7-aeb4-4689fcb91da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "43ed1836-95f3-4d69-b0df-0df32f5c36d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e6a67c-e4da-4939-b8b0-a6dfe0b72628",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3142392e-3d65-463e-8c80-13aaa1971d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56a27f87-4ffa-4514-8507-ddd0b6492f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df14b856-803c-4733-bcc1-8f8a7bde53a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8188d80-68c4-4005-896e-242d4c973286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f21f52b-4cb0-48d8-8e18-3aca74542e99",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a20fcb-155e-49d0-896c-6989ff8e6e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6bc53bb-d3e7-4445-bde9-c661e20d9bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db6c612-f30b-4a35-b7ff-f245bf06d5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a635c67-9936-4440-b5ba-5611b50520f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f322373b-37e0-44a9-821e-6009f0cea225",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e62b943-b138-4f26-80ff-d41b5de2c9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c1b28e-44b3-44e9-8864-53f3a85eefdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0e6a7e-cec8-4fab-b89a-c94d00372acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39def558-4a26-435d-bf46-0b2a3ded6043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe940684-7b7b-4885-9006-bb405bfddf7d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0f92b3-e0e5-4586-a3f7-cbbda58d3120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d8559cd-5228-42af-9640-2c3bbbc991b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9338fe40-e48d-4d30-b67e-5112436f01b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b54c38b8-1de7-44c1-b7bf-15fe15ea9787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73164c23-4a82-40d0-8102-3cfd65787073",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e90996dc-d9d0-494a-b331-fd3630b2dc0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbbeea3d-47f4-4fdb-afca-e408a624ccff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38679f08-e5e2-447f-be50-edc6f81f761b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a80473d4-727d-4eaa-919d-e1a3671d0e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81650ca-81e8-499c-9a6b-8c21762dc2df",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc7bfa1-88e9-4d6f-a5ce-cb1afa27ccc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bcb46a22-3282-4ab6-8cc2-2fa9499f224e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf5f9c5-5110-47f6-8e38-34b9139bdc14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fbce9419-b884-4b71-95ab-44db1df748d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31b3d7e-b760-4877-865e-e89868d854de",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0745b4-9d36-44f3-9677-f727cae638b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00ca2aed-c8db-4b53-9505-69921e0d7e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f09e765-faaa-4451-bebd-72d98b742cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5c49ec4-c40b-48b0-a3fe-2fe6290cb857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87c6e7f-6d66-430e-bfe7-2baad5c38cb2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6d1996-5a8d-410c-a2ab-3b47cbd4c003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c890e4f-b2a2-4a62-b1d8-2672550bb51a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51338180-35ce-4a13-876c-4b696cffe487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0fbb2be-154b-4fe1-a09f-fa5272838ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7853163-5fd9-4ff7-85ef-ed8dde94a931",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "564fbda4-3b0f-4b67-95fe-798460b1aaa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a4e7120-e19b-4460-a580-8ad1141c0828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d823da96-567b-40bf-b545-d71550412242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "de4840e2-b4c3-47e5-bcfe-c2f67173b289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b04dae-6142-4796-b2f1-f4a1e9536ed4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53c3274-0cb5-448a-8bc4-8cbbc013000a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9d54458-7a6b-4719-8729-011cf4023e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1450411c-8a57-4e27-8ac7-2c02cd5d7a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "91827b4b-377f-41a2-816f-f09765ee8e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e0a166a-d9c0-402b-b911-89ff51254178",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc8c415-75bf-4b7d-8f71-fe52eb5c5d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53936668-698d-44f2-b756-c45f778867f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d5f8b8-482c-4d43-a23d-f9cd652ad20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6714a030-c7ae-42ff-9d1d-09c8891315a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d966246-8c51-4f4b-97ad-ff478bc67d8c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "477e3895-53e6-4dc1-804f-61c712b3723f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a13b699f-b509-4727-b59e-659726403188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b6471a-b66a-4a90-a1d0-700a7442af3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4033eee1-c63b-4dd3-afde-bc884e8981ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8c1630-d36c-47f3-a35c-11638f5ed16d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2bf4377-cdfc-446b-b0d6-3b85ec1ba7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b42d006-a41e-4a8d-9532-25b2f5dc8802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f3e08c-73bb-42cb-a5ad-497d4e8875ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "372ebbbd-d05b-4571-aa8e-348077684955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c288727f-8828-4d9c-844c-7d0395f37594",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6a8e3a-4e5b-4805-aaa6-11424ae572e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aaf3f05-97b5-423b-8b7f-cd9b22eceb76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421d49e3-e4e2-4c2b-9759-704f60be1fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3629c8e7-d409-462f-b3e8-4318a863517c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b0f97b-b312-4927-ba1c-163e35f0e35b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba627af-08fc-44cd-ac24-c9033a3d1074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e2d7d12-032d-4ef0-baba-7236d2aaeab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92979d5-70a5-4a0d-9b1f-83bcef31fea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c796429-8ec0-4149-9f3c-518ceba171f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a16f9d-b615-4744-a43d-c8fe92ef12d4",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d6f452-d904-494a-9c07-ff29a2ba4882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d592f007-94b2-4f5c-b395-512b5aa23235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cdbe022-c30f-4a0b-9d69-d845c86e4365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8ebc6a2-cd97-4ebb-94eb-50baa8fc0e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0b3ba2-6251-45d7-923e-4f32aa31cc40",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e89f44-a3c6-4ad1-93ae-9b82131d8d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e8b210b-a80d-4c9b-a538-1d4eea5f1740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2c59d9-483c-447b-a9ed-fc74aff134f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb0bfaab-4b95-4683-9db0-64d871d3c820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65d25d6-4ebb-4c2a-889b-35fb987b1668",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e3f96d-b279-4a31-a65e-cebacf8ca904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e54cd339-23d5-4361-b089-64abab4b75d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0b9b5d-5f8e-430f-9f4a-40f80dd850ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "088a69ba-fe2a-483b-89d8-04760a16438b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8c68d9-8c1b-45d0-b285-e00b0b9f2ee6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df9d745-08e5-4869-9bb3-6f1fb1a6fa03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "234380f9-88ba-465a-b28e-ef4201df158c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2112db79-c31f-4abe-93a8-2066390b0149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e29a4949-16da-4bcc-b486-cb3010adf701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcfe5b79-83d8-4317-a47b-ba322834b394",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "421857f4-9495-4d15-acb8-1e6b4a65814f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b300ae-f111-4adf-bee5-34839eb8af4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5a8b65-23fa-4c84-8c8a-9942738277eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "080b5d81-2cfa-4563-a7ca-b55c337f7ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed03f3b-75e8-42ac-9b74-29ed0b1bea61",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27353431-a1a9-4703-98e5-72877d7c5bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c819a0f7-e74e-4ba0-adb1-230b9116a8b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46d2313-0994-4381-ac24-5f4925eb5fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e43bd4a6-5b36-49f6-b595-e3f4bd9faa14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df46994-6cf3-4fec-a2d3-03117570b177",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61224db0-9d32-44e1-9d93-a239b7533302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a83b3af4-2106-4499-9cd2-4d9be7d832b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5085f479-2049-47e7-8084-909427dfbf4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8988441f-245a-443a-930f-34a0f8b7ea72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19808020-ae1d-4f34-8acd-925a82437ea8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15bc4178-dac9-47b2-9c44-9f5fe688da6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "873b900b-07f2-4429-9c67-f9324c489e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f0c368-058c-453c-8d67-70324776c844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6183c29-eda5-4c4b-a55b-8bdb85ab2688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e450f6-54f4-4ac2-a2a5-1e39076aa5a8",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65452c02-0882-4ef5-8fda-facc07e0bd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cced2b4-2054-49a1-948b-ff5c48c1154d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bdc1151-5ed3-4612-82de-afc315ad9fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "87323da2-8273-491c-80dd-4ea3ea959fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6933a873-f6bf-473c-bfef-53bacf861588",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "831c7529-9a49-44dd-86cf-79eadcd05a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6674280a-be9e-4a00-b04c-550fc5cad6de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ecaba54-da77-46cb-ba5a-e4e8c177b4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1175b135-0aa4-4977-b350-2d8ae46ef67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ee8166-98c4-4bda-a6cd-35d7b1dfaf67",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed18874-d744-48d5-ad49-43ecb0dbba61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e293d5b-3fd6-4157-ba00-5a3afd1b2d3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e3d6e2-3b58-429e-9dff-1912f4b7ef57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "52d1b1a1-1681-45f7-9fe9-689c3349416c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc259c7-ede0-496d-84e2-dacce1615320",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4645d64-680d-4317-a255-2870ee857deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cfff7cf-afb0-4fb6-8b6a-0da70644d0a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40eb634a-0a92-42bb-adf0-c04062c8992b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "88dfc809-6aae-4554-892a-24e0104f512d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1822544-12ad-4f6e-9bee-3e1dc3abb66f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13216b6-4bc0-42ee-8eca-8bda405f5a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beee9b1a-785c-4978-933d-3146dab0af22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8d2813-6822-4837-aec5-57be60a77b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "72704d9f-2f36-4ab3-9799-50288cd9acbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945a1e61-2cb0-4789-8da4-006408b16585",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fcfbfa-fcb4-43ee-b93a-8912958df9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "106e4b51-4d2f-46c6-acd7-0136bf49dd56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff33cd1-82da-4810-a293-f4efe6249be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d93d75f-2d55-4369-9c28-bd126c911fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb158bb-a877-496b-b0d3-73db44ba467d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3169fd44-eb12-441f-960c-c810a739ec57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1a003d9-fe7b-4cf7-a30b-4822c40ecf4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e98b17c-e772-4822-8e4d-662b578f7436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab989a5-ba17-47c3-9f15-f9e7f01321cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1daf9b99-1897-4a60-a05d-bf9d7ba957ba",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60389c9-162d-4bdf-8c7c-7b8e8426d8d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1714870a-b926-4934-abf4-98aec912ace2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e91a47-d342-4a60-91da-d183eb474f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8494edbe-1ca2-410a-aede-ba79345c2814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dbe29b0-1629-4fcd-aaa3-b6f79222b00e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7604e03e-0a4b-4491-b0d0-ae7d7ab028c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab1bc71-26e8-4f0d-bef2-0598619332be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce43670c-8b43-46f8-95c8-2b37310d098b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "be6f5aab-20cf-4eb4-b00c-9758f997fcf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e1fb62-876a-4d48-9c60-fb75c7f2dd9a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf1229a6-3fbe-418c-9981-fdf9e66fdf62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "573ec12d-9512-4277-9dee-769c8e761406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12508749-049a-4488-8570-d4dcd4edeecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "73291230-13fd-4680-af03-c458c76bb658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d45fe54-87c5-4c93-a81e-739fafe27ec3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a42eb79-74dd-406f-bd93-2feb4f4a5b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac2fda48-4f41-42e4-99b6-794b776ed819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41dc4741-ea07-4f12-ad4f-ba9d26c3fc70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "008e2710-77b6-4511-8ee9-56625eba85c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b85a67-4c47-45cc-99a1-1b708d661f40",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b1e309-d326-419d-9aa8-820e91219287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ec9a6f1-ed75-42b8-a043-ba8b9d455c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff83c19-38a4-4c69-8006-57a7ba1b24f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a636a24-4786-4308-8b9e-f873607f45f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddcd53d9-3f9d-43fb-8690-394c82e867cd",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ca31ac-7857-4980-9a1e-2eccf1066c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e937c0a7-d4a6-495f-9776-72bdf050ccf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc52bb8f-24cd-43d2-8aa0-920f1553778a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f900736-d306-47ed-8c4c-92b24d96fe32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb6478c-cf7d-4027-b3e7-3e91e416cfcd",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3038a56-3950-4076-b86b-821d88e578c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f5b090-b8e3-4d48-b0a2-b48a43a2eb18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03e5732-f1c5-4fdf-916b-73077c4d2ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2de3aa8b-cc4b-4e44-b6b6-e5c3d8cf403c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36db06c5-fe1a-47c1-a09f-5160d912a256",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98163d59-6bcd-4c90-8c4b-64ab1287bd4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2e02971-c467-4fba-8f81-8be7dac9b281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e5d171-2757-4d54-9228-4d9544af1fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e26beac-084e-4463-8d89-f34b7c65b572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd89964c-8477-44bc-af24-5e67f7b6f91c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff3df98-3bd4-4553-9d3d-d3cb5fec42f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "801ca40e-3b0c-445b-af7d-507c57bd791b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd509385-615f-4180-bcfc-2e4f8cf670d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "307a6065-4871-46f3-98a5-b8fc97cca929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2220e6df-81ec-49f2-81b9-5d619b90054b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a9d0f8-5b91-41e6-9996-84e85f2b0086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e45881b-5a0d-4334-bc03-fc7775153539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884d51ab-0148-4546-9af5-cb67e95ef2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5481a801-10f7-4b4e-88ae-6c41578fff5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea925a3e-9708-4bd6-a3ab-b6aea29e8256",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871eb03b-3530-463b-a209-e52e25e0e34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82915f0a-42f5-4e54-b7d8-00464447c189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f46e00-5916-47ee-9351-da101b779ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d061b05-14e8-4848-93fa-18166068c679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029b5709-b2ff-45ea-8b32-7d3f07bcda63",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f12852e-6555-4066-9f76-6b7509b07a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a13c21d7-2be4-496b-8a9a-9f3213d5c191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fccbbcf-6de7-4bce-b2d1-49b0a18a77e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8764ad70-4f20-4d8e-bf87-8de593c3b97b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5075f0-4441-470d-b0eb-5157a781c8b3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f6df69-8d1f-4eb4-8349-95d3ef91a42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e372705e-9442-4bce-a663-f7e1c22a3594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4861fa1e-0806-4bfc-aab8-0e926a2449ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "032c7c06-cca2-46c7-b97f-555b990c44bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8bc058-2580-4fe5-b7ce-a4abbcecd3ab",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3cb50d2-709f-4e08-a7d4-02f579b0f646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85e71f47-0e73-4714-8b7a-d65e3e3ceb28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ffec5cd-80b5-4311-8fa0-3b7ea7d8bc71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d193f883-509d-458a-94ed-8040095ec03c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1826b68c-cecc-4033-a86c-4c13c1f4c39d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52cd2c4b-59e6-4289-911a-7f24fb1c7a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86737661-75e7-4fcb-b04c-c7282c77db71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd98b9ff-e82f-44fb-9826-2a191d1aa001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "999078f4-f422-493e-bc97-c3481a4cb189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe8f56d-81cf-41c7-8825-26d3b07bbf8d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afc70b2-ffc8-44a7-a63e-ceebafa5d5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be16f9b2-6960-4288-ad6c-a49a5b69c908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793cac72-c7c7-43f3-861b-4d5e52f8be14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c277070d-fdb5-4e55-bc4b-9998b68e170b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff36771-91b7-45ad-83d4-2e0c28b72a2b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eece1f5-61d5-407c-b8f1-9881a1062f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8033f2e4-f14f-40a2-9307-b59723e2c1ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707b919e-5750-4653-b84c-c1dd49912d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3740e782-4f3a-4f61-8760-debe456a505c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5562f8f-d3b1-4bb4-a651-59bc4777e75c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c868e447-1982-43e3-be3d-1faf749adf7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "940193c5-a024-4342-aaea-36060f11645e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17aea3ba-ba70-4a21-882d-7835a84e75f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43606fd0-6df3-4cc7-a3ea-dd5dd24262d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c0f40e-479b-4e2c-a371-22ae2324b788",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "583d91ff-5e15-4a36-b6ab-13815fcc1a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1014bc1f-211c-458a-8e96-7c4c52eb2756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee578ba-e18b-4ae2-adc9-5f16cd483b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b70ad3ab-576a-4f31-b68a-4232ea9fd44c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d640f6-af26-43c9-8cbf-518821163808",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c95a2b-b18e-473c-a829-bb4120d0918d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8312eb86-f338-4db6-a536-1dad8b3bcf73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810b1dcb-43fb-4b48-852a-4a56c571919c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "39bcbfda-f79f-4a2a-8b0a-f1829e220cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963c4481-a0e0-402d-bd7f-49a4b5c74e0e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db1999a-980b-4ed6-85b0-252d04269443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e7cd8da-3956-4827-b1cd-c8f50588752e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2145d24-7671-4ca2-89a5-c218f4a0fb37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d12811eb-ff45-4f1a-89bf-e0087fe3ac84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a68f4a3-ed76-4be2-8d4d-1cfcf7237870",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93bee40f-a58d-4db5-a16d-9fb444fd21f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6fb8c42-7289-4e8f-96df-52089880f65e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e65574e-dfff-4bb8-9331-a61a2bd36a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "003455e0-7ba9-4a04-a8e8-4e899b767a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d2fba7-b97f-4c9a-bcd2-39714a927f4d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d4fef2-b30a-46e9-94da-347dc979a9df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "451765fc-5628-49ba-ac69-a9a86af4d9c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b298d935-8aeb-405e-a54e-e5ba20ae89d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7542777c-d0da-4fbb-bc7f-65e5358eaa87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a0df94-b13b-47ef-859e-f975c43d8cf9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e01d74c-7899-4805-b666-ab4cb5b4d091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69dbb7b1-770e-46e9-99e0-bb5ac7298ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0919dc4d-6c9e-49c1-b2de-d15a723e722d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51f792ce-c1f2-4939-936e-ae1edc39681a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64286860-6b67-41b5-a1f1-3e955c4ba45e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11f3f6c-64bc-4686-aae9-eb5e9a08aa3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc827485-4fbd-4a14-a737-c442f05ddaa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9add9ee2-1ac0-4363-80d0-4aae380b949d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa178dd-3b4d-4e55-92df-e1e1a4ca331e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834f387b-e356-41a3-b940-d62aa3ff700b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f27e6e9d-facd-4bcf-b916-a576ad42c470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2140fb7d-cb40-41a0-ace5-2106e9f647c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f503477-c171-40a6-9126-34e50ba87eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4e729ac-88d5-4ed1-ab4d-1872377024fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5095f033-42bb-4542-a9f8-6789e939b619",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "383609c7-b844-48de-bc26-50ce028032cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c520a1-bdee-46ba-9ba8-5ee0520f3225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69dcc4f6-9c6c-4788-b6df-26d8f5c995b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ee16f8e-3946-4318-a13f-b401872aadc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb7d91a-7779-423b-86e0-21d196a861ae",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7209c5-8e83-47e4-bd7f-9cb609a043bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24282bd4-fd81-4c31-ab7b-dfd6ac1153aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfaec276-bd10-4f80-90bf-b551c061e0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e262d39-7273-4057-99a5-ab1c6e4730d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ba271a-2af0-4181-bec6-46917941f2cb",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2e09f3-5432-45ed-ab5f-883e19c2d7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b30d15d-5169-46ae-962f-1c9de8bd0075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19fc19c8-1b0f-4fb3-8f6c-305999c3e83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "daf387f5-318f-4d60-ae1c-6b2c25745c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3217253-14c7-4a9d-8d04-115ef22a8a48",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97bd4a54-619e-4cef-90c8-e07a5b4babfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf0f1d24-66c7-4e51-b653-b979921cb92b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fff2725-da46-4fd8-8d24-ed13f39ceed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "aca51ee0-e1b5-4797-9b70-68bc50c0f90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4ecb45-dcf2-4852-bfa8-f888ac013036",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "802683b8-5235-4c3b-b69f-cf6a4743e1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "510d09ac-779b-4366-8c0e-dda8cea901bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1960cb04-8376-45ac-aec4-a4227d2906a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a3c0ef-0202-45bb-9261-99ebe9676b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b625804-78f2-4f77-a79b-9365ed27b888",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3820f495-61b8-4a06-ad0e-c02b503fa030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5b0b4336-0096-41a5-bef4-9454b41fef30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be4faca-f3ae-4e99-ba18-2cc4e6d8e43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a26feaf-8084-4917-9b63-b356e55e82af"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3ef5718b-251e-48da-b9a1-796ee22db138",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c9f85941-842b-4cd2-8316-5eff8d7cd083",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3ac480-74b4-4270-89d2-036e769eec7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba74239d-cdee-4a3c-8e37-85032ba85a11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fcad7cc-6f76-4da0-963e-bb28174bc094",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "415c6fb8-9836-4d34-9a8b-5beda751b441"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f0abd10-2562-40f7-ba02-9d79884ecafb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c73c5b3-237b-467b-942d-905e98235007"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9cfe6bdb-165d-4d64-8279-f116719d740e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d39d3a2-4b63-471c-9797-7138c4f3192c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "58806de0-a940-4b39-9d16-bc2d041b0974",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f3349432-86b3-420f-8201-0b2fa78e598e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d8ae6a3e-3ca6-4905-a24c-2d8ab9aa1c3d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6330e6b9-3b73-4cc1-913b-4ebd6ce47a10"
                }
              }
            ]
          },
          {
            "id": "388f7941-85db-4750-a2ac-1c77c498dbc2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6b9a626e-cfb0-4551-abfe-5e26c28f0532",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a467bb07-e347-4a8b-8eff-9cf7d56abe34",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6a9204-f1e4-4d4d-8a9b-5616dd9f7ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "bfd32fc7-488e-4f3c-95a8-0e2d682d1474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8239157-1c27-466c-af23-9bbbad3cb5ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e020e5d7-e3c5-4620-a76e-d5afe19490cf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "83631962-4ef9-4303-8d00-2cc2550ef22f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd78e1fe-7a62-4b6b-999c-71447c9e4e10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1932312a-4f8e-4a96-92ba-64580d5e8ebe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1590f465-c1cd-45a4-9c35-727c39e9f999",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "362c989f-92d7-4694-9d6e-83affdb6447b"
                    }
                  }
                ]
              },
              {
                "id": "cc5df59c-264a-492c-be09-fdf05fd47948",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5a2c24a-4c9c-4c07-96c7-f740466f5aeb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8298a2dd-b7f0-43a9-a6cf-1273f4a359d5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b77a3270-973d-4633-bde0-3e5fef9835ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "08882df7-0ae9-41af-8b23-fbc615b833fe"
                    }
                  }
                ]
              },
              {
                "id": "aa47cb82-0835-4a14-b818-79d486a28553",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ed5a7e3-ce94-4817-aa5b-11ad20f1ace9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "37f7b547-a531-45ed-9033-2a98f747f4d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a2a7939-1070-4f8f-8368-a6607b36ede0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f422afdb-1104-4654-b2f1-98756f1b31c4"
                    }
                  }
                ]
              },
              {
                "id": "a66558f2-5297-480e-890b-adcba94da3b7",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3fa69860-2ab8-4679-a7fc-c27c8fc3db35",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1ed0402b-b78f-4e58-8f9d-2603478b28b2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5a0c13c-36bf-46dc-bfff-1605fdaf8fae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "77dcec57-245f-4f07-a529-356884dffe16"
                    }
                  }
                ]
              },
              {
                "id": "6c22ff2d-bf03-4203-9273-dcab88bd53b0",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "476544d1-9f7e-4121-9ba0-d1b03a8ad66f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d86a8f5c-d002-491c-9345-00d34eb89733"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a75ef21d-7243-4691-b878-333fc7b77048",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "244f78d2-f52c-4c1d-bbd2-6a0ac8cb08ff"
                    }
                  }
                ]
              },
              {
                "id": "4cd25e6d-955a-4e57-8e67-57135b261d12",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "09cfc44e-9144-4bf6-8027-c48b61d03d50",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6615d44e-6824-4e53-a4dd-c6581e8452f4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fe58797-ac5e-4b4d-b76b-c5d1a335f10a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "91af30f6-9f1b-40e9-b1cc-a41e7c2318b3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a34ef3fb-595b-4efe-a5d6-c6df0fba1e29",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "20f60290-d53e-4c13-b845-0acde2660f3d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e1ee13ee-aac0-4ae6-9785-8079d78ac670",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "927c7074-7153-44d9-bc1f-a87f3a34e91c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a1cace6-80f2-4242-a248-5128c45a1849",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1875cb31-12e1-47bf-ae19-59c5b12a84cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48b9b233-eec8-4f6a-be73-5865bb5b5f05",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b5ea5d8c-22e6-49df-8e51-399e3fce2824"
            }
          }
        ]
      },
      {
        "id": "de9fa3de-eff8-48df-8776-c01b4e1490c1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e1b79cb2-e46d-4ff3-b798-8102e8c1b0cb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "617b89ce-9950-46d4-bda4-2459836910d8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "58a84040-9927-474a-80c2-06b2d789a303",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab660e6-d8af-455e-a88a-1ebf2ded5c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "720cb8ef-608b-4b8e-b0b5-9f05217c8df9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac307e64-931d-4a17-aa1c-abbdf2e105fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "584de505-10e8-454c-bd62-6c2d6ac4fd39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0ce0a5-d468-4e3e-94fe-42a62033921e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f37b12-ff3b-493c-9cb8-5fa406687247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad84dcc0-9a5c-401d-a960-aefa8f584c2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c98fd0d-ddbd-48bd-838c-87eb634a0b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "514d734d-f715-4514-8b78-cb4a28cf0007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2869f0-3f13-443e-bcb2-75243dea8e84",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04fe05ca-7f65-4d36-9d12-ae9f3d9df508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c62484-e619-42bd-97c3-002dd78552f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2d4735-6721-4949-87df-e56e9ea5a289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad21c46b-8263-43e5-b3d7-ada9cf15512f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2983125-32b7-4d19-9e35-61e9848a7c11",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf2b8428-48c3-4c62-9a92-a9e656471252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b92da3a7-729b-4d9b-acad-dbfd97b18a0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e945df6-5e68-42d6-aa01-72c7e8b1a970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4c28965-c7fc-420d-a2ad-a683cae3e8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48bae680-2cda-4078-87e3-ab7041ffe25e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39ffb1d-6dfd-4185-a5a1-79c520034218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a994860-b606-4aa4-b4ed-5f0a4c478eae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2642944d-9ccc-4892-a9bc-cabc34dc9f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10c9c07e-ef18-48d0-ab00-6101fa209d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3441948-2534-43e3-b9fc-dd7e1278f9ee",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "655908c7-d34d-46c7-8c48-6fa4af585d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "415ff7e3-4619-4256-9d23-da714f835f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9d95b8-71cc-496b-b720-0cdeeb4f62c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d63566ee-5716-4582-82bc-e204b06fe0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4b0ce5-24c7-4f8a-bb1d-44f47ce6d24d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7cae64-f1ff-4cc7-9ad5-fc856435db1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "775fd503-a4c7-42fe-a577-c7ad3c38eed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ab623c-50cc-4c4a-804d-65bc1f9e22b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5268a0be-9cd5-4d6a-b7b5-63a421643466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143218f2-7500-4995-b669-b54551a18d04",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8680265f-f152-4e42-a48b-274d0cbb1c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cae367fd-238a-473f-bba3-e0c54ff4b4ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba2038f-6abe-4c11-9dd4-49c424c3b517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "13bf5134-c04d-4f7f-ad03-901ce95b6878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098b1a11-f55e-4efe-909f-e1127391263a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f5c4d0-b8a4-48b4-bae5-adae13ff624a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b8ca4c8-f743-48ad-a9bf-2a78fe193499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a42817-55c2-4691-9436-48b25651a588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57895677-cc20-4abc-a911-ec4f927aadab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb776cc4-22e9-4017-b132-ea7f670e54dc",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "932eb2ea-12f7-46a9-9bbd-d467138fe571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "096b4655-7781-4be8-8502-4f116a37b019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86f9595-7d9a-4c80-8635-d33609921208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1dc3be5-8c59-4c2b-851a-eb56d71de768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844f2fbd-c6f2-4353-84b5-dd97fe933640",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66dd1ec9-64f7-4cd7-9483-7a5f747bcb02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc733ed4-d075-4eda-93aa-fa65182cba0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34728cb-8bcc-4d07-a246-042b747a9ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cc41c7c3-f1fd-4f6a-ad40-cbdd39fc8029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f35fdc-02a0-4908-9957-01061011faf5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bfee40b-8171-40ef-b88e-bbc75e25f789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "032486ba-38b8-4c44-b384-25a79587f19b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c748e564-9582-4d09-a93a-ea02df5d9232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "99f43e27-7c87-4cc9-8f51-49932e4f6629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b86844-5f2c-41a5-b1ba-d6f9bea9b7f3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "002f3ad7-c161-4b0c-a4c7-dfdcd610ff83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cffcfea5-9d1e-4684-9e2f-278487868eeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c5bcfe-5c4f-43d7-952d-1ad3f3face5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "56498516-0966-4932-ac0b-5bac834926ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6971af-583c-4a8a-8b7e-467bf9f77218",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e1e897-ab1d-4299-957d-b135a4786a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52a39ba3-c395-4022-9263-45df90351c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b253982d-55e3-4578-aad1-d144a3cddce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "31b83d9d-0802-4372-a4b7-43512ebe441c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfab687b-a22d-4bf0-9857-915cc86583ba",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec97aaec-5a7c-4ff7-bd43-3d9ef38ea92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff8fbf2-2793-4d86-8ac6-52257d16d479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2c379f-5d98-4f56-85c0-29de37de6981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "536f3731-991f-4c71-b34f-3f5041cd7b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d12db36b-7225-4b12-860b-bbd6b9943238",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a582bf-eb0a-4947-9434-fb5e92561029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "279a5b8f-a803-4bf4-b073-cfcb6c782235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ad0353-acd1-448e-a254-e3654f24b357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4df74ae7-6909-4917-9b1d-9b4d0b8dbb42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a9c311d-46aa-4083-a2f8-2e5ca6ac94b0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01606c9d-d2e0-4960-bf32-c5280e3f732d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a4951fd-0a37-4ac6-9aee-625e76a205fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8a8d1c-b4c0-4948-9eb4-043e35a28d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "960d89f9-8a69-4dcb-abd2-3a1479b2bc6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995b1fab-5d88-45f1-948f-7ef78168eb05",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d911f8c-e07a-46ad-a8a5-b7a467a6a877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a7329f-2742-4313-afd3-1b96ad6b1768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8341c6c-69aa-4233-bee9-e008b5878a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e495600a-398b-4732-879c-aaf8a7c36419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9591a041-2f64-4b68-a96f-8cb3db204d7d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41487112-e5f1-469e-9184-744b11c47d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aac6d0e-c3dc-4966-86e3-520a2515a365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "733116d5-fe2d-47fa-9176-82497513f311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cfa1612-2a7f-407e-a1ce-eb1fc05119f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc8f043-a9a3-4bff-8fdf-20d547e43bbb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a859139-2d98-46b5-bac4-e17a4b31cd6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d16d170d-9ba6-4991-ae2e-a0f8c011ef78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866f046c-186f-4215-9b50-e5f46b617743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ba710bd-7ea5-4d4e-b9d8-dd41c9dde270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012c6ef9-9699-470c-8e78-98c8050d4110",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51762b6-2c2d-4c7d-b7b9-f6df0c19139f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af0e4af-df9c-4698-9887-c60d5131c23e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf4ee3c-568e-425e-ba14-8aa75f1a60ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55830dc3-ae2e-40db-8691-cdf107fdbd78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ebc2e9f-1ac3-434c-9759-26de1a487430",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a91b89-e41a-4c5e-866a-ee56e21ee326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ea7d12a-cb90-44da-9543-09eb314e11f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72cec72a-08aa-431c-802c-674ba7019f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5968780-3706-4139-8d70-0f1442022d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10333e48-9fc0-4674-959b-8004e66802a8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a7d4b6-0ac7-4519-a0c1-9c570ae627c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55850200-5de4-4004-b46f-677ca0a81760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b27f8a-5488-4c7c-b0c1-f87e4cfe0664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "299b67d0-4c24-4634-82e3-a8e783fb44ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be483424-2773-452f-a50b-bf8e24e39d9a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8621b443-383d-406c-9d1d-d06901793ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f55b176e-c427-4634-a0bd-b028bbeb6e9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2958a103-5ad2-47a8-a49b-7e38fc04226a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47bc2643-b600-4a3c-ab1a-6be4acff2ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8440f6-d250-4fcf-9c36-fbb5727b9383",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef3f237-90cd-4367-9538-e3a0939cf0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40fd905a-3fef-47df-854e-ff4a8c38c656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b2848d-6406-4a0c-abdb-ffb1ef694b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50849da7-e323-4da8-87c5-abaa2d03db13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbeb153-c2d3-4010-8130-3e0dbaf5c990",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9f3b27-e495-4c56-a9e0-2ea06342a2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c819c82-bdb1-4073-b3b7-f1f77163b1dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e1fe28-ad53-422e-81a3-6cb08f394f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb146ca2-1197-4a2b-9097-e9d8a1506b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30cac7ec-56a0-4a39-862f-0816a259c7ea",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36eccacc-19f2-4e73-8bb6-09aaa315ad03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0bfc864-1de9-414c-a963-c228298859f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ccdbc1-a016-403b-86e8-a3ed0ca169ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a27e1450-e77a-4da7-9cf2-be8ec724369a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f3d685-b161-41e7-869b-22566f5039c3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7493e73-b649-4292-9232-59071a30f887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a8946fc-c341-4022-bf1a-dcb9cb750beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5ddc0a-91c4-486e-8328-94d434027d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "473733a5-2469-480e-9a88-594997311cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "605ecc8a-f8e9-42b6-9054-cac9de5caf6c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e30451-527b-4e14-85b5-6117f6b85c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "430cfa4e-67a2-475f-93b1-a8103b2e6855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3710ae-63da-43c1-b10d-53b1b0dacfd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fb0fd16-3972-4b60-ad0a-37e5279098d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525377f6-263c-4387-98de-b6c68c0c1cde",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "217d1fcb-5f0f-4f2c-a2c6-7b8c3f3d681a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "643136fd-824a-428f-bf77-f377bbef5934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69dd757-e940-4ca9-b2cd-3d4f4983ca37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af95a5b7-36ed-486a-8101-130eede885f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d68da03-5840-42f0-9c93-ee512cb3af64",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6026d0-5027-47a2-9b1d-d9daa5c478e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "057ee410-1373-423c-99c3-16bd8451e579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376e5555-741f-4b06-9ace-cb7ac42ae29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d8d56d7-9317-4b8b-bd1c-a733089c9b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a053226a-77a8-4316-becc-ccf30df96dac",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac87f29e-5fd2-451a-bb67-742432535e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c16a38bc-1da1-48b4-b0cb-b683273d05a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270a5e2e-8179-4c70-8a9c-ed5d6b72ae03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e9ca75-89df-43d9-8528-80fa2c234eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e222b6-0aab-4ac3-86d3-f5a642c12cc5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb95081-9ee2-4b91-b3cd-5e9383fbac5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0065bb01-b0f3-40b6-94d7-6007c7355ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80cc8b87-15bd-4835-bb38-fd8bb6f67e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c9ed32-d365-43df-8d37-8252b70d8ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c5506e-eb69-4307-816e-cd12715930cd",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6688ca1-3617-41be-9d5b-6ff50eed452c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a059c85a-3cac-41f1-80fa-e3a608920f6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d442e40-f01a-457b-9a00-4bbf221bbb1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12f3b739-e9ca-48cb-9f93-30b4a6b88942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc5f836-7a59-4360-a9d1-85fde53b00e8",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d78adf-2d3a-473d-8acf-071f6d20002c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0619120e-04ec-48e5-8319-9293bef8fa5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f2a9e6-58b6-4198-8f1f-f7f15cb96b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88e4b005-ed61-4138-91a9-de0f699098d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6bd251-97ea-43cb-a583-ffabd9f142bb",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "445812c5-cdc9-40b2-b3e5-060367b2a99a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a266f59-827f-465e-a891-f15ec7b46371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4311d2b5-599e-4b95-b95c-7042e12a7f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a0a8e29-f3a0-4189-b96d-f644e2addc2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe6a332-5548-44e8-ab9f-76b71272ab5d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7341dad0-ba0f-4a96-89bf-7ce5b0d970d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f865886a-2e26-4ac1-948b-66d321366655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ad6c10-74a0-497e-9157-8fcde6256ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73e65acd-fd91-4d85-991e-226d2e8dd068"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e3f7fa00-5b05-4cb3-a7c3-d15b70ad450b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0c2d0277-dc1c-45a3-9dfb-6ce6c471a041",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8bfe46-4036-441b-ac49-2ae9bfad8712",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "113bf1dc-ab5e-4ddf-9a67-217b83674ec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50edcb20-28ff-4161-a978-8f5385377892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a444006-4e8e-4286-a882-73ddbc38b33c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1fe1ce30-64fb-41da-a37a-381a8a639d1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11c9972b-66df-48cf-b14e-94d87d80febf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e193abe-e0e0-4c0b-bf52-7a7bdcb443f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "676b17d6-3ea4-47cf-820e-b1e29a511987"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4abcbc65-699a-4388-a3dd-4841ea060021",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d314272d-53b1-40b5-b052-167c37bddb0a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3348928e-e665-40a1-87ba-7117ee9d27c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ec33a67c-4284-4e56-947c-6446475bd6c7"
            }
          }
        ]
      },
      {
        "id": "06d50266-1570-4b5e-be30-350291329e88",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cddcc380-6e3d-4a28-94f3-b2b11b20d5aa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "31ba07f2-00eb-4165-9940-4689ba25534a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "edf266d7-af53-48d5-a9e0-035959f7277b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b9e3d6-89d8-4abd-8cdc-9236313ddfa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5187bcba-d322-4dbc-9d31-69041f1d25e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fce538e-6494-42de-9113-b6cd40c59818",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3e66ac-975d-4827-beb0-dfeb4586566e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cc36b04-1050-4b51-abc1-b4771c2d0e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1efab5-4546-4b90-a074-eb369b726f60",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe2fe60-a6ea-4dba-863d-8fd91b9bb877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "073cc624-bcaa-489f-8ef5-350f0fd871ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b11259-24bf-4303-a7bb-f9b002a8a87d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "284590bf-df2a-4bbe-8a11-7e8e2709a595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d4b72cb-022c-4f36-aa39-4198775a0624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457a66f6-ca33-4e1e-b47f-c23ca666fbd3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f13014d-8bae-41fb-88eb-0f18dcd967a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df0f521e-2329-4b16-bd1c-e02ba12da6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c140ef-fc17-4514-ad96-235fd9f143a5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc523b7-0acd-45bb-a1a3-35e4a5b88b42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f75882-0f86-4b72-a0c1-43a051d319d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad3f3fc-a5e9-4c62-963e-68d59100bcdf",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ee04e1-7ec6-4889-a9f3-190d9973641d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "054db7e3-3d07-4de8-83e3-f24e7fa19d51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c9c59d-b89b-4535-b367-1d3c9b79742a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea036a4c-f5df-48f3-bf23-393b7ceb515f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2d2634-7afd-4264-8d88-aaf44eb4cbce",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3f7e67-3153-48b3-b9f4-c1b78151fbb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eed7914e-9cde-4140-898d-ff5b2e5501be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd6d99a-e181-4e1d-b0e7-b4ccf0ebe3a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09960928-73d0-49f9-9ebf-b6b4015463b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a037866f-ff85-4ea8-a914-51f101af6eb9",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0a5d7a-d9ea-460e-8169-2ff218eb15e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f364a9ef-28a9-4bbd-816f-0fdbd8807310"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "508b1468-b011-4c2d-886f-90fed52e7922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b8db574-4730-4a7b-993e-b73605633a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f3234a-11d4-479b-a284-8c5a99d0db5d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e75970-592a-4ef9-8e96-29c81690551d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "801aedd0-1112-4082-8cd7-1b6ee6afb6e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64352bb7-4ac2-44a5-b0a6-4247d7aae23d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64be505b-199d-483d-a524-c45d6e584664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5dd04e-9dae-4ffa-ab6f-97aa20dc37b3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f9a10a-d278-4803-9145-33e2c59d5e55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ac9dea-efed-469d-9e3f-ea475c0861b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb1f0b6-8d60-48d7-8e7c-11dfa962e543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0697bdb-4b29-4152-ba63-ce60ee5f9caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62dbd69-4d13-4e8f-a458-b23d3595e982",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5cf6301-f0d3-4174-a7ae-85085692c59b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc05098-4fa5-40d9-8489-9c76f9708bf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c72a25-476f-4d71-b8bb-b5af26385674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6a10708-c7c7-44bd-82a5-f29a157b71dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c58e864-a4ca-4684-809a-f50a5379ff64",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "230fac94-bdb7-4293-bd6a-5f51b6870d0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "becad657-b571-4d93-9c9f-366d26615a2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b832efe3-7910-4f18-ac81-803b74a0fa43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beda0fe9-a33d-42fb-8884-3d21e1640cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13dfb25f-a640-454f-8619-c165a828d8d0",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f737060d-8712-42b1-abf1-35079ad0a8a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e0691c6-59a3-405b-ba4e-6822e407d72f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25eee1de-93cb-4a8e-a105-26da53f7fed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "979b5499-af1c-460c-828d-9825a31abf48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67777012-0190-427a-8081-f3cbefae465d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f61d7a-2d5e-427c-8646-d4a7cfab396b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7df3fe9a-ba45-4876-9ff3-03b8e48405b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77dbe5d-ef6b-4d3f-844f-aa0059fa9725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46e272f3-0549-4345-9b54-f841aed9ce25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c5197b-6db7-4dab-a020-1a007a7a1185",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "538f9bdc-5341-4c98-a14c-1d94adf8d847",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ec2b699-7a2d-486c-8ca5-c2c39cbe3dc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b81bf5f-1f33-42db-840b-343498fd3593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f665d57-994f-4171-8f13-eef1df82eba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83cb1e8c-4395-463b-a14b-5e64ed3fa753",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2da2c1-c8a7-469d-b448-9e22557eabff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a18c3591-8328-4366-863e-8f03fd010057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b083f0-8c69-497a-95a8-2521a9a96567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45fcb8ad-d27d-44ac-b563-78ba5cbe2b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63fbf47-d7a9-43ab-947e-f33c725626dc",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6f446a-ac53-4f9a-95b9-9eb6985fa5a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd2b7dc-4fde-4224-9033-e0c1dd3dbd74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b888355d-123b-4bd4-9eeb-d16468042c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c3268c-8a53-40b8-9379-ef3979632d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf900fa9-ca1a-4ebd-b4de-8f293e33ac25",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b9341a-02dc-40db-a456-b390534d446d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0326b89-603c-44b1-a493-1398a341eee0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b78a0b-cd3e-453b-9839-7335e31526bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1226cd94-bc3d-4da5-afe8-bb2ad73bc64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769a21f7-f16a-4b70-a1d1-e1b91081fc75",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "399235f2-d7c6-43e0-9cab-b7fb7966bd8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c258d6a9-1369-4479-b282-5cb611098221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ee0d00-0d45-46a1-b1ae-5836b188cfde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8268d5f1-d877-45df-87f7-154a94bba6b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e900b443-a933-474f-be55-0d1c9f993e01",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bda2ca4-446e-4c3a-ad86-5fbeecdb28a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9500cf7f-0085-41db-b2a1-57f9c87ba3f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a749368-e83a-4145-876f-3c7f71765d88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d723cd8d-dc98-4180-8a2b-0657d8e7c73d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fdc592f-0a58-47e5-85a2-7028937858e0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36be301-59f7-4da5-b847-5df85aa43bd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ffa7d22-8289-48f9-b577-3f1ed60f41e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "017d72e4-e4c2-47fb-9680-679df201410d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c508635b-e174-4727-b3ae-d3573f27684e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f20825d-291f-4bff-aa3f-e6510bbe232f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79cc6c02-39c1-4833-918b-b2d9b746cd7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b0e49a6-bdc7-4d7a-b03b-ed33fc71b462"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0149d367-9c91-4521-a4c2-36aa982cd1ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18e5767f-c898-49f7-a3f0-0c184b7b18eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adecb7c3-337b-4e51-ad08-7b962728e5bf",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf97232a-d503-4a37-8a65-95243f9f9082",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a06add82-4eaf-4548-9360-e0db7209be50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e957f6-bbca-48ee-a31e-e1608eea35cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc53a3d9-86fd-4ac3-8cf7-ef3580136da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31263494-c5b7-4dfa-bbd5-3bd1ed721886",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf49dfc-9669-4d92-b109-0c5a7915be0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "225eb44b-7361-479a-9365-c720f46a5a43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff62a99-e0a5-4e2b-9972-8fc7312c5b22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a534dd40-451d-4ab6-8c78-3a430a1597eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79bc4ba9-a5ed-442b-a470-16dc4ee3d55a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e7db30-2990-45b8-8f10-1a82085bfd8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2301ef78-6ef1-48d9-9a7c-19b8a0516021"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "352a6e14-38d7-4ccc-a7cb-308f7369a8ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1f75b3c-942c-4369-966d-3ff585b4dc3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac08a9be-532c-4b5b-a80c-4c05672f7739",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b17848-e458-477d-be08-596b7eb0b821",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce2121e4-d425-4893-bbe3-497d54e68cc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d4598f-a324-4e70-8dde-382a84e583b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f7f738b-c0e1-4d65-b95c-5268c6260336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f23dd68-2d93-400c-9548-4e832340e0fa",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccffe202-e656-45ce-9a84-65417ebcf586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "048a2c7b-f2d6-4820-a071-f1954c33aaeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a9e997-2c6a-442c-8190-93c88a825f80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b13f6e90-ad1a-4f28-9527-e26f5348424c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "674e4fe2-7e17-474d-9173-f948d8e60a55",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6209df0b-4092-42c9-8782-60f48f10b83f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "211bc05b-c792-476d-8fdd-2080a18ddc46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26c3963-416d-4abd-951c-a76e527cdff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7a1a0cc-a146-4ac3-a058-756ca6452ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e7474d-4a3b-4756-bbf6-fd744b48608e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc166b9a-8ea0-4970-a6c8-176c8f2fec95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dceb8819-c2e2-448f-916a-ac81fb3eb8d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2988d397-ed4e-450d-8909-b48169baa19e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32ad614f-a209-4311-b09d-bff72cbff98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccbed4b5-20d4-46df-85f6-117c900a106c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22cf171e-9527-46c8-be2b-6a2e1341fe4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d3e0254-3392-4023-8409-3fb52696533c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29866b15-f78d-4a95-9142-d4a259689336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f5eb88a-8765-4f1c-ad3c-ffdf3aeb514b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9cdad59-9fce-4d7f-973d-640138f1e7a1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5440f34-f5ac-44c7-8624-fae3685e835b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cee6f5c-1db8-4419-9a04-2c56854186d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec442b6-4508-4844-8888-97d2b31beffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39748222-bd49-4b00-a1f8-36a38ca5d0da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7e5464-8711-436d-9b60-9c29016760f0",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f836ac8f-e7ec-48f2-b197-bb9b9f6123c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fce1f75-a7cc-4ffc-96b7-14ecc62baca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef844bae-4f1e-4b0c-8f1b-3564e39b42c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea0d0014-883c-45a9-a68b-f2544a61f68f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38f5a85-2fb7-42cb-9338-89b1dce6d745",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1838f00a-faeb-4e13-9690-fb5639c81a07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e68a3d8-f243-4ef8-bb71-bd04ddb8932f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f01762bb-734f-4140-972e-4f0b0a37a8f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7815ee0-4956-491e-9604-599710493b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc0e18d-56c3-407a-ac21-02b9ca790c4e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156a10d2-86f6-428d-a07b-3e79f51dcc0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47b08c02-e5fa-487d-a22c-dd7ac6534a68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a66c29-8cd9-4475-b405-2e1332459d66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "355f84f7-cb6f-4149-92ae-70da1de2fb4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eea5527-7897-4a98-9ea6-358cb319634b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac7014b-a175-4672-8aba-70fb641fcfcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e796c36f-65fb-48a3-a8b7-52b418852535"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "064ea613-5c13-443f-bcf4-6b3a45e7a05f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa975b22-3901-4086-8d29-d145898ba181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1980b604-cc88-4323-9cf9-23fb58551153",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0f194e-200f-493b-ab33-66d1dbda1fb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a03ad504-1ebe-47f2-9abd-1b14996bfb73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd2ccb1-741f-477c-8c0f-ed9d87a929bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2704aced-f968-4692-ba05-e5455253d493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac7b362-7cf7-4312-86fd-204a66026153",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813cb273-bd7b-49bf-8232-b86a0bba06bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "063689b5-cdf1-4345-a1a7-abc59e744bf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "301a0741-a2c8-4996-9a35-a89d039688e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a37e29a4-99cf-4056-8789-cc275c122ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41bc91cc-3728-4c1d-8b6b-af8284d4f7a2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0510058e-bfac-464a-ada5-a4c4130663d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbea4bd6-d313-4e2f-a037-1fb979d30dde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3becb5dd-db53-41bc-b079-c8fa41db0e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26bcb262-8864-45b2-88af-8d3856037c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a0612d-8786-422d-9051-113de4f2f93d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce96fce1-638e-4543-825e-a2b6ba9217e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a7c9663-b1fe-4209-ae0e-7952b75c94f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40e1710-56c3-4319-bcc5-02dcf7fea3a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc5d74ff-3f49-48b5-ab2f-9b8da0ff4913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ffc6fef-e338-4cbe-a790-3782428de994",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e12517c-56e2-488c-ba4d-54acb40e3ffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ec93e00-d5f9-499c-89d2-5adcbe809b0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f586679-d893-4f39-9aba-231d79358ecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63984ce9-3457-45c7-8294-5f18b5f2ad31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df623b00-c7aa-40f2-9f8d-2d9292fc80c2",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2b9f77-57c6-4c2c-8064-c0a8489eb3c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc61f1a8-7b8f-4688-8eac-629cd7008335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d0a4f1-da9d-458c-a388-75d046665949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f2a2ef9-4f8a-4520-aeeb-74fd07494e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9c00cb-bea6-45f0-9dbe-a7f56ade0ffa",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "524f1c1b-828d-4e0f-bbdd-90c1d4beaefc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6636ee3b-9669-49cc-8127-8f3c60563b18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66291552-a97e-4a24-8367-afbc9a25f7bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c108349c-81d2-4373-983b-d1a4b87b3f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9f4f06-81ba-443f-9dbc-4f42c6fc0cb4",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281f47c1-f933-4770-baef-5e6c3090375f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d7532a-1921-485d-9740-2dc35eb89008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85097d2b-cd3e-4b93-bb0d-df81f3ef24c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37ddaec0-445a-4d6b-8cf2-c33ab9a29eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9ebc24-49c3-44e1-9d61-d9ea146447d8",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ff3166-578b-4322-82ce-d5a5ff6f4673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b1e3fdb-9853-4423-9ee2-456a7be05e50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ca2983-7a1f-4193-837d-51875882e583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "612d7e84-82d3-44f9-b78c-da7ff37015a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad2af62-a516-4f7e-8287-08fbbe8bef28",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76fa184c-8360-42ea-bec0-78db52684f8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc70c9ae-827b-49e8-b59b-e5f62fe3283d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c37a63b-642e-4232-8865-bfe116f71cdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "febb3ff7-6818-4a93-9fa0-52158df63713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d26a343-40dd-47a4-b51d-659d3321e156",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42f56fa-a97c-491d-b6d4-28d4784b1b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18350821-461e-47ae-9cd2-b7e5237375c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd78c71b-13e5-45bc-868d-8c7974f767de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be24b538-c70a-40ee-aa15-463e8619092b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708a3512-aa9b-44b4-8f02-d0f3fca7317b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf460fda-937a-4d7e-b488-335cd8b20cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f38d4ec1-457b-4dc8-916c-c3b504bf5a42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc7995a-111e-488c-922d-864a3ca0aab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c64fe3c-6123-466b-92c5-bea6f2d3d679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15375da-f2f7-4f65-8e16-13baafcc6f79",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dce170f-4d18-49e2-87e7-a2d3d6ac589b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1dcf074-8c23-4a54-b190-8d9a8b19b80e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb94256-5f5c-4363-8a23-9f12cf479a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2be89fad-5805-410c-8634-84c2241157fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d90e019-d0c0-437c-a58d-1f63e90bd406",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31af4e79-8b2b-4163-98fa-6ec689deb060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91eefa90-000a-4928-9cbd-1356af9c6057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff7a4d0-dc06-4313-9fca-a89e0d295edf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "744d8ebd-da3b-44aa-921f-5a6d0939ae01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e66f76-70a9-4268-95f3-35f64bd0835d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b524afcb-9993-4c08-94c4-a3e31e05c997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46290b44-9562-4a8e-ab23-5ac3f6eabe29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "513bdc21-654c-4f92-aae4-4221f0373b34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb24cb4-a627-4ba6-8596-f27612e22921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b658c6b-9405-4f2e-bbdd-4085980e937b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96d162c-77c8-4e78-ba84-448f344748e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26df2acb-6408-4e9b-ba80-ebf175847070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0edfe169-2bd8-4e35-96c9-5eb7707c587b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "636e5579-5e15-4303-9d37-99344d210b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3daf530-617a-4d55-98bb-20b78ea21d3d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e71885-7eae-430b-8747-bde729412860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "432933bf-dd2d-41a5-9b3d-c2a399a53cdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce1f89a-20f3-4203-a684-a8cc7e2febf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d912cde-fca5-4069-9cc5-482226983700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9208a8d8-926c-4668-9889-8097e7f948bd",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719dc3b5-b643-4cdb-9d70-906fbdb86075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "116206f4-19a0-4214-a460-c33c2eac8c5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8099f188-dbb5-4d23-998b-0950f5902435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4676ed36-e98f-404e-9086-7fbb136e5c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c99a83-e077-4a2a-8797-9aaf30954b89",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67aa77ce-c67d-4ed3-8ebe-6b48e14dd397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9df106e1-c0c5-4901-99b2-e0671668abce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d00fff-eab7-45e6-ac6f-9de72f13d0bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89d20d19-46b1-43b7-8c37-3a9d94a4808a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66cc073d-9e24-4884-a6e4-92e0eec7af9e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef4ebe9-abe5-4c63-89ad-5d57a3398518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a1ae2f6-fd7c-4934-940c-d314a69f8e21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2857ed5b-f7bc-4d6b-a6e2-743a40b7a970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d05e370-b7be-4769-8a9f-9b3152286549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881152ae-9756-42bb-8572-894692501ae4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086a4380-9c22-47b1-97ce-167eccd35e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fe7e05d-688b-4de8-8c9f-85e4d6708c78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70dd4c33-b188-4383-ad59-919814baf090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca8d4d43-c4f1-44ab-9dc2-5cd1877f8aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a104f10-1bcb-4b7a-88f8-f7b79f64e12e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56bc31ba-7f12-4db1-9c48-bba47f542212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "988ac465-a6af-40bc-8c6d-2c591d54e03c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e227643-9c0e-4964-8543-14cdfb9f872f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0c53b5d-abd4-4e7b-a22c-3cd6c5e33611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0244a211-7d46-4001-ba05-6acb83411eba",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b768db6-b791-4a47-82a9-b94016080b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa129475-edd9-420c-b36a-ec6e1c2c4305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b749074-4e04-406d-9fc9-80ea0d987897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0acdc76-a17b-4a7e-bb48-cbc647b8d44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62ffdd6-98f2-4615-a9dd-492a025caf6d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0459ef-bdec-435b-a1bb-865cdda5ece2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4caabbd9-7902-412d-8e31-ac4959c77b97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1f8837-8113-4cbe-9ffb-8d5314081ff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e601cae-eac7-463d-bf42-14d051f8b1b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd1ecfa-a7d2-4027-9718-4820c282cdf0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9e3325-26c5-4fa3-87f8-a9797887d124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf995ab-254a-4858-98e8-5b9249ff41e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9656f7a-7d32-48ca-8c74-97acb3d4ef7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b934038-c3f7-4fc7-ba04-f8732c1cbee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41b47aa-ca79-4c7d-9aaf-6a2d0db9ac67",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634e04c0-f85d-4c94-9825-805ef616a622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b3aa151-2f33-4e8c-8a5b-0183c71865c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e32bcb34-2237-4185-a9f5-b0aecc958da8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3f7fa70-5b13-4f3f-a8fa-35114a7bc981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea1b3220-e2f1-4cdf-9c71-26f572be16da",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fa3c5a-09cb-421a-90f9-05deee78865a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dbdaeb6-4ec1-4647-a44e-1fa9225d6332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54173eb7-ed8d-43dc-a936-b6ef839f240c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79520aee-0a34-4ffc-8751-ed17bf2c29c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99820eb5-a5b4-4db6-a5d6-15cedcb2f6b3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f07fbd38-119e-47c8-a362-d19762247e0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70550f6b-8fe3-4a48-b3f8-2d160d77e7c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3caef35c-93a7-4c9e-b513-4e1d607fa12d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecc90d02-e20a-4090-9fae-fc55bfdcb863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf69eb0f-9ecb-4b9f-8294-45e58391a4c6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd323fe-2199-4d4e-9a24-a033b5d09834",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dd22f33-2907-4a9a-a065-9e30ca9947fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5934ca-409c-4538-afb1-f73d52d9651d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e145d7c4-4b4d-4f5b-bd25-04b26cb3d00a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d61a4d-356e-4899-b315-1768c1a27ddf",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45de078e-f4fb-4893-ac20-74be89ef2b12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddefc175-699c-43fe-bfaa-bc05d0203245"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e55ab9c-4eea-4687-a4c4-5b007c5ddf92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27d8c3b2-9a65-4217-861e-c2fefd682206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7609cd13-6380-4bed-9f4e-d74458dacad1",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f6bdf0-b1fe-4046-8351-5cd4b25db882",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11f928ac-6889-4d30-8b5b-5cac90770572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ef6710-84be-49ce-b345-a219e51e6d33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7cf8559-55e8-4f88-a5a6-7edd422a6c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea53e44-1575-447c-b331-67a2d4d02e27",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040097d3-12c4-48cb-9484-f187ca6d76e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d916ca0-d8d1-400a-8398-e8edda1ded0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5df75a0-f7d2-4475-88bd-583a38cc5388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "525fb8e0-5e9d-4482-81f4-5bd4af6b504f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9830e211-2e2a-4963-8c58-abacd8415135",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014c220f-d7d0-4525-bd01-90c0bc6d97bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0eab1af3-9c08-4c97-81e0-e73cae489585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc60d40a-6678-45a8-a723-35d23801fa76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23d4b77f-fc2f-4c40-bf49-3943a59a8086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9056e7e-d72b-4ae1-83f6-34238eaa44dd",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3fc339-d729-4e18-9296-10c92282f353",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aac1c1a5-5025-4da3-bc70-33162cbf6614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48526a7-9b50-4469-a82f-444c3b1bdf9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f707f4f4-08a4-4e79-8292-445173449674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55ce95a-aee8-4ca0-94e2-5edbdfaf6555",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b88a15-011e-408a-9aa5-3efd2929b5f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba3eb157-9162-4ffe-9f84-11f7c2aa585d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c76fbdb-6707-4b0e-8b2f-316e0dc4e71d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dad42014-7b3e-47d5-aa97-66c0d4eaef37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ce5f3d-c692-41fe-a0e3-161c22549553",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05cd1e60-f723-410e-99e3-8a8f609319f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "862dfafb-acd4-45bf-bcc3-97ae4b3b411c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43086d80-2f0e-49d8-892b-14ef55932721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdece0c6-978c-4350-b355-20d8507197ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e5de12-accc-4220-8cdc-f34251ef40a1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e95869-4079-4207-ba74-50a7aabf38bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af5ec8fb-2fa1-437a-9038-7fb85e51ec8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f314f5-4528-4ac8-9999-285cc7796108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00ff09eb-328e-4d45-93a4-e3459df8aff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d77448bf-5fc1-4ecb-90b4-a928da197e3b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66951767-e510-46e8-bcd5-bc2834943438",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e8ee5f3-62b4-4f7a-9afa-1c0a7a193b9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03862a50-436f-4f3a-b818-a16562228a2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "280cd1c9-d6e4-41e9-b77e-d4c87b2e2cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d28ff19-099e-4771-a8c6-88b48384db05",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e6ab5a-9443-4b76-a80b-ccb2637f91ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbf85ffd-3593-42cd-b255-0d1acbeb41c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be41327-b3a6-495b-9bb5-cdf018dc97fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdbf323e-e798-422c-af57-84b4a0be42b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa24d847-9c58-490d-b0ac-28e55801bf36",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ac50ec-fad2-4a0b-a12b-673336e33af0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40e701d8-e141-4d6c-a92d-f54c5a4596db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e16ecc-a799-4151-985e-b3793a743180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a90991bb-330a-4074-ae4d-f091a537fbc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a377e1df-c907-4de7-85c2-fb123d443f70",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cccdfd58-e018-4e6e-ba76-cdf45349ee29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b19cda15-2076-4200-ae2f-1f610b69dc14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22bc4be-31c9-4868-a96f-809a25d2429a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2172d9ca-cf7c-4d2e-bcec-e6a4171b62bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309b211a-fabe-4650-9169-c2a3ca52dde3",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4fdd62-4034-4969-9158-f9454a572060",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "802add2d-70e6-4624-ab36-83952693170f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf9e59e4-d936-4a99-84f3-82c1933a8e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "470ff7df-89f2-4fc4-956e-76dde60de0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7132bd0-bb86-4134-a871-0ddf0e39cd9b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd514ff-e261-4d4b-af6f-36ddff1fe7d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ee6cfc3-c980-4ae3-9c59-d47740afdae6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "329052e0-777d-4a25-8c6c-d488d78d6fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c063e7a-34a0-4216-92c8-d0621b560c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d4e385-0fd1-4cf0-b16c-1e9fda8257bc",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a276f91-1acb-45bf-9e67-62aa650f58c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7de59188-fa0a-45dd-981b-b2dc4ae3e48a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0529ee-c3d5-42cc-8b31-b22b2ade576c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bd747ee-c4c6-4e40-b679-b99903e69649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ade94b-4359-45cf-8b07-ca0748cf8f9c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930dcd7e-8295-44d2-85d0-0d5215b7fb53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86a67991-2952-42c4-9cdd-2ddf35455069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3885300a-3724-460b-a479-8b42baa2a2ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "243558f7-7503-4431-8730-70f32f730c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bcd4977-c5d5-47dc-98f3-c5a5d9881b0a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "809edf8b-3365-41b6-9ccf-6fecd12aeca3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27175bd2-9bcf-43f3-8035-6473a6882b0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6694720e-7210-4124-9a46-0f106103aaf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4855168d-265a-4f06-82a6-8e8075e79551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ef0f67-3b7c-4a13-bbb8-81998a5f1a19",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa31d986-96f6-4a11-9201-8dd7ecfacfff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52a63e6e-359f-48ac-a54f-24efadcb94b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3b4141-ef03-424f-9a7a-f431bd276dbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a12ae35-e913-4c03-a9f8-c7c841f502b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065c207e-e0e4-4f7a-af46-f7a97c1b44a9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d4a3fe-f020-439d-a127-e5f6734be056",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75e68637-1c4e-4ab5-9f8c-3b06b992ccb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "735ee45d-8275-491e-8c36-d028fb770e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfaf0c0b-020d-4e3e-b9b4-1acff479c529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c99b6a9-2b00-4b26-945a-005bfe14e872",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b1c30d-1b89-4317-97ca-3e0d359ace0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "885bcc52-53f3-4218-ac65-c93179f1e97b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f3b951-5502-454b-9951-a4c5f3e731a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18bc2ffe-7029-4d4f-9d84-fa26754e1103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6784be2-2952-4b37-9e70-88abaf332d22",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7425e6e-2998-450f-8479-03ab771e3634",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc859e4e-1597-49c6-b7bb-eb60e2fe97a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b5720f-b39e-4697-bf86-b0d56108acf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4670b0b-9bd7-4ab1-92ab-5362b71abc4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c973e0-a045-41d3-b898-d4a430bb5fd1",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1028fb-0740-4f2c-8569-28dca4f456f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a0931bd-f4b6-4e55-b3e8-f33eb2f72fa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f472c71-d003-4641-9344-542955b1dee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5785118-fdf9-4ed4-b097-2a295347f186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd9a12a-5ce6-4309-954c-65832ab2d45c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c18a61b-542d-4292-802e-92f26dc57320",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97e7f680-8549-44b1-bc2d-4c25817a492f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75018d14-fa12-4451-b6a3-7e8387eeaa99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12eead4e-1743-4e48-8d90-a0cfc70a5476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "876db692-9d06-400d-977b-5f09cf57d92f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab25fa67-d29b-4a52-b883-612dcf4250ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97e30a67-a641-417a-9331-d40c8f1482bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4ca594-aa53-489f-a36d-ad40aad9deb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64aa4ef7-3d1f-4c8b-90c4-8c16a68c39f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5af865b-e754-44de-af13-ef1aad7316df",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fecba5-4bdf-4cab-933b-00ec98298910",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a38b261-7ccd-4522-93ae-5c326e6c4cd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a47ec1-bb75-4ee4-a217-367a11898398",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "193aee83-01a3-4b40-b253-da2cf540a305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a67e5e-1be3-4f43-ac39-5b8cece219c9",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce877a5-9e2b-4c4c-a824-e02324bb9dec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3c321ce-58f0-456f-ae77-6a9c9bbe1276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "346eebe2-7b75-4d53-b6a9-1936b4c2cbfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "865c277c-a48e-4cc7-81a2-b0d54f138fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d505a2-8701-48fa-b68c-1e26190e652c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d82acf-be9c-4d94-952f-082c9e6f1ba4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68cb66b3-73fc-44aa-9219-a2c6cfaa1c84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0fb546-50ef-4254-a9c6-36cf05422d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3f3a6a3-0d00-4fb0-9545-b6d53e5543f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3debc36-a0b8-479e-91e4-13b065ddcf3f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053d3f50-f4d5-4dd7-88b4-54e8b299c4f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c34440a-70fe-4a30-82b2-5dbf7ec31c76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d46b34-22ef-4b40-a034-b0e4eae82a26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe120bd3-78cc-4131-a2b1-ba456faa94dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b6018e-50ca-4c1f-8a79-87c6979cace7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ee2d86-e8cc-42ea-b27f-895800a997cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "315bb0b7-43a4-4a27-add4-ccc1413578f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a720b9-be28-48c6-8098-c80778dd4160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dbb62a0-af60-49f7-950b-d4b9b6716d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff8a2d2-e769-4fab-acd9-4ed14ab15674",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1535c47-5e2e-4bca-9755-dcf598bc05f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b5c0b24-8f47-45fd-9b9e-c7ad19b486b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4738ab8a-7cee-45d2-a009-3a855b15812f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec2e2840-d744-4fb3-916e-95b6853d4d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ef4a27-c4c1-4cec-a149-9d7d79ecf2b7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45495d23-af29-4e99-8baa-3e168afb5529",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "176ef56d-387c-405b-813e-5494579effba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21980a5-facb-45a7-862f-51d20923e9ea",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12ff154c-2bb1-4d5f-ae83-29a51df16c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be42e733-24c3-456a-8896-f18f60231995",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c7c1f1-c28d-4cd5-83c5-12b7c2c4c2ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5e4c032-b6e8-4840-979a-ff8b681c7383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d4b418-e0fd-4f05-81f0-42c48512d2ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9542566-2140-4a52-852f-04c47b7b7e3d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1605ad1d-864f-4789-9af4-6886fcb6420b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a81c22a5-99fa-4e7e-a41e-9255600cbad7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a74b2e97-d2d4-4ef8-8ff5-7e8a159ae8e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c652a56-873d-466d-8892-796dce8a819f"
                    }
                  }
                ]
              },
              {
                "id": "632e31ea-926b-4a6d-8fef-75c0c3e3e593",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3934da04-d70b-4910-8272-969e78cca508",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7bc8f2-9d9a-4e37-9937-dcbc9ec24898",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a9257c5f-876b-4646-8692-452f62c922df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88cad3cd-8fc6-40e3-8a0f-2b618d3ee86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ec400c9-db3e-45ae-bcf9-8c37368f1bad"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "acdb3585-2837-4e81-8a5e-2579376df991",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28b56a32-7b5b-4ad1-bbfa-9ae5510997d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f896f2e-cfb1-44ad-9571-74cb0f0a3fcb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bef6cb1a-8a92-4a6c-a0b7-3541e2a7d9b1"
                    }
                  }
                ]
              },
              {
                "id": "a50651f5-e888-43ce-8ec4-2e6d0b7357cb",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e7ba0597-6b0d-4978-b9f3-2320bb4927c8",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d73e57-5ff3-49d7-8b3a-c1b947bace85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "00ad37c2-6503-46bd-90b8-c4945ca73906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7e947f-a34e-43f1-bcce-483144a7fe83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c7acbfc-51d9-4a5e-80f3-24b134c6a34c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "69fbc415-9a03-4486-8d96-e5f2fcce5ee3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3d0ed545-eb53-452c-b136-c74f39674177",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad960269-ce08-4a0c-85ae-cebe91b799dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "40390d11-a367-4e44-8613-47856ef7dea3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "350c96bb-2cc9-41b7-88ef-92bad02f5ab0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "140ebd68-4817-4090-bc52-a73a40b75021"
                    }
                  }
                ]
              },
              {
                "id": "7064f424-936e-4d81-8934-78309220117c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1057884-0577-4668-9a7b-70d02db15d7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fb28d3ee-fcc5-4b12-a71c-58bd9cdeb34c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d26016d-ddef-4439-86ae-591c32a4c978",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba9cfaf4-a00f-4f76-a25e-0480324e2a00"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "566850e3-1b80-4096-bf84-5a91f3e5c357",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9bf746e8-5ac0-4bab-b490-f714776f1a9e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59631499-d2b1-450d-8c10-a970d0eac5d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "248b1e50-be38-448f-ae34-c1dfad2afd06"
            }
          }
        ]
      },
      {
        "id": "949cd564-8c88-44c0-b7f1-593f20c11f8f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d27e836a-fedb-490e-b672-1efaa596d6c1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c5543165-43f4-4692-bbbb-314c2aa59c93",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "be3213e9-d470-4354-bd5a-a9ca73e443a5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d068d36-4908-4e96-9275-f165614136e7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1764172d-c684-4269-877c-c9c30e009d77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6ec846-2bb3-4022-9f1c-4915990f224d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c68004ab-46a1-4320-86f7-02a34fa5199b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b13f1731-5ac7-4e7b-b1e5-b91c1276f25c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28eaebff-c1d2-4bc7-b299-50c34112101f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "44c1ebb5-8ca5-49f5-ac16-e89592f61caf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2553e1ff-aed1-428d-afa5-3846424dbe7c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6fcfa585-4f01-4d7e-8dac-efb5b9313054",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "74e28627-e40d-407a-b190-e3a52a0d0091"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "efaee164-ff44-47d3-b901-339915ffdf6c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cac04ce5-e3c6-42a4-aa1a-8512347b1f50"
            }
          }
        ]
      },
      {
        "id": "195ca0ee-ee77-44d4-9655-1b2e45d96b96",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2d3cd43c-33f4-4e20-b92e-110f7a4353ab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6f5261e6-4faa-495a-a164-22bad6995b2d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5995e3be-988f-436e-867a-40cecac3c3c8",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbec0401-ad1a-4f4f-9044-a86c3d7494b2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7c8bc45-a12f-4d04-84e0-ca22d3170c83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cedabefc-7c21-42bc-9e9f-d479d85429c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9678000f-22e4-4233-9637-9625fdd882f8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f639553-32c7-4833-b149-cb0ad913aa35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45fb0b42-814a-45b0-bb44-33529cf11b29"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7154e5c4-d8ba-488f-9389-329d5719ba3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8cd39064-aa31-4ef2-8caa-fa6f3c40f0e2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d478f90-e466-478e-92be-e658baf54f19",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1d0c2a05-a8e4-45a6-a592-67fbe535f414"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81552bb7-1742-4644-b080-271e2749f8d1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bdc7d342-af55-4caa-a0aa-ebab2edbec5a"
            }
          }
        ]
      },
      {
        "id": "acf23b4b-e333-454d-9c61-06172aaff577",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8d4b10bc-f080-427d-8217-1ca3d1c0cfe0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "48c7a5ae-f627-4c2a-a514-117d8c6e0679",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "63fa7a78-dc9d-4d83-95b1-325ac6635140",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4887f9ea-cdbc-4d2d-a81f-4590583babf2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23366cc8-f6df-4a3c-a01a-3a6fe5d9d531"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf1727e-0331-4620-91af-d9c625d7ea2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "27087798-49db-4254-863c-54e799a926cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf4a237f-fc93-4f94-acd0-19f6607e0f3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "293145af-eb90-4823-aa90-a7410f22c192"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3fd9f564-e8a9-40b9-9566-95b58faacfa8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c3ce707-5067-46ad-b162-ae566d348d2e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b32356b5-2387-4556-abcb-5253eecd6946",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b2afdc6e-be14-4545-bbed-4f455bf8bab8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b58c2b6d-c2be-444f-80e9-6f445d007693",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e55e109-e0e8-4d23-9c89-3034ccf300f5"
            }
          }
        ]
      },
      {
        "id": "f0dab49e-7c7e-42d0-b957-e21b16cbf467",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc8e2a5d-cbb9-4d2b-b0d1-e82f377427e1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b014276a-2032-46e5-a2bc-92e72e72cdc9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "758a3f3f-41b5-4795-ad47-8e9868a228e5",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bff2d389-fc83-4859-8f95-648cc970145d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d60c111-c1ca-4d77-b2f2-02fe3b971d53",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 421.0873015873013,
      "responseMin": 10,
      "responseMax": 11984,
      "responseSd": 1784.613585936349,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724373635000,
      "completed": 1724373749871
    },
    "executions": [
      {
        "id": "8a3c0efe-2b99-4fd9-b68e-964861e4b664",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a450209c-cb6d-4fae-b5af-2e95f7eeb6c3",
          "httpRequestId": "1b8e0155-4db3-46a3-9072-b6b08819a287"
        },
        "item": {
          "id": "8a3c0efe-2b99-4fd9-b68e-964861e4b664",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f1af2c9b-1f08-4675-81de-3f52894d51c2",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 0
        }
      },
      {
        "id": "eac784bd-ecb0-4d00-bf3c-f7b0ba1e9b57",
        "cursor": {
          "ref": "8c351c9a-7741-4404-ae4d-45d73971ab91",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6dad78d3-6030-47de-a2e0-f1df58e2209a"
        },
        "item": {
          "id": "eac784bd-ecb0-4d00-bf3c-f7b0ba1e9b57",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "050b78f8-e25c-4218-b30a-493a16e50d2b",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "5f8960bd-f164-42cd-861b-c453b93a54f8",
        "cursor": {
          "ref": "73cae4ee-1292-4376-9847-b430d16c12d1",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3acae45f-3da3-49dd-a1ff-db0cd2726e08"
        },
        "item": {
          "id": "5f8960bd-f164-42cd-861b-c453b93a54f8",
          "name": "did_json"
        },
        "response": {
          "id": "b9d975b2-e897-4f1a-9683-8e45ed025d99",
          "status": "OK",
          "code": 200,
          "responseTime": 319,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9d99e4-9fe5-40d0-8d53-9c92719f6f72",
        "cursor": {
          "ref": "1d25e7a3-327c-4c5d-9f5f-f1d48a385b0b",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ab71cf80-7d67-4882-9f92-cc8841a9ba82"
        },
        "item": {
          "id": "ab9d99e4-9fe5-40d0-8d53-9c92719f6f72",
          "name": "did:invalid"
        },
        "response": {
          "id": "7e630bb7-8c0e-45d7-a1dd-39d3fb43ce89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2003,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9d99e4-9fe5-40d0-8d53-9c92719f6f72",
        "cursor": {
          "ref": "1d25e7a3-327c-4c5d-9f5f-f1d48a385b0b",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ab71cf80-7d67-4882-9f92-cc8841a9ba82"
        },
        "item": {
          "id": "ab9d99e4-9fe5-40d0-8d53-9c92719f6f72",
          "name": "did:invalid"
        },
        "response": {
          "id": "7e630bb7-8c0e-45d7-a1dd-39d3fb43ce89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2003,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906163a5-71bc-4f24-806e-6489c554f77e",
        "cursor": {
          "ref": "55c8d630-b45f-4029-be30-2503ee03c9cd",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "175f15bc-28dd-40e4-9ec1-c2802db96a3e"
        },
        "item": {
          "id": "906163a5-71bc-4f24-806e-6489c554f77e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e8b72e62-1070-4006-a121-d35116866eee",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2365,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef44ffdb-b5ad-4c83-9df1-e9a1e03b652a",
        "cursor": {
          "ref": "9e37c4b4-2bf6-45c7-8eea-79c6c85a1b7f",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ce4c945d-eafa-49bb-a67d-e375143d6766"
        },
        "item": {
          "id": "ef44ffdb-b5ad-4c83-9df1-e9a1e03b652a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "77eb94ef-74a8-4741-b661-c1ac1531f9a5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2152,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3d1719-5ee5-475d-8757-5085093a0376",
        "cursor": {
          "ref": "28d26c1d-250e-457a-8569-2b6a565d12ac",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "93f39637-1c3b-4ce7-9f53-15b14daf0ed0"
        },
        "item": {
          "id": "6b3d1719-5ee5-475d-8757-5085093a0376",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9e8876bd-efbc-4566-8592-417c88b44be0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb96331-2c63-403f-8a33-5a87dcd32a1a",
        "cursor": {
          "ref": "7c5e3342-9204-4325-a960-3230a37f8aca",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f6f341a7-d8ac-4b54-bcc8-653464487bb9"
        },
        "item": {
          "id": "6cb96331-2c63-403f-8a33-5a87dcd32a1a",
          "name": "identifiers"
        },
        "response": {
          "id": "4c22f239-1a4b-4067-8194-d600c5a1b2f5",
          "status": "OK",
          "code": 200,
          "responseTime": 2382,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b29bdf-afe0-45a1-aa6e-45a26be35438",
        "cursor": {
          "ref": "114f2705-9236-4d47-9dda-15d27405da9e",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8c35f97f-423f-4f79-b1bd-1082f70dcabd"
        },
        "item": {
          "id": "33b29bdf-afe0-45a1-aa6e-45a26be35438",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "86adc2d3-f77c-4509-b053-272b4d3d04bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5a25c7-b9d3-4a4b-bfb7-7e9ca16ee276",
        "cursor": {
          "ref": "d5251830-9f72-4e2a-b88a-5e444cf72719",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6ccf250f-9c67-47d9-9331-8f4b820a8666"
        },
        "item": {
          "id": "8b5a25c7-b9d3-4a4b-bfb7-7e9ca16ee276",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "77ffb02e-8d41-4d48-98bf-f180c8357d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd93fc1-6423-436e-861c-2bff390cb6c5",
        "cursor": {
          "ref": "f064751e-f248-45c2-b634-938981c6b793",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "30c82022-c606-4bec-8ff4-250889732ea8"
        },
        "item": {
          "id": "2bd93fc1-6423-436e-861c-2bff390cb6c5",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a38a820e-7563-4197-ab87-cf91ec199421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b2c8c0-7dea-4e41-8f07-08b911ca5537",
        "cursor": {
          "ref": "dd7089cb-0c09-46c2-889b-1584a13f466a",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "78bf2e5b-1c0c-4da9-be3b-fb1195a3898c"
        },
        "item": {
          "id": "d2b2c8c0-7dea-4e41-8f07-08b911ca5537",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f5bc020d-2696-42d4-988b-4cadc526f89e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c3aa2c-99f0-4fd0-9a83-a7c3ad4d7900",
        "cursor": {
          "ref": "8acd0190-6a61-4dc5-95a7-4db02cc580a3",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "eea10237-c3da-4a46-b7bd-eaed225b47b6"
        },
        "item": {
          "id": "78c3aa2c-99f0-4fd0-9a83-a7c3ad4d7900",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "40f0d6e9-3b17-4879-a699-1acda83cbd93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82dc96fe-784c-4cdb-9cc9-a1d6c62c1975",
        "cursor": {
          "ref": "dd3559d9-c7d9-4890-a67e-2200a93876ec",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4b95394f-dc98-41b4-b1c9-56875becbe96"
        },
        "item": {
          "id": "82dc96fe-784c-4cdb-9cc9-a1d6c62c1975",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "210b0bab-ab13-43e2-8a0f-f8cd9277a97d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "985ef0b6-5a8a-484f-a40d-dca53ada8de4",
        "cursor": {
          "ref": "f2638295-0a30-42f0-8fe5-06fb24a12e3b",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "488320bb-106e-4540-ba95-2f64c3202a93"
        },
        "item": {
          "id": "985ef0b6-5a8a-484f-a40d-dca53ada8de4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2dabe874-30f6-4183-a38c-1b8823acd794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf65d6b-c611-4ef8-96cb-64c831cd5e91",
        "cursor": {
          "ref": "dcdeab72-ab7f-41f3-93eb-55f3c622284d",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "acf11d62-fbbb-4d2a-854f-86b25586fa0a"
        },
        "item": {
          "id": "baf65d6b-c611-4ef8-96cb-64c831cd5e91",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5ba672b7-cbd2-435b-bd77-3242f6869d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb76f0d-beca-4939-83b4-5fee92f25ba4",
        "cursor": {
          "ref": "11ff5f19-a84b-4dc2-9438-136c92b9541a",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6c5986fe-c009-4633-b49e-e47bd4ce0d3d"
        },
        "item": {
          "id": "1cb76f0d-beca-4939-83b4-5fee92f25ba4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "645f4ae6-f82d-4625-a886-454b2cdd7763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b408161-3752-4aa5-9691-674af917dd09",
        "cursor": {
          "ref": "c3a1291a-b487-40da-b2c9-26dd3fea2f64",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9bf2900d-655e-4120-a2e1-22ae76bb1403"
        },
        "item": {
          "id": "5b408161-3752-4aa5-9691-674af917dd09",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b4eef484-1765-4794-839b-55631b5d9a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9591465e-c858-47b8-a1db-f30f74a43d60",
        "cursor": {
          "ref": "2a113e6d-8dd6-4465-8fb0-f44c60834538",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0646e533-840b-44fa-bc17-e2589faa8648"
        },
        "item": {
          "id": "9591465e-c858-47b8-a1db-f30f74a43d60",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "21fee397-c54f-46b2-9723-a42cec10321a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b525f3b5-c665-4915-b82b-8d7f2f25fda7",
        "cursor": {
          "ref": "ce3b89d7-f5ac-4e33-b6c0-035ce814ecc2",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "777bd2bb-cf5d-4712-a58b-f3a0c44c239f"
        },
        "item": {
          "id": "b525f3b5-c665-4915-b82b-8d7f2f25fda7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7534e8ee-e8e5-4dcb-8a51-d687634e09e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15300feb-2a73-4cd0-85e8-5e8b06770b24",
        "cursor": {
          "ref": "5ade0de5-9823-407c-ba74-2072fb00c283",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b81573a7-89b0-40de-b73b-f9812ec02cf4"
        },
        "item": {
          "id": "15300feb-2a73-4cd0-85e8-5e8b06770b24",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ef2b1498-dff7-4847-95d9-565e427b56da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376101c6-8c39-4698-bab1-2ce05f0f65c3",
        "cursor": {
          "ref": "c09c8537-830a-4536-9ac7-ae5a406cd422",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c6cdb5d8-2020-4fed-a6c2-3088505f03be"
        },
        "item": {
          "id": "376101c6-8c39-4698-bab1-2ce05f0f65c3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "861eb79d-1565-4e5f-92c9-0c622b035853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77b3dd8-d5e7-4278-8178-f70aa6e72879",
        "cursor": {
          "ref": "24fba1b5-898a-4188-83bd-6e85a1f0dc8e",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "207a2b1c-7b0f-46e0-adb8-c3dc476fea4f"
        },
        "item": {
          "id": "d77b3dd8-d5e7-4278-8178-f70aa6e72879",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e3c79bdd-f991-4640-bf5b-45058311e3bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5cb468-57c1-4013-bd8e-c52d98cc23d9",
        "cursor": {
          "ref": "79cf6d5b-b460-444a-b4f6-09035c92ec4a",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "822a79af-72ef-4b16-abc6-8fcfd7e922b2"
        },
        "item": {
          "id": "8a5cb468-57c1-4013-bd8e-c52d98cc23d9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1c90c547-3ba7-43b2-a872-763b15908d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7fbd82d-c251-48b7-aec9-4c47de09e41b",
        "cursor": {
          "ref": "87deaa88-0f00-4f6c-bdc3-f47d24c9d939",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f0065088-fc24-46e7-a0b2-73e26e83f18f"
        },
        "item": {
          "id": "a7fbd82d-c251-48b7-aec9-4c47de09e41b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b9df9402-bb52-47cd-874d-ff61d979d670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736b97d7-3133-4a50-a1d5-002e58afee85",
        "cursor": {
          "ref": "968c46b1-8c82-456a-a043-57d9bb5c6c04",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "96ca52d2-436e-4aa8-b1fa-fac8eea2722c"
        },
        "item": {
          "id": "736b97d7-3133-4a50-a1d5-002e58afee85",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1cf9b358-24b9-42a4-bb48-ef3084f52a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af34705-b4a9-4699-83b6-42f29ac66747",
        "cursor": {
          "ref": "3b38fa19-fa41-4af4-8a78-2e961d1657c4",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8d8808c0-a297-4161-99d0-07eba9fefa8e"
        },
        "item": {
          "id": "1af34705-b4a9-4699-83b6-42f29ac66747",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a889ee11-86b1-4179-a139-7eeb06dad706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f247ccc-84c7-42a8-8e80-a49063920adb",
        "cursor": {
          "ref": "7380d311-6a07-471f-881c-8f26cd3f00e1",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "90762a8a-1267-4e41-9e73-80b5c2cc7a0c"
        },
        "item": {
          "id": "4f247ccc-84c7-42a8-8e80-a49063920adb",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f472f656-ac67-4037-901d-71940d7a2c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88504d5c-f8c3-41a1-b3b9-eee4d5467efb",
        "cursor": {
          "ref": "341b46e9-3867-4d18-ad25-74b9b2853c6d",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ae0d551c-4d22-4081-ae84-c2dadfa22e04"
        },
        "item": {
          "id": "88504d5c-f8c3-41a1-b3b9-eee4d5467efb",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "63b18153-ff63-40e5-8798-30c9e99d21b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481204ca-b4b3-4932-b6f3-481e7590b060",
        "cursor": {
          "ref": "5ed820ab-e3a0-4b60-b916-3a37fae84291",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f9296160-c4d4-4a93-b55f-99db16463d5c"
        },
        "item": {
          "id": "481204ca-b4b3-4932-b6f3-481e7590b060",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3ad451df-32e9-4edc-b10a-60bb6f9f3d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed4c958-226f-46c8-a651-60d4153b6f15",
        "cursor": {
          "ref": "47ca8f4e-cf00-4c62-b2ae-de4434cd4566",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "825e0053-2887-4d58-aeef-37ad0f663eb0"
        },
        "item": {
          "id": "8ed4c958-226f-46c8-a651-60d4153b6f15",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "66a1be99-19cd-45c9-9bd1-0add06cbf273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789521c6-78db-4be2-b65d-32df2d2ea9e4",
        "cursor": {
          "ref": "bb7e08ca-907e-4d20-bc90-ab2e679fa477",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f682fdd0-008a-4e86-a042-dbdc67a9a5d7"
        },
        "item": {
          "id": "789521c6-78db-4be2-b65d-32df2d2ea9e4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a827d07a-5525-4f01-8f15-dc38e81e166e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ecd6c7e-af46-4889-86e2-f57f94b20cc9",
        "cursor": {
          "ref": "6e472ae3-2540-4ff2-ba8e-e814d4d0323a",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2b9b2bf8-0ff0-4513-a5cf-622c9c27dd22"
        },
        "item": {
          "id": "5ecd6c7e-af46-4889-86e2-f57f94b20cc9",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8a5e0e86-ec10-4856-8092-d38834188ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b49ce2-6b80-4901-af60-663a2aa8e86f",
        "cursor": {
          "ref": "3bbe450e-b8f7-4f8b-8a8e-66c02e8b3f30",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "53d007e3-d112-421a-bb53-4027eb8e2529"
        },
        "item": {
          "id": "a6b49ce2-6b80-4901-af60-663a2aa8e86f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6577a56b-2de7-4a90-a686-7f9cad023ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4826837c-65bb-49b0-a248-a9ebfd0105f7",
        "cursor": {
          "ref": "557033af-a8ec-4323-8755-005484d012c4",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "133e658d-b887-4440-bd43-89a3a872fc63"
        },
        "item": {
          "id": "4826837c-65bb-49b0-a248-a9ebfd0105f7",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f360b8e5-a7e8-497a-af62-3e4fdeae9250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f701b9-005e-4450-b1a6-97a2bab3761a",
        "cursor": {
          "ref": "a91253c0-4b0a-4dcc-a9ea-537d9d8d65c1",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "db8862dd-19c2-496b-a07c-6db375471e09"
        },
        "item": {
          "id": "a9f701b9-005e-4450-b1a6-97a2bab3761a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8f87ccf0-9978-4b55-b444-50888907ffae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb921fb9-3539-40c2-bc25-1dd926713cc7",
        "cursor": {
          "ref": "85421825-1678-438f-871f-8a993fffaad2",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6c8a1b82-5d6f-422e-b4d2-089773852c00"
        },
        "item": {
          "id": "fb921fb9-3539-40c2-bc25-1dd926713cc7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2268a7ba-2b36-4ff4-b90f-6e519f8d23f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd33f75-3c14-46f7-927f-006f4efd227a",
        "cursor": {
          "ref": "61353250-dc58-47e4-9a04-5e0dd9db6128",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "708a5bf6-ba47-4422-a5e7-471d1360de62"
        },
        "item": {
          "id": "ccd33f75-3c14-46f7-927f-006f4efd227a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "076e4454-8765-4115-aa57-8b8f105cf2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e6a67c-e4da-4939-b8b0-a6dfe0b72628",
        "cursor": {
          "ref": "bbfe096f-4697-426a-a8b2-97c7312bdd9b",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9a6f1229-43c1-4069-8723-394d37cbb6d7"
        },
        "item": {
          "id": "75e6a67c-e4da-4939-b8b0-a6dfe0b72628",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "79355125-04b3-4205-8b11-c519635229cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f21f52b-4cb0-48d8-8e18-3aca74542e99",
        "cursor": {
          "ref": "b9e9d193-bcdd-4c2c-be2a-34dbec3c6767",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9edb0ff9-ded0-4385-a67b-edcd8fe6b71b"
        },
        "item": {
          "id": "4f21f52b-4cb0-48d8-8e18-3aca74542e99",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "218a7461-f230-46ce-8551-01e2ec07e4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f322373b-37e0-44a9-821e-6009f0cea225",
        "cursor": {
          "ref": "96d4cb63-a158-4aea-90f1-d58ba10ad270",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "41e557d7-0827-4acd-8fd5-26b70d8b3834"
        },
        "item": {
          "id": "f322373b-37e0-44a9-821e-6009f0cea225",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ade3bcb1-e29b-4395-93ec-072c82e1ee98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe940684-7b7b-4885-9006-bb405bfddf7d",
        "cursor": {
          "ref": "491cf788-a058-4b39-b04c-c96466954a8e",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "89f24614-bd0b-4c79-bf98-a9786fb1bd84"
        },
        "item": {
          "id": "fe940684-7b7b-4885-9006-bb405bfddf7d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a29ea8e0-e504-4067-8fcf-79f5cbba820c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73164c23-4a82-40d0-8102-3cfd65787073",
        "cursor": {
          "ref": "e3550e3f-839a-4ee2-b49e-83b1a6966154",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fe75afe0-a0eb-426c-b722-c5d798995fc3"
        },
        "item": {
          "id": "73164c23-4a82-40d0-8102-3cfd65787073",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "255d8755-4cdf-4fe4-87a9-aae31055d07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81650ca-81e8-499c-9a6b-8c21762dc2df",
        "cursor": {
          "ref": "b6644048-ea39-41e0-b741-ad5791f4ca0f",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e4b1ccbd-29d6-4e8f-ab45-99bf3476dea0"
        },
        "item": {
          "id": "a81650ca-81e8-499c-9a6b-8c21762dc2df",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8669ed0d-a097-4923-b1d6-03fb030ebbf0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31b3d7e-b760-4877-865e-e89868d854de",
        "cursor": {
          "ref": "2e273c60-4c85-4f31-a4ed-be503cf3156f",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b3580a94-546c-4639-94df-56ec7292251a"
        },
        "item": {
          "id": "f31b3d7e-b760-4877-865e-e89868d854de",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "118d073b-d032-4f44-834b-f2eb25bc63ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87c6e7f-6d66-430e-bfe7-2baad5c38cb2",
        "cursor": {
          "ref": "64aa9ce9-3b60-4631-894f-33faada0a1e3",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "02412ba2-f5fa-4f79-b3a7-83546d6c6fa8"
        },
        "item": {
          "id": "f87c6e7f-6d66-430e-bfe7-2baad5c38cb2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "37e9e4a0-2e95-4fbd-8c50-19b0074c0b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7853163-5fd9-4ff7-85ef-ed8dde94a931",
        "cursor": {
          "ref": "bc1c96d6-d6f8-4fdc-9c4c-a4620e1a12b3",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "25951f3b-a426-40ba-817d-1cd8e9505fef"
        },
        "item": {
          "id": "b7853163-5fd9-4ff7-85ef-ed8dde94a931",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "bb8673f3-9f2b-4709-a10a-6366f55a9f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b04dae-6142-4796-b2f1-f4a1e9536ed4",
        "cursor": {
          "ref": "ac2f5624-8ed7-483e-9462-07c1393e325f",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "bf7a6948-233c-4a72-a8c7-92d16a99b260"
        },
        "item": {
          "id": "b8b04dae-6142-4796-b2f1-f4a1e9536ed4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "cb246bd0-94a2-4e98-aeb3-0cd92f05c622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e0a166a-d9c0-402b-b911-89ff51254178",
        "cursor": {
          "ref": "5689a665-5057-4ca9-9f69-d59e837f9fd6",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9f120c38-a12c-4dda-94aa-00369f79642e"
        },
        "item": {
          "id": "5e0a166a-d9c0-402b-b911-89ff51254178",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "da83af60-f4e0-424f-8560-1412ed7ab669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d966246-8c51-4f4b-97ad-ff478bc67d8c",
        "cursor": {
          "ref": "0dd88995-81c2-41b0-96f7-85d2b2b3e1b5",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "bc1bd6e5-e980-4aa2-b6ad-98ab8884eb9b"
        },
        "item": {
          "id": "9d966246-8c51-4f4b-97ad-ff478bc67d8c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0dd584d0-291e-4793-9a08-0f6912da4336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8c1630-d36c-47f3-a35c-11638f5ed16d",
        "cursor": {
          "ref": "407bcbd3-c3b3-4d18-91b4-36802e9c6637",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "83831fe8-8c75-46bd-91ec-e997e51c97d8"
        },
        "item": {
          "id": "ff8c1630-d36c-47f3-a35c-11638f5ed16d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3d4ea42a-686c-43fa-a1fc-286edc1e1a2f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c288727f-8828-4d9c-844c-7d0395f37594",
        "cursor": {
          "ref": "aed6f521-8685-4c70-bfe9-7ddced30bd55",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "930a1955-ded5-45b4-aee4-12136702e91f"
        },
        "item": {
          "id": "c288727f-8828-4d9c-844c-7d0395f37594",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0e8b1647-1710-4872-bc09-59ed9745fe00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b0f97b-b312-4927-ba1c-163e35f0e35b",
        "cursor": {
          "ref": "4c060564-fb3b-4db1-922d-371d793c8515",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "20b9c70b-d8fc-45c6-a9c2-c7feeac455d6"
        },
        "item": {
          "id": "12b0f97b-b312-4927-ba1c-163e35f0e35b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ff8c8cf9-c9c1-42b9-8548-8666d5ccd37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a16f9d-b615-4744-a43d-c8fe92ef12d4",
        "cursor": {
          "ref": "aa0ed6cd-97ba-40b0-bcb4-aa13ed248c37",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2a588224-27fa-4d0a-bd59-687f24fc7717"
        },
        "item": {
          "id": "08a16f9d-b615-4744-a43d-c8fe92ef12d4",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e9bdd030-60f4-4c4c-a8f4-1f08196ec408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0b3ba2-6251-45d7-923e-4f32aa31cc40",
        "cursor": {
          "ref": "347cdc89-b2cc-4643-b9ba-f99b037c5ee2",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c648d473-5ed1-42c6-83f8-284f5abb1924"
        },
        "item": {
          "id": "6e0b3ba2-6251-45d7-923e-4f32aa31cc40",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "bd9f987d-6b3b-46c0-a029-b2423141b436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65d25d6-4ebb-4c2a-889b-35fb987b1668",
        "cursor": {
          "ref": "c6d8f516-6cb5-4ad0-ad5d-c87675c36bb8",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e78a51a2-61d8-41a7-8eb0-d22fcc8ae6d8"
        },
        "item": {
          "id": "f65d25d6-4ebb-4c2a-889b-35fb987b1668",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "18b00d74-d516-4668-a3c0-a0f01a7633a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8c68d9-8c1b-45d0-b285-e00b0b9f2ee6",
        "cursor": {
          "ref": "04e679be-6025-4fe9-b595-84362c0645df",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "878d1337-8480-490c-a24f-14fd4b8cc062"
        },
        "item": {
          "id": "3d8c68d9-8c1b-45d0-b285-e00b0b9f2ee6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3ba1565f-3c9b-40c4-932d-85a853a6f978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfe5b79-83d8-4317-a47b-ba322834b394",
        "cursor": {
          "ref": "7be3b2a4-94be-41d6-931c-ddbb087afe60",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ecedc3b2-255f-4407-bdbb-453bfdf0302b"
        },
        "item": {
          "id": "dcfe5b79-83d8-4317-a47b-ba322834b394",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9c034465-35a2-4442-a8b0-b931f08b3cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed03f3b-75e8-42ac-9b74-29ed0b1bea61",
        "cursor": {
          "ref": "49cbc423-0fe3-4a64-b10a-50592ba50c59",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b327280a-dc7a-456d-91f5-ef26d986c899"
        },
        "item": {
          "id": "1ed03f3b-75e8-42ac-9b74-29ed0b1bea61",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a51cdf45-e95c-4f76-b042-cf90dad800dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df46994-6cf3-4fec-a2d3-03117570b177",
        "cursor": {
          "ref": "3bf860ae-c88b-40ff-b5dd-4ab0a3f3cf1c",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f174699e-9f57-4fae-898c-e90d36352dba"
        },
        "item": {
          "id": "9df46994-6cf3-4fec-a2d3-03117570b177",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "26da13a2-6dc5-4632-8c75-384c9164b575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19808020-ae1d-4f34-8acd-925a82437ea8",
        "cursor": {
          "ref": "387ed7a4-5b70-41f9-9aeb-630c481e5588",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b2a8bd09-16e3-4ab9-8c20-8ece30e94026"
        },
        "item": {
          "id": "19808020-ae1d-4f34-8acd-925a82437ea8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "de877dd6-9e13-4343-8e69-84e56174e40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e450f6-54f4-4ac2-a2a5-1e39076aa5a8",
        "cursor": {
          "ref": "0b1fd542-e569-457b-9ae4-1ef169cacac8",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "207ab1a0-d810-435e-941e-fe6df2166639"
        },
        "item": {
          "id": "a0e450f6-54f4-4ac2-a2a5-1e39076aa5a8",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b5d5f12d-6bee-4087-8785-d4e630a00800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6933a873-f6bf-473c-bfef-53bacf861588",
        "cursor": {
          "ref": "cb2b8e34-725e-462b-8749-68b5ba9a2be3",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2ad2775b-1db5-43fb-81ae-2b0d7ee06ccc"
        },
        "item": {
          "id": "6933a873-f6bf-473c-bfef-53bacf861588",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "27519d97-1f35-4896-9c01-3316e200fc76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ee8166-98c4-4bda-a6cd-35d7b1dfaf67",
        "cursor": {
          "ref": "379ec727-b28b-4568-b799-ab4c56f04651",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d0fb76e9-2048-4305-b9c4-e49902259e0b"
        },
        "item": {
          "id": "f7ee8166-98c4-4bda-a6cd-35d7b1dfaf67",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2131b462-a052-448d-8c4d-d95eed2c9941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc259c7-ede0-496d-84e2-dacce1615320",
        "cursor": {
          "ref": "2fb4a480-05a2-4e13-b684-b422c2411c92",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1b698802-5291-425f-b6ad-bb009d894d7b"
        },
        "item": {
          "id": "2fc259c7-ede0-496d-84e2-dacce1615320",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "780621fd-6086-4342-8fd4-dc34f6bb1950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1822544-12ad-4f6e-9bee-3e1dc3abb66f",
        "cursor": {
          "ref": "4ac897b4-17b1-4019-9712-554a2af10e60",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "04a7b6ee-3bd6-4924-9694-8369550551d1"
        },
        "item": {
          "id": "d1822544-12ad-4f6e-9bee-3e1dc3abb66f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e61e4653-7b29-450b-945c-e888bb43a85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945a1e61-2cb0-4789-8da4-006408b16585",
        "cursor": {
          "ref": "96e425b9-d73c-4634-b637-a735f2f27994",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ef569633-ae10-4d57-a04d-17a405e73242"
        },
        "item": {
          "id": "945a1e61-2cb0-4789-8da4-006408b16585",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e49a113f-236c-4910-b7e2-e859a0d19ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb158bb-a877-496b-b0d3-73db44ba467d",
        "cursor": {
          "ref": "340d12f7-6bc9-4329-8ab8-9e4cf71b8503",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "775d7d0f-3368-4854-b284-5ee102fcf0b8"
        },
        "item": {
          "id": "eeb158bb-a877-496b-b0d3-73db44ba467d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "552f1fed-d6fd-4577-8dbd-adbab1bc5071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1daf9b99-1897-4a60-a05d-bf9d7ba957ba",
        "cursor": {
          "ref": "8b920071-14ab-414a-953b-9c1b45345a43",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "13c68383-d61a-496c-af2c-fdba837b8fa1"
        },
        "item": {
          "id": "1daf9b99-1897-4a60-a05d-bf9d7ba957ba",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2c17f5bf-4bf2-4864-91fd-8a6ea6541efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbe29b0-1629-4fcd-aaa3-b6f79222b00e",
        "cursor": {
          "ref": "fcf0904a-d597-4a07-bdd6-e9a97a206932",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4f3eb120-4ccb-4e94-8df5-d574cd58024b"
        },
        "item": {
          "id": "2dbe29b0-1629-4fcd-aaa3-b6f79222b00e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c2b20bcf-dd3a-4b07-b9dc-d6fd26ab8f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e1fb62-876a-4d48-9c60-fb75c7f2dd9a",
        "cursor": {
          "ref": "f767db23-d1d3-4440-a5ba-c78de9d8d3ab",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "bcc53775-aa7f-4019-8d9c-81e3fa696a01"
        },
        "item": {
          "id": "f0e1fb62-876a-4d48-9c60-fb75c7f2dd9a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "58d9e9fc-fb51-445d-a85c-052e98e928aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d45fe54-87c5-4c93-a81e-739fafe27ec3",
        "cursor": {
          "ref": "5352e12c-e399-415b-a56e-3fc29744d0d8",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "65f06cfe-8d74-4776-a045-81e06bcf1b5b"
        },
        "item": {
          "id": "6d45fe54-87c5-4c93-a81e-739fafe27ec3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a74f720f-97b5-49e7-a6b1-f45fd2b9fc64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b85a67-4c47-45cc-99a1-1b708d661f40",
        "cursor": {
          "ref": "f7bc3f2f-303a-4601-97d1-7b1ccd28ad15",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a4e254a8-ac3c-46e8-ae29-4f4e2c36e4ae"
        },
        "item": {
          "id": "49b85a67-4c47-45cc-99a1-1b708d661f40",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f7fa6b86-2a0b-4765-99fa-7043d84089b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddcd53d9-3f9d-43fb-8690-394c82e867cd",
        "cursor": {
          "ref": "96596196-1158-472f-9422-f7f211727285",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3b24f780-5678-445f-ac10-69852da02771"
        },
        "item": {
          "id": "ddcd53d9-3f9d-43fb-8690-394c82e867cd",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "bb265d56-5c08-4757-b15b-7cf90e9a2aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb6478c-cf7d-4027-b3e7-3e91e416cfcd",
        "cursor": {
          "ref": "ebb99e8d-571e-43f5-be10-968111b13bb9",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b3e132f5-0cc7-434d-8bbc-8c768bf326eb"
        },
        "item": {
          "id": "beb6478c-cf7d-4027-b3e7-3e91e416cfcd",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b3422466-c7f5-4eeb-9f3a-f38079e3a1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36db06c5-fe1a-47c1-a09f-5160d912a256",
        "cursor": {
          "ref": "b8981c54-ebdc-44e7-b0a0-20940dd2f1c9",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "eb182227-b51c-454c-8f86-4a9b93c9fbf1"
        },
        "item": {
          "id": "36db06c5-fe1a-47c1-a09f-5160d912a256",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "44484943-0fea-430d-8344-f02431d714b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd89964c-8477-44bc-af24-5e67f7b6f91c",
        "cursor": {
          "ref": "da34e9e1-9716-41ce-a6ff-282f2df17013",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2df82c3f-6f03-49c1-9aaa-512c2dc25fcb"
        },
        "item": {
          "id": "dd89964c-8477-44bc-af24-5e67f7b6f91c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ccee1275-184f-4c66-891c-c2535d17dbe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2220e6df-81ec-49f2-81b9-5d619b90054b",
        "cursor": {
          "ref": "1f3c672b-0177-4bd0-846d-54945739fcfd",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "81dc9178-9fd5-4417-816a-3b8362e8d8f0"
        },
        "item": {
          "id": "2220e6df-81ec-49f2-81b9-5d619b90054b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d4abc63e-477c-4359-bc9c-aecffa3f5bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea925a3e-9708-4bd6-a3ab-b6aea29e8256",
        "cursor": {
          "ref": "4435588e-7b6c-463d-8e00-0cd6b1a3e85c",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d929ac1c-8b4b-43ca-bd1c-afdac2a7fb0f"
        },
        "item": {
          "id": "ea925a3e-9708-4bd6-a3ab-b6aea29e8256",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9600f035-bad4-4773-bbbf-59d163eacd9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029b5709-b2ff-45ea-8b32-7d3f07bcda63",
        "cursor": {
          "ref": "187ef70d-2d49-421d-81eb-0e0d4c371ca3",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "baee0618-7bf5-499d-9af1-ff8d6fb68c52"
        },
        "item": {
          "id": "029b5709-b2ff-45ea-8b32-7d3f07bcda63",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "4c7b82b9-0524-4f44-8940-5fed5055dfc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5075f0-4441-470d-b0eb-5157a781c8b3",
        "cursor": {
          "ref": "3f357b0a-1065-480d-9b37-219132367581",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b6f7a9e1-dfae-48c0-8338-5e74fa3cd615"
        },
        "item": {
          "id": "fc5075f0-4441-470d-b0eb-5157a781c8b3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ae8aee4f-7685-4f93-8bdf-d1ef24d4f91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8bc058-2580-4fe5-b7ce-a4abbcecd3ab",
        "cursor": {
          "ref": "a0c60a2e-75be-4d50-b91d-708de9b48f90",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d4a597ec-96c9-4f2e-8308-ab7ef4aa3410"
        },
        "item": {
          "id": "ae8bc058-2580-4fe5-b7ce-a4abbcecd3ab",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "bcc39365-89c6-4726-8fb1-fee392ee32c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1826b68c-cecc-4033-a86c-4c13c1f4c39d",
        "cursor": {
          "ref": "5f014bbb-9c2b-4048-8605-408d953678a8",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8bd12fa2-c340-4042-96de-731b0e3201c2"
        },
        "item": {
          "id": "1826b68c-cecc-4033-a86c-4c13c1f4c39d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5fcb591b-4557-4521-9d1f-69892f0f1763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe8f56d-81cf-41c7-8825-26d3b07bbf8d",
        "cursor": {
          "ref": "16a65326-d2a4-4684-999d-9ba3ae9f3392",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4c713bb6-8a81-47fd-847e-fe87b0b17cc8"
        },
        "item": {
          "id": "bfe8f56d-81cf-41c7-8825-26d3b07bbf8d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "05fadb55-d94a-41f8-8c48-b8c74b92172e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff36771-91b7-45ad-83d4-2e0c28b72a2b",
        "cursor": {
          "ref": "17d383c5-a232-4268-af0b-23816cc8e962",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e13458b1-e6f1-4830-8318-d4d3d1324b78"
        },
        "item": {
          "id": "bff36771-91b7-45ad-83d4-2e0c28b72a2b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "98b5aa61-71a3-4b3a-a6ed-7e5f1239be54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5562f8f-d3b1-4bb4-a651-59bc4777e75c",
        "cursor": {
          "ref": "00e81456-ce9c-4088-8dc6-83a506ecdd9a",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "79f5b643-bfa6-4775-b92f-b4aa9e61aba9"
        },
        "item": {
          "id": "b5562f8f-d3b1-4bb4-a651-59bc4777e75c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4fdf2893-c71c-44fd-951d-826b9c8efed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c0f40e-479b-4e2c-a371-22ae2324b788",
        "cursor": {
          "ref": "b22ee6c0-77c0-4117-b2e1-f59d7e778a60",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1d2ef44a-c16d-41f9-9515-2bcc1738ca86"
        },
        "item": {
          "id": "87c0f40e-479b-4e2c-a371-22ae2324b788",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4f78cf72-fc32-42fc-9f20-e67fc0965bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d640f6-af26-43c9-8cbf-518821163808",
        "cursor": {
          "ref": "dd7ed7e3-c661-4ac8-b433-ed90358f95ba",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9cafb90c-b3a2-4398-b2f7-0df86be7d27d"
        },
        "item": {
          "id": "13d640f6-af26-43c9-8cbf-518821163808",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "440a9ef5-79f2-49df-a54b-37448b254b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963c4481-a0e0-402d-bd7f-49a4b5c74e0e",
        "cursor": {
          "ref": "4379c2ff-e4cb-4406-83e8-db67612855ca",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "707d5cb0-de18-477e-b03c-8149433a81ca"
        },
        "item": {
          "id": "963c4481-a0e0-402d-bd7f-49a4b5c74e0e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "cdb91709-cc38-42d8-b549-c6fcf6421048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a68f4a3-ed76-4be2-8d4d-1cfcf7237870",
        "cursor": {
          "ref": "32190391-ab03-4c5c-a052-b5fe95fca538",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4be793d6-58c6-47ed-b6f6-daec7336b2fc"
        },
        "item": {
          "id": "7a68f4a3-ed76-4be2-8d4d-1cfcf7237870",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a89956c1-5a1d-4444-b99f-4b98c0bbded6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d2fba7-b97f-4c9a-bcd2-39714a927f4d",
        "cursor": {
          "ref": "281a87c5-2f3d-435d-a8ac-68b6424eedcb",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a39d2ef8-c66c-4933-803f-4b22656cba79"
        },
        "item": {
          "id": "90d2fba7-b97f-4c9a-bcd2-39714a927f4d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8c5d6416-2e71-449e-8ab5-3bddfed34b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a0df94-b13b-47ef-859e-f975c43d8cf9",
        "cursor": {
          "ref": "6e8f3002-8785-4229-8cdd-f8e7858c79ea",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5403b5cf-1db3-4a6c-ab80-36f576b47996"
        },
        "item": {
          "id": "90a0df94-b13b-47ef-859e-f975c43d8cf9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3e69f623-43dd-4131-887e-6d8d3bcaa51a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64286860-6b67-41b5-a1f1-3e955c4ba45e",
        "cursor": {
          "ref": "cab41ac1-aea5-4f53-ba16-06ac5d948300",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "30acd8eb-7940-439d-b65a-44bea10d0982"
        },
        "item": {
          "id": "64286860-6b67-41b5-a1f1-3e955c4ba45e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "79dba556-206c-46e9-bd2a-be15d322751c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834f387b-e356-41a3-b940-d62aa3ff700b",
        "cursor": {
          "ref": "068813ea-9ae2-4246-897a-6924ca5c6be8",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "49bb6c17-b257-48a3-88ea-348fa587c4da"
        },
        "item": {
          "id": "834f387b-e356-41a3-b940-d62aa3ff700b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "cced64d2-c15e-4433-9e57-36cdfb0b032f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5095f033-42bb-4542-a9f8-6789e939b619",
        "cursor": {
          "ref": "0f261f5e-c868-43b4-96b5-ad7d46b318bf",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9bed31f2-5629-45ca-a463-48971e64bd87"
        },
        "item": {
          "id": "5095f033-42bb-4542-a9f8-6789e939b619",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b64ea303-3d83-46a9-9112-29120181badf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb7d91a-7779-423b-86e0-21d196a861ae",
        "cursor": {
          "ref": "f0768c3c-3677-4343-89f3-f42fd098c28f",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9f38af10-9c30-44fc-a9cd-86284128d93e"
        },
        "item": {
          "id": "7cb7d91a-7779-423b-86e0-21d196a861ae",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e06dfa40-986d-42d3-a494-bb110a1d8f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ba271a-2af0-4181-bec6-46917941f2cb",
        "cursor": {
          "ref": "3fb726a0-08c0-4516-bc91-660e2a18ce58",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "551ce8de-e050-4bac-96b2-210c22053efe"
        },
        "item": {
          "id": "91ba271a-2af0-4181-bec6-46917941f2cb",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1ba9de17-0b24-4250-9402-36fbbfc0c51a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3217253-14c7-4a9d-8d04-115ef22a8a48",
        "cursor": {
          "ref": "3925a5ba-5e93-457b-b924-c9187cff9c31",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e2148ab2-9eb9-409f-a6fa-000cc706f96a"
        },
        "item": {
          "id": "a3217253-14c7-4a9d-8d04-115ef22a8a48",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d95d4971-9008-4669-bc5e-2ca796bad4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4ecb45-dcf2-4852-bfa8-f888ac013036",
        "cursor": {
          "ref": "ffca5fa0-31fa-48cd-ab91-0f8c4d26f005",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3a093e04-aa53-43b5-9ad5-9c32e9aee4be"
        },
        "item": {
          "id": "1e4ecb45-dcf2-4852-bfa8-f888ac013036",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6ea82d1e-75d3-4a12-b545-e3578f97cbba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b625804-78f2-4f77-a79b-9365ed27b888",
        "cursor": {
          "ref": "af74cebe-4036-44fd-82d0-53d47dae21d8",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f97c53cd-d061-49b5-8195-ab95671ed1c8"
        },
        "item": {
          "id": "5b625804-78f2-4f77-a79b-9365ed27b888",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8558303c-79ab-4f58-957a-181cc1cd7495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f85941-842b-4cd2-8316-5eff8d7cd083",
        "cursor": {
          "ref": "b6569764-41fb-4351-bc83-1e769d596f72",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d10c17a3-1842-4fe6-91c3-61e8908fa8f3"
        },
        "item": {
          "id": "c9f85941-842b-4cd2-8316-5eff8d7cd083",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "29d57fc9-2e55-4c8d-b943-18b66877f643",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a467bb07-e347-4a8b-8eff-9cf7d56abe34",
        "cursor": {
          "ref": "6abc75c0-9805-4328-8c5d-2e4c2ec34362",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3eae21d6-716b-4571-b6c6-21fc0bd3e332"
        },
        "item": {
          "id": "a467bb07-e347-4a8b-8eff-9cf7d56abe34",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "57ade2e2-5053-4c3b-b349-f3035d3bd2fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "83631962-4ef9-4303-8d00-2cc2550ef22f",
        "cursor": {
          "ref": "66d10744-eebf-49d4-b32c-945e4f13469e",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "5b4d6fbd-9a0a-43ab-896e-57b07dac411e"
        },
        "item": {
          "id": "83631962-4ef9-4303-8d00-2cc2550ef22f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "cce3d4c1-fced-406c-a825-1c99faf38fc9",
          "status": "Created",
          "code": 201,
          "responseTime": 11984,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5df59c-264a-492c-be09-fdf05fd47948",
        "cursor": {
          "ref": "164240c9-0ef2-483c-b04e-65a6e4e59f76",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c9e29148-f36f-4848-8509-af099e2d9eda"
        },
        "item": {
          "id": "cc5df59c-264a-492c-be09-fdf05fd47948",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c0bf5080-3d58-4c0f-959c-33d30e2450bd",
          "status": "Created",
          "code": 201,
          "responseTime": 11454,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa47cb82-0835-4a14-b818-79d486a28553",
        "cursor": {
          "ref": "b4050bca-02e8-41be-b6c8-4b8448a04135",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "0a612a2e-cc9c-4b86-95e9-cf27ca04aa7a"
        },
        "item": {
          "id": "aa47cb82-0835-4a14-b818-79d486a28553",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e40cc91c-714a-4885-a9d8-685088c66c68",
          "status": "Created",
          "code": 201,
          "responseTime": 11037,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66558f2-5297-480e-890b-adcba94da3b7",
        "cursor": {
          "ref": "ac20280b-ac9c-455e-9352-ae89558a1b41",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "16981562-dbe7-4d50-af15-b6d9a9cd1d90"
        },
        "item": {
          "id": "a66558f2-5297-480e-890b-adcba94da3b7",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "cf62a708-626c-4191-b95b-f4586f566cdf",
          "status": "Created",
          "code": 201,
          "responseTime": 11433,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c22ff2d-bf03-4203-9273-dcab88bd53b0",
        "cursor": {
          "ref": "14bff348-5373-4250-923b-61a6c24902e4",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b354e93a-c4c6-44a4-b008-4f9ec17c96b8"
        },
        "item": {
          "id": "6c22ff2d-bf03-4203-9273-dcab88bd53b0",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9548680e-6778-4ddf-9d5f-fd2694b03a0a",
          "status": "Created",
          "code": 201,
          "responseTime": 11689,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-08-23T00:41:53Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-08-23T00:41:53Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "4cd25e6d-955a-4e57-8e67-57135b261d12",
        "cursor": {
          "ref": "837aef1d-d542-461a-b726-11076f9a687c",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "454c1c03-e164-4316-b0b4-deb23533b45f"
        },
        "item": {
          "id": "4cd25e6d-955a-4e57-8e67-57135b261d12",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "69a57a18-db85-422a-997b-021ba334fa2c",
          "status": "Created",
          "code": 201,
          "responseTime": 11626,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a84040-9927-474a-80c2-06b2d789a303",
        "cursor": {
          "ref": "a1bf7c55-d267-42e8-b178-b51755067cb7",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ef692de4-2c8a-443c-bf8a-f95fc9440735"
        },
        "item": {
          "id": "58a84040-9927-474a-80c2-06b2d789a303",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7e0b410e-6720-4f50-be59-03cd265bb707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0ce0a5-d468-4e3e-94fe-42a62033921e",
        "cursor": {
          "ref": "de209ccc-0c63-4bad-aebb-c78603367b79",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d23b8af2-5aab-40f7-8279-ed08159f49aa"
        },
        "item": {
          "id": "fa0ce0a5-d468-4e3e-94fe-42a62033921e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "39c4272f-c8c6-4d55-9259-fe6e012731f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2869f0-3f13-443e-bcb2-75243dea8e84",
        "cursor": {
          "ref": "3c2afa40-183d-494b-a0b1-9f341304a695",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e37f36e9-91b2-4b57-a4b4-58baadc10134"
        },
        "item": {
          "id": "4f2869f0-3f13-443e-bcb2-75243dea8e84",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "796173c9-5c56-445b-b754-8b3a8082afd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2983125-32b7-4d19-9e35-61e9848a7c11",
        "cursor": {
          "ref": "c8cbcba2-ecde-4386-b650-8c8db40a3bf3",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "cf66e8fc-9370-43dd-b696-fc65c6e16855"
        },
        "item": {
          "id": "f2983125-32b7-4d19-9e35-61e9848a7c11",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e42ecbe0-8528-4d51-bf54-7a03306692e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48bae680-2cda-4078-87e3-ab7041ffe25e",
        "cursor": {
          "ref": "fe866bd5-8a43-4ca8-928e-3546e6a65e7e",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "54478762-55d9-4022-bfc9-a105b9452db2"
        },
        "item": {
          "id": "48bae680-2cda-4078-87e3-ab7041ffe25e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "19974379-f41c-41b8-90cf-b786065d1ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3441948-2534-43e3-b9fc-dd7e1278f9ee",
        "cursor": {
          "ref": "2d81cf77-8218-447f-a0ee-96330058ca6e",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4e3fe082-901a-4366-b035-11b55bae720a"
        },
        "item": {
          "id": "c3441948-2534-43e3-b9fc-dd7e1278f9ee",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "80721ff3-94fd-438f-8164-b3e624ad1160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4b0ce5-24c7-4f8a-bb1d-44f47ce6d24d",
        "cursor": {
          "ref": "f847fe9e-5c26-4edb-9fb8-e9414facea78",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a89ec29e-49d1-4667-8a4c-84ea78c6a402"
        },
        "item": {
          "id": "ec4b0ce5-24c7-4f8a-bb1d-44f47ce6d24d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "613a02fc-68bd-4b7e-a8c2-0d3310cffd30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143218f2-7500-4995-b669-b54551a18d04",
        "cursor": {
          "ref": "7f9c7694-6303-4b73-a93f-93bfea3a25af",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7e4d2797-db49-4926-be8d-f6ed2a540273"
        },
        "item": {
          "id": "143218f2-7500-4995-b669-b54551a18d04",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "da0223d4-d383-443c-9bb2-61228924af73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098b1a11-f55e-4efe-909f-e1127391263a",
        "cursor": {
          "ref": "f7e3c7a7-6d4c-41ae-9cc7-6825523a7682",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6f453b2e-1da8-4b2e-839f-8f912715529a"
        },
        "item": {
          "id": "098b1a11-f55e-4efe-909f-e1127391263a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7f3ba993-dcdd-4979-8572-e6fdd5571aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb776cc4-22e9-4017-b132-ea7f670e54dc",
        "cursor": {
          "ref": "e9190437-ac29-49aa-bf3c-4913d7810366",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2ca5e1d6-6032-4775-b181-7655bf506f20"
        },
        "item": {
          "id": "bb776cc4-22e9-4017-b132-ea7f670e54dc",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8b4fd997-04fb-4676-bb2c-57149897eb25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844f2fbd-c6f2-4353-84b5-dd97fe933640",
        "cursor": {
          "ref": "b8cdbfbe-d54c-4edd-a523-0540aa656773",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d7b1a4fe-6d6f-4292-b9bb-30d6418b39cb"
        },
        "item": {
          "id": "844f2fbd-c6f2-4353-84b5-dd97fe933640",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "10ba1208-e49a-40b7-8ae6-22ff5e553231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f35fdc-02a0-4908-9957-01061011faf5",
        "cursor": {
          "ref": "c09f2716-ccfb-4267-bdc9-2f8ce181c7d9",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "db63a5ce-11f3-4b80-9880-51c02c36d282"
        },
        "item": {
          "id": "94f35fdc-02a0-4908-9957-01061011faf5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "77b3c6cb-5cfa-49af-939e-20a28a0d38d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b86844-5f2c-41a5-b1ba-d6f9bea9b7f3",
        "cursor": {
          "ref": "0b2135bc-3be9-4bb2-9252-c4a182c4f08e",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "be6011d9-6be5-40ed-9afe-5d246072017d"
        },
        "item": {
          "id": "d2b86844-5f2c-41a5-b1ba-d6f9bea9b7f3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "02fd07ef-e5eb-4844-8800-269f65061e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6971af-583c-4a8a-8b7e-467bf9f77218",
        "cursor": {
          "ref": "244be7b5-790d-48ae-abef-a8ced7e6e4a1",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "45d5d4e6-7152-4555-9731-3afb933d03a8"
        },
        "item": {
          "id": "cf6971af-583c-4a8a-8b7e-467bf9f77218",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7b265d1d-cdeb-481a-865b-36b496977543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfab687b-a22d-4bf0-9857-915cc86583ba",
        "cursor": {
          "ref": "4cf51f39-1b16-4064-a7db-f159b7aeb99b",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4bc815ee-ec7b-46d3-b42a-13342db35c6f"
        },
        "item": {
          "id": "dfab687b-a22d-4bf0-9857-915cc86583ba",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "015218e9-04b4-43f8-bcae-d0febbb0de45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12db36b-7225-4b12-860b-bbd6b9943238",
        "cursor": {
          "ref": "1c87e716-8d94-4878-a988-206d20b37362",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "35b831de-36b8-4b22-92b2-bd58542a3614"
        },
        "item": {
          "id": "d12db36b-7225-4b12-860b-bbd6b9943238",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "916abb7c-4c58-4330-a799-63005ef296c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a9c311d-46aa-4083-a2f8-2e5ca6ac94b0",
        "cursor": {
          "ref": "5453071a-cf13-4c85-8879-b6fdaabfd94c",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3748f0a1-5726-4394-8354-b2ed1f362e85"
        },
        "item": {
          "id": "1a9c311d-46aa-4083-a2f8-2e5ca6ac94b0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "dbfffa81-1fc7-41fa-ac14-a51b62a4647d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995b1fab-5d88-45f1-948f-7ef78168eb05",
        "cursor": {
          "ref": "a87414e4-9455-4c15-a6b0-492346d1bc90",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "de182c4f-05dc-4e00-94f5-97b5e74275cf"
        },
        "item": {
          "id": "995b1fab-5d88-45f1-948f-7ef78168eb05",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "98ca4fd1-97d2-4807-8101-1b0cb2e184eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9591a041-2f64-4b68-a96f-8cb3db204d7d",
        "cursor": {
          "ref": "7ec93d82-e5f5-4000-8b02-05713e468800",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "eaa83d0c-aa05-4a8f-9987-c296aa0bb21b"
        },
        "item": {
          "id": "9591a041-2f64-4b68-a96f-8cb3db204d7d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6b7ab95f-3cde-4e80-8206-8a9d8a121280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc8f043-a9a3-4bff-8fdf-20d547e43bbb",
        "cursor": {
          "ref": "aa7f3292-dec6-4163-9930-d8acefe8bab5",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8d15f660-2799-4680-830f-c1e7dd9a90e9"
        },
        "item": {
          "id": "dbc8f043-a9a3-4bff-8fdf-20d547e43bbb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7d2eb27b-46a7-4ac9-8757-c427cbc6b144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012c6ef9-9699-470c-8e78-98c8050d4110",
        "cursor": {
          "ref": "1a3ebc68-e503-4567-85f7-3b5a7e138a03",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "607ddcca-01e4-4615-83ad-0c0f71827261"
        },
        "item": {
          "id": "012c6ef9-9699-470c-8e78-98c8050d4110",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9f373605-e8c3-411b-8b4d-352f94fa1004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ebc2e9f-1ac3-434c-9759-26de1a487430",
        "cursor": {
          "ref": "b0026e1f-ef63-48e3-8e7d-ee1dac691ae3",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "05572042-95b2-405c-98a1-1b28144fbe4a"
        },
        "item": {
          "id": "4ebc2e9f-1ac3-434c-9759-26de1a487430",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "90f136c3-4147-4af8-affd-303cfd571684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10333e48-9fc0-4674-959b-8004e66802a8",
        "cursor": {
          "ref": "a8d2de97-69fe-4c7c-8277-aae28c140709",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "69b74dc4-9b12-43dd-949a-dfcd2e19d2a4"
        },
        "item": {
          "id": "10333e48-9fc0-4674-959b-8004e66802a8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8f72e0cc-76b2-4e11-ab41-e95e0cf69fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be483424-2773-452f-a50b-bf8e24e39d9a",
        "cursor": {
          "ref": "3f0c0472-75b2-4c78-9202-f776728c41c8",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4633ff1a-699d-4db4-bbd9-6a95834517b4"
        },
        "item": {
          "id": "be483424-2773-452f-a50b-bf8e24e39d9a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "487e726c-a86e-4383-a292-ca06ca5e5670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8440f6-d250-4fcf-9c36-fbb5727b9383",
        "cursor": {
          "ref": "6f9c88c0-db5a-40f5-b873-43fca44e92d0",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b4cec812-e920-48ac-aeac-377eb2a3fc28"
        },
        "item": {
          "id": "1e8440f6-d250-4fcf-9c36-fbb5727b9383",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "60ebcb5a-1843-4d51-af83-6761fb1cb329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbeb153-c2d3-4010-8130-3e0dbaf5c990",
        "cursor": {
          "ref": "16967a40-da0a-4d67-a330-1b941d34a386",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "923a2a13-7826-4681-863e-b5455f8a64da"
        },
        "item": {
          "id": "dbbeb153-c2d3-4010-8130-3e0dbaf5c990",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ecfb5d2f-8e78-463d-8f04-7675aea86e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30cac7ec-56a0-4a39-862f-0816a259c7ea",
        "cursor": {
          "ref": "4ae84bcc-161b-4225-8553-a8f7bb7c475b",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5a93de25-8117-4c76-99f4-c437d2bae83c"
        },
        "item": {
          "id": "30cac7ec-56a0-4a39-862f-0816a259c7ea",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7e64d24e-1b2e-42b2-8cfb-5cfa09dd5190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f3d685-b161-41e7-869b-22566f5039c3",
        "cursor": {
          "ref": "dbe243e6-300e-40aa-b368-80a117962c83",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "29c9cde1-535d-4fe0-a999-8901b744f277"
        },
        "item": {
          "id": "91f3d685-b161-41e7-869b-22566f5039c3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a846f08c-d9a2-47ea-9ae8-2831c17b9f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605ecc8a-f8e9-42b6-9054-cac9de5caf6c",
        "cursor": {
          "ref": "e59157a8-46c6-404e-bdc9-11f2457d32ec",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a721a610-dd3b-493f-8b8e-e2e29e93010e"
        },
        "item": {
          "id": "605ecc8a-f8e9-42b6-9054-cac9de5caf6c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f4a73c3e-1940-4554-9d37-e1f885ac9761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525377f6-263c-4387-98de-b6c68c0c1cde",
        "cursor": {
          "ref": "f20fac6c-e682-4cc4-84e2-581a0cd35268",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c6998242-eca3-4256-9582-2247b3f1c05c"
        },
        "item": {
          "id": "525377f6-263c-4387-98de-b6c68c0c1cde",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "fccac733-c793-4ee5-b99f-54f31df408d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d68da03-5840-42f0-9c93-ee512cb3af64",
        "cursor": {
          "ref": "3a4cd83f-5b47-4819-9fba-6c9961bec557",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8928e329-fd96-4591-857a-87eacb3ee7fb"
        },
        "item": {
          "id": "3d68da03-5840-42f0-9c93-ee512cb3af64",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ae7ddc0b-1e91-444f-a182-82227fe20bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a053226a-77a8-4316-becc-ccf30df96dac",
        "cursor": {
          "ref": "e4fdb7eb-db0a-4a08-8baa-ffd0da2e9032",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "82c8eaff-f951-4c23-9984-b6130a005e31"
        },
        "item": {
          "id": "a053226a-77a8-4316-becc-ccf30df96dac",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "a97eae43-10c5-4bbb-adff-dece3e940734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e222b6-0aab-4ac3-86d3-f5a642c12cc5",
        "cursor": {
          "ref": "2ff86d84-7017-4acf-8d30-f63adc632129",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5d019e9a-5cd8-45fe-add6-1e1e14ea4b49"
        },
        "item": {
          "id": "e5e222b6-0aab-4ac3-86d3-f5a642c12cc5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1224dc4f-02cb-4859-be6a-a36740394910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c5506e-eb69-4307-816e-cd12715930cd",
        "cursor": {
          "ref": "335bf8e7-2699-4127-be7f-0e273e564d79",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "52d1e0e8-2dda-4915-9187-f0a006137ef9"
        },
        "item": {
          "id": "63c5506e-eb69-4307-816e-cd12715930cd",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "146de7b8-01e5-4a77-a965-cb5e670edeca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc5f836-7a59-4360-a9d1-85fde53b00e8",
        "cursor": {
          "ref": "bd7492e4-e8ad-4984-960f-e13b792a03c4",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "80d6bef0-6bb8-4ec9-af6c-025605a2b4b7"
        },
        "item": {
          "id": "4dc5f836-7a59-4360-a9d1-85fde53b00e8",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "e2a2495a-b0aa-4ada-b21a-86daad1d74e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6bd251-97ea-43cb-a583-ffabd9f142bb",
        "cursor": {
          "ref": "539b6973-1ba5-4280-ab48-b75a3745180b",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5c87e1a0-8023-4969-923c-9e3d0d86fa0d"
        },
        "item": {
          "id": "3b6bd251-97ea-43cb-a583-ffabd9f142bb",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b0a8d886-0dec-4067-8f01-964b8e180e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe6a332-5548-44e8-ab9f-76b71272ab5d",
        "cursor": {
          "ref": "1f2fd4a2-3903-4573-9061-792b73a3fbc8",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "161bef8c-3d4a-429f-ae73-976d06aba886"
        },
        "item": {
          "id": "7fe6a332-5548-44e8-ab9f-76b71272ab5d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "5a0754f0-0a23-497f-ab20-05935535b047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2d0277-dc1c-45a3-9dfb-6ce6c471a041",
        "cursor": {
          "ref": "4ecc307e-c6dd-4405-8ba5-9d7d21500bb1",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5d0c823c-e42c-49bc-bb1f-e160ff7de4fd"
        },
        "item": {
          "id": "0c2d0277-dc1c-45a3-9dfb-6ce6c471a041",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "710fa90d-7449-41d6-bf93-698788bd7420",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf266d7-af53-48d5-a9e0-035959f7277b",
        "cursor": {
          "ref": "95710999-785c-4165-a92e-9f108670bd97",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a190418a-ee3b-450a-b464-bc97349a9858"
        },
        "item": {
          "id": "edf266d7-af53-48d5-a9e0-035959f7277b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "36ae4a06-b48f-42f5-818b-a07caa222a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fce538e-6494-42de-9113-b6cd40c59818",
        "cursor": {
          "ref": "525245ad-f46f-4810-afa2-b0f17040e89d",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ef5f59c1-b6f0-4c9f-93cb-4b689d6740b5"
        },
        "item": {
          "id": "8fce538e-6494-42de-9113-b6cd40c59818",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6ea1fb9b-e9de-4e2e-b101-dbfa9823f39a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1efab5-4546-4b90-a074-eb369b726f60",
        "cursor": {
          "ref": "0d4773fc-4b76-41b0-9171-c9b184e7c4c1",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fc173bf8-3971-4ed3-93b3-4d32749246ab"
        },
        "item": {
          "id": "af1efab5-4546-4b90-a074-eb369b726f60",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7626e003-ea4b-49fc-a54f-1729ac3ccb47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b11259-24bf-4303-a7bb-f9b002a8a87d",
        "cursor": {
          "ref": "7aadf6e0-7155-40d2-affd-468facd1bfa8",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0bfc948b-c9ca-4a8f-bc01-24e943e2e0d7"
        },
        "item": {
          "id": "74b11259-24bf-4303-a7bb-f9b002a8a87d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "136f78ba-1b93-439b-bf1f-77c368156a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457a66f6-ca33-4e1e-b47f-c23ca666fbd3",
        "cursor": {
          "ref": "4ad6cae4-3add-4327-bb2a-85f9df3da697",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "036b0e52-bda6-4b8b-bc5f-df06613b9f08"
        },
        "item": {
          "id": "457a66f6-ca33-4e1e-b47f-c23ca666fbd3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9e509c77-8c59-4f18-b9fd-643eb912f8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c140ef-fc17-4514-ad96-235fd9f143a5",
        "cursor": {
          "ref": "df0ac1d9-3540-4f90-91e2-a2c2f065b067",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "569f5f46-b2cd-400c-a768-c96b19220595"
        },
        "item": {
          "id": "a9c140ef-fc17-4514-ad96-235fd9f143a5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e6484cdd-f310-4d5c-8e9d-7e513cd3ac15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad3f3fc-a5e9-4c62-963e-68d59100bcdf",
        "cursor": {
          "ref": "2aac5f97-c93b-472a-8402-5d239e37e013",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e6dc6e77-8ccc-4e40-858d-42e286a5e59a"
        },
        "item": {
          "id": "4ad3f3fc-a5e9-4c62-963e-68d59100bcdf",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0064b456-2bf3-4875-a8c3-70b7f5546e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2d2634-7afd-4264-8d88-aaf44eb4cbce",
        "cursor": {
          "ref": "26d92413-4904-462b-a69d-92d8556fac4e",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f33d11d0-920a-451d-9901-e341d321ff4a"
        },
        "item": {
          "id": "2b2d2634-7afd-4264-8d88-aaf44eb4cbce",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "42ff35bb-453c-495c-ae0f-494f469c23be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a037866f-ff85-4ea8-a914-51f101af6eb9",
        "cursor": {
          "ref": "75ec623c-22f4-4aef-ab3e-acb76ba53045",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b29dd5e6-00fe-4a59-a757-5759393f1c51"
        },
        "item": {
          "id": "a037866f-ff85-4ea8-a914-51f101af6eb9",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "19fea816-73b1-4f63-9c44-c0a00e602158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f3234a-11d4-479b-a284-8c5a99d0db5d",
        "cursor": {
          "ref": "8a299f3e-7b1f-4202-a250-d474389be69a",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5d50902c-2e5b-4b85-a5c2-751fef72387d"
        },
        "item": {
          "id": "48f3234a-11d4-479b-a284-8c5a99d0db5d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5ead15d8-72a7-4c79-b93b-20fbba1c133e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5dd04e-9dae-4ffa-ab6f-97aa20dc37b3",
        "cursor": {
          "ref": "546c5080-8ecc-4a81-a033-4a6be4307fa3",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9b9808bd-ac51-4b1d-91f6-664a742bd665"
        },
        "item": {
          "id": "8b5dd04e-9dae-4ffa-ab6f-97aa20dc37b3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5bf18be9-fb6a-42b5-b6bc-473fdab60e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62dbd69-4d13-4e8f-a458-b23d3595e982",
        "cursor": {
          "ref": "de1add0e-1437-4c29-9ea9-7e2d8783fe52",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "227627e0-92af-4fcc-aa73-6e5a7fb26c5e"
        },
        "item": {
          "id": "d62dbd69-4d13-4e8f-a458-b23d3595e982",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "86eb3aa9-3b0b-4acd-96f6-4c14ae565ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c58e864-a4ca-4684-809a-f50a5379ff64",
        "cursor": {
          "ref": "f472a4a7-4c74-4ede-8ee3-057e848f7911",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "76e9fb95-3d07-4677-8c6b-4e915a0a032a"
        },
        "item": {
          "id": "7c58e864-a4ca-4684-809a-f50a5379ff64",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b0f6aa93-358b-4e9a-a1cc-c2b3546edbd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13dfb25f-a640-454f-8619-c165a828d8d0",
        "cursor": {
          "ref": "3183da98-ab3f-4a38-a80d-4385f2d2d847",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "78f4316c-6404-4847-ab4d-a585e598ac0a"
        },
        "item": {
          "id": "13dfb25f-a640-454f-8619-c165a828d8d0",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "893a87b5-d504-4774-a74a-6fef869aefdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67777012-0190-427a-8081-f3cbefae465d",
        "cursor": {
          "ref": "ed6ef232-46e3-4a4d-aac4-248be2676a2b",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f9810a59-adab-438d-9e83-8f6dd11168e6"
        },
        "item": {
          "id": "67777012-0190-427a-8081-f3cbefae465d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d6356b1d-98dc-46ff-bf82-eef142bea18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c5197b-6db7-4dab-a020-1a007a7a1185",
        "cursor": {
          "ref": "34d6dc9b-ffce-4df8-aaee-43a08fe9b4a0",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "484baaa1-a794-4d8d-825a-730d79814fed"
        },
        "item": {
          "id": "c0c5197b-6db7-4dab-a020-1a007a7a1185",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a7634503-845e-46c1-81ab-0c7eb26b9d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83cb1e8c-4395-463b-a14b-5e64ed3fa753",
        "cursor": {
          "ref": "c1787a2a-9231-45e1-a220-3f0f9b03c97b",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "86e0fbf9-57c3-4716-90ca-6a443c5c8758"
        },
        "item": {
          "id": "83cb1e8c-4395-463b-a14b-5e64ed3fa753",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "18356030-d404-4c93-8212-9027e6c07943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63fbf47-d7a9-43ab-947e-f33c725626dc",
        "cursor": {
          "ref": "29922a92-5d9d-48f9-ba3d-c3d38e82e9b2",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9b0732f4-35ec-4d59-acfc-a9ad45f77bcb"
        },
        "item": {
          "id": "c63fbf47-d7a9-43ab-947e-f33c725626dc",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ee3a7e4d-0d12-442e-b2c9-0cee3f5405e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf900fa9-ca1a-4ebd-b4de-8f293e33ac25",
        "cursor": {
          "ref": "3aab83ac-ef8d-4993-982f-ada4703e6472",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "57fcd47c-e848-4c16-af76-eadc2423ede3"
        },
        "item": {
          "id": "bf900fa9-ca1a-4ebd-b4de-8f293e33ac25",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "65feaa9d-2945-440c-b62c-c404ec5f355a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769a21f7-f16a-4b70-a1d1-e1b91081fc75",
        "cursor": {
          "ref": "010d797a-31f6-4251-851f-8bd2692e6c54",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "bd3c64a2-ff80-42b7-b194-87699fa9d0b7"
        },
        "item": {
          "id": "769a21f7-f16a-4b70-a1d1-e1b91081fc75",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "73e66a7f-20a9-4dcf-91a5-428feef86c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e900b443-a933-474f-be55-0d1c9f993e01",
        "cursor": {
          "ref": "e679a89e-4e3f-4bd0-b6b5-717a7c4ed71c",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a73dc65c-a1e9-43de-b9d5-5626eec0d631"
        },
        "item": {
          "id": "e900b443-a933-474f-be55-0d1c9f993e01",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e9d594bf-b356-4220-b725-7bb996f60f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fdc592f-0a58-47e5-85a2-7028937858e0",
        "cursor": {
          "ref": "c748cf86-235f-463a-8a7b-25ae92d44b0c",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9c6abf55-581e-45be-ba9d-1012fb385e51"
        },
        "item": {
          "id": "6fdc592f-0a58-47e5-85a2-7028937858e0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2397fa08-3d82-4442-86f3-e3cffbd00e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f20825d-291f-4bff-aa3f-e6510bbe232f",
        "cursor": {
          "ref": "8b61160f-5e4b-43f4-bb23-944ff1c6a068",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7378ea96-58f4-4f4f-92c2-7efa672cf11d"
        },
        "item": {
          "id": "9f20825d-291f-4bff-aa3f-e6510bbe232f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a656db91-3013-4f90-92d4-f1ebeff4be56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adecb7c3-337b-4e51-ad08-7b962728e5bf",
        "cursor": {
          "ref": "0d23dfcd-9969-41e3-97a7-670b00012988",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "17c2cd7b-177a-420d-9f21-93d868e0c62d"
        },
        "item": {
          "id": "adecb7c3-337b-4e51-ad08-7b962728e5bf",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a770da2a-73bc-4515-be8c-715e94d6a7d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31263494-c5b7-4dfa-bbd5-3bd1ed721886",
        "cursor": {
          "ref": "def9ef45-02b2-4dd8-8000-5f1f57d7b380",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f7d6baf4-0f9d-4ed3-859e-bc84482b2e0a"
        },
        "item": {
          "id": "31263494-c5b7-4dfa-bbd5-3bd1ed721886",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e686728c-4527-423b-b159-96b30ea43b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79bc4ba9-a5ed-442b-a470-16dc4ee3d55a",
        "cursor": {
          "ref": "78ee822f-b96d-43af-bcf0-0806731e7ee1",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fef574fd-7512-4bf7-9920-0a543e06ed7f"
        },
        "item": {
          "id": "79bc4ba9-a5ed-442b-a470-16dc4ee3d55a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "52b77656-9748-4d24-a7a2-a622fc39cb44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac08a9be-532c-4b5b-a80c-4c05672f7739",
        "cursor": {
          "ref": "c8f31df7-fa5b-47a3-9d6f-36ff9cef3bb0",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "747183ec-10a7-4e6f-86b6-ba216db6e7e0"
        },
        "item": {
          "id": "ac08a9be-532c-4b5b-a80c-4c05672f7739",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "929ace68-f6e4-453f-ba0b-e7b2b55774a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f23dd68-2d93-400c-9548-4e832340e0fa",
        "cursor": {
          "ref": "6fc37176-bae6-42df-8880-0637ee534caf",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c8b57498-73dd-48b2-888a-d29f0adc6d5e"
        },
        "item": {
          "id": "8f23dd68-2d93-400c-9548-4e832340e0fa",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b211e955-09f3-40cf-b05a-6e269782f0a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "674e4fe2-7e17-474d-9173-f948d8e60a55",
        "cursor": {
          "ref": "6e83eb24-1160-4b5a-9b81-a552365a0f6c",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "68df71ba-8efe-4c77-8b6e-2976a62f19d1"
        },
        "item": {
          "id": "674e4fe2-7e17-474d-9173-f948d8e60a55",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "42c3f879-9fc5-41db-a1e0-b2a5eb5f2a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e7474d-4a3b-4756-bbf6-fd744b48608e",
        "cursor": {
          "ref": "685a583a-35f8-4da3-bb7e-2944961f8e5e",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5a2dae2e-cfa9-4e21-a762-0bebe1c40365"
        },
        "item": {
          "id": "a3e7474d-4a3b-4756-bbf6-fd744b48608e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ff99ea21-c472-44e5-8fac-a88b5c92be24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccbed4b5-20d4-46df-85f6-117c900a106c",
        "cursor": {
          "ref": "aa5f4b18-e45d-49e9-83f4-aed5a23bc124",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "cce8dbef-f6a3-4176-a5ff-a316829a0263"
        },
        "item": {
          "id": "ccbed4b5-20d4-46df-85f6-117c900a106c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "396a8ed6-f18b-4fe1-bca5-3ece4e426a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9cdad59-9fce-4d7f-973d-640138f1e7a1",
        "cursor": {
          "ref": "0e2cc0b9-a670-475b-95f9-518d88de8e1b",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3cd42738-dccf-4643-94dd-9d94f5e8302c"
        },
        "item": {
          "id": "b9cdad59-9fce-4d7f-973d-640138f1e7a1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0c3d6f5e-ec09-4a70-80b2-f492d0506636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7e5464-8711-436d-9b60-9c29016760f0",
        "cursor": {
          "ref": "11e9e848-d8a0-42e2-a786-452b659638cf",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b4aea47f-3815-4cd7-b0fa-6e989e16ee0f"
        },
        "item": {
          "id": "6b7e5464-8711-436d-9b60-9c29016760f0",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7376877f-af33-47cc-bba6-51ab223741c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38f5a85-2fb7-42cb-9338-89b1dce6d745",
        "cursor": {
          "ref": "ac1bc9e7-d71f-43d4-9974-bfa64d501980",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e07e1a73-513a-4ee0-b784-24fc4e13af35"
        },
        "item": {
          "id": "f38f5a85-2fb7-42cb-9338-89b1dce6d745",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "79dcc1bf-e1c6-4921-b66e-fb8786ccbc88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc0e18d-56c3-407a-ac21-02b9ca790c4e",
        "cursor": {
          "ref": "714c392a-ea2a-4efd-883f-711f63b610e2",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7cae9114-5ffd-4dce-9723-639bc3f6bfee"
        },
        "item": {
          "id": "7fc0e18d-56c3-407a-ac21-02b9ca790c4e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d9cb5baa-99ab-4e1b-a54f-4a0c6d27e712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eea5527-7897-4a98-9ea6-358cb319634b",
        "cursor": {
          "ref": "6f46d938-6ed1-4b19-8a29-b037a41a8d0d",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "afd2abd7-7b3d-4ec2-9645-286b35e4f9ac"
        },
        "item": {
          "id": "0eea5527-7897-4a98-9ea6-358cb319634b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "36856c3c-144d-408f-b46a-85d1fd6e59dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1980b604-cc88-4323-9cf9-23fb58551153",
        "cursor": {
          "ref": "5ae411cf-5159-4605-b053-e588260570db",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a5923ef1-879e-4673-b5cc-10f18d51fc99"
        },
        "item": {
          "id": "1980b604-cc88-4323-9cf9-23fb58551153",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "cb2406cb-83d4-4b6b-880b-8bbff8a7a46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac7b362-7cf7-4312-86fd-204a66026153",
        "cursor": {
          "ref": "dc9ecae3-0728-44cb-abf8-78d2e7917f51",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e6dd92ef-4629-4e27-8930-7c618998ae16"
        },
        "item": {
          "id": "9ac7b362-7cf7-4312-86fd-204a66026153",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "acf15943-2882-4ab8-99e9-9c4dd657d0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41bc91cc-3728-4c1d-8b6b-af8284d4f7a2",
        "cursor": {
          "ref": "c3db1f0f-6e1c-4318-9cc0-df5b9183c5a0",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "79200216-ca10-45ef-a901-32e60362eb47"
        },
        "item": {
          "id": "41bc91cc-3728-4c1d-8b6b-af8284d4f7a2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c42d9b02-fdf3-4ff1-ba9d-63dc0b04e4e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a0612d-8786-422d-9051-113de4f2f93d",
        "cursor": {
          "ref": "8e72ee07-70f9-4775-b5c3-5f61c30971c8",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ff2fdf9c-653b-4203-86b7-fefbdc8e3bc7"
        },
        "item": {
          "id": "39a0612d-8786-422d-9051-113de4f2f93d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f8dd3a7d-bad4-43e7-ad86-f49f421834b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffc6fef-e338-4cbe-a790-3782428de994",
        "cursor": {
          "ref": "cf59dff3-7322-4c13-ab9e-17ddfab1a4a6",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c3cc990d-c297-4f27-ac00-d4f0ae26c2ba"
        },
        "item": {
          "id": "6ffc6fef-e338-4cbe-a790-3782428de994",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7cbd31a7-842c-4dfa-8bf8-afd9f7577cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df623b00-c7aa-40f2-9f8d-2d9292fc80c2",
        "cursor": {
          "ref": "223d0181-a866-4556-b2e8-89db1a4c2968",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2060c1b0-cdfc-434c-ad90-410dec31bcd6"
        },
        "item": {
          "id": "df623b00-c7aa-40f2-9f8d-2d9292fc80c2",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b3472ac1-21ba-4c6c-ab33-0d3151ef3e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9c00cb-bea6-45f0-9dbe-a7f56ade0ffa",
        "cursor": {
          "ref": "c65b92d3-95a3-4932-8796-c56752ff3bcd",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4931db7c-b974-4d3d-bb0a-a5769b21a86f"
        },
        "item": {
          "id": "8f9c00cb-bea6-45f0-9dbe-a7f56ade0ffa",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6b0874b6-74f1-447c-bdd1-053ebd39fd6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9f4f06-81ba-443f-9dbc-4f42c6fc0cb4",
        "cursor": {
          "ref": "5cff69e9-29ec-4a6f-96fd-4973a1a189c5",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d85f1aa5-9f06-4f9d-ba24-780db2d2b841"
        },
        "item": {
          "id": "fb9f4f06-81ba-443f-9dbc-4f42c6fc0cb4",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a91e5fad-c879-4ca4-bb1e-190b434fff02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9ebc24-49c3-44e1-9d61-d9ea146447d8",
        "cursor": {
          "ref": "ec289328-423b-4a5b-b045-a2528524e344",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "469ebbcb-a741-4b1f-aa36-af611438c957"
        },
        "item": {
          "id": "2e9ebc24-49c3-44e1-9d61-d9ea146447d8",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7ab4890a-037f-4b90-af12-5b980c2fa3fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad2af62-a516-4f7e-8287-08fbbe8bef28",
        "cursor": {
          "ref": "6e7150d7-0db5-4fa1-92e0-f1509e434a04",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f93fc1bb-b05d-491a-8343-f35431fd3663"
        },
        "item": {
          "id": "dad2af62-a516-4f7e-8287-08fbbe8bef28",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "955d29dd-43ca-408f-92c4-082f3c2f9a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d26a343-40dd-47a4-b51d-659d3321e156",
        "cursor": {
          "ref": "d0f5a8f7-e54a-4dcd-9e1a-41d4d62c850b",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1a5c29ed-136c-4802-b10a-1458e9a4f561"
        },
        "item": {
          "id": "5d26a343-40dd-47a4-b51d-659d3321e156",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0e7c7c50-21f7-4d4b-be48-f48bf3ad7109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708a3512-aa9b-44b4-8f02-d0f3fca7317b",
        "cursor": {
          "ref": "e40e8520-12cd-496f-aed9-d39821c1cee5",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5d27a45d-65b5-4495-a414-c4c476ce6004"
        },
        "item": {
          "id": "708a3512-aa9b-44b4-8f02-d0f3fca7317b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b026db35-c413-4e47-ac9a-5fcaebe3999b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15375da-f2f7-4f65-8e16-13baafcc6f79",
        "cursor": {
          "ref": "8176c98a-763d-40e9-bf6f-b31634ab4c33",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0066c6ef-7573-49e1-b02f-a7172921d997"
        },
        "item": {
          "id": "a15375da-f2f7-4f65-8e16-13baafcc6f79",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e2e3aece-d294-4df6-b631-5612e48eef57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d90e019-d0c0-437c-a58d-1f63e90bd406",
        "cursor": {
          "ref": "3a1d315e-bf88-43bd-b06e-7735c81cc75b",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "809699a5-10fa-4d8c-86e1-9fb90c56e2dd"
        },
        "item": {
          "id": "2d90e019-d0c0-437c-a58d-1f63e90bd406",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8f3b251f-cbc0-45e1-bea4-5f3c484de7a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e66f76-70a9-4268-95f3-35f64bd0835d",
        "cursor": {
          "ref": "eb5e1b78-738a-4285-853a-5dc447848ce4",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a88c794a-7215-4bfc-a3ac-0467286ce53c"
        },
        "item": {
          "id": "a7e66f76-70a9-4268-95f3-35f64bd0835d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "301b9950-716b-4624-ad76-41d43ef09de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b658c6b-9405-4f2e-bbdd-4085980e937b",
        "cursor": {
          "ref": "eb57953c-b171-45ea-a5a4-d319f71d55d7",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4673a4b0-7a57-444e-a328-d62515ef23fa"
        },
        "item": {
          "id": "0b658c6b-9405-4f2e-bbdd-4085980e937b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4e828924-0f52-46e0-84ea-c3c8c1794c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3daf530-617a-4d55-98bb-20b78ea21d3d",
        "cursor": {
          "ref": "b6ef4361-3c13-4123-ad98-fa55965ca517",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7d8d1937-fd55-461c-afdb-d706008ffbc7"
        },
        "item": {
          "id": "b3daf530-617a-4d55-98bb-20b78ea21d3d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0597bf4e-cf45-4c74-8015-7a34afd10b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9208a8d8-926c-4668-9889-8097e7f948bd",
        "cursor": {
          "ref": "d6846e6b-ee53-4709-b4f2-58713b7a5681",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b6eae7f7-e641-433c-9eb6-51458aa04d91"
        },
        "item": {
          "id": "9208a8d8-926c-4668-9889-8097e7f948bd",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6f0ea1fc-dc78-4e34-8c8e-a390c82c5b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c99a83-e077-4a2a-8797-9aaf30954b89",
        "cursor": {
          "ref": "5ed0b25d-9381-4345-aeac-9747aa958ea9",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3e1a1002-28f7-4d18-9807-7403ad2ea36c"
        },
        "item": {
          "id": "22c99a83-e077-4a2a-8797-9aaf30954b89",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f70cf0d2-5479-4fee-8b44-184e3da28adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66cc073d-9e24-4884-a6e4-92e0eec7af9e",
        "cursor": {
          "ref": "4a995cd2-37f8-4fe7-9108-bb21101a70c7",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "71589f55-2248-43b6-9e2d-49dc47adac87"
        },
        "item": {
          "id": "66cc073d-9e24-4884-a6e4-92e0eec7af9e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "37db235f-ed3b-48bb-8f82-bcd79b1fa245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881152ae-9756-42bb-8572-894692501ae4",
        "cursor": {
          "ref": "810d60af-ed79-4445-9c81-2ad3cc89ba45",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8bb1918f-044e-4382-96e9-0d62e2dc626d"
        },
        "item": {
          "id": "881152ae-9756-42bb-8572-894692501ae4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "12949923-09ce-4972-98bb-76f80f132c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a104f10-1bcb-4b7a-88f8-f7b79f64e12e",
        "cursor": {
          "ref": "2fee915a-4da0-49ba-b620-07bc6b14581f",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "59630458-5ca7-4609-9bba-202de0e15b12"
        },
        "item": {
          "id": "3a104f10-1bcb-4b7a-88f8-f7b79f64e12e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6a976f19-db22-4892-891b-8e23751a36d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0244a211-7d46-4001-ba05-6acb83411eba",
        "cursor": {
          "ref": "bbb99169-2169-42ec-b2ff-eab576b17ae7",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "df9340d4-5f9a-441b-b42f-363aea842169"
        },
        "item": {
          "id": "0244a211-7d46-4001-ba05-6acb83411eba",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "73740ad3-fa52-43d6-a38b-a64d8c92a18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62ffdd6-98f2-4615-a9dd-492a025caf6d",
        "cursor": {
          "ref": "3ea40d52-b439-43ad-99cf-2d765cd0349e",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "425d6ed0-e8ee-44c0-bf6c-0217c6fb1f25"
        },
        "item": {
          "id": "b62ffdd6-98f2-4615-a9dd-492a025caf6d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "37133bb9-794d-46bf-ab14-9e7c115dd63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd1ecfa-a7d2-4027-9718-4820c282cdf0",
        "cursor": {
          "ref": "657b71ea-41b9-49ab-a135-b828121618e2",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d84c490e-c4fd-4023-817f-93d6ca331056"
        },
        "item": {
          "id": "ecd1ecfa-a7d2-4027-9718-4820c282cdf0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "82f45056-6065-4a1e-a7b4-881db891beb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41b47aa-ca79-4c7d-9aaf-6a2d0db9ac67",
        "cursor": {
          "ref": "afede945-8345-4388-8b28-4781ce177ba2",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1ebc4b39-5b60-462e-890d-64d2a8db98d3"
        },
        "item": {
          "id": "f41b47aa-ca79-4c7d-9aaf-6a2d0db9ac67",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9a885e75-a1f0-468b-81f2-86c0e30ecc01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1b3220-e2f1-4cdf-9c71-26f572be16da",
        "cursor": {
          "ref": "c8d44cbf-d9ae-449e-8ad2-da4286d8e768",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8cef3456-b296-4087-8c2c-b77edfc59510"
        },
        "item": {
          "id": "ea1b3220-e2f1-4cdf-9c71-26f572be16da",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "86d8e945-dc08-4b66-9867-d8676ecda343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99820eb5-a5b4-4db6-a5d6-15cedcb2f6b3",
        "cursor": {
          "ref": "8d97ed95-a7e6-4504-a1d6-5512a728f735",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "bc8bd1d9-6ebc-436f-a73a-5788831d5cbd"
        },
        "item": {
          "id": "99820eb5-a5b4-4db6-a5d6-15cedcb2f6b3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9579e338-7d55-466e-93f7-4b76da14e6b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf69eb0f-9ecb-4b9f-8294-45e58391a4c6",
        "cursor": {
          "ref": "f762c769-a1fb-49b9-8a66-e4d318ed7a5f",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "619b3f8b-38c7-4424-9659-b0550de14cc2"
        },
        "item": {
          "id": "bf69eb0f-9ecb-4b9f-8294-45e58391a4c6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "394027c9-b98d-4c05-9a20-d29fb025c1c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d61a4d-356e-4899-b315-1768c1a27ddf",
        "cursor": {
          "ref": "e74e1808-000b-48b3-91ef-80de31bd1c32",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "81100fa8-a22e-4484-af1e-e8e9c17acd9d"
        },
        "item": {
          "id": "e3d61a4d-356e-4899-b315-1768c1a27ddf",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a2c520a4-4650-4b41-8c97-a41fc6dd145d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7609cd13-6380-4bed-9f4e-d74458dacad1",
        "cursor": {
          "ref": "99ff5be7-9580-4e86-a057-da814645fc28",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6453d20c-1c5a-4fa0-8612-18e9b25320bb"
        },
        "item": {
          "id": "7609cd13-6380-4bed-9f4e-d74458dacad1",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ec4a4128-5681-4d15-9d70-acf7054b00d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea53e44-1575-447c-b331-67a2d4d02e27",
        "cursor": {
          "ref": "6de5c509-b8ac-4b3e-a2c0-9ebb99041c92",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d5309d8f-b327-438a-a440-05dc26d06201"
        },
        "item": {
          "id": "8ea53e44-1575-447c-b331-67a2d4d02e27",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d39dbf7b-333f-45dc-8f54-df02c2596a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9830e211-2e2a-4963-8c58-abacd8415135",
        "cursor": {
          "ref": "56fe23fd-d976-4481-80a7-c7ec7b7d4031",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4db00760-4fe8-466a-b688-d4838f77bea2"
        },
        "item": {
          "id": "9830e211-2e2a-4963-8c58-abacd8415135",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b8b89045-9acb-4d1e-9b10-0bf612c71d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9056e7e-d72b-4ae1-83f6-34238eaa44dd",
        "cursor": {
          "ref": "bc265911-3754-41a2-b0ed-7264965a2ead",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4f7eb015-d941-4735-a9c4-92c3c3ba41e7"
        },
        "item": {
          "id": "c9056e7e-d72b-4ae1-83f6-34238eaa44dd",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d6156659-3b8d-44b3-bb6a-448edccb8dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55ce95a-aee8-4ca0-94e2-5edbdfaf6555",
        "cursor": {
          "ref": "0534b17f-fa93-4e1e-9a32-ffe05fa2abb0",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "bd5d6a7a-3013-45d0-817d-1c32caa123db"
        },
        "item": {
          "id": "d55ce95a-aee8-4ca0-94e2-5edbdfaf6555",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "13c6e7d7-7a6c-47fd-a1f6-715714236e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ce5f3d-c692-41fe-a0e3-161c22549553",
        "cursor": {
          "ref": "87076fef-5247-4a80-8c2e-19cdc35c4270",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "be5d7756-aab2-4d3c-b6e7-0cb9d153cda4"
        },
        "item": {
          "id": "64ce5f3d-c692-41fe-a0e3-161c22549553",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "06bb5e8d-8874-41ba-a9dd-17253e88b729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e5de12-accc-4220-8cdc-f34251ef40a1",
        "cursor": {
          "ref": "c677e171-805d-41a3-90a0-7ef14e784af4",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "67eb6ee3-707a-4043-ba5c-62ca0c53d0d3"
        },
        "item": {
          "id": "99e5de12-accc-4220-8cdc-f34251ef40a1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b1a7a1b2-10b0-4656-aaa9-86b37e728c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77448bf-5fc1-4ecb-90b4-a928da197e3b",
        "cursor": {
          "ref": "e842dcc9-f77f-496b-b63f-76f17863b5d3",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9be922cd-b990-4e1b-a44b-62320edc5ef4"
        },
        "item": {
          "id": "d77448bf-5fc1-4ecb-90b4-a928da197e3b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "80103fcd-0a2c-4893-8c4b-b0a77269ac84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d28ff19-099e-4771-a8c6-88b48384db05",
        "cursor": {
          "ref": "9f28c901-8d93-47ef-b82e-8937f04ea824",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3fa0db2a-45f0-4f74-803e-c558a665ad02"
        },
        "item": {
          "id": "1d28ff19-099e-4771-a8c6-88b48384db05",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ae81cb07-eefb-4df8-a0a4-67c9fd5029ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa24d847-9c58-490d-b0ac-28e55801bf36",
        "cursor": {
          "ref": "057e0d21-3886-4e24-b177-0676d8594fe0",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "89b3fe7c-56b8-44b3-8bfa-33e2e794ee42"
        },
        "item": {
          "id": "fa24d847-9c58-490d-b0ac-28e55801bf36",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "cf719e8a-d78b-44fe-b76b-c4a6ef1de3f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a377e1df-c907-4de7-85c2-fb123d443f70",
        "cursor": {
          "ref": "cc15cac4-848f-48cb-bc49-f16b4a35933d",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "495f46ab-f851-404d-acad-5c7362ac1246"
        },
        "item": {
          "id": "a377e1df-c907-4de7-85c2-fb123d443f70",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c35b128d-23bd-4ee9-a55a-b72c60ce4aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309b211a-fabe-4650-9169-c2a3ca52dde3",
        "cursor": {
          "ref": "49f12b02-5558-4e47-895f-4b2055f1fb5a",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "bc643c44-6b8f-4138-863c-123c54369be5"
        },
        "item": {
          "id": "309b211a-fabe-4650-9169-c2a3ca52dde3",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "51455175-18f0-4af7-9b8e-55adc02356aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7132bd0-bb86-4134-a871-0ddf0e39cd9b",
        "cursor": {
          "ref": "cf3ed3cf-578d-40be-a016-c9be0be7eb96",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "09abc0ea-e487-4009-9810-914c7436d90a"
        },
        "item": {
          "id": "c7132bd0-bb86-4134-a871-0ddf0e39cd9b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f16510a1-82bc-4cbd-b332-485e2d6f8f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d4e385-0fd1-4cf0-b16c-1e9fda8257bc",
        "cursor": {
          "ref": "3ffb6ef3-a1c0-4b01-972f-0022cd71e470",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b27883e6-ea81-47bd-9943-cc81433f7bf5"
        },
        "item": {
          "id": "45d4e385-0fd1-4cf0-b16c-1e9fda8257bc",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "56a66319-5230-4edc-b2ae-c5133d48d860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ade94b-4359-45cf-8b07-ca0748cf8f9c",
        "cursor": {
          "ref": "b95fefae-55bf-4f89-93fb-f336eadd4913",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b6f19014-77ee-4a20-b7db-98904c36d668"
        },
        "item": {
          "id": "d6ade94b-4359-45cf-8b07-ca0748cf8f9c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "dd2424b8-c636-4c8d-b9f3-3151b567500d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bcd4977-c5d5-47dc-98f3-c5a5d9881b0a",
        "cursor": {
          "ref": "b8d4548a-d6bd-4ccc-b84b-8eda37dc1c09",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e49acc82-3499-43c7-b5d6-596077fa9754"
        },
        "item": {
          "id": "7bcd4977-c5d5-47dc-98f3-c5a5d9881b0a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f20cd34e-0db3-485c-a158-da1f12eddf52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ef0f67-3b7c-4a13-bbb8-81998a5f1a19",
        "cursor": {
          "ref": "794639dc-30fb-454a-a630-d2d28002f386",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1e959c9e-2d58-41d5-bb90-28bf6629bed3"
        },
        "item": {
          "id": "53ef0f67-3b7c-4a13-bbb8-81998a5f1a19",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c7ec5fb5-8c7a-40ab-b1c9-7accd4af6c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065c207e-e0e4-4f7a-af46-f7a97c1b44a9",
        "cursor": {
          "ref": "8d1748f7-e899-4884-83dc-2e0d1085afa2",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c8dec452-5062-4a19-ac0a-ffe946f00998"
        },
        "item": {
          "id": "065c207e-e0e4-4f7a-af46-f7a97c1b44a9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9ea9dfd7-bff5-47af-84b7-5534357963b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c99b6a9-2b00-4b26-945a-005bfe14e872",
        "cursor": {
          "ref": "7c101025-b0a5-4bad-a0a4-76349eba1398",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4f4b2bb8-05f2-4792-90a2-122182b0c20c"
        },
        "item": {
          "id": "3c99b6a9-2b00-4b26-945a-005bfe14e872",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3538da72-4aac-4f25-9bbe-2197329dfbbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6784be2-2952-4b37-9e70-88abaf332d22",
        "cursor": {
          "ref": "6c479c76-44c6-48d7-8feb-4705acd87228",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0cfc71eb-4a83-486f-9d05-ffb6c6180728"
        },
        "item": {
          "id": "d6784be2-2952-4b37-9e70-88abaf332d22",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7fc2231f-a060-4766-81fb-83ea16b18593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c973e0-a045-41d3-b898-d4a430bb5fd1",
        "cursor": {
          "ref": "f02b2f87-880f-4580-944a-631d46edd7e4",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "327a0fea-c5bd-4da1-ae6f-23c093c04400"
        },
        "item": {
          "id": "32c973e0-a045-41d3-b898-d4a430bb5fd1",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d3faee00-6a64-4472-8ee0-73b7492bb4c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd9a12a-5ce6-4309-954c-65832ab2d45c",
        "cursor": {
          "ref": "9f905c1a-7fbf-4473-a6c7-d67e25d9bd3c",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "91d47f9f-a818-410d-bc0c-b25002326fb4"
        },
        "item": {
          "id": "edd9a12a-5ce6-4309-954c-65832ab2d45c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d4732a63-d1c2-4560-9225-a6b342a14311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876db692-9d06-400d-977b-5f09cf57d92f",
        "cursor": {
          "ref": "615b12c8-ed6b-4df8-ab1c-306dba8394cc",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3b34d492-8916-4b26-aecb-519c42b286e1"
        },
        "item": {
          "id": "876db692-9d06-400d-977b-5f09cf57d92f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7cc66443-06b4-47cc-bf24-4edb69e091cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5af865b-e754-44de-af13-ef1aad7316df",
        "cursor": {
          "ref": "67b20819-33a4-449e-8605-c32de31ca2f6",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d70ea98b-8866-46a9-93e4-54aaf3f9e3ad"
        },
        "item": {
          "id": "e5af865b-e754-44de-af13-ef1aad7316df",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3177bacf-968e-404c-aff6-2ff98834dd1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a67e5e-1be3-4f43-ac39-5b8cece219c9",
        "cursor": {
          "ref": "0010f813-81b3-4f7a-926b-8eae6b7260af",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c618e5bb-605f-47b8-894b-18587b20eb66"
        },
        "item": {
          "id": "77a67e5e-1be3-4f43-ac39-5b8cece219c9",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a94c8f30-58a4-4d48-9309-df30a521f1e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d505a2-8701-48fa-b68c-1e26190e652c",
        "cursor": {
          "ref": "99633261-382a-4419-a2c0-f48a5f7d10a0",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "30262fd2-6f9f-4527-95b9-4b2830606620"
        },
        "item": {
          "id": "94d505a2-8701-48fa-b68c-1e26190e652c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "079598bf-cb73-446e-9b73-fca61204301a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3debc36-a0b8-479e-91e4-13b065ddcf3f",
        "cursor": {
          "ref": "3504b3c2-0083-4592-ac4e-6c608da07e3c",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d9ff052a-0e3a-4459-bd8e-c38bc65cb8fb"
        },
        "item": {
          "id": "c3debc36-a0b8-479e-91e4-13b065ddcf3f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f10eb85c-4571-4131-ad01-211c663ac95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b6018e-50ca-4c1f-8a79-87c6979cace7",
        "cursor": {
          "ref": "22e8e8ba-3bf7-4992-9433-803aa415ca66",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e6c92714-b90d-4250-95ba-366c188c27dd"
        },
        "item": {
          "id": "a4b6018e-50ca-4c1f-8a79-87c6979cace7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "dc865efe-6e76-4d8c-9ac7-3380cf6009ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff8a2d2-e769-4fab-acd9-4ed14ab15674",
        "cursor": {
          "ref": "7cbbe2f9-55c3-4226-b2b9-29fc90d46eef",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2662a7b6-c1cb-4665-8b77-e1ec5369d232"
        },
        "item": {
          "id": "1ff8a2d2-e769-4fab-acd9-4ed14ab15674",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "324cdb38-0dc2-49cd-95d5-043f92c42478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ef4a27-c4c1-4cec-a149-9d7d79ecf2b7",
        "cursor": {
          "ref": "f4a59e57-1e16-4e76-94aa-d8f87ba40540",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6ab26690-8a68-4699-9a15-17d1373a0731"
        },
        "item": {
          "id": "46ef4a27-c4c1-4cec-a149-9d7d79ecf2b7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c7df0318-d38c-4916-b122-db26b669df4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be42e733-24c3-456a-8896-f18f60231995",
        "cursor": {
          "ref": "48cb2d6f-157b-4efa-835b-c6e3d6409c1c",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4f23fe44-7cf8-4687-839a-18a13ed0e379"
        },
        "item": {
          "id": "be42e733-24c3-456a-8896-f18f60231995",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9f3eba65-0bd5-431f-82ff-0ad803ff944b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3934da04-d70b-4910-8272-969e78cca508",
        "cursor": {
          "ref": "b2764fc3-020a-47d9-97a3-3635fd446ec1",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5a20d5ca-e24d-4a3b-840a-5f0346479e6c"
        },
        "item": {
          "id": "3934da04-d70b-4910-8272-969e78cca508",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a0d261f2-1ef4-4916-a559-86c2b2cf2293",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ba0597-6b0d-4978-b9f3-2320bb4927c8",
        "cursor": {
          "ref": "39a9c2ac-56ea-424f-bd3f-993e0b0ce6da",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b28216c3-7a13-4f53-9258-a99e07efe3dd"
        },
        "item": {
          "id": "e7ba0597-6b0d-4978-b9f3-2320bb4927c8",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "700e1b59-1a9b-454e-a03c-3ea557ad91b4",
          "status": "OK",
          "code": 200,
          "responseTime": 2292,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0ed545-eb53-452c-b136-c74f39674177",
        "cursor": {
          "ref": "5cbe012c-dc07-4915-b117-c0607431e7a7",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b5105158-fb2d-4a60-8c76-99f478515665"
        },
        "item": {
          "id": "3d0ed545-eb53-452c-b136-c74f39674177",
          "name": "credentials_verify"
        },
        "response": {
          "id": "bee81a9f-43bb-43a2-a2ae-ea83b547baa3",
          "status": "OK",
          "code": 200,
          "responseTime": 3427,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7064f424-936e-4d81-8934-78309220117c",
        "cursor": {
          "ref": "cb462faf-a751-4845-b9b5-856437b235d7",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "50ab548a-0996-4b94-80fa-17e14085d080"
        },
        "item": {
          "id": "7064f424-936e-4d81-8934-78309220117c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f29652ad-e930-488e-bb08-4d98d2ed89db",
          "status": "OK",
          "code": 200,
          "responseTime": 3089,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3213e9-d470-4354-bd5a-a9ca73e443a5",
        "cursor": {
          "ref": "314cab0c-7f97-4e91-a731-512a1a589c58",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ddaec655-1dd4-4a93-a9a0-3d267ff87a3f"
        },
        "item": {
          "id": "be3213e9-d470-4354-bd5a-a9ca73e443a5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "aed43916-6590-4c19-941b-952ef7c12e4a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3213e9-d470-4354-bd5a-a9ca73e443a5",
        "cursor": {
          "ref": "314cab0c-7f97-4e91-a731-512a1a589c58",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ddaec655-1dd4-4a93-a9a0-3d267ff87a3f"
        },
        "item": {
          "id": "be3213e9-d470-4354-bd5a-a9ca73e443a5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "aed43916-6590-4c19-941b-952ef7c12e4a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5995e3be-988f-436e-867a-40cecac3c3c8",
        "cursor": {
          "ref": "2b837c4d-4a29-4d83-9736-57199e196c3f",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5992b4e9-4028-44af-b484-fe9c79cebcac"
        },
        "item": {
          "id": "5995e3be-988f-436e-867a-40cecac3c3c8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6b1ee1a1-5be0-45e0-b421-6788faddb27f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63fa7a78-dc9d-4d83-95b1-325ac6635140",
        "cursor": {
          "ref": "2c6cefd2-4896-4517-b2f9-33e633aa833f",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "dbe54733-a198-48a8-b641-bf0368c0147e"
        },
        "item": {
          "id": "63fa7a78-dc9d-4d83-95b1-325ac6635140",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "24f5f55c-e624-4dd1-9df0-c151d7cac670",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}