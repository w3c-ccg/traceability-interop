{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "bda2b536-42d2-4307-b312-5fb151212d05",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7e59e988-da1e-4374-85f2-32aec730ce7d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "40238ea9-8fea-4a3b-89cd-bbe1a9b96fcf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "acb9fd1b-9183-49c6-882d-7c33acd2ec57"
                }
              }
            ]
          },
          {
            "id": "79022b35-0d04-49dd-a9f6-290774d93152",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f323a776-66bd-45d9-8889-778e58d9c97f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c13c230f-4a0b-4c91-ae2c-53dd86b473df"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ce56c625-9812-408f-9e2f-40ca548743aa",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8cc222d4-2b48-4473-8a05-afcbd02348a0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cf073fbe-732c-4677-8460-32ff1bb41706",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "67cbef31-2e43-4531-b771-3c060797fd98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c804f32-f9fd-4bb4-b013-f3450bc14e29"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9c43aa10-f0d4-4b7c-bd32-02385cb29883",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4a4ce047-b148-40a4-a2dc-9b34d03ccaa8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f58d944d-9f5a-41e3-8da8-8fe20ccff9e4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ce4dc9b0-4679-4f54-a866-9405994f8b88"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96ec5b15-c483-444f-b72a-0554db57ff87",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ff2cf7dc-9a42-44b6-babb-681e1f9ca0df"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dca0d500-fa66-41d9-a714-10831ea2ff7e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6111606f-9edf-4009-a015-11ea96f7fcd3"
            }
          }
        ]
      },
      {
        "id": "801dc81a-b449-4dfa-a158-30fe12770b09",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "055fb275-ad8b-4223-8ee3-a5b28649445f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cc2b18bb-a98d-4206-adc1-729ffe42e6f7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "55aa081a-debc-4650-b83e-938a62139a6e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66865678-df74-4f6b-a0f6-078bd8eb9307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d8fac17-2cd2-4812-82eb-581e1c427b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96349de-e499-4e7f-82dd-fc83d4d5658a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d51f71-6901-44de-8821-3cd01cb773f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb88ff6b-1f4c-473f-a0e3-bc6f4231b5a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a5bd23-4462-4b64-a091-a3eefef7616c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e71061-e765-48fb-a3eb-5605706c9199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a575c858-7434-464c-a6b4-ecd0cb5781c0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "213cb06b-6ea1-4d98-bc62-efb5b263e3bf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "10a34190-f8e0-474f-9109-d1edfe25bfe3",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a057f2a9-2a71-4e29-ac9a-05d25abef5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cbbdc5c6-651a-4676-badc-21ed54286460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd92c44-3a2e-4d76-92de-8ecb8854a1d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74b5785c-1363-44ea-a089-7df9fe990ba3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "587b7190-9b0d-4cec-abcd-38931132b94f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b88f23ea-b677-4618-b0da-3635ec934660",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee19183b-da55-43bb-b680-703730fbeabb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ad4d5eca-548e-450d-a2cc-c93d139efcdf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2ae45c07-abbd-4187-a547-b2fc6c99946a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "383258f7-e37b-4c4a-b80b-df5c1c35d0f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46b71504-ce6b-415d-9fb7-d04bdf23a9c2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3cdf668d-6ba4-423b-a12d-87745f1641ba"
            }
          }
        ]
      },
      {
        "id": "58e09b1e-fbe4-45c7-9a04-94a06dbffa56",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "71a1afde-5379-4987-826d-853ba0d3d229",
            "name": "Negative Testing",
            "item": [
              {
                "id": "24335609-9040-42d5-8e61-59e4d69edd34",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "2da64d5d-823b-4acb-b08f-6c8eced25e5b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "215506be-2edb-471f-acac-bf7a45c87e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d089713-f386-46e9-a0b0-5bc7562a4b15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4860c7-1508-429d-9225-cacf1e55ff5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab1461b3-c7b2-48cd-b8b3-3365a67fb149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f3b631-f3c0-483d-acdd-203dfb7ccac3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2724ef08-9619-47b8-831d-873dfe36f8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d59ca04d-8b45-4999-bbd8-7e4531b5daad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5429b0ea-3e53-4e76-b48c-4ca7e751e196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f202a2d-4de4-49cf-882a-82ec4f725211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f584c25-4a1b-44be-a5ca-d7d10d76f1bf",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6dd3900-e2e0-4be9-87d3-7e5b9bf1a021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b2371e-612f-4dc5-8e64-27e93114b4da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5d7398-4f46-4962-b162-df49c8a334c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d511c514-e520-4850-92a7-8412e556dcda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298cc3a9-c962-4c2b-a5b1-a0108daa966c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd501e11-d39a-48bc-835f-47723e02e192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da1c0ad-8e51-4983-96f5-5155c7fdab9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a039a400-270b-4574-bb8f-6fea366f1aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f49688d3-ecb7-44dc-b00b-35e86a48bd8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453fd4d7-1b2e-405f-821d-53e188d99a92",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b72ed82-0175-4766-a707-dd85f31abdd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dedb0047-310c-4e6c-8859-0f30a0aa53a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f998db39-0bf3-4b13-bab5-a78802129821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9818fc02-9c2d-48a6-a447-d9a94565a25d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891407ed-3fdc-478e-88f7-ac63b41a23d5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b0a974-7fbe-41f5-b189-bea2543c1c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54658adf-8618-4f5e-b6ef-4de000a0b016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98be428-9f48-4bea-b45b-47898bc90846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f3b8236-f8de-4455-b0e3-919b911b0d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20777a4-658c-45d6-8be8-2768c056b6cc",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7090b551-85e8-4082-b7f5-75c488ec12c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e51b4274-244f-43db-866e-4d46286030ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2692e81f-57c3-4c7b-a5a0-f55c7edff648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f61e021-788d-4ff2-a230-bfee63f5147e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9553af7-9fc2-4720-a1f3-f6b762c84fda",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b38953-e36b-4685-a86c-30a40e5d8065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ff13e91-0e58-4f5c-8a3d-9145e6ecc288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa05de03-eac6-4f28-984f-400ab4c97453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1201ed47-05fd-4bab-9e68-15e9257d2338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7813fe-457e-4e67-848b-365f2d37a3aa",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1498735-0c96-4ce1-8f1a-b9a61fdc88f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2c7023c-0db6-41b0-bc69-0508ef304965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86416f8-2598-4cf2-a34e-582d8dce1c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "049b98c2-1e46-4e56-8148-21ddffefd782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2088525-582e-4212-a40f-c04269e6a2a0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf1e70c-fc0d-45d9-a7f1-72d58af0fa7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c16cccea-fb6b-4195-8c66-afbdf2b0f4d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4fc5501-a609-47cb-8459-9ea8539ef15a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8666b06-ee03-49b7-adb9-ac9d18d800df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba992148-85df-4029-b69c-8a95bed3b5b4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "351374a7-4b13-488a-b783-ab1a50ec595c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "031c6187-01c3-4168-97b4-4375f7c74857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc770a5-6db2-4f6f-9e3a-057fedf5eeda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2419612-0e27-41e0-b40b-3c93c110681c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26c1e81-a7df-4038-a4e4-0861feedc36b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a788ff59-869d-46f4-b923-5c81ad153df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e9ee805-6fe8-4dbd-867b-3b2814851cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e64cb5-9308-465c-86a0-d14724336bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6540faba-1a60-42c4-b799-aada9426bb43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34e290a-daaf-4f23-b357-84574cad8927",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf67af8-0fbe-4a98-a256-51b3107d5e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b665fb95-3dd3-4256-b9a2-1cced7d9101d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a782748c-084d-4d5c-a415-84d870a200af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5333458-a1db-4452-91df-25126879695a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed167d4-6fdc-4e77-a992-a9fb36065e04",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7068972e-81e9-4b43-a41f-ab3c0b81f341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56ce7702-5262-4f31-a2a6-eed85eb0d75c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc181f57-d52b-40b7-a0bf-46b9a3251682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6c55857-f8bb-4791-b07f-ed467d87e904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476b9555-f13d-4902-bf65-a6ac7d9b7bf7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0279eb-c94c-44dc-bfa0-19d30fb4fd71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02977339-4bd6-406a-9946-656187d3a0c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518d04a6-82ac-4a08-89ea-ee979059729e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb6e016e-a223-4853-8363-1cd03728ed69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026d5ae0-a92c-48ba-bd06-f236048e7af2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1bcce7-1e0b-4aa8-aa72-6d3d4c0606cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93001f5c-aa45-4eb6-ba61-eb8ab3f8e92f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6704aa-2e1b-4c3f-b0ce-918d847f8d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8cb33de-6261-426d-a44c-a581f5e85eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b3b5e24-2cad-4ba4-9ae1-61e6aa36a3f4",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8138071c-297b-4f0d-9c4e-a15baf7ac14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e0119d1-f963-41fc-8397-e69adec9d7fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f37044-e606-435f-a560-99ffc8bc174d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d30e424-b1c4-4f4d-9f13-3c4cd17ecef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473b8916-7cf5-41bf-b646-e4f0fec6e362",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc8a4cb-06dd-45a0-af35-9a41a9bceb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "846e8159-9f60-474b-92b3-738b157958c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948ce20f-4ef5-42ad-be53-8b3d524cf6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "01035c18-0bb1-4997-a4f4-497444a93e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602e20d7-88ee-4d1e-81f1-7d3407b9b774",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "291858fb-b805-4a66-bf2a-bea65392cdab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb1eca8-35c2-45ea-8e86-20c9ec361c46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77278cd0-4ddd-48e4-8bf1-a71dc3142826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff3c9621-e827-4fab-8799-35f8cd446063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19540789-f8e6-4ab5-8eae-4067225224c7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88b0098-b6ba-48e1-89e6-c9f7bf2ab8fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baab447a-1b49-4976-af41-6c7816d026ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c3d8fa-ddbb-48ee-826b-95825404a50a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01fcbf83-f6a4-4f5b-99de-b5dcb545670b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6142b0-97e3-4f3a-9b1a-232195733658",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1722def-794a-4c8b-9e6c-8f7aee982aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "137f8404-8287-4d32-99e7-52999ff22116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f41bef-dcd9-4ff7-9749-3a41dd4e0e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba13072a-3a95-4a82-96d0-2e4eae4d5043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89548cf0-37ab-41bd-96fe-ed2aec359637",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf2ae2e-5a87-4302-babf-755262b57184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1344d2d8-5021-4e9b-a660-2dd55f97e0a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161e09d3-970f-4763-ba09-fd3430b8fc3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "22e8aca1-9057-4b5c-90b0-7498d07d0c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e3b686-3d7c-4d09-aee5-1ff69b2d6f40",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1b32dc-5226-4465-8724-abc8da8e8e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5b4e2a8-d677-4b6b-81d8-269baf32f3f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b35ca2-6727-4495-a290-fb5898e64e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b90096e3-bb08-4423-8b6e-55d1c597282b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c9da2f-71bf-4b02-9e72-bd1f709faad4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a36274e-0480-435a-8b2b-8990e3cff929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12062cac-206e-423b-b83d-f88a744338c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f840ecbf-5d09-4576-86d2-1c3164390ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a9976ca-c188-4b70-a840-2d249ecebd4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5caa8598-1434-471b-b8fe-ee6171f9c099",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77035ea-232c-4748-842f-eb2314957378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49bdf790-c27b-4f81-a73a-4e6bbece2e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092e6813-90c0-4486-9da3-1bd5c7a78f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2589c3e8-66f1-4ee0-9413-f7b01ed287e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ebc0ba0-f532-455e-a907-2b3ad5fb92c2",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67cc89ab-fa4f-4c95-ac70-9c68ef9f8089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf94195c-1e66-41d5-ae11-8933321c328f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a60be2e-9fe6-4382-b6b2-bbb455f988c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "139caffa-372c-4671-acd3-c2dc42d1064f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9401792a-d19f-4be5-ba7d-a148662caa92",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04493a5-128f-401d-98a9-5d13924a856a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf724a75-3e9d-425a-b56e-5fb5c7a683bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6ed8b9-46a8-484b-ba5a-9568da043eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "258ab561-5181-4264-b38c-e6984ad4234e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40c61b1-81d9-41fc-88eb-e5396328e000",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1b5fdc-9e64-42cb-a194-66e9210b3a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7207a308-b043-4296-85f6-6ce5dc6c2a97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb65ff70-dfc2-4100-b991-500c1cd7f39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ccc2095-3ab9-4cd7-8885-2b97d3ffe73e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e020c26b-87d6-43ce-9a99-363c4f41e8e3",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1b5042-3dfe-421f-a71a-8d4db30207f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d858646d-f8a1-41c4-bf85-93d343a4a370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e8f0481-0aee-4258-97ee-533c3d38d3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "96fbe0e8-dafd-47d6-9a62-27e0fc470ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7a088e-f07d-4de8-809d-fc656835b4c8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e1e323-7137-4ee6-9610-a1e558f12b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ea6cbd5-34c8-4088-96ba-058d5dc65a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4138cca-ce60-40bf-873a-99dfba4c36e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "189f2b43-3b98-4398-bcb5-c2ef8563e180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf8399a2-7294-461e-8b3b-a221478eb970",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9ab2a8-9318-481a-8a3d-95fb2942720b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce036b35-ae55-42ca-af99-73f0e77e6845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6daff9ff-bf3e-4bc7-ae59-f89ddd73944e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c349a67e-dcbf-4ddb-add0-79f961ac6f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851de7bd-502b-4ea8-b2d4-75c474e67126",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a55a4f-a480-45c6-9b6c-ca7158632e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2685ff67-a0d0-45f7-825f-e37112dac219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b245cde0-8ce9-4275-82f2-28acf9996a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30ee8191-d1cd-4001-8ff5-1374c285d8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373735d2-d93b-45b8-980c-dde8112487d4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0a5126-a439-4bd8-9d8c-158537350d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ea7b772-8a13-46f3-9415-3cdecfc341b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a459d4-2807-4865-ac60-e5a3b1078cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c6be911-9a18-4574-b188-5331b89003a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42e0659-ac62-42f1-aa55-5c77781300bc",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e0ded0-521b-471e-8628-e3a463765ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74381916-b321-4312-97ef-7c1a701492c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5e2cf9-209b-4701-8a1b-fd617fb0a5b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d36d86f-9405-4ef4-b571-f9eacc1cdb68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffda3735-9ef0-4dd9-ad8a-c04aa25b717b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90aadee8-b03a-4297-8ee8-06e9c95ccb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f53581a-145f-4503-b06d-f4aebfc75f03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da59b7d4-3fed-4d92-94cf-82b7dfe4522c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3dab3017-f579-4ffb-9b4f-53acaa7d14aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96162a6f-2653-44dc-b6e8-1d48b722139a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c789dc8d-dc5a-4482-8e72-7a8361be5257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e645a17b-5504-406e-ae8d-f85dd0f0e2db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed186df-473e-4c85-ab54-fd7ea6ab04fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9748ab79-6a27-4031-8375-d9eeeaee7f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e647da2-18ab-4810-9dd3-ce3616a7cee8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "945efe7d-2d5d-4551-a00a-262199a93446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b83f400-bc67-4a25-952f-a9c2b5ad06ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc7998e-9125-4f31-b52f-41c761d1fee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b48526a-487d-41f9-ac06-184cd5245a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c563c9f-831a-4419-9da8-1f3db48382a3",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22030004-9f07-41c5-a42e-7712d611b642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7d1b4b4-051d-4129-beab-9a7cc9dc74eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ca704f-b00d-495c-9828-e4dfd18dee01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd95d83c-824f-4831-aa64-f2fed45bd025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53764eb9-0dfa-47bf-94aa-c79fdd341705",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2399d5cc-d4c4-40d6-b915-66ba84553ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e764e1b-4565-48df-af13-130f7a96a7dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be15e0ee-915b-40c8-ac26-d8cd093941e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d9822d-7864-4c9b-a6f2-bd159ea1d19c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d4dae1e-a907-4809-81e2-f52b8a349557",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "561f5e82-444f-42fa-9731-55d0c1df7809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a3532e-5426-4353-adae-a4b2a8da32fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37214d21-de93-4a1d-b4d3-a72b151c7d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "aca63018-3fe5-4744-9877-b01744f30735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4486dd6d-a85e-41fc-a77c-ef58fa2ab021",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90fa5b4b-071a-479c-ac13-73078dbbe1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce8b967-64c5-40dc-a412-433080ff937e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375986ac-cab3-416e-acf4-488d6ee28f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8091e0c3-66c5-4e53-ac65-a17ac00412f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba70e93-1589-4b7a-bf47-f237d97626c1",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1aafcb9-cb77-46cd-921b-21724b11237b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1355319-c924-47fb-a056-e2500c7e63dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc4aaa1-953d-48e2-ab2b-12bf78d7ade2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c725faf6-77d1-4e87-b6ef-1a8223c13a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7173b0-be85-41b6-a85e-b7504d3c560d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d8eed2-d61f-4c03-beae-e3dc14522f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cebfbcf-2a23-461d-88e4-0de8009d43c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7164c41b-04b2-4e17-888d-5266cee495e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac9c3d5a-22da-48eb-9114-b318d83464cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bdc3007-7e70-42a2-b5b0-c34ab4a5a138",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc648386-1f6b-4c5f-9549-168da26924d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c710049-efd9-48b9-9109-9368defae774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f79396a-6987-454e-a6c6-73aacb8d42cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb18a347-4100-4e58-ac9c-88529d8c7635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e5f75e-de8c-42f6-add6-832b3899beaf",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d58a33d-cc77-4601-8a1d-57c467786b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5776f933-aaeb-41d5-9ca5-19698c871a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d55ca7-7d94-4aab-8aec-ccc629c243c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c3ab974-13f8-492e-9413-41fccd5f105b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40862c4-d36b-44a2-8c49-1a6715c519c2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "617f2e18-262a-46d5-984d-dde22edc7459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf9a7e84-58b7-486b-bad8-b4822da7c009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3bff141-e478-4a9e-98b6-07e764e6d639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "34caba41-6dbf-448b-b335-8ddf820a39d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dff77d5-bcee-4274-969a-227824655551",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3725e87e-c9c8-45a4-b288-1d10e403bcb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "092773d5-1891-47b1-8c73-f19359ff02e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f6059d-8921-43e9-94c2-d1564fe2f8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0081cef-cd44-490d-9ae3-3acac86501ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ee1482-32a2-4f0e-a312-1327944b7981",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f34b1c-98ac-4eac-8c1c-687d6380324c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f02719d-199e-4e9a-b4e9-7e0616e8197f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064e7fb0-6e33-40ea-8cff-d7828556b735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5987372c-c80e-4204-a555-7535d0333a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d361f0-0e7b-42ec-98b7-38542260a138",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ecffe9-d465-497d-a3d2-e7df9fd60fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b8a66b-8a1e-40a9-9998-5bb58bf0e850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048080e4-66a8-40e4-b860-e4507e11000d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbb7d6f9-2fb3-4198-b788-be5fb6cf4be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d81229f-a025-438f-8493-364a59d1de2a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c70bdd2-a12c-4780-990c-a05626bace25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c270336e-a0b4-4a29-a87b-40a46ed9026d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4fb57dc-620d-4cc2-a116-0cb0643da262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "17cefd07-60a4-4c77-bedb-008031d47197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ac18d8-0e04-4dd4-a1f2-d09975c12a75",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5735ac5-bec2-4940-bf7b-8fb5a216dc06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad511ea-fdb9-48e4-9a06-72828ea33089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34151d1-e1a9-44ea-94c4-8a0b5ed99fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fc31aba-c4d3-4c72-befb-2bb4528c729f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf78767-2a2f-4370-9058-a94f08940915",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50db8882-c7bc-4847-9301-a96dd6176695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9618cae2-5c69-4f60-8efe-6522f0fec445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1bbc227-b960-42f2-8073-e682d1b11cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "86836cf2-2166-4081-b62e-d7f0b93bb1e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d905ea-56fb-4a08-9314-b00ad19de2d8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2359f8c0-bbe3-4e5b-ab96-d3049edc5450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a4b87cf-9fd3-49ef-a2f5-1bcde9e294f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e10e5fa-ca5a-4f41-9d66-e402521d4765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2882263e-e0e6-42f0-8b69-36de9dac7f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb760e3-2117-4eed-a493-3fa3b66ae5a8",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82d750e-f33f-481d-ae36-4232234b2173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "113f6f82-c36c-42c3-86fd-1e1116d27859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9da896-d6a3-43e8-8ff0-52fe026da76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c314ef99-3efe-4c76-bf1e-3e5fb67ea3f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ea5d50-efcd-4758-b688-2052a1c5c807",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b66491ec-b2ea-42d6-9a5e-c292f052b73f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a3998c3-3149-400f-8756-7d9f0e2b2e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7866174e-f4bf-4e15-8145-b9d37a7be088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b5d1359-ad4d-4339-ae59-8c35d2b7e795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b714b3-da1f-4757-a6ec-e2287ed47f9d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0281d48f-5fe0-4f90-acc9-d0d0dbdf2c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79441324-17b2-4642-8cfb-13e33f4d0f49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ddda74-572e-4695-9398-cbd208c0a6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4077d71b-5b60-4c5c-96be-e70c09467b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02fdc30d-fe28-4818-9bf6-1181651c09bf",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9b9844-4e75-47b2-92fe-e328439974c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7de8812b-da29-46be-8c35-78db6ff48243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7053e80-cbba-4574-b039-0688d8a678c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "327c8757-2f18-4bb9-8a8d-3e99748b9016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9efb1bd8-c3cd-47d6-b28c-178a99cc5e21",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e54d70-a92d-4fb4-8ec7-a9bf0419e4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f48a8625-db03-4a65-9fde-d06319320c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7684a93-6c9f-402e-8928-443a3755cfb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c32bad-3da5-4a29-a9e7-603ce350740d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833852f0-e3dc-4958-852d-da6ff51eece2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55e2e47-0e33-497a-98e6-acffdaa73da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a0c0e1-88ba-48ec-a0db-71ca8f239b4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d190c2d2-9cc5-4e62-aa2c-4580cb71a3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1860dd4e-05fd-40f3-8acb-1e22397bc132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0779efc-3c75-4525-bd28-6fcb5fb6c6da",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5a7122-a0c8-484b-bf7e-d05b048902a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04fae8e7-507c-4fb6-a890-a58577256c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d378f9b7-d802-4168-bd9a-dc065321bf73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fde19d2-e2a5-4d5c-8595-c8c46f7b31e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3152e574-2070-4477-9131-b6412aea00ca",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8169c9a5-c450-4648-9564-62b2f96e06eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "473479ab-9f88-4fd3-8249-6cbfa8eb7ca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8785cd6a-a391-4ac0-ab1d-72e664ec5e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a4bfdae-5f49-45c8-bc37-5843685338fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6528177-f94f-4aff-9b7a-c491f80bcc16",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f56570-1acd-4bf2-a377-01436b078a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b8bfe9-2349-45ce-b1b9-8d80a3a26d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a296898-7b14-4a4c-8035-63f46fa099ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bc1da34-2ccd-4039-b48e-110f25420da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b00c189-e0e6-4a33-930d-96d86a332f19",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f65e3d-f59c-4887-8bb1-76858d3b134c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1765510a-6df5-4867-a7bb-71d83a7e62da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1975d6ee-eadf-45c8-a06d-048e62982bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "803d75ea-f98d-4552-8c6f-2fa862081e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a353344b-477e-4160-9bec-3929d3a2537d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b72e1aa-e8a2-4b2a-8324-e44e0c584ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60ebf442-18be-4747-b258-f3f58441230c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d186e445-e68a-4679-841b-482b2060a26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c07c1d9d-dc6a-45dd-a314-513502f6dcc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3355b26-1754-4857-8882-099e9da2ad85",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b147640b-3c13-4ee7-94c7-f2c75b40b171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20343108-2946-4953-9c1a-d5f9b110ae20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe60ef9-be45-4cb6-8239-34b31a5fde3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97844767-f139-4300-954b-002314968b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a89524-6369-45c1-a11f-2167bc100aa0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a146cd-1903-49f9-966c-6a4b0316fdcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f036157-789d-45ed-8121-99411d8a4642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd20fe0-e424-4d41-8e72-192c57239d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3daf07f3-76f7-49f8-9182-1f43eecb2b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7a6b67-588b-4d9e-ad5f-f382bbf9e37f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e6c8ac-a635-4a2c-a167-4a05313d3231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d024598-0b51-4955-b4f3-18993b8ccb6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b5f72e-5403-46ce-886e-b47ae5c1b3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cdf10b13-679f-49c0-be51-9e66ad06ba35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056cd294-4c91-4a03-9a27-bbbfd55d0da3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16df6a77-77b7-4936-a795-cef81ac61c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3590ee9-faf0-4228-a0e8-4bd88ea5b596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1938f18a-81f6-45df-8904-3495cf71709c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa89e1c8-7a01-47f9-885a-3336ce13315b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17639215-c14a-4136-bbac-598fa2439ffd",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57f4030-16a0-45c4-ad8b-f671c22deb65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a7b7c15-eefa-47fa-afe3-1828375d9f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359e4852-d411-4c91-873a-8c4ad7dbb745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c47840a5-760c-428c-9939-c58e5bad41fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcdd59dc-7353-409e-b916-72ee8011f563",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f396b470-af5a-4766-884f-f3df96a6d992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33148ef2-f6bc-41e6-84d2-7f608a63265a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d3fa0f-f188-465e-8ab9-9ab48ff59dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e476c33-2785-4044-853c-78c94130b1ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a38865c-4e52-4f1b-a817-e486515c5b3a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a388a7-ed2c-4cfe-841e-94e361bc8f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "793999c7-6601-4d5a-b292-801095ef6eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73a0696-1682-425b-887d-e390486e4b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb692938-18ff-48a7-8a8a-044080980d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d33085c-d57c-4ccc-9fff-ea27c7cfa591",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79df699-61ca-422e-ab5e-ae44016f7374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "055742b5-05d2-43c2-a76f-4c374f8ae834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35f6615-2d2a-4ae6-803d-7f4461a60168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9da225d-575c-4de6-a108-0655fa426ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bfb9391-e1ce-4246-9cfa-cef908768001",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "268bfff8-1686-4f2a-93ad-9894e9094158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12cf4274-6f9c-45fc-adff-742af1819b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573533f8-6f37-4fb9-b830-5feebacf05c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "175236b3-5efc-4374-b7a6-179118f747bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77000869-194f-4da1-a756-40ea59b650cf",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36276a8-30fb-4fee-9853-ad93f2a9d08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "258109c7-87b3-447f-a2cc-9ffea512696e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d3733f-c9fa-4349-9c65-1d73e8d252af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6a78105f-63df-4e5e-a5b9-192695fee3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bfe025d-f139-4e8a-ae58-6c7ee5f7006c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefa6e69-c8fc-4093-8027-58dd635c1f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aaa8b2f-14fa-443e-9597-766195f952e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15eb1469-24e2-4308-9aff-b701af35da4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "97953ac0-8b7d-4797-ab0b-ca8573cb57c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e296b9-914a-4726-b36f-7921b0e33b7b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f60b9e7-5f2f-44d6-927f-5d26aa8b14cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f61a5352-22ce-4fb8-8c65-bb30e8b80271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5843bc7-c0fa-4729-bc03-e62b60e32efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f3bc2f6-5e8e-4949-81a8-f3cee8766d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3786f936-7841-4010-b138-d3cc9288a112",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbaa7560-ca56-4eb2-988b-8940a4a6cfa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eefda57b-cc6b-4b68-a385-30e77fb85616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0088c89d-5618-4bc7-bc3a-ab192e2a49a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "722556b8-21ef-4463-bdbf-ef21dfb351d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd430181-6152-424c-8adf-575437cc1536",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12950a5-6ab9-48c8-b0d8-174cbace0014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c968f93-7e8f-4903-8cb8-f0feb8736290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5973af-5df0-4ba0-84bd-612a675e022c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f461df91-49dc-412e-98d1-cc56e7708d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0561b7d5-2f3e-4ec1-b9c8-cdc25127a2b2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e32e1b85-2063-4e7f-a962-146924c4f653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0d324c-84a1-4108-b118-59e7bb825975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42404464-7073-4105-8f85-7964b5879480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ce37c1a-fea0-4d97-bfa7-662c252f5427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a35deb-64a7-4516-b2dd-7f0b96320343",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6a5855-5db2-4813-bbf3-a50e053954c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fd6ea52-4d75-4570-8e5b-d1bfa422dc65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c03a48-b996-4057-a67c-cc2e64516bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c54b70-bfbd-45be-938f-01c9f518e488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9149a5-7706-467c-a69d-30d136b10997",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3956ece6-7f8e-4d82-9955-4596002feb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "372a0b85-5f8b-4346-bdc2-8a6676fd63c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18977420-829d-48fa-8df8-2e73200cfd68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "30614838-c428-4add-bb77-e528fb8d6834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c96bbed-e7e6-4efd-a204-fe1afe33b2fd",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd76391a-a192-42f4-bcc3-be587e231349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68a46665-1bbb-43d7-8b8c-27676d6d10cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feef6566-c861-4ba0-9d14-2472be5d5062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d8b0de2-9aaa-456b-ad6f-5c23a6ae2e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e3c1fb-20bd-4e2b-8a7b-3b03db09e952",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6d790d-f181-47ad-9614-8e734b6ff317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "171d09ce-e889-4c2b-841f-7d9e58b46155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca8db32-51d9-470f-9cc3-ac999e55c221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24298f70-7d27-47f7-b667-79c770068e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a0324f-c3ba-408e-8ddf-133c7865a167",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5ad3ed-7211-4c4d-a966-447e83d6d005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa89de2c-8650-4db8-afbc-78f78a4f722a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1da70cc-4d68-4de2-97bc-dc04b39cd424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "615272ea-23d7-45c5-b191-12998a2ebf12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0bcc93-2084-444c-a6dd-8fa41193e534",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e174b7-cb6a-4fbd-a067-3e11551e6821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09d82796-1b37-4942-a008-2fde5652f4a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71bf793-c966-4c66-9666-01a886055431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "64b2da34-673e-4e62-994b-1f453f52c8e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3f404d-4c0e-4fd4-8824-2ec379b4bb2c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7294c2-5c0c-4653-87d8-4890585473f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eab83fd1-6b70-4ac5-a01a-c50981b00ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0516591-c3da-407b-ac29-643bbefb5f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bea5d3e8-b721-458a-8d83-262b95da0928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dec1ca0-7d58-40b2-91ed-fb9a27428a63",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ca2a58-b612-4c7e-a60d-f6c86ce17c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da2a02c7-113e-417f-af09-cc58d1ce5761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15bc2cbf-d363-4c7f-bd5a-76d2818d331e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "590a8745-39e7-463b-8fd0-cf4408cf6e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654094dc-1b3f-4b43-a07a-16fd67a88848",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5cf0937-2ac8-42b9-bf06-eb3c003cc2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed38fa7c-86fc-4968-bed6-c012636cb636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6812afac-d4b1-49a9-9147-cd87cda03d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc019c2a-d66b-4b36-9850-64f9e1f7d3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0abd6493-a9d4-4ea8-aadf-f5b740f44b84",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd5498b-ada5-40ed-a1df-bafeffbe7209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a1d070-d9c5-452b-8117-34b89061e57f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e986ed5d-df90-4f8a-93cd-9d8fc83d4dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "73b5632d-a945-4e78-800c-41516c1f82c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b606373b-31bf-4527-88e0-a7ef86589167",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ed2f27-101d-4397-9cd0-cbc42e73b2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "028b1371-20c5-4150-9c61-2ecaaa19063b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee025eba-dc0a-410d-9449-57cae54fd50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce264af4-36e5-4a93-83a4-c6ce0de2b99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81bc3a2-7607-48aa-b44c-d5ddca0201e8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ce6ef2-27c8-434f-8895-84159d8dcc34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c53b30af-439e-4616-b003-ad0ab45afb92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb8639c-5956-42ac-9fda-ac1ca326205a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "44689847-e217-4ea4-b539-0df694e0057e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b52625b-0690-463c-8da3-25cc09320e9d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0cab2e-ae36-4719-b8f6-17c6fee779bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a0b8efed-bbea-4bfb-b3d1-85e87d478e6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562f8aa4-d6cd-47ea-a70c-eb84e9253588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e256e999-3b74-4bbf-9c62-c74a1e73daf6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7dab3ac8-fc8d-451b-9f2d-26e211db655c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1adef948-2c39-4557-966d-1169ab769249",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fbed510-8abd-4b27-bca8-00535ccaebc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9db5b6c9-82b1-4aae-a413-8a98ba231159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f122068-50db-4718-8712-7edfdbb00dff",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e825c9f5-9a5e-40c0-8efb-d973581e9cdf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f2a20c6-d510-4527-b0bf-93b1bb12bb73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26d0835a-1bc5-4d34-87bb-7eac986b9642"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "53945907-940e-4f19-ac5f-58bfc9905de1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9a9a37a-8e09-4896-a86c-ac584c31e9f4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "583dba05-cdd5-4587-a41a-7dd5ff63ab20",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c74737ea-a234-496e-afd7-aad12d8a16b2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8ce3b1e4-9c31-4b35-b8bb-403e0aa5041e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bb3e6be8-6dcb-4442-9287-dd2b67bb2671"
                }
              }
            ]
          },
          {
            "id": "b47fd646-14ff-41e3-82b9-919a8b2df674",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c3f41a86-5cfe-439e-82f3-302ba45737a3",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "e608ea03-a6d0-432f-bb31-87f8cc343f11",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3002875-c79f-45d7-928e-d17cdc396d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b9101c9f-e319-4f3e-890f-52e48e952ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b1935c-f424-4598-8ada-417a9e203203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09f65b35-c5ab-4d3a-b14c-49b5802959ad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "859fcdf8-9c59-4167-a933-36dfa654df42",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "170919a4-99f6-4ed1-a322-4426213b9cf2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "289c9330-256e-409c-8413-363575cca228"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "941d17a4-deac-4563-8376-9e3f13404a01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bc5e8220-377f-4687-8c02-df63a3750d31"
                    }
                  }
                ]
              },
              {
                "id": "714c822f-1d8d-4031-8fae-0106c59580fa",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "09b6cb0c-5a94-4e91-adc7-4b80fd1607e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "71cc4b39-11eb-4c9a-9fe7-7b8d3e87b362"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41014b74-19e9-4e40-8788-5bf7078c300b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d57eed5b-50e9-46a0-a745-ac53a1f5675b"
                    }
                  }
                ]
              },
              {
                "id": "c21acf38-e7c0-4527-b6b5-068f386f410a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eaaaacb2-5594-4a3d-aed0-044c4c681ecc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7256586e-2e8d-4169-8e28-ca5e3a95fbb4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d658b6b-eb41-4484-a4f8-8ae7aaac58b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4da742af-dc99-4b5d-9cde-98e2b1bbb41c"
                    }
                  }
                ]
              },
              {
                "id": "0ce2d57b-7297-4080-823f-8b76601d4040",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c7e8c98-ad84-4966-bd67-f9cf6c15b36e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "753b1e64-0423-497f-8364-c41b8d0ede1c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff5a8079-b208-442b-8827-cfef29263490",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "23df57a2-e438-4f9d-82cd-9c2a2fa58328"
                    }
                  }
                ]
              },
              {
                "id": "2bdf2ab1-4f4e-4e7e-b872-c4fd972a91d9",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "334b3875-1968-42c0-815c-d69c652818af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9acced77-8075-4676-8753-1eeb3a29a3c4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "105281cb-2eac-477c-b2dc-9c282e49b1e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7475450e-1b44-43b2-a695-d7ce9d67916b"
                    }
                  }
                ]
              },
              {
                "id": "181d95c0-a5c5-4369-8d90-42ca7c631780",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0bcd50e9-82ae-45be-94df-dd925c356500",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ba988f34-dee0-42a6-a3ca-fc5f645e7339"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fda6df5-e62e-4566-8f55-dda59139e739",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a3fea71b-fa95-4d3e-80da-09ffcf958cbf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "93cad280-4cd5-4889-b238-464f6b093826",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7dafb8f9-d8d3-4a1e-be73-bc8cab4bafb4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "908a441b-2f2a-4000-b672-2d552e45191a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cdf07912-60d9-4e5d-ad68-00b22f766e6b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "388834d2-6ada-41ac-90e9-716234920741",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5a82a2a6-1853-4f68-abc5-117b6b3bfe09"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df11a866-d729-4304-b1f0-1d408f8a261b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4491452-f401-4b2b-8490-b7ef45029799"
            }
          }
        ]
      },
      {
        "id": "3efe3060-d85d-4fea-9025-a3da7cbaa76f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "76c8fcd9-b3a4-48ee-a544-2f4ed104f9fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aca149f7-9424-4afb-adc1-00baed231bbb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7068f84d-9f17-4ce1-b69b-8f1267416d36",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1cc83c3-847e-4e11-8b8e-e66fd7dda9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b8afa3f-0cb6-4784-9f01-28f85e7501b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1d8dab-a55d-4c5e-a7f2-6b49b97a0b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e8a9355-45a4-485c-9bb1-c2d7676a5bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de3ed33-8825-4ae2-b1d1-cae457dd3c4e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "737ba2f0-8996-4cf8-aaea-4ca69a798507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dddff7e-47a2-4ec4-af3b-fc095c88df5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb28841-fe63-4e0a-a309-8e756860e7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdf2483f-b5e9-448e-8cc8-5856c0e4c584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4779bc-c758-4a1f-a770-02546c7c2591",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20a341d-a32f-425b-816e-467bd3ca3193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f64793ef-60a6-437b-9582-94718146b738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c374cb36-36a6-4b29-926a-199b858f7197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfdb6ec9-ffb8-43ad-b9c2-fc14d50d0502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb91a8a-1cde-4907-81ea-7a892e37f354",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e3e4d5-eba7-4ea7-a971-6d5a2a6c9d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "319df3a3-64eb-4adb-b88e-a32ab8f3518a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cedc0b60-8d48-47df-a36d-01bd710ca442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1a6ff77-7e5c-4258-b9ca-06bfb2ab24a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d04606-5edb-4f01-b88c-6eafae3d9413",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "862d029d-6cda-4e27-be44-2b9b8f068804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc34a7c7-8e28-4abd-a663-f4976dc191b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d76871-fc1e-4dac-9c50-8a74e403b9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d24852d-15c3-4017-a5b5-ac9ba6090721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c4c1a5-67ac-4d54-ae60-5b0be4ceb458",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb36ba3b-cfbc-4e88-a676-d381920421a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ade53a-302d-40de-8962-1d2ee05bc3dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bceabc75-b4cd-4989-9f1e-631c6585c581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bba90d2b-9d92-4ff4-93dc-a420c72ba2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbfa7d13-6c66-4489-b793-85c2f272dad4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07167e6f-5794-4420-91e1-ef2f119bada8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a7cf69a-f1f7-463c-a3cb-a1ec322e65d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a1bc46-3bd8-4e8f-b375-b524d2baac3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "432e0f40-1a4a-4ae1-8626-f27d6664eb17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0fce09-ed14-43ba-a274-208118cea2ee",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8673c6d-79fa-4182-a54f-87b42b6be235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2287a65-38b0-4d19-a29b-9482e41a32ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035b9a8f-c0bb-400e-9f97-1ba0cb1d6adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb8e682f-adbc-4f2b-9fce-c5dc7680ecd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06878d22-6d23-4132-b6fb-b3823b92398f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce6d6d9-2120-46fd-880f-d032b794232c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e40aebe1-24f8-481b-b3b2-ddf9d27bfaa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0058752-a98d-4d10-8e42-44e9c5229426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "403a3834-5f6a-4c22-bd77-16e430a4d774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "324f1f51-101d-445c-a3cd-f615269c040e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0488a4-c230-4421-9736-2f964af53bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44cb09ee-fa74-4aaf-8cd4-e98a7793d3b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11f8377-85a9-4ce3-98ab-3c4a4097da0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e848493-2700-4a08-a2fe-0d33194e2bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864b2586-104a-4122-ba89-9d1bc5ceb2b0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b006e892-6695-48b2-aa37-c3dacdab6959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be17088-3ea5-4d78-b8a1-ff5db77a0786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb52739-d6f3-4ff5-8c00-bfbfe2959f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "505cabdf-990d-4454-aba7-d08f36f71b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5020fd-7eae-4370-9522-d8304131dbd3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0c8158-1eb1-4d5c-a470-8b78b2fb741a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df5288ed-0ca8-404e-bfa6-0f6a64eaac83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd1d2a7-a666-4743-8273-f2baefbb31dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fb3c45a1-0715-4217-ae5e-aebd5ce69502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404080b6-2ae7-4047-a736-ecd91ed0087c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b306828-cae2-440c-bffa-244dca6147e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c22b979-771c-4cfb-a354-e7955f48439b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1b634e-8a2d-43dd-a90d-e00348cbaf09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "53af852a-bc59-43bf-b1ba-9e2716ad6395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cef0a8b-7e84-453f-aea3-49358b177919",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e0f964-f34c-41c0-bdf3-60e86809c961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f75f030-a253-4024-abb2-e147a4675b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfdfb4b-06e4-4efa-a7bc-94216df35556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "11ae403c-295c-49ff-b7f0-b83abfa6cd7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f155557b-6c4c-40fc-8b6d-ed4ff731bf72",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d8f4fd-c430-4f0b-b1c6-2ffe8e87d072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f91839e2-e9b9-489b-8f6b-cd68561947f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7893343b-f296-4b69-8415-5513d96c5b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7553846-ccd9-4f89-a2a5-28e73b04f7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1399df33-3a3e-4768-a153-2b8774523206",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c14f114-3cc6-4cb0-ab84-3e61b18fbeba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81986bc8-45cc-4086-87f6-dde2267bc36a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d792981-c651-4774-ad0b-d3e01d433669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bde75fe1-a370-4dee-9a14-6be85473f225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73149fc9-6780-48bc-b295-2c8f6d6dcdb6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee39679-da33-4ce6-b422-f77e468686f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "539e78bd-9a5e-4cb5-9c91-14c3dd97efbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f9867d-6786-4488-806a-bad0b644cf7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4858906b-0855-4c95-b1e2-87af02ad05b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede74f28-d295-4b67-a084-404e4bdf43d9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "133332a7-32ca-4a01-956f-00bb84a1e8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31a981dc-ef94-4a48-b324-95edf8a02c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7210238e-05b7-463a-99e5-a3ec0c0ebe92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "80769cd1-e79b-40f4-a93b-77b4eee7f65f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f447445-0b83-4459-973c-68dd7b46fe83",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e53b4c8-0fe2-4d27-9a60-84c216525137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "350aa404-95b3-4bea-9f7d-cc3f86666e62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d0bbd7-1fe7-41f8-a7d9-6bd5ed98e4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "877db9a5-25be-4631-8524-5e08edd692f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0dfc57f-6c15-48e8-b89b-83bd0119e048",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6482aae9-76fb-4472-a249-9c9348d9ea0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98af60a3-ac18-4e48-b072-692a25b3d9f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfde0da6-e747-49e3-9534-324dd5525dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64636b15-a811-48e9-adfb-bf0d8c394a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9dec430-3513-4b5d-834e-54227d8e32e8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d15101d-5d56-4a0a-9e30-7073926af8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f90b85-a8b9-4df8-b037-0abd1b6f801d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5e6359-6038-46e5-b66a-e361fd30679b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9d16cd2-9e65-49c1-9e7a-275284bd5bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb8f6a8-9a72-4f6e-a5cd-c86b3f7dd4a0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c3feca-2d13-4923-b494-1dde32227dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "492e4ddc-b592-46e6-b95c-91b1d4534322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c7a6da-e0b1-406e-a715-7d23f5d289df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b65f660d-c86d-45fd-9294-5a1ffa3074cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e843260-dbf2-4f1e-831d-4cda7d1961c1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84842aab-bb46-4d32-8cd2-bd5469bf0993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14150827-2ae2-4132-99c8-ec43e521f773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dbf34e9-99f5-49ec-975d-69fd229b3ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c427dda2-c2d5-40a5-a9a5-414360753012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7ca493-d97e-46ab-a66b-75b80682fa19",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdebe917-30dd-4149-a306-931e9111119f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a12f7ede-4f64-44fe-aa3b-d80e4bdaae1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774f4902-f5cc-427c-b1ec-2bd56c7d8bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d12c193-6e91-4d89-a374-c21ab70264f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99200cd4-4ae5-480d-bc3b-cbb07f2fc300",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c33a02-6c8e-449d-8022-92dc58313a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f94bc064-7f6f-4478-b343-c773afd74899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a43e798-8ff6-47f4-af75-8d620b64b893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1463fad4-ce2e-4eab-9891-cc15d1dfd2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2925cb0-b7a0-4b87-aa8f-0c194e22fbfb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b28d65-cc3a-414e-b525-412acf6c0de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9836b948-cb02-4513-acbc-f85f6062b0dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d46f5a-5c4a-421a-83e9-d70a2a6f1e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9978edcb-45c6-44a2-9479-b0de443b68ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645d1927-6749-4280-ad46-dfd20ed9942d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8524f749-6113-422b-8b05-eea753ee6aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6159ce49-637c-445a-ab3a-cc48b3fe5c84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "690b06d8-e5a2-4c1e-ae92-10e27f7f42eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f51c2522-1c8d-4a3c-a7ab-25ba3513da5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d636c7-36a1-4d51-b6de-fe0ef91c3c55",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee7057a-90b6-4276-b322-da75b50426ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfe52370-4199-458f-8ef8-f5808cee1331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964a187e-1ead-4bd4-bf92-6ee62ae89939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e86f0da8-cd07-4ddd-b4f1-af87e53ee329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c7795c-8cd6-47ab-ad47-5686150eb6b1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "343dad30-36f4-4ba0-bfa8-1d41d46dc901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "babeef99-c730-4931-a6ec-5769915268d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fed5a5d-673b-4fc0-ae5f-fd28aed1ca84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40404cc8-ad35-449f-a8ab-2f7a27f468e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d500edee-4f6c-49dd-b950-d389df016d40",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a9f4b3-dfdb-427a-b112-d1d52ad22723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c145cad4-a21e-413b-bc89-0c00375ebd5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f20b523-8078-4a55-851b-f7a27dcee601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "166294fc-0201-4deb-b278-ee4b7c093089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2c726c-2292-40b5-aae6-44424f57e6e5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9fec410-7eb3-41d1-8443-1ce412e229cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42f17343-2a95-4373-b2a8-74f70373e9f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43072f77-31ce-4c27-a17b-cfd0e9b90a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a170f2a-c998-4641-8cdd-ce86cf741e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67ceac5-542b-474c-a727-d92d34bf8387",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "346af0e5-128a-468d-8c2a-7ce90dcf49b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dd5dd5b-b31f-4e15-92fd-969ca1e44ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc95c70e-22f4-4b37-9e8a-36c34d4043cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5955ac6-6054-43fe-bba1-98965853757a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cd39eb4d-a875-4dd2-ace1-32977444c0a9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db5b6eed-cc9f-45f4-bca1-e56ddf58d16a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa0aca9-af8e-49ea-9930-e353e704144b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "990df79b-e64a-403c-b013-59ad5d4a74ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "370e5a6c-ee76-41ee-9e47-33f6a6f6f21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a645645d-6364-4cc1-94be-0611622d6796"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16955507-2fe4-4c8e-a77e-587f1f3ac523",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd7bae97-9690-47b9-99fe-c3a092d209dd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e88760a-f551-4cb4-8188-b83a1f405e13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21935643-3bb6-425a-b151-93d33a19461d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa932429-3678-492e-a4b9-a33efc9c7eb3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f0ad16a8-8731-4f51-8058-39d207cad380"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e86938f-c5a3-4247-ac9f-cf2c4fe82c97",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4aa9aeeb-a3ac-4112-a0d9-9e3db945cdc9"
            }
          }
        ]
      },
      {
        "id": "807a3e08-4bae-4f2a-bbfe-5dbf057eb5a4",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "115c3d39-d7e7-4d4a-b1a6-2eac996cbd42",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6cd10d51-4502-486b-b0fc-eb634c22f472",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fffb4aee-b2fb-4fd6-a054-417ce5f8c56b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f204ae-4595-40bb-bf54-c465d8097e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4aa87d4-1960-46ad-86c7-80a2c54e0967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10bedd6-0506-4a26-a160-753f23412b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "76372991-c3cc-4954-b3d7-10729847100b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3abc359c-c1cc-42d9-96e0-03fa4ebf70b0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "162694d6-a755-40ef-a2ce-25513fffc3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f53b33d3-c327-474d-bdfb-9c708fc9f288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7fd200c-89e5-4ce4-8969-fe6ee86f6c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "42c4d887-df30-4a01-99ee-c7f396ea0b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e19a380-c30f-4daa-834d-12d6f2313b9c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7c0ff9-5bc2-4ded-a653-71e17d1edacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf4a8248-1ba4-4748-acd4-2fedf9ee65de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efcb7866-e025-4eb4-baab-bf92c130b971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6f2cbb6-2fc0-4599-8bd1-ef4e48989529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1fee7d-4a3a-4690-97b8-7c224aba6913",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3b6a08-c193-42ed-a9a7-e7745534088c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5441a351-3249-406a-8f42-0bbaf6e4343a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf78a52-6efd-44d6-aa23-ce291202ca62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccb50e5f-65d0-492c-91d7-f87ad13f5fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64bf3a1e-3f36-4289-a78f-5b5746e8d138",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e396f96-0559-48be-bcf7-0b44515c5594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "021ee7ff-428b-4ac6-a052-a759fcb0aa2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5981c45-3804-4b86-add2-8d8998a7e836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3115153f-b477-4b02-953d-f9a2aca409a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7262789b-e76e-49cf-a66d-6fb24f9ba364",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0111271-f8bc-4ccc-807e-a1fb8ead84f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffa6bbde-5085-4261-97a9-3ea1327f57f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3d936d-42b1-42ad-9ca9-62465fdd6225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9dd03eba-3ffd-4dce-bc9e-557c7ee12a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651127b9-3c12-46b0-8a8a-5e9f125f6323",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e8f13b-198d-4faa-bea2-a4d23abc4f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac8ded13-ce5f-4156-b208-4c57bb94d62e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab926ff-0594-42f1-95ca-ec87fbdf987c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fa0b8a0-f811-412f-bb66-3398a6fa13b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3fd5f30-53f3-47e4-ba61-ab0c3e08a3b3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc4b74c-a605-4d80-b3e0-b0ca4304c47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29883795-f164-4a12-b6a0-361fae2a4bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00c8cb8-1ad6-4a6e-9fcb-6345b69a7397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2369fcb-057c-4454-8685-70c6c7544347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4cb257-74c5-48cb-b26f-fcb935b6859f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6392272-7d24-4977-8744-e4d758ab4cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7759e8d3-fe66-44de-83f2-a33da261c8a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fae367d-195c-4fc4-ac0b-6a335c1a1167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24468f79-4b92-4d41-94b7-69f0ce0230e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3b6d26-770f-454d-88f6-e94d29c54a94",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d4cdb9-a7f7-4ec2-8fca-f49102f6043b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab41458c-dd8b-4857-b592-5a9c43fcb896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d67f744-7f55-48aa-98b5-e5c8c2b73982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7190804-4d30-45e8-9106-93294c046f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e40ee82-2e31-4473-817e-1931f2b449b2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbcfd3f-d02e-452b-8d3a-a76dacf756c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fe78bb9-51ef-4854-bb1e-73ab0a2bb0d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c783fdee-981a-48b9-b013-20edd47a3285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e36a7c62-536c-4a89-b07b-a56ddc73efa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ccdf3cb-510f-41f6-8d3f-042eb6b334a9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac1cadc-a1c9-4a69-b3f3-f8bfa9ed5516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce7d1d4c-a485-4bcc-8196-1b72879822c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f7d024-b205-401b-98bb-07c293721ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed90fae9-1db7-4636-9e5b-5b827e0299df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b286c1-e908-4ca7-980e-ff29d83a45c4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb788d8-536b-4c9f-bdae-0aada2c9e62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3ab20e2-b8f8-4c0a-9bb7-10aa82602139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c4552b-0fc2-45c9-99a7-36b529b71a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb9a8884-b7b3-44b6-9cb8-b8067e2ea63d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f96543-0159-432b-8758-d3d96536555a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33339e45-34e5-4fa7-bf67-0e5cdb898ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3f4041b-54ed-4929-8b69-173bbe812cbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7cd2526-9394-47b1-a2eb-b28e17208a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "63146b51-794c-4fe0-aa78-0b8aa907dff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3742fdf-999b-4886-979e-6b5f77be303a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "543d4df5-52c2-4c48-9aa6-b76d606b9ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "342c5a79-26c0-4b41-8421-565b26ced230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c890c88-1cd7-4b3e-9ed1-c7ddcd2acd89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "be963fca-d115-4761-bd40-18916b0a3e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a620de-aa56-4167-ab66-2817ebca1e90",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7ac65c-7900-4c4c-a67a-3e7559cbe808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4e58a7f-1128-4c01-9589-893bd0380e9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be0d9603-f6ec-458a-a46e-a2094c5cf5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8883ee9e-2fdb-4af9-ab81-8176cbdcef1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8de3f89-18db-4e7b-9bf3-ad66483778e5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84660acc-522a-418e-9f8e-a5fdc698c3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6894bc56-eb63-48e8-8502-e448b33d574e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4655ab54-c2cf-4022-82c6-294ee4df017b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0075495-7ec0-41a9-b1e7-fa6380293fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1374be1-9d6f-40cf-8869-8713ab6492ce",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8f2c30-87fc-4557-bc02-24c7acf49205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faa50863-27c4-40ae-af00-f5937f4de15a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499372b7-81c3-4c9e-8bd2-0f02659d088e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "98f5e00b-99f7-4e23-adff-b1ce08606e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7916b6b2-c118-4f74-bbad-d741878d062a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "250b3a1d-69f1-4a8a-ab97-0c9a3abc93c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2718362c-a898-4b19-a4c8-d225105b41fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f115c4-efb8-419e-99fc-6cfe5013483e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8427521-22a3-46f8-a804-eb0c326b7a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3b1a61-bf6d-42a6-9713-b7d83102cb58",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "118f4345-0a55-4179-a2d7-8508a9d2c3be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232d9d92-7c0c-477f-b90d-a0536e5c8b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e74599d-24da-4596-b846-4b9d55619b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b423168-bea1-4e14-9041-9a927731d201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4238683-de91-49a6-bea9-75768151000c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d368325-34cc-4bd3-8a1b-8ba15d428919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d35fa70-7474-4582-88b2-26efbf82c743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b873946e-a20f-4c51-9be1-8210ee42bba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84dd3150-c65d-4756-b495-24185b5fbd34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ceba35-8e89-4905-a8fd-2ab66317e159",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d7b1ec-b107-47c7-8934-96a58f2aa452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7da9546-29c4-4559-9abc-bc0be307576d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65fc69d2-8376-4a17-8de7-9dd4d634992c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96849cdf-6360-42f8-b9d8-49dee25f13e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d34f894-c61f-4734-a7ce-3d99e995a114",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "022c0bb2-8bb3-40ba-9a7d-751b16857432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "129a6ad5-58f9-4f91-beff-9bbe04abe28b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97562d2a-2e27-4028-bda1-47aa0b823462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71279d7d-e5d5-4f40-ae00-310c2684a21b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f93405d-d309-4450-8284-a4bfdcd076dd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d95620-7725-45bc-9841-d02ce4bfa8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d5221b4-accb-46b8-a38c-917b21645255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eddf6ce5-12d0-46d5-bb44-963d7d2a9f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a8a5b72-2e68-43bb-b276-8a7d016d28cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27190b8d-6850-46b2-b7c3-5fe5c17f056e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5374ca0d-37b6-43ce-b644-160dee452d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c4978d-ec64-4b6b-8481-757bbb0c4c1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6fc883-d20f-4fe5-a53b-3a23293e6a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39695fc5-bc58-4a65-acc0-c30b8bedab31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03aaa540-aa53-4c21-977e-b9d41f482d9d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb19278-fbb2-482d-b4ea-0c1cf3802c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14050587-b223-429b-bd1c-e09e732feba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3538113-3c0a-412c-8b67-0f24fcf9e7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cb26ad6-66db-4966-8592-d0f6a237ec42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c548a6d-66b9-4fb0-84f0-efc09e36d6da",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1c6f7f-68cd-42f2-95c2-3d43d0f3248f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ebe6a14-faf2-42fc-be8f-30df16aabd3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1bd41ed-ab75-4ade-aa31-02576887bdb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fb9a5ee-7a07-407d-9f04-4a468a00c792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1abf292-34d1-4456-93e9-0b6c673d2344",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "524985cd-4806-4867-8b8f-7786ee5de342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26ae78e0-2db4-4f40-a694-63aa413d42b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0356826a-b92d-469c-a4a7-13ba9600305e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "382e4f77-57ca-4a20-806c-6b37bbf413b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba16bdd-7a89-4686-9005-3059050ac6fa",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92704fc0-f43a-4293-9709-4ca9593f1e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc53f96f-22f0-4ca0-914a-ca7701279adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e48933-f9e7-4e4a-805b-4877cde85371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "beb51578-cc8c-481c-ba69-5b870b1fed04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bec26f5-2b0e-449d-a747-7ae6b49a6b6d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04270dc-6e26-400a-862b-d5691a4a1e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00aeee3d-7982-4fb1-a116-5e5d9a394c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d3e749-9077-4ad8-912d-f7be60770d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08fc2bf8-b66f-4ee6-b575-e4d601cbf0a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497dbfa0-9612-435c-8e4e-0534d0e429f2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f75efa5-3323-4ce2-9df9-18724a2cb839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2313b3b6-29f3-4d7b-8bc4-ce766f8ebea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06691e4d-6c6e-4e45-84f0-05c2eafae526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2af40792-69cc-4008-be4d-104774b32ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b941ae6b-bbf2-45de-9f9f-a4a7be1b2286",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aee138f-e523-4110-8f55-2ae161b55c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7cdca2-02ed-496a-8131-a6a95b53e8c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315941fd-c72a-4524-bbba-8276b9c09980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c13fbffb-5507-4c60-b607-96959230acc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc5a34a2-b7f1-482b-a9df-a572e7cf4df4",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "714ce930-2ebe-4adf-8b06-e412ab0130ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ced22c09-bd96-4ffa-ae04-93ee7826c906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de85a346-c0e1-4742-85d6-5d7ee536e9b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd50c449-c894-48d7-ba27-7ebcdb98bd09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336c0c01-f946-4bcf-bfb4-86fec8dee3e9",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3bdae5-e7f7-44f6-a0ba-801644e6ccc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "582d1815-b791-44e1-9aad-865a777bffe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9d31f7-a50c-41ba-a00d-264dfc155ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddbcf53e-9e84-475f-86db-4000e4a588ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcdf2499-a4ea-41bc-ae35-9d8d9d64523f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a7e125-87f9-42f2-9faa-68d0c2667885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8309b819-4b76-43d4-adbd-8d3e2e046236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4235054-9aa2-4737-b373-9d55d9e5da73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b424e90-b5bf-4b05-b486-181fd1d31707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca3f7cb-95b5-4f9b-9415-39f4585646d5",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb0c531-3cf6-44a2-ad02-ecd9344c3c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aecd358-41ef-49da-aebc-d8ddd067b5e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787076f6-f1fc-4f87-a418-347918e066f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df9c0385-5b27-4fd7-bca4-d25ece7e50c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206b513e-a26b-4380-b09e-308c41d4fdec",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6dea4d-b987-4abc-912c-eb96c60f5d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4028302-4104-4978-8d19-0cf7aadb357c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375183e5-b1ec-444c-bd7d-cd87b4d88df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f8b1b5c-bb60-4268-98bd-d42f0b2abf48"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b72c8e2c-926e-4f0c-948c-a8dadd296539",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "57db0b85-e594-4101-b173-23bc3de57bbb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0727042c-fb4c-4fe5-8752-41af811289ce",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d8e26ae4-0741-4f04-8cea-68971c841d20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a70065-8a66-4df7-b6d3-71450594de0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20189361-06ac-4be3-8a9d-0732cc656989"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fde9a31b-132a-4141-b44f-8e3bdbd4819f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "304410b3-f869-4ecf-8301-fc8b0fc55fb3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c93b3d8c-f136-481e-8b75-0184d6f900ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ced7b117-63cb-4499-bbff-d0d7978c9afc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "60510e02-4bc2-4f0c-8ba6-4715a2880d50",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2e0fe3e6-87cb-4458-ac99-cdf9199629cd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "db4ef87c-d30d-49b0-9a91-742d37fba144",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d595934d-693c-4344-9593-55337b250975"
            }
          }
        ]
      },
      {
        "id": "c57d4bc3-b579-4779-ba6d-4f4d915c3e9c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "675186b4-5a12-42e4-95a0-3333bf0b9d1d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1d7c60da-8925-4878-b399-0f2d480c4aa3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a4791f30-749f-4455-a132-5818a80a7a85",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5db53cd-6d26-4be8-81a5-fd449b2e05cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fa0eb99-824e-4728-af4b-26db5b5ed6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ff0725-ecbb-4e45-bf69-75e5c6505399",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63fa88f3-b73a-4e18-8046-b8c27686e525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "827e3356-dd24-4c20-8659-d5bb9a827b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7bd1f39-93d2-4452-b090-0ca7539e1931",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee941903-8f47-4b0f-ab27-0068bcb68785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae5fdba7-b8a7-4d6c-9df2-e574ce4319f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3bf7c16-1fce-4257-8970-69ff21d783ec",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac137f2-61a9-46ef-bbce-fd3ea4c3c7dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27347da9-b687-4106-9913-468f24a6c013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be033c9-3a44-45f7-8135-7c2b2896096f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8372d4c4-7dc7-48b4-a30f-de098de9ddee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ae948b0-66f4-4939-93ed-e0754403f926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427df7ad-0a39-4dfa-96ba-d363afba074f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb4112f-9201-4840-9992-ef6b6336ef42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb2936a8-47d5-4c2b-98fb-2bcd713d78ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a325a1d-8dce-4e94-a145-9acded7b4018",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a9128d-3f47-4caf-8355-0de6927c1bfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50bc7636-2db3-48b3-b655-57e7d6cef660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "876e3cc2-bb9f-4330-8c97-e136a0c464f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c4625b-11b2-44ed-a608-a0efd8d231b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "345a3e18-c75a-40a4-8d2d-50dd3af626fa",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf087dd-1a71-459f-8fba-55c3900c1599",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d60369e-a647-42c6-a0ad-57d4db5ac3de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e628ed-c636-49bd-861c-371df5e4515f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d0bda86-9671-4ffb-95c7-89ea4d7e724d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7983c29e-c050-4198-9d10-edfb7de2892c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "defefe78-5430-4f0d-98d0-46bf43de8b41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a362a17-9fb1-4f19-a715-47bb4c7a5c63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "167a363a-b9b4-41d0-ada9-6d0e2cb3aad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee898d38-cc57-413f-b26c-4a5aa597eee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bdd5cef-8323-46f6-b879-fd3419528c28",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f27baf-6fc6-43e7-a36d-b22e9dbbff8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8c96b1f-4c24-4fac-ba33-c7c55d043aa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a3dbf7-4ac9-4b49-abf4-6c0e88f5aec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43aba03b-bf57-443d-adee-280852cf159b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2a27f6-bae5-4ed3-89f0-38ea525ca259",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b461d0-48d0-4817-854b-f9e26c00b9ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46fbf191-99af-489a-b5f4-0055a074f52a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6a71ec-0e3b-44cd-8a72-de49140d9178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "726ccf7c-e2f6-41c4-9e3f-e1cbeb70a23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473afa93-a55a-41c3-a839-2c7d629c107f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58cc3feb-77a7-49b2-90ae-ba53421def93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "137bf2b7-eca1-4827-9a09-f2813d99172b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9aed05c-6dab-4c7d-9a1c-fcfb7ade2324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0afc847-a584-472f-b152-a8a3325f682f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b4ef20-60a6-4bb9-8629-54c344014234",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413e341f-d113-4c78-a3cb-f96703fbb284",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80bc2186-2ab3-4c23-81f8-9a30f6c03bd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2253dd3-0d14-41a3-ae28-214caed43c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc07ccce-fbf4-4304-8294-5e0c99c00dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f90c842-51be-481d-840d-692ec0586f3f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08576203-36c9-4291-a0f3-aee08c9362a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c80e0e07-669e-492f-8080-b7a7391f077c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7543a8-5959-4199-84c2-897b30f926b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "367a3e4b-60c3-49b9-8576-dde8c56f0de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94b80cc-1eec-4726-b856-6186d4ce5985",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34df0be3-a2ed-466a-a8df-06c2aaf2a144",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6fd4b55-f7c0-411f-abd7-b4af551e47ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0fdc8a-9934-4815-a079-afb5e0c01859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adc2eda5-39db-47fd-93f0-ff24f283e654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45793ff-7c6f-4da1-87c6-293cc55beb30",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c409e61f-185d-469a-8737-69551bc61c65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "972156b5-a4a1-4fec-a57b-a7c17e34f870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3b3ffa-0144-4ed7-a70b-ae723547ce07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5207e2d9-f63b-4eb6-a3d9-9ff96351b2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e20193-cc85-4525-b4bf-b64d3425a5fa",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62549442-811c-43aa-bfdc-d71f0dcd3816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26d8d029-a576-4789-b448-ea2f46814699"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb53268-74e1-4dc0-b018-65c97c2243c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c01351e-9317-4ef5-a64d-911f93fb9962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1297502b-d49f-47d9-9714-f8ff427518c1",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03acfb3c-5d5a-4b56-85e5-7f168061d8c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3088c3fe-414c-4b27-9f2a-5149124b0ac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e1a1ba-28a8-4db8-bdf4-582c10670157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcfda449-597b-4b31-8974-8dccf0e3f431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6d74d9-2a59-4f2f-9a6e-c2748708325e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8dc3a5-a307-4844-9173-69a32a107895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea524545-8ecb-4c26-8b21-d4854b87cc97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "474c139e-51a8-4365-aa72-2088b2898fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30e9f1f9-7a35-4ae9-af23-5a0c919a0f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b331dc65-880d-4e6a-9b53-d8fae438543b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc949d2-0d68-41a1-b770-8ea582074871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372c0715-011d-4fac-87f6-452d7fa70417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ab5586-be4e-4313-a2ab-d405a281c676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b42b705-5df2-4619-8096-cd694fb6b0f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29477017-f8a0-4b1e-8225-c0799eb70f65",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf05304d-fae1-4e1f-b2c8-727d4fe8ea87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aaa7894-4cd4-4b29-be57-b16b5fbf1807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e777924-a55e-4a54-a79a-15fa725cc7f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5acf0d92-22d7-4917-9c0e-62f121b02912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd69f26c-4cce-4e0b-90e4-46eb853eb456",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4dc5c1-6729-48b2-a962-e03880c2d7d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7c2d09d-98e4-48a6-89a0-d5c26a46a94b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "492e466d-59d2-41a4-b78b-7f106bf61fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "073abc44-a8d4-4626-b1a1-0696fae0a87a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19890d7b-4f68-4bef-8837-129abe96e75e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db8267d-d879-41dc-a8ef-2d0a29176cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35851bc7-efde-4099-901b-95ab992eb470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a641285b-d395-471c-bc0f-bccdd6e98b12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98000e5a-f7aa-49c3-baa8-4a4cd7b74492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed7d99d-4775-4d9d-80cc-2d975932cb05",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99a2cb5-31af-43a8-8f10-5b9bee49589a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30542a7d-874d-4a0e-9147-9b55b7f90100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a22c4e-f180-45b6-87b3-149a82990690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e049cf9-7153-4ad0-adba-b069bbe41590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2d8b0c-6b31-4e08-a4b6-d4ab7a364c02",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ed15ad-0386-4e08-8341-e8a9f59c602e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef1cd501-af43-4adb-b2db-5236002a2c2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "616b66c1-02c9-4b98-b200-53e93574deb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6885f07c-11fd-4dae-b9f1-540725ee3127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be29f27-f485-4038-98c4-0cc08f5d4686",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dbc860a-db74-4197-aabe-240c9083fcde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c0d8d04-3039-4678-8c9d-6020df09aaca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92aa0d0a-008d-4c8e-b934-376dc2bcd17a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86a4c367-a602-4e4c-8127-24001dbcd0f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b97c187-df4f-46e8-962f-9e02b9025de3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ebeb6b-cc52-494d-9183-3cc0adefee7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6f245a4-c840-4f78-94e3-67a777b4e7ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e1e640-6e00-4aa2-ac7b-b4ca3e57c06b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c5086e-06f3-410c-9469-b6d007091399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174ecf67-b615-4988-849b-c360722ee92b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95263a3-aef2-4f08-ba9e-4d2b888a0726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d19cd08-4e10-4e5c-bcba-7729474a4d40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d16f5f-34e3-4dfa-b209-148ee510edf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1badcc49-2e2e-4b7c-b811-a051bc1f255e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acce5dc7-aa37-4410-8d0f-6f1a46a9ea35",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f07427e2-6e24-4091-a115-cf85cb7c6f88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c503c81b-1fa5-4a42-941f-7a484dfc1109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2adbee33-d491-4ed3-9dee-abce544d546b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f418ecd-0747-4e8c-bd90-16d20de1237f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf05aae-0554-4f0d-a969-1e897cfb4bbc",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2d5ddc-0d1c-4622-96eb-0707e8307936",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c9a5a2c-0b01-43ee-9b8c-d3168b63086c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5b85d2-403f-41ca-a103-d14c18936ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d25f3404-7278-4023-a578-4d7392a999cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b08be3-78c9-45dd-93f2-f758f83ba8d2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f104b7c-e4e0-44a9-8ebe-0e2cce8f0c13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "104cf264-9640-49f8-9a6d-fd38a4c42b96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f6cae4-ebed-4c04-be28-97bbfdc43f98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24324fde-2671-40cf-95f0-5e1be7046776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1008aea0-1af6-4b2b-a6e0-f5d55fb2cf58",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1af7b04-37ef-4c23-bd16-1ee2a355c0cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "588c1d71-0af5-4502-9e80-15797f7e354a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "710e9436-3319-42da-a77c-25c80e3ad8e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac6616b9-3c0f-4576-b804-41fc21ef1241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7789aae4-bf71-46cf-a4a4-3d34abd6e6fc",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5ea7e1-fbad-4726-a149-47c93164adcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bba72104-32df-4a2d-a017-60f48387f655"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53e1cad-396a-4600-93ea-2af324d187df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee5f9da-293f-4bf4-9076-7d9770b13dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47034307-99b8-4352-8a05-72da1595a41f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad80edc2-6ac1-456b-9daf-f52c58114299",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da1e090b-7673-4381-9a89-43c773eb4135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51516a38-dc82-4dec-b90f-8417517dcd71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90e1ca57-6cd2-40e6-a820-1cba99aaeec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e92bcd3-f22e-4181-aa6b-1c9a848ff5f8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc75fadc-4803-4d10-bda5-868a27c2aecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd465afc-9a52-405d-ac36-5ae26d5db4ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f62dd8c-2c87-4d78-b14f-9da79a3cd2ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae5ea4ce-0953-4e77-8943-08a1dd54af84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d452d21e-f9db-4d4f-8e12-2a8c938a2864",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2348e49e-3ac1-4ec1-9a1d-1760af683f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a270ab0-cfad-4202-91ce-7e5f5908b024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f58f45-54db-402f-a23d-4bd57c586427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ea673c-0570-4da6-9a52-c592707cfd8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a99219f-860a-4eda-863b-5544ff8e6f44",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6b15fe-d4b9-4572-a093-837931511604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c44551-89c3-46f8-9846-560e242c1884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b017497-a35a-4ef9-86f0-9e114ee90ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f123c822-7f3d-478d-b4fd-4c25b76d8b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b444366c-53de-4ae8-9c61-fefca4c0f122",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6683f874-f94e-4e8c-872a-be94b58406db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88e5f4f8-ca95-49ae-8f9e-179868ef524b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de28db3-a94c-436d-9168-5c986592f0be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e9a2f9-6230-4e9e-8298-d998a825703a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a89a3d-64d8-465b-9ef5-85084131b3c7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365848e4-c65f-47c4-80ef-110f189a6383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58dcd160-5a8c-490a-9981-477630861d62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b86015c-67dd-475c-8a70-98bf5f2dada8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0cd0fdd-bbb8-46fe-be54-b0f927b0143a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49761887-4785-4330-9567-a175caefd37d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83949ad1-6012-4d1f-a3cd-3ad0bfabe362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d366df70-5d73-41fb-833a-8de655251437"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "280b816a-54fb-4679-bb8b-862b03f1d9d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97dffeeb-8ccb-4f30-b5ad-6b54426af0cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ca1899-dadd-44e4-8ddc-b817a78c8290",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26e1028-2aec-4605-b469-02c0e2d4361f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e103ec53-3e77-48ae-a695-e7308387c89a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b84cbca-0c1c-45fc-8f61-e7fea0e4a397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad82160-4143-4710-af0c-60ba6f8484f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b53555-9f7b-4f8f-9716-632fcae2776b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ab6624-2db8-4bf2-bd30-c213c15798ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "941d0f45-6988-42f1-88b6-5257e220f496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d882d1-bbb2-4fa6-869b-46885fdab88d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ebf0bb2-5746-487d-9a1b-f6f7121a3c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6db9b4b-af25-484e-aa1b-6346aab17c5b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193547a3-2613-4958-a8c9-ae4e10d254c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0cfdadb-dce8-4092-afe9-bb00efee9c27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe7f4a3-f022-4071-aab2-3758c133fe69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e512747f-f11d-443b-8ff5-7e5db292e1ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e27c67-2ddd-488a-a6e3-e56e17d30186",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aaf2bed-ba09-4189-94c8-471176ed56d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12e48a74-3dbf-49a8-add0-2608144c2f15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "279f64eb-5971-4b32-a8ff-1326799caceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd42d084-f7b7-4d69-96c7-14eafa5607d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959a986f-b94a-46fc-bef6-f535cf1bf407",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b851e7-e5d6-4973-865e-0b0fee897346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81402cae-0062-4507-85d1-2f023149ac62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec07f90d-6e24-4393-947a-7abd5545e150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "951f6908-acfd-49e4-b3ba-394c4fc5936e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88924beb-e339-4f18-a98e-de77bdf536bb",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d72274-f691-4d25-8347-2265a6b7eb0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed9eda77-375f-40a4-bec8-6e67d9952f8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d87648c-5bb4-41fc-97e1-b901e23e9ee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "804adc2c-0f7e-4fb3-8090-ae3d0e849c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8b957e-faf2-4644-abf9-0895371c3b04",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d345e5-953c-4d51-adf5-b19c80808a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12c23749-fa21-4882-a3c9-660476907b5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc33f5f-f101-4806-a719-ef6c3672bc76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "994417b4-fa1c-4173-8bc4-c27e57c61029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2eaa4b-d02f-4784-9cc8-6d2d4c4cf608",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0aa9ddc-db4d-47ff-aa7a-334a448bce62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dde50f5-7dd2-445d-8c32-5464a3bcb951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29107ac6-84d5-44ff-b348-ee95e1ea5d9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "142279fc-ea40-4d4b-9c76-757429a3a9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93a9307-9c52-4f8d-b6bd-2d8c48d6d05f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1b4ee4-88a4-4067-a8c0-6f1c56da4d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe452565-b4e1-4d22-b1fa-8b4bad23a955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4101d6-a550-4880-91da-3f66540f0468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05166257-5268-46f3-9cca-6cefbd73d044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1943ba-f376-4ce0-816d-14fe4640cfe7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68abd2b7-1a86-4c5e-bb23-6d6c3ee9e850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee622d55-8824-4e2e-b4e9-13da57b550d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5349d5d-ea04-4a14-a617-ab543b7c17fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb4a5fab-5d62-4fc1-805c-cf43c25ca722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd0b0bc-4914-4e31-b85a-6d2ac8db07aa",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58c9faa-be81-4ada-bbfc-89da22fe0993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93cce41b-4239-4193-a05c-bf374c3bd6db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1faadde-4a1e-4eff-808a-c0a07deccb97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "512c5903-3577-43b6-ac70-ae11b6e2755e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6627188-a11d-475a-acce-18aa654b6b09",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821a3c9c-05cb-4e69-85b6-5d6c7bf59bad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1d428a8-4023-4c39-8a84-1f61c7d45462"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd2fa0b-d2c0-4d1f-b708-a89fa016483a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc7473e-8b5e-4a47-aa53-68cc7c853901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75f070d-9778-4969-b6d4-6ad8fdc96f6d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460ffff6-d53e-4201-b79a-f1da8b9f3bbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd30a566-307b-4f73-acaf-eb5e62e8ec11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf00106d-a32b-409f-ac78-9676bdee1e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85fb0323-626d-411c-bd26-a87679c09aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b670c280-8ce5-4b41-bd20-9d38e4477e85",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c880db0b-0eb5-41ac-9725-bfa3a76bf0d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf12bb22-63f6-4269-bb7b-5fbf3303025d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "584221dc-ecde-4f7e-a751-e71ac2362a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3314dea-78be-4299-8b09-71b7fd29829b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e826685-5300-4c60-86e5-d8c15b9f5848",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e150180f-cfc6-474c-9ed5-8cf132c92743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "797201ba-7c12-4ef8-9184-8db484f6ea23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03b386b-7fad-4d00-aa69-ae0744bc29b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0b9404-411f-4556-b2b1-22c134aa7242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9df3b0-f4c2-4498-acd1-bd954f4586fd",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54a455d-2d16-424a-a63f-8419ab2cfd46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "962b873b-a270-47d6-b91d-afc029179b42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25991af5-0532-47ef-8c1e-2b5c48b40b83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4446229d-2c2c-49be-8d3b-68c62f4f0a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc74a97-113d-4c64-b142-965900d45b93",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75565e08-0805-4cd0-add2-2bc0cd5915f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e58c438d-9107-4e83-b5aa-913374a2eb18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a077d1-43d4-4892-9d0b-fa1ffd7d99cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77c02f7c-f399-4733-a8c7-3c56d120fecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5059ab-c966-49bd-97ef-49ac4ffa6fd6",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8cdff0-ab95-41ca-bae4-2fd58d4f5bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff98cee9-28d5-49e7-9768-5167f2e40773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab7448f-643a-49a2-a009-d0d6df330577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e08d72f2-c421-430c-8f2e-59c38f326399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f14cd0f9-2ee9-4ef5-9a73-5ee0e7eee720",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9a1881-adce-42ce-a6c2-5e74d1c115bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4851a564-b3f8-4fda-8ef9-0b2dec0717e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2c1d6c-d364-460e-96ba-6d157bdd7e49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42dc3d1b-01ad-4ec8-815f-a1312f1bed10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a0eec1-9e7d-4311-a36f-3065f150ef42",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8663a92-c44f-442d-85d0-1689246640c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d885f7-c8c6-41ff-ad62-c46b8cd98498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e66d21-df09-4419-a965-5952532476c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd3bfb8-190a-45f7-babb-bf6c274b5081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d959325-ba1a-495a-a32c-e618a374ca14",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba51805-f551-4fa2-b041-b30075b5b06c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b827ea06-a932-40c8-b628-5b5c770af03e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9478085-6370-4706-8291-9d4e622d8123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e512f916-6302-44c0-8541-3821511a427e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac91e1b-c539-445c-8ba3-58f4fe278b84",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde2b07d-1e79-4edb-bb56-d6c49c64b4fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "206d59b7-5b32-4592-b87a-ce076e71adf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c281cf5-52a9-4f73-b69d-c086c3107b77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "523d0866-c5f9-4d2d-8dad-6f1288a4a8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f978880f-5368-435a-ad25-db79f4daae10",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da214477-490f-424c-ad6d-1222de7caf8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2aa7b5e-ffeb-4375-aa98-f4b46eb6f876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a8da63-737b-4ee3-83cc-ed146a45981d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e96c8e7-4330-415a-b007-f421d2edec6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3f4c35-5bf3-47e2-96ed-0e586e482329",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78ce957-baa7-477c-87c5-bf4bb5b46826",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db794095-9d82-4e64-a6c3-e8ec2d99e214"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3c9e71-62c7-4da1-878c-ddfa9d400c5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "060bf942-5aed-43f4-8adf-b107547be278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25cd923b-881b-40bd-90cd-a8592ca260db",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90332866-3955-4216-822d-2a25244de193",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4328f95-b955-4189-840f-b28a8578c0d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d13d20-cd74-4449-8e62-0f51003baae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80063e27-57ee-409f-baa7-9691ec41e7c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35da9c38-1e59-47ee-99c9-74823ac9d2ce",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256a0012-471d-4783-a4af-9a2adc125f1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1688e42-0f11-4fee-86d9-8b7d7df0c084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f70a8f5-6b21-4bbc-b883-8753c8592a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a06c5df1-fe18-4171-bb59-68ea05f9701a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8a1d36-ca5f-45b2-8baa-a99a1fa6b859",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6439f4e-4c7b-447c-a6e1-5ad575e344a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e00d4aea-5e12-49ff-9628-7664fc93b5dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16bd7363-149d-482b-a8e3-f27cc137cd22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3c78783-e29e-4c63-a4c6-a9dc1f82b7a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfac5202-aead-4dd6-9f73-5c4bbec862ba",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745d2d36-82ac-4cd6-b96f-8efe4de75858",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7db33c4f-0750-473e-bbf2-ac0774bba146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c6afe6-d48f-4501-b447-dd6d5a19e56d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "576cc27b-ce83-4309-811f-4a514bffbd2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7905fab4-94a4-456c-8272-052258156759",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2b05d6-b255-47c6-9d3d-470cab87ab30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89660a9a-68c3-4c78-a1fd-f1bf313f96ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34a81fd-555e-425f-8bcc-dd65188cbcb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c402655f-1f2d-4454-abef-7d0abb4ff170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5b0860-58e8-4fa1-8b2b-70e07db2d460",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc22f28f-419d-4342-bb59-9788876871fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cb7d130-3436-4311-bf62-d11da741c7ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6cd5cf-e0ac-48f3-9b81-72520ec78268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "773a1484-c27e-4fc8-a93e-8c8a211e3c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ac0841-5bee-48a7-919a-55e640e961b7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea98066-493e-479a-b51f-9f6efc50506d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b06f7a0-6127-4db6-af50-0ad0b2426b40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "263cf7bc-c2e5-4ef9-997a-7e33a597d998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bdadb00-d21a-4b3e-a6fa-2c1ca6cc9d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f547ba8-d512-4aa6-8439-3fd380387a65",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180c9924-05f7-494a-870a-921c8cf23760",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a67eaef-7574-4b23-ad1b-bf848c25f45c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ae2e10-720a-46d4-a1e0-50fa49ff315a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "224c80a9-cccd-4862-900b-56f08a9b18b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa329f4-ab04-4dd0-b032-94f3d32e3a66",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c670cc-20a3-4f7e-ad6a-e22dcd773f4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f0c00c1-81cf-4a8a-8271-c03ffd4af306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e6795a-76bb-4d33-b362-ae07574dbff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54e4f0e4-0a2b-48e9-89ee-cd66b90468f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735da74d-5a72-4186-a057-fccd4aefc50d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b03cec6d-4d56-4c41-b0ac-123207432ce4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f39e711d-b1e7-409b-9102-5b06ef75573f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31db844b-fbd5-461f-8da0-cd0695d3207b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3009e798-49a4-484e-9e60-0335f0701cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5599daed-3c5f-4a8c-8003-c69ff8953593",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501a7dd3-cc89-4b2a-8dce-984f6a444ce9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bde9a769-eda9-4845-bf97-4daac8c5ea01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11cbc20a-3c15-4385-81c1-5cf7a21c75c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e263f12f-7fae-427f-befe-98694da563b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88be400-af80-430e-82c5-52ebfb096800",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81b3a95-4873-4e86-ba46-fdb6d4107006",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc258de1-71c9-4ce2-9c51-7b66c6387acf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a38f67-4161-4ac1-a5e3-22e644686b9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa0a41a5-7566-4fac-ab32-4b5c2c57cfac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c076a88f-7388-4fb0-b9eb-34e1b64ac817",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8dac60-96b5-4dc4-8f8f-e322f2de25e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9321aecf-aa73-4405-8860-44460b5ed78a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78921d41-0b64-420a-8a0c-73fbd8d1d63f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2520850f-7fd4-42ca-aea0-14eda749cad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374c76de-af3a-4245-ae4b-c316ed2fd9cc",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521451d1-1710-44d6-8d69-610557f82e25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6335798e-a4c5-4882-9277-bc3d5beac470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96057be-c021-4c46-9d4c-e650db182750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa5512e-a7ae-4091-be77-13d14efd481b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b22d22c-e124-43a6-9b1f-33b0df570de4",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be21b943-34c8-42c7-9daf-a0b440b37a57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fc965ba-d94e-4a1e-be5d-0fa9a2e22c95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab13427-691e-4e08-8a55-905f6c9dd1bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fceb229-185f-47d9-a432-f03ae9c238a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d32c87-1fef-47bf-a42a-d32fdf27200c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b33ae4-3077-4e5a-8059-3bea7dff0842",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b5b0dd8-3fc8-4efe-a187-9f729c63d59c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a355232a-9a44-44e3-9799-dfa9a95c8c21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "911c7be9-7739-4cb9-ad32-af11b377c9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1893fa3-4d8c-40b6-a711-f67d891abf34",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f769331-d815-4137-866f-4391ef049b1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "748b6044-7e36-4c6d-bbde-7346d8a47015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef986e4-40a9-4c17-b1e8-7ad0dcedd0a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73f34a3c-ecda-4895-8845-c6d3810c31da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626d80ac-bfdc-4357-b57e-48ae18ccfe2c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244b24c2-29ee-4a7f-9a1d-85b05bb1ab0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8887e1d0-5ef1-4c97-a85d-943095618861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4dbd59-9402-4236-8b8c-48ad17143b03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed14c3d7-a037-4b73-b406-80df8ab6fdf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34af4b10-953b-4120-a5c2-80cbfa9f0643",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958e6028-17a9-4cbe-91dd-35bc95400f53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e25779e0-20ee-4750-a08c-0a94678c9941"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4e09ef-1162-44cf-aaa9-ca7af1083c61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed0b7025-c5bd-47a4-affb-1222e2bd5e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dbe8179-2390-4cc8-9dc4-bb57760eefeb",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1611e0-6087-47ca-9f0e-2e8ab77d3c21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "156cb898-fae7-4f6c-8f35-bdbfa95c3615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8757cd47-2621-490c-90ee-6223a939446e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "197683a8-2850-4bdd-9b3b-f69db8dd3201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a429310e-d312-49ce-828b-42b2d42c135a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2547cb-33a5-42b6-83f1-e9a12e40e6ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2cf75f0-ee72-4291-9338-ead3f58ceb2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad9ae2e-4874-4a58-8fd3-dadbf6bc0bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0282a697-dc27-45a2-b954-a738c946f717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945faf60-db1d-4d63-9dfc-5833dfce4f95",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69d3f92-ec43-4e42-b8f5-ded729e46289",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53d5cc5c-7f58-4fc1-969a-0742bf0d7e67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb9a124c-6263-4c01-909b-5af3dc01f326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e8e3ce2-6681-400e-99f8-87ab4262183e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2bd6fe-6930-44f1-bc9d-3ec69dba9799",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2235a65a-07d4-4365-8a5f-196d99d08158",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2ed0abe-82bb-4cfe-8eeb-e99f845b80a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e783ef4-db63-4ddd-9e86-f9c73655559e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f7b55b0-0e00-4264-8b63-ec9f0baa2f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e5834f-17ec-441f-a3aa-4ab6f9b51a75",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0318348-d2a1-4944-84b7-521673051765",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e48f2d1-cc0e-467b-acb3-7e9846ee071d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46127cf-975e-4b50-bec0-74f1452fb685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a03bfb7e-9a3a-4338-8a54-bbebc5c00d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa5676c-c95e-4963-80e1-32beac8c430e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c33ceae7-556c-4fa4-bc1d-53ff852f4a52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "422a4c39-8db8-41a3-b645-aa24a2873f52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44137143-d32a-449b-80fd-6b75e729c51b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2dfc622-cc59-44c6-9a5a-e6a6c81197cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5869176-b80b-4082-9709-879d9e3c474f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a960266c-5273-4ee2-b23e-6bb7e5238fca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9edf3362-ef6f-45a6-83dd-37ce649cfe89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7fa89a5-723d-4740-b8b8-f98f5bbfefad",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ba81145-aa8a-4ae7-b136-0c421423e828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed45fdbb-b634-489b-98f1-d2907139ba05",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4acd9955-1071-4284-a390-bbc21d4e5119",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7818f848-7614-484a-8727-50d01a897b4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73a20b9-0cda-4cda-bfaa-fcc9fc8ee532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13d05b4f-5b85-4893-bed9-bd3fbac1a5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8508fc1a-3d04-4161-97b5-f66537bdedd9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2983d6b-ef79-40fa-811d-7fc7a8e9ca53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1569054-23d1-428b-82cf-d3165f44f1be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2ccee8-b2f0-4866-bb78-8a9c4f3016ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23f2260d-c7c8-4b29-882e-3284dd177337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30479137-1e22-4ced-9842-352451e91c77",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e95894-71aa-436c-84d2-1b593131653b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62daf9fe-1de7-49cf-8d82-5835cda2dbad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4260bc8-2880-40d2-a58a-a52031e36a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db08a64c-175d-4d99-9d9e-755f806eb112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26694a55-7881-4bbc-acd4-7ec92a3abfaa",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc27458-8c11-447d-89c1-11057e997a1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef14dee3-5fee-4b0e-9cd8-7c22b71a5636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b86c068-0695-4891-9c8f-962cdfd56008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e0c8c32-c797-4809-a9e1-aa09052ac478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8582d336-0e55-41f9-8879-58e459e61432",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18664e9-66d6-41bb-ae86-e8c0d1d5a3dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "907292cf-14fe-4d90-b453-a4bb2c995610"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6aec96-8cae-492a-a81b-f2c162c759b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96780795-39d1-4a6e-8b6e-451d10ee540b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f10e326-0246-4b29-a16b-411cf0457f9a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9f38c8-e604-4bbd-9e39-67aa3f3045c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5803dc9f-16f4-4cef-8672-3301c223d836"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "687c07b8-8332-4cef-b31f-bfcf0883a1b5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7336b0be-b853-46ce-9307-d1dd8f660f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b01f0f-5cde-4250-9941-5c2f39456115",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e193700b-c4e2-4ce3-a4a5-63e0ec10fa94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a09bc60-73c6-4c94-9645-1ac81936a140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7ef6bd-c044-42a1-ad17-bcbecfcffb31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d56eb3-e2f6-4a49-ac58-6fb006e9f861"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0a42deb-9fbf-4bdb-a808-66e3afd5af0d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efb3d001-2d53-4bf6-a600-568eb8afb0c4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "715dbb2b-f493-4c40-9720-e0c46717efdb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0ef38b06-dac9-45e3-aacc-6a8f136787e8"
                    }
                  }
                ]
              },
              {
                "id": "d9743c56-df9b-4e39-9d41-d647b2f296c7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9e4298bc-31dc-429b-bf40-f4206ef61827",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164cca7c-7532-4670-acb9-e3194b30487b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9c230a84-d290-4868-8429-11d3116fed86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71373e6a-f501-4030-868a-35a6b637f2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4458fe49-9a05-41cb-abb6-d901e675bdc2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a63ce395-17af-4cf6-bf72-66a92ad20b31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "baf6ac98-8ba1-4ed3-8a4e-b9082ee4c9f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e917f19f-0ac0-4865-9505-316d719ae0e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bede9952-5e65-4907-94e9-b248d1a8b57d"
                    }
                  }
                ]
              },
              {
                "id": "9337799c-ffa9-436d-82f5-e680e4323bae",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "76d41451-e5c9-406b-adc7-70ff2e0f0c45",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d80a651-9e79-4894-9e4a-55d865015972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "bb94e8cf-2ee3-4e4a-bc7a-2faea20b6f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2cad29-5fe6-4fa6-b04c-dd3e850f8492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d12f319-4de4-41d3-8247-65574a5e1bea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8cf5787f-6db3-4001-8a8f-5714d2a2ca70",
            "name": "Positive Testing",
            "item": [
              {
                "id": "22aa873d-c6d9-4069-a069-410618f6616e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "02466618-a51f-42f4-bebc-909ca1a7efce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bbf887c1-295e-4ed8-a365-06135f53ef39"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a100cd6-f895-418c-a13b-ab3eabc6af0d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4d65e5f-9c92-4148-b0da-dc00663c12e7"
                    }
                  }
                ]
              },
              {
                "id": "03125f85-097b-4f89-a45f-fa7a57ae1e8b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b04a8879-ac88-49b5-9c4c-8886c2dda947",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2b49c667-8c5d-470d-91f2-bbba9d174e8c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e73b4740-4c47-4ceb-ac94-bac948b09086",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4cbdb512-57ac-402d-8628-d344b5b36dd3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21002628-7e3c-4383-86ee-18a530e9f35c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "aef5fea3-e10b-4638-93d9-55557b620d0f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b48bd64a-a5d5-4af7-8d81-fdeb0bd60740",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "75bfac31-6ea1-479c-8a28-ed3bb3d8717a"
            }
          }
        ]
      },
      {
        "id": "d560c65b-1958-4053-8527-c3bfa0079f11",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0c41f2b0-3ffb-4688-96d2-02be906616ad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "992d2d83-f8f6-408e-a84d-a3ccf001d2f3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c7f7be48-ea5b-4fdb-8276-d1ebbbc6da78",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7f9cdd-e4d5-41b9-8abe-360568f8750c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bc6f5602-8066-4825-91ed-6c9272a13f7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da30a7c-3ae5-4a92-affc-f34e8cb140f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2290552f-1ca6-4f75-9f63-61fd33280eb9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b465835-a309-48f9-abcd-c732d3f134ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3de343d9-711e-4681-a8f5-8a2bd67539f6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d9d10a3-9a27-4c02-8989-0e476c6e7051",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4e4ce57-bb7b-48f4-a068-8a416b97e632"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e2afd882-5d3a-46ea-9928-602b72af9b1b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "39a8facd-e923-4daf-a77b-966c2131fa68"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "28ff7fa5-4943-4139-a074-82bc93f94e18",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f72a079-4373-4fb9-af8b-f5d579588f54"
            }
          }
        ]
      },
      {
        "id": "8bdfe858-4a9c-44b8-a8da-8b099c8ff085",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "54593635-b642-4f21-9d77-11ee17cef193",
            "name": "Negative Testing",
            "item": [
              {
                "id": "364ca07f-d43c-4d9a-b259-c73c330741f3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ea5e79b5-137a-40df-a5cd-9b41b8d6b1ea",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e11ab72-644b-47c1-b974-8d544a870779",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb671b4f-290d-4517-81d4-2a718b336823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a272d78-95d1-4840-b3f8-6e17d716f0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "363a9aac-1a5e-45b8-aea1-3710fbb14b84"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe02ecea-0131-4946-823f-e803966a838a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a1f935f-e961-40da-9342-c83a533c5465"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d9dc02a-9af0-4b4a-b3a3-cf9382e1eef3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1180ddb1-c24d-4501-b6ba-466a6f9628f7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a388cefd-f878-4bad-bc6c-f9a1b11103fd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f305dbc6-2161-42a7-aebf-da1c3ef23b33"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fa3fe126-e1fa-4c42-81d9-1499770ee4cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9bfae472-edaf-415a-8a16-1926906cb174"
            }
          }
        ]
      },
      {
        "id": "c5b285c8-0211-440f-85df-38f128c45f22",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6a018f8d-4b43-41a8-b50a-5bc0de1a25bd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bc634c15-4736-4785-991e-978f46c6d21c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "65413985-eb86-473b-9f43-7967361cfe4c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe17ae2-6c37-4a5a-8fbb-a68c77c09830",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a91a0e64-d6f4-4911-b6d8-b058f7859304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8021d47a-201e-4e3d-acbd-15601e3ee610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "77843c3a-3cf8-45e3-96a5-c16c710812a1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1176f716-905e-4d5c-8cc3-bc4ee8a76419",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c033386-a912-4f37-beac-169047fac1a8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f8ffb61-d951-4b48-9c18-857038f6d26d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2996ab8-add5-4e89-8eea-1f0273cda4ff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bbfb371d-7e90-4a9e-bff9-aaaacb89b3cb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "df007cd1-edef-4dc4-bee3-a875d7df663f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be1cb759-12c7-420f-aeaf-7b75360832e4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "607a8d5b-ec9c-4225-94ca-abf5330cd0e2"
            }
          }
        ]
      },
      {
        "id": "65795ba4-9c79-4e11-ab6b-8dc99167a009",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "35d903d3-8678-48e7-924a-571b104b6dd1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "257c9bba-003f-4b29-978a-f1bb08a44988",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e708e7b5-1ee8-4cc2-b1a4-b93e66425c24",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f4afb70-f833-4d40-9231-86152ff0f96a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98f2a246-e4ed-49bf-ad1c-7a6b4cd6f139",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 86.19649122807013,
      "responseMin": 5,
      "responseMax": 4868,
      "responseSd": 386.56681861076277,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700354299941,
      "completed": 1700354333854
    },
    "executions": [
      {
        "id": "7e59e988-da1e-4374-85f2-32aec730ce7d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "01e9e038-fb14-400a-89fb-b0f914fd2ad3",
          "httpRequestId": "14154cea-39a6-400b-8af3-b09231145cec"
        },
        "item": {
          "id": "7e59e988-da1e-4374-85f2-32aec730ce7d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9312c5eb-ac3e-4a0f-b0ac-624287517909",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 0
        }
      },
      {
        "id": "79022b35-0d04-49dd-a9f6-290774d93152",
        "cursor": {
          "ref": "199598ef-454c-4879-bc8c-2f6c078a2028",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7e6a04b4-c6f5-4ccc-9f84-895d8afceb20"
        },
        "item": {
          "id": "79022b35-0d04-49dd-a9f6-290774d93152",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "cab2df8c-aca6-4e7f-b0ae-5547156cd0b7",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "cf073fbe-732c-4677-8460-32ff1bb41706",
        "cursor": {
          "ref": "24f00bfa-dbbb-47ad-9824-50bf752eea40",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "981edd62-64d0-49dc-88bc-e27ab62b6aac"
        },
        "item": {
          "id": "cf073fbe-732c-4677-8460-32ff1bb41706",
          "name": "did_json"
        },
        "response": {
          "id": "efa2ac89-f3ff-4cbd-896c-3ab9c19268a0",
          "status": "OK",
          "code": 200,
          "responseTime": 329,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55aa081a-debc-4650-b83e-938a62139a6e",
        "cursor": {
          "ref": "8c52e7d7-9102-4414-8fcc-68a65d58271f",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "66b4228d-5ee4-4b6f-aaa9-bd563bb76cdb"
        },
        "item": {
          "id": "55aa081a-debc-4650-b83e-938a62139a6e",
          "name": "did:invalid"
        },
        "response": {
          "id": "25118f56-40e5-465f-bfb8-e48128f95649",
          "status": "Not Found",
          "code": 404,
          "responseTime": 729,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55aa081a-debc-4650-b83e-938a62139a6e",
        "cursor": {
          "ref": "8c52e7d7-9102-4414-8fcc-68a65d58271f",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "66b4228d-5ee4-4b6f-aaa9-bd563bb76cdb"
        },
        "item": {
          "id": "55aa081a-debc-4650-b83e-938a62139a6e",
          "name": "did:invalid"
        },
        "response": {
          "id": "25118f56-40e5-465f-bfb8-e48128f95649",
          "status": "Not Found",
          "code": 404,
          "responseTime": 729,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96349de-e499-4e7f-82dd-fc83d4d5658a",
        "cursor": {
          "ref": "52b49fcf-30bd-408d-bc58-821b0b3f1224",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a5e4e6a9-8772-4760-adf6-f1dda7ff277a"
        },
        "item": {
          "id": "f96349de-e499-4e7f-82dd-fc83d4d5658a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4ee0cfec-e772-4d26-a49a-211e1deb77df",
          "status": "Not Found",
          "code": 404,
          "responseTime": 56,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a5bd23-4462-4b64-a091-a3eefef7616c",
        "cursor": {
          "ref": "ecc8b1ab-3fa8-4b3e-a7ed-99afaeccd923",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ee2c4a3c-2dc6-4ce9-bbfa-682111289ee0"
        },
        "item": {
          "id": "68a5bd23-4462-4b64-a091-a3eefef7616c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "44976179-4fb9-4d18-b91c-3043a137e148",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a34190-f8e0-474f-9109-d1edfe25bfe3",
        "cursor": {
          "ref": "e7e37c40-8e72-4158-9ecc-da8f2e031f95",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f42917a5-9cdd-461d-a5d0-9b4f716e99ef"
        },
        "item": {
          "id": "10a34190-f8e0-474f-9109-d1edfe25bfe3",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "399c11c8-3a9d-40b4-bed1-521406698c70",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88f23ea-b677-4618-b0da-3635ec934660",
        "cursor": {
          "ref": "e95c3f18-fead-41b1-9259-80ca1af8d92e",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "26c9ea42-9a09-434d-a1cc-bd448f594b28"
        },
        "item": {
          "id": "b88f23ea-b677-4618-b0da-3635ec934660",
          "name": "identifiers"
        },
        "response": {
          "id": "d546000b-3aca-4097-8a1a-8899257a9107",
          "status": "OK",
          "code": 200,
          "responseTime": 87,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da64d5d-823b-4acb-b08f-6c8eced25e5b",
        "cursor": {
          "ref": "b2aa687e-179c-4cc4-af4c-844003846338",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "68c148ed-b683-4dbf-b40c-fd9c66e3904a"
        },
        "item": {
          "id": "2da64d5d-823b-4acb-b08f-6c8eced25e5b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7a3319ab-860b-469e-a12b-40174e34eab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f3b631-f3c0-483d-acdd-203dfb7ccac3",
        "cursor": {
          "ref": "ab551c5e-8888-4e5d-bb91-06763c33adb8",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "76ce61ab-2391-4d6c-8e98-bd2965690fd0"
        },
        "item": {
          "id": "24f3b631-f3c0-483d-acdd-203dfb7ccac3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "03a6eb1c-6b6a-4513-acdd-98fac0cd41af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f584c25-4a1b-44be-a5ca-d7d10d76f1bf",
        "cursor": {
          "ref": "8508ffd9-0a86-453a-acf5-94f51d4a290f",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "60ce79d5-e26b-4c18-bb64-3b16b2a96204"
        },
        "item": {
          "id": "9f584c25-4a1b-44be-a5ca-d7d10d76f1bf",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f9613e2b-7219-499b-8511-a95e5bd39c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298cc3a9-c962-4c2b-a5b1-a0108daa966c",
        "cursor": {
          "ref": "fc7acbbd-efe7-47ad-bbfe-95e43147db43",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9380575b-e57a-4157-b6cd-714e55234bd5"
        },
        "item": {
          "id": "298cc3a9-c962-4c2b-a5b1-a0108daa966c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "add7f31c-6f99-4d1b-b49e-77cdc274b706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 147,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453fd4d7-1b2e-405f-821d-53e188d99a92",
        "cursor": {
          "ref": "78c9af67-97a6-46c1-9e5a-77beb2a183dc",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "10adc71d-fe89-40e9-9919-b8409dbb7df5"
        },
        "item": {
          "id": "453fd4d7-1b2e-405f-821d-53e188d99a92",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "bc9564dc-0a12-4c08-bf6a-5209fa931efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891407ed-3fdc-478e-88f7-ac63b41a23d5",
        "cursor": {
          "ref": "1f170fda-121c-45a6-8058-b5a0278c5504",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "530374f1-eb67-4543-b5a0-28a7e3e4ce45"
        },
        "item": {
          "id": "891407ed-3fdc-478e-88f7-ac63b41a23d5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1a959b2d-7098-4dfd-bba1-9ea76582b748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20777a4-658c-45d6-8be8-2768c056b6cc",
        "cursor": {
          "ref": "cab112d2-98dd-4c64-b87a-be8ffd406344",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d2e1bd65-9777-46d7-8ee0-097b21e4b258"
        },
        "item": {
          "id": "c20777a4-658c-45d6-8be8-2768c056b6cc",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f54c44e9-ec1b-4d5e-b031-68176e24772d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9553af7-9fc2-4720-a1f3-f6b762c84fda",
        "cursor": {
          "ref": "566c1099-38fc-4332-a650-e77b016afedf",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6ee2cb83-6e2c-4d22-a986-e35226fcf32a"
        },
        "item": {
          "id": "a9553af7-9fc2-4720-a1f3-f6b762c84fda",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "eda49e90-7ed1-421e-9da4-187d1b1223aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7813fe-457e-4e67-848b-365f2d37a3aa",
        "cursor": {
          "ref": "4a099ec5-cdaa-4698-8c49-3a2c316c3e43",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "167a54ca-2458-4b76-b65e-fae41da4ff81"
        },
        "item": {
          "id": "0c7813fe-457e-4e67-848b-365f2d37a3aa",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "bf9e702f-3854-4edd-8e29-e0ab1b6fd09b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2088525-582e-4212-a40f-c04269e6a2a0",
        "cursor": {
          "ref": "e3b81a66-d453-453c-8bf3-749fe8555d87",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5dac02e3-91dd-458b-9bb1-b28daf66eb86"
        },
        "item": {
          "id": "b2088525-582e-4212-a40f-c04269e6a2a0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b4a89589-668a-456e-80e2-7dc799996dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba992148-85df-4029-b69c-8a95bed3b5b4",
        "cursor": {
          "ref": "4e177f6b-415b-4380-bdfb-30707b4a87b3",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c73d49e5-3e39-4453-88e5-c94aea9dbd99"
        },
        "item": {
          "id": "ba992148-85df-4029-b69c-8a95bed3b5b4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1f94d17d-d169-48d0-9819-5ae14b82d937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26c1e81-a7df-4038-a4e4-0861feedc36b",
        "cursor": {
          "ref": "897e36df-e244-4769-a17f-1ea26b28b5dd",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "aa564ecc-ae8b-4ba9-9417-62c5fe0fd9a4"
        },
        "item": {
          "id": "f26c1e81-a7df-4038-a4e4-0861feedc36b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "63cbb8cb-7b33-4e4e-b5a6-190e298ed844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34e290a-daaf-4f23-b357-84574cad8927",
        "cursor": {
          "ref": "1cab15ac-5ba4-44ce-8327-61f5ef332949",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9b467422-2f9f-476a-b4ef-37f35b1f500c"
        },
        "item": {
          "id": "a34e290a-daaf-4f23-b357-84574cad8927",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6ffe888a-05c4-4e11-ac65-a56a47a3dc8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed167d4-6fdc-4e77-a992-a9fb36065e04",
        "cursor": {
          "ref": "728d2d3d-78c2-420f-8b5e-71fc2c135395",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7eb43ca0-38e7-4038-be31-5c6d633ac1c0"
        },
        "item": {
          "id": "1ed167d4-6fdc-4e77-a992-a9fb36065e04",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3ae3b830-6887-4d65-b95b-ad10865dadff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476b9555-f13d-4902-bf65-a6ac7d9b7bf7",
        "cursor": {
          "ref": "10a65a6c-209c-4d7c-b53d-5c1ec589fd42",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0dfdd157-3892-4492-a72d-10f9c6b065a6"
        },
        "item": {
          "id": "476b9555-f13d-4902-bf65-a6ac7d9b7bf7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "35b9a648-e5a5-4991-853d-569ced3155b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026d5ae0-a92c-48ba-bd06-f236048e7af2",
        "cursor": {
          "ref": "fb1f612b-9e8b-45ab-997f-4717a8bbce01",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5a3b932f-5461-453b-b6e1-e3832cafbe18"
        },
        "item": {
          "id": "026d5ae0-a92c-48ba-bd06-f236048e7af2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "fe2a5231-995f-4438-a084-b9cc467259c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3b5e24-2cad-4ba4-9ae1-61e6aa36a3f4",
        "cursor": {
          "ref": "6e41e4e6-da21-4b9c-b042-7492176cae00",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ade01fe5-4b2b-4c9f-bf54-a4c3c85b89ac"
        },
        "item": {
          "id": "4b3b5e24-2cad-4ba4-9ae1-61e6aa36a3f4",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0bcae40e-928d-4e0d-bea2-87d3cd6bcfa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473b8916-7cf5-41bf-b646-e4f0fec6e362",
        "cursor": {
          "ref": "70d5083b-ad70-4309-bce2-d709972be2ee",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "02b61658-5f0c-4dd2-a504-ada382c31487"
        },
        "item": {
          "id": "473b8916-7cf5-41bf-b646-e4f0fec6e362",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "26f3c56b-2ccf-4061-905b-ba22a88bd5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602e20d7-88ee-4d1e-81f1-7d3407b9b774",
        "cursor": {
          "ref": "313ee788-ed84-4899-a525-11e6aaf56f16",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fce96798-8a16-4460-bc1d-35ccabe4d202"
        },
        "item": {
          "id": "602e20d7-88ee-4d1e-81f1-7d3407b9b774",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3485fa81-857b-4edd-82b7-0262e15593f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19540789-f8e6-4ab5-8eae-4067225224c7",
        "cursor": {
          "ref": "60ed464f-e8bf-47d0-af05-5f52a5de501a",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "48c6ea40-663e-43a2-b87a-e73c95f836bf"
        },
        "item": {
          "id": "19540789-f8e6-4ab5-8eae-4067225224c7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1dec92b3-3833-4adb-8d27-37bb2e4ab9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6142b0-97e3-4f3a-9b1a-232195733658",
        "cursor": {
          "ref": "a04a393b-9595-4204-8c58-e0d3fa995ac0",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5cc561d6-d106-4955-929c-a1e9a02ddb3b"
        },
        "item": {
          "id": "ac6142b0-97e3-4f3a-9b1a-232195733658",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a5dc7a41-d8f6-488e-a5d2-87264571b3e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89548cf0-37ab-41bd-96fe-ed2aec359637",
        "cursor": {
          "ref": "d25bd827-cfb6-4e2b-958b-9a112499b7e0",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3bcf039b-66b8-4803-a42e-8a86c7bf5d23"
        },
        "item": {
          "id": "89548cf0-37ab-41bd-96fe-ed2aec359637",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f9c4df73-256e-4009-ac3d-8abb4326312b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e3b686-3d7c-4d09-aee5-1ff69b2d6f40",
        "cursor": {
          "ref": "64ab26fc-a24d-4dcb-ae0c-94d37f8f17f2",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "3986504c-b281-4ce4-99bd-397a89fc293d"
        },
        "item": {
          "id": "19e3b686-3d7c-4d09-aee5-1ff69b2d6f40",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "162aec56-b6e0-43ef-8362-4d7030c4123d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c9da2f-71bf-4b02-9e72-bd1f709faad4",
        "cursor": {
          "ref": "edba94be-a6e5-43db-ad50-9af3d695ca9f",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7c3c2746-9d60-416c-aa28-aade6ec7f29d"
        },
        "item": {
          "id": "b7c9da2f-71bf-4b02-9e72-bd1f709faad4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "09ff3652-6fee-4fde-908c-70b00ce32ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5caa8598-1434-471b-b8fe-ee6171f9c099",
        "cursor": {
          "ref": "37cf9d77-1b74-4eba-ba48-0cb4dba2bca3",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "06b4ff34-4d11-4d03-a05f-77bf5542481c"
        },
        "item": {
          "id": "5caa8598-1434-471b-b8fe-ee6171f9c099",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8296c8f2-eb73-4e7c-bfe0-cf30279ad16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ebc0ba0-f532-455e-a907-2b3ad5fb92c2",
        "cursor": {
          "ref": "86a36f6a-cd76-4167-9f1c-bc840cf38f72",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e4ff91b0-2630-4c81-9e7d-1826e0014976"
        },
        "item": {
          "id": "9ebc0ba0-f532-455e-a907-2b3ad5fb92c2",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1561506b-cfca-4312-8b47-cb06dbaf14a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9401792a-d19f-4be5-ba7d-a148662caa92",
        "cursor": {
          "ref": "f5ff4478-8f5a-4cf2-8682-bf5dee086ac3",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a49423dc-f84d-4be6-8a9f-adcae17f6dd8"
        },
        "item": {
          "id": "9401792a-d19f-4be5-ba7d-a148662caa92",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6e38554b-5c45-496d-86ed-89bbdec07fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40c61b1-81d9-41fc-88eb-e5396328e000",
        "cursor": {
          "ref": "c2143713-b60f-4c0d-93b9-bdc7913a9d64",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2ed0e290-9fdd-4d3c-8330-0899beb253dd"
        },
        "item": {
          "id": "e40c61b1-81d9-41fc-88eb-e5396328e000",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b988e643-1613-4e66-8a7c-b862c8b5e3d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e020c26b-87d6-43ce-9a99-363c4f41e8e3",
        "cursor": {
          "ref": "80e8d753-1703-46a4-ac5a-d7d91c3cdc22",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2833be0d-4f85-4a0a-952d-66085c2325f9"
        },
        "item": {
          "id": "e020c26b-87d6-43ce-9a99-363c4f41e8e3",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b55eef71-f944-43ad-b096-72e1fbafddc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7a088e-f07d-4de8-809d-fc656835b4c8",
        "cursor": {
          "ref": "f0ad10db-5e61-436c-9c39-7a41605b9bd6",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "93735444-c5db-47fc-bf89-1c73c6952951"
        },
        "item": {
          "id": "8e7a088e-f07d-4de8-809d-fc656835b4c8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1811efd5-2e52-4e58-9c6d-0b9f6a0a159d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8399a2-7294-461e-8b3b-a221478eb970",
        "cursor": {
          "ref": "5c66d82b-034b-47b4-bc07-11b7433e0fae",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5478438c-8d7e-48f1-a537-367b45716b03"
        },
        "item": {
          "id": "cf8399a2-7294-461e-8b3b-a221478eb970",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "05e7f452-c854-40e3-b8cb-35489741c865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851de7bd-502b-4ea8-b2d4-75c474e67126",
        "cursor": {
          "ref": "7fea7f13-fc2e-4590-8e2d-111544b5e953",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4d29220a-a53f-46fc-854a-a01de7919895"
        },
        "item": {
          "id": "851de7bd-502b-4ea8-b2d4-75c474e67126",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7563bc12-9434-4059-89e3-fc646e554b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373735d2-d93b-45b8-980c-dde8112487d4",
        "cursor": {
          "ref": "936e8c29-8acd-46c6-a736-3f6af6795c53",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "787e34eb-be86-4526-9674-e670133ca286"
        },
        "item": {
          "id": "373735d2-d93b-45b8-980c-dde8112487d4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0c4bda88-fc13-4fb5-a45b-c335623efedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42e0659-ac62-42f1-aa55-5c77781300bc",
        "cursor": {
          "ref": "f56c2af2-ad38-4f6c-9fb6-c75780201cd4",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "deb2f027-e655-4e86-b6bc-1680f3e709a5"
        },
        "item": {
          "id": "d42e0659-ac62-42f1-aa55-5c77781300bc",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "beaec9ed-b5ea-4ddd-bf11-64208dff5057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffda3735-9ef0-4dd9-ad8a-c04aa25b717b",
        "cursor": {
          "ref": "64303c8b-555b-4bf6-886c-fba89c198fc5",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ba840656-5cc2-47d6-9325-376e63c39462"
        },
        "item": {
          "id": "ffda3735-9ef0-4dd9-ad8a-c04aa25b717b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d8c40916-5f18-4ebf-918c-91708dc60f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96162a6f-2653-44dc-b6e8-1d48b722139a",
        "cursor": {
          "ref": "d5474dd0-eb4b-49be-805e-1afc48f2f7cf",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a6d28ca2-5031-4455-9198-34863babf824"
        },
        "item": {
          "id": "96162a6f-2653-44dc-b6e8-1d48b722139a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c46be7e1-0c6f-40ed-bda1-da525835cb82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e647da2-18ab-4810-9dd3-ce3616a7cee8",
        "cursor": {
          "ref": "1c8e516b-62c8-4710-8781-f33db877f922",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e0055263-3d65-4992-8975-4f5868fe1af3"
        },
        "item": {
          "id": "0e647da2-18ab-4810-9dd3-ce3616a7cee8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "781a630b-7630-41bd-a1a0-06b965cd0eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c563c9f-831a-4419-9da8-1f3db48382a3",
        "cursor": {
          "ref": "e2b2289f-25c2-4334-b89f-dd34d733f2ec",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3f4adba9-7638-416c-aa47-bbcd729e564a"
        },
        "item": {
          "id": "5c563c9f-831a-4419-9da8-1f3db48382a3",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "997a59a7-6c0e-4d20-8a77-21926d73fec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53764eb9-0dfa-47bf-94aa-c79fdd341705",
        "cursor": {
          "ref": "c06331ba-7449-4880-9da1-433689f44b64",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f95f5ca1-3c60-4cf1-84c4-56be75d0e643"
        },
        "item": {
          "id": "53764eb9-0dfa-47bf-94aa-c79fdd341705",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f56ec41a-b3cb-438e-8ad8-a33e51edfa3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4dae1e-a907-4809-81e2-f52b8a349557",
        "cursor": {
          "ref": "8ee849eb-5cf4-46d5-95fb-9760a685a0dc",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f1abe1d6-a96a-42b1-858d-c4e41c5ce9ca"
        },
        "item": {
          "id": "4d4dae1e-a907-4809-81e2-f52b8a349557",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "91863980-9c41-4994-b9b3-14b2a42234ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4486dd6d-a85e-41fc-a77c-ef58fa2ab021",
        "cursor": {
          "ref": "8cd90ff7-fd8a-40ee-8117-9f9cf93a6690",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2f1a35a0-f202-4a34-8fa0-7471eb5f09a6"
        },
        "item": {
          "id": "4486dd6d-a85e-41fc-a77c-ef58fa2ab021",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c352c9bb-8e4e-499f-a1e2-54510ecf2027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba70e93-1589-4b7a-bf47-f237d97626c1",
        "cursor": {
          "ref": "2068d3c7-bacf-4cfd-a16e-b0d6927ace60",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "74f85309-ea8d-473d-8c80-6fc51a296d66"
        },
        "item": {
          "id": "2ba70e93-1589-4b7a-bf47-f237d97626c1",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "57b76066-72d9-45e8-a216-f510a412faba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7173b0-be85-41b6-a85e-b7504d3c560d",
        "cursor": {
          "ref": "a214df15-096d-405d-907a-5a6e71c14de3",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "71fe591a-69fa-4e06-b251-a31fda4d5f70"
        },
        "item": {
          "id": "8b7173b0-be85-41b6-a85e-b7504d3c560d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5b290ab0-0caa-4065-bd4e-d14c8920db72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bdc3007-7e70-42a2-b5b0-c34ab4a5a138",
        "cursor": {
          "ref": "0d95d71a-befe-4fc0-9416-4daaef822b90",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9b9fafe9-871c-44c8-8a51-011e1ed09935"
        },
        "item": {
          "id": "2bdc3007-7e70-42a2-b5b0-c34ab4a5a138",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6d824e58-737b-43c6-a573-e3ec1810be57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e5f75e-de8c-42f6-add6-832b3899beaf",
        "cursor": {
          "ref": "826cea4e-ba65-4fc4-95c9-074690c24a95",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "82f5ba79-edd3-4f99-97a9-bed23f9354aa"
        },
        "item": {
          "id": "f5e5f75e-de8c-42f6-add6-832b3899beaf",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "45700313-7099-4def-9948-f0bf7844c18b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40862c4-d36b-44a2-8c49-1a6715c519c2",
        "cursor": {
          "ref": "cc9cc5c3-2067-48e9-a034-1d7235ac103c",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c458344f-4410-4043-9e61-cdd78d7d0f08"
        },
        "item": {
          "id": "b40862c4-d36b-44a2-8c49-1a6715c519c2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b12b06ed-e1ec-45a3-91be-e5fdf34fe0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dff77d5-bcee-4274-969a-227824655551",
        "cursor": {
          "ref": "5e9959d7-774a-436b-9270-1cd3017b93e2",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "372cac39-c842-43ae-bc5d-220f7c1bec3e"
        },
        "item": {
          "id": "5dff77d5-bcee-4274-969a-227824655551",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "31c43f30-0c61-45e0-b56c-080e46449eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ee1482-32a2-4f0e-a312-1327944b7981",
        "cursor": {
          "ref": "4a1cc3d9-c908-4757-9460-f2d35e5a5de7",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3900b3a3-15bc-464e-a154-68053a67ba5e"
        },
        "item": {
          "id": "f9ee1482-32a2-4f0e-a312-1327944b7981",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4564294e-821e-4322-9dd6-a39217db795a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d361f0-0e7b-42ec-98b7-38542260a138",
        "cursor": {
          "ref": "0825febf-d070-4ce2-9096-76f9ba0b071e",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ac4b0cba-fe03-44a7-b6c1-c8c55d7ead34"
        },
        "item": {
          "id": "67d361f0-0e7b-42ec-98b7-38542260a138",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f7d8bccc-752a-4e40-865f-55ffe67af03e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d81229f-a025-438f-8493-364a59d1de2a",
        "cursor": {
          "ref": "851f15b4-e85b-456f-885b-1c521a99ac28",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "007c5616-b75e-44e4-ae88-569d7e331476"
        },
        "item": {
          "id": "8d81229f-a025-438f-8493-364a59d1de2a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e01d4d30-8d7d-4825-8ede-0ba5b0566c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ac18d8-0e04-4dd4-a1f2-d09975c12a75",
        "cursor": {
          "ref": "9f49a336-5f21-4c6d-8e2f-b912aefbc3fb",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "227e8a40-2d6d-4a08-9c77-46152c2aa0b3"
        },
        "item": {
          "id": "e8ac18d8-0e04-4dd4-a1f2-d09975c12a75",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "41ef9361-cf14-4918-91a0-40736b992aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf78767-2a2f-4370-9058-a94f08940915",
        "cursor": {
          "ref": "da358d20-50b6-41a3-816c-a704484bb994",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cdb42671-0821-48ec-be6b-053e662da247"
        },
        "item": {
          "id": "5cf78767-2a2f-4370-9058-a94f08940915",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "15a101ea-e032-404a-a480-756e8062cbd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d905ea-56fb-4a08-9314-b00ad19de2d8",
        "cursor": {
          "ref": "3228c6f4-6b4f-4718-82f8-abf883c865d6",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "352874c2-476a-43af-a774-afa5206898ac"
        },
        "item": {
          "id": "b1d905ea-56fb-4a08-9314-b00ad19de2d8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6a14d1f2-827a-4617-82b1-17a0559a8518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb760e3-2117-4eed-a493-3fa3b66ae5a8",
        "cursor": {
          "ref": "129ba8ac-2cd7-4db2-95c0-f6665818b880",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3259e76e-122c-4f5c-ae24-c2ee7cfa6a64"
        },
        "item": {
          "id": "acb760e3-2117-4eed-a493-3fa3b66ae5a8",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2dbd3b2b-96e5-434b-bb7c-22729a763a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ea5d50-efcd-4758-b688-2052a1c5c807",
        "cursor": {
          "ref": "d363f8bc-2882-4849-ad09-7ec5db1eaa5a",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7035acf0-98b9-4682-a90e-15f5775a6bd5"
        },
        "item": {
          "id": "b6ea5d50-efcd-4758-b688-2052a1c5c807",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d55af5bd-6f29-4d79-b211-176ba2234c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b714b3-da1f-4757-a6ec-e2287ed47f9d",
        "cursor": {
          "ref": "5bf97e71-37d4-4b52-bc44-ed7a0150b204",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "be1edca6-1cdd-4485-9ec8-7192c3b4988f"
        },
        "item": {
          "id": "60b714b3-da1f-4757-a6ec-e2287ed47f9d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "212e0022-0ca1-4d6c-98d9-f8d199b5d58d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02fdc30d-fe28-4818-9bf6-1181651c09bf",
        "cursor": {
          "ref": "55dfe6b2-53d0-435b-acfb-daee8eb08e7d",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "07211988-4e3b-4045-aade-babd84a89d55"
        },
        "item": {
          "id": "02fdc30d-fe28-4818-9bf6-1181651c09bf",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7b469db3-36c5-4557-afa7-04ea56d53a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9efb1bd8-c3cd-47d6-b28c-178a99cc5e21",
        "cursor": {
          "ref": "0938e6b6-8fe4-4d1b-a87b-e7ff2cacbc51",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3014403f-a4f9-4050-b36a-26ea5f565647"
        },
        "item": {
          "id": "9efb1bd8-c3cd-47d6-b28c-178a99cc5e21",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c1b05e8d-3cb5-4d26-a739-e116af24962c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833852f0-e3dc-4958-852d-da6ff51eece2",
        "cursor": {
          "ref": "6523783e-46c7-43d5-a496-ff26fbc659e3",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "73754d85-1f60-42e5-9b35-96e863117959"
        },
        "item": {
          "id": "833852f0-e3dc-4958-852d-da6ff51eece2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b5e0836c-c0e4-4fb1-bd5e-ec946fa7304c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0779efc-3c75-4525-bd28-6fcb5fb6c6da",
        "cursor": {
          "ref": "cca5fbce-2827-435b-a996-04e297fd2aa2",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "fc364eb8-c76d-43ee-9a10-a69191aba155"
        },
        "item": {
          "id": "b0779efc-3c75-4525-bd28-6fcb5fb6c6da",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ca079542-614a-44a2-9ab8-d9bef9fa2e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3152e574-2070-4477-9131-b6412aea00ca",
        "cursor": {
          "ref": "caccbbdb-92ca-4ddb-ae62-51e7f300e0f4",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c43e5b43-23a9-44ef-80ce-062d2fcc990d"
        },
        "item": {
          "id": "3152e574-2070-4477-9131-b6412aea00ca",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e7afe7ce-01fb-4576-b8c3-a4259bafaeaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6528177-f94f-4aff-9b7a-c491f80bcc16",
        "cursor": {
          "ref": "a1db700d-5f9e-4711-991b-c6a73751dd62",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f477b5ea-470d-410f-912d-b13e54b8b467"
        },
        "item": {
          "id": "a6528177-f94f-4aff-9b7a-c491f80bcc16",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9d2cebc9-738b-4282-b0e1-2f6bb34a744d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b00c189-e0e6-4a33-930d-96d86a332f19",
        "cursor": {
          "ref": "c4d02e1c-a205-4b46-bb7d-b2986c469aa1",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "755dbb90-cf0b-47f8-ab8f-1bb135cecf58"
        },
        "item": {
          "id": "8b00c189-e0e6-4a33-930d-96d86a332f19",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f72e8092-e7e6-4197-8a54-6fb67f66b1f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a353344b-477e-4160-9bec-3929d3a2537d",
        "cursor": {
          "ref": "44360f5b-f833-487d-adfe-06a5717be0d7",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c9aae85a-f2ba-422b-ae96-def0403cf54b"
        },
        "item": {
          "id": "a353344b-477e-4160-9bec-3929d3a2537d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d435c048-f7fc-4096-a18c-cc1f4280b825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3355b26-1754-4857-8882-099e9da2ad85",
        "cursor": {
          "ref": "1cb87573-af9c-4cfe-84c0-1913b43045e9",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6ef0d5b1-40d2-4487-bd66-8fa61bc5ea2d"
        },
        "item": {
          "id": "b3355b26-1754-4857-8882-099e9da2ad85",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "73cc7de4-08af-4dc3-9f46-b5d2e20bde44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a89524-6369-45c1-a11f-2167bc100aa0",
        "cursor": {
          "ref": "2936cab5-8d93-4396-9014-3f1400ae6069",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8641c48d-7a06-47f9-9b28-5cf387b8e82d"
        },
        "item": {
          "id": "73a89524-6369-45c1-a11f-2167bc100aa0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "101109de-4a02-4840-9ca4-4b0046676d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7a6b67-588b-4d9e-ad5f-f382bbf9e37f",
        "cursor": {
          "ref": "9f573fa9-6d9b-455a-b97e-4a5438056d40",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "29acc2cb-d74d-4292-87d1-d87d42006935"
        },
        "item": {
          "id": "4b7a6b67-588b-4d9e-ad5f-f382bbf9e37f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2c0054b0-3e20-4ad3-a538-6bfeddb9eeb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056cd294-4c91-4a03-9a27-bbbfd55d0da3",
        "cursor": {
          "ref": "a64ff652-db68-4ec6-9b21-193a9d0ca4d1",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2289dad1-d4dd-485f-8136-b25fdcef2b36"
        },
        "item": {
          "id": "056cd294-4c91-4a03-9a27-bbbfd55d0da3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3afd9bf0-e0d8-42c9-8c99-843bceb2d11c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17639215-c14a-4136-bbac-598fa2439ffd",
        "cursor": {
          "ref": "afaf446a-5737-4594-bb39-51f30ac7460e",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "40dc81af-490d-47ff-8702-afbd17729920"
        },
        "item": {
          "id": "17639215-c14a-4136-bbac-598fa2439ffd",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7c8b5f96-93cf-4fd8-bdef-b5943741ca2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcdd59dc-7353-409e-b916-72ee8011f563",
        "cursor": {
          "ref": "76ead902-bf39-42c8-bc70-6d43166e9123",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3bde294f-5cb4-4518-882a-1eba653b8ee5"
        },
        "item": {
          "id": "dcdd59dc-7353-409e-b916-72ee8011f563",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a9b85c56-d6c0-4795-8ae7-c624c5cb7209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a38865c-4e52-4f1b-a817-e486515c5b3a",
        "cursor": {
          "ref": "b70a99ba-d0d0-4bed-9cb4-67f78158c6fa",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d21a7f94-4441-494c-bd19-b3429739cfc8"
        },
        "item": {
          "id": "2a38865c-4e52-4f1b-a817-e486515c5b3a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7ca975c6-0fa8-4bb0-94e6-c83526c60368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d33085c-d57c-4ccc-9fff-ea27c7cfa591",
        "cursor": {
          "ref": "c906a18a-06bf-4eb0-8dd7-7ea4300ce567",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "29e3d326-0495-480c-bb8c-1796eebfc63b"
        },
        "item": {
          "id": "2d33085c-d57c-4ccc-9fff-ea27c7cfa591",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3b6d631a-29c8-41ae-8986-a68351d42352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bfb9391-e1ce-4246-9cfa-cef908768001",
        "cursor": {
          "ref": "45579527-e3bc-4e76-8b9e-d32d3a379a5a",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f921a504-7784-40ce-82d7-d9cdcb287f78"
        },
        "item": {
          "id": "8bfb9391-e1ce-4246-9cfa-cef908768001",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d04cf75e-4589-4e0d-a216-ffdafb766a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77000869-194f-4da1-a756-40ea59b650cf",
        "cursor": {
          "ref": "cd7a3d2c-4b34-444a-b75a-c044d0b201fe",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "83f90c26-2e23-414d-a2af-a62f8bb4205b"
        },
        "item": {
          "id": "77000869-194f-4da1-a756-40ea59b650cf",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "67088c9b-ebdd-4e42-bd15-bfeb0cf9d77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bfe025d-f139-4e8a-ae58-6c7ee5f7006c",
        "cursor": {
          "ref": "ab660245-03b5-4fcc-a2b2-1b9682b51d3a",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "15d083ce-61ae-46d1-b304-9622518ffa92"
        },
        "item": {
          "id": "8bfe025d-f139-4e8a-ae58-6c7ee5f7006c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3de47fdb-58c1-4d16-a02c-157eb55bc654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e296b9-914a-4726-b36f-7921b0e33b7b",
        "cursor": {
          "ref": "18ba6cac-ed2c-417c-9b53-90263073d08f",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "162797ae-db0f-4f65-b837-162b236ad786"
        },
        "item": {
          "id": "97e296b9-914a-4726-b36f-7921b0e33b7b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "31988b4f-68bd-488b-ae75-c2903beb626a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3786f936-7841-4010-b138-d3cc9288a112",
        "cursor": {
          "ref": "3bed2eae-4e75-46b5-8da8-29e93e1594f2",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a845a5e3-98a3-4bf7-a90b-0a1737c79dd2"
        },
        "item": {
          "id": "3786f936-7841-4010-b138-d3cc9288a112",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "dfe1fd15-5526-47cd-9bb6-600159148709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd430181-6152-424c-8adf-575437cc1536",
        "cursor": {
          "ref": "c13c4f8b-5bfd-4cac-95aa-699518635402",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d83a8ed9-d87b-4f7a-aa5b-020b81b1507c"
        },
        "item": {
          "id": "bd430181-6152-424c-8adf-575437cc1536",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "54726512-a036-4779-802d-f4b1e32cfb52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0561b7d5-2f3e-4ec1-b9c8-cdc25127a2b2",
        "cursor": {
          "ref": "87f16f76-4603-4560-932f-1c3ee61642f6",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "41e0faee-f430-465a-8131-d840ca630888"
        },
        "item": {
          "id": "0561b7d5-2f3e-4ec1-b9c8-cdc25127a2b2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c9ac1b93-2a3f-49cd-8910-7086a7808ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a35deb-64a7-4516-b2dd-7f0b96320343",
        "cursor": {
          "ref": "516e3db6-685e-4833-a003-382c916a79ee",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "10af80df-1888-4c0d-bffb-fb02402ec928"
        },
        "item": {
          "id": "a8a35deb-64a7-4516-b2dd-7f0b96320343",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f14569c1-9a18-46a8-ab39-56d69eb055b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9149a5-7706-467c-a69d-30d136b10997",
        "cursor": {
          "ref": "1bec5155-cde0-428c-9f28-9f514cfacae8",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "43eda860-5d81-4c21-b4b2-6307c71f0d1b"
        },
        "item": {
          "id": "9f9149a5-7706-467c-a69d-30d136b10997",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a81d9637-ad83-40c7-93fc-b901391dc7b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c96bbed-e7e6-4efd-a204-fe1afe33b2fd",
        "cursor": {
          "ref": "a32c2432-4afe-4e1f-9573-481c6854eb51",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "abb61695-971a-4b81-ba11-1218881e6584"
        },
        "item": {
          "id": "4c96bbed-e7e6-4efd-a204-fe1afe33b2fd",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c6531e43-0ccf-4b2f-9730-9a54e4af489b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e3c1fb-20bd-4e2b-8a7b-3b03db09e952",
        "cursor": {
          "ref": "d35ec1b6-9c11-444c-bc38-ef2456d8f515",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9f51f0f6-8da9-4d03-a93a-78ce97c65237"
        },
        "item": {
          "id": "d4e3c1fb-20bd-4e2b-8a7b-3b03db09e952",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d7384d1f-2ddf-482f-b2bd-179c4bc9df7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a0324f-c3ba-408e-8ddf-133c7865a167",
        "cursor": {
          "ref": "876730c7-e51a-438e-bfeb-674e0f905ccc",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "eddb6455-0dbf-40ae-833e-8fe72a09f238"
        },
        "item": {
          "id": "94a0324f-c3ba-408e-8ddf-133c7865a167",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b103a557-d220-498f-9be3-e9666d12080e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0bcc93-2084-444c-a6dd-8fa41193e534",
        "cursor": {
          "ref": "6ab3c417-9bd0-4a33-a145-f2da901b4668",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c2072024-0ebe-4b5c-935d-2782d97d8de1"
        },
        "item": {
          "id": "1b0bcc93-2084-444c-a6dd-8fa41193e534",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6ad5e82c-8a17-444c-b9d1-5731c821f64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3f404d-4c0e-4fd4-8824-2ec379b4bb2c",
        "cursor": {
          "ref": "5721c8b1-7e69-4987-9efe-1af5e7496fb6",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "55251fb4-1b9e-424d-9067-32fc8b4c31a5"
        },
        "item": {
          "id": "ca3f404d-4c0e-4fd4-8824-2ec379b4bb2c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7676a309-2a13-4fbd-a60d-fa5b0dbbde6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dec1ca0-7d58-40b2-91ed-fb9a27428a63",
        "cursor": {
          "ref": "6c81b7b2-d886-4617-98d0-3f802a86a4c1",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "834db4f0-e86a-487b-87e9-6b8bfdf2f7ff"
        },
        "item": {
          "id": "7dec1ca0-7d58-40b2-91ed-fb9a27428a63",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "cd6ebb2a-3aed-4fa3-bff8-3bf5b9e77e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654094dc-1b3f-4b43-a07a-16fd67a88848",
        "cursor": {
          "ref": "ce1811aa-601b-44af-afbb-5ef852379ea6",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "23f0d226-1522-4fbd-a8aa-40a54c3cf9dd"
        },
        "item": {
          "id": "654094dc-1b3f-4b43-a07a-16fd67a88848",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c0740aaf-3d97-4c98-9988-3d6b2195349e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0abd6493-a9d4-4ea8-aadf-f5b740f44b84",
        "cursor": {
          "ref": "3f349b38-0a8d-4a79-99c4-faaf931958ae",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "36b28f6d-2108-4f65-8168-6df682e7ff1f"
        },
        "item": {
          "id": "0abd6493-a9d4-4ea8-aadf-f5b740f44b84",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7ee9490d-e173-4513-8579-e504bf87383a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b606373b-31bf-4527-88e0-a7ef86589167",
        "cursor": {
          "ref": "71064aeb-fb9c-43bf-a6ac-28ab5463b277",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1d0cd2aa-685d-4479-9f22-e1b464b22a96"
        },
        "item": {
          "id": "b606373b-31bf-4527-88e0-a7ef86589167",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e639b6c2-616e-48d3-86c8-ae955c7acd5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81bc3a2-7607-48aa-b44c-d5ddca0201e8",
        "cursor": {
          "ref": "f509c286-6b4d-4987-84c5-a0c1fbc7a317",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1fc78bcc-b4e4-4a7d-881c-c40c3602e773"
        },
        "item": {
          "id": "e81bc3a2-7607-48aa-b44c-d5ddca0201e8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0873e8b1-a810-4ba3-974a-4d7dd5189ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b52625b-0690-463c-8da3-25cc09320e9d",
        "cursor": {
          "ref": "c8290dd9-10a7-4c06-bfbe-bd70c58f5e0f",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ff8936d2-0097-4a77-9441-f27df0e08c51"
        },
        "item": {
          "id": "8b52625b-0690-463c-8da3-25cc09320e9d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "916362b0-199f-4bbb-bac5-b01a49ebd0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1adef948-2c39-4557-966d-1169ab769249",
        "cursor": {
          "ref": "bbdf12d9-8300-46c5-a622-6c2b87148382",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "7ca5116a-d7e5-44e2-ba87-abec9a2e9145"
        },
        "item": {
          "id": "1adef948-2c39-4557-966d-1169ab769249",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "63502d42-1e9b-408e-bbd7-8fe5233e3fc3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e608ea03-a6d0-432f-bb31-87f8cc343f11",
        "cursor": {
          "ref": "009d1a1b-44ad-4c03-8354-74ff37ab9d4b",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "444c7da7-0566-420e-ad84-816dbf456786"
        },
        "item": {
          "id": "e608ea03-a6d0-432f-bb31-87f8cc343f11",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "5f1a5590-615c-4dba-b72d-7129005da13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "859fcdf8-9c59-4167-a933-36dfa654df42",
        "cursor": {
          "ref": "edc2e4cc-63f4-4a13-ac6a-e50ee8745e20",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2096002c-3c86-4703-b36a-7551ea4e2705"
        },
        "item": {
          "id": "859fcdf8-9c59-4167-a933-36dfa654df42",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ff482211-a66a-4b0e-822a-e50600b04636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "714c822f-1d8d-4031-8fae-0106c59580fa",
        "cursor": {
          "ref": "813528b0-37e6-4e37-b653-f4eb6c753a9c",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "34d4ea61-2772-40e3-9196-a1654fdfd71e"
        },
        "item": {
          "id": "714c822f-1d8d-4031-8fae-0106c59580fa",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "81e10908-5690-4ed9-84ee-0e8a9a9ea12e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "c21acf38-e7c0-4527-b6b5-068f386f410a",
        "cursor": {
          "ref": "0d39f41a-73fa-4801-a2d2-1f3f1a97b777",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b2c22221-7ce4-4793-a56b-4ca881b8916e"
        },
        "item": {
          "id": "c21acf38-e7c0-4527-b6b5-068f386f410a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "54cd5500-2503-4648-b221-7edb25cd5360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "0ce2d57b-7297-4080-823f-8b76601d4040",
        "cursor": {
          "ref": "0ab6696a-5b14-4826-9c78-9a684f8f6c65",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "fd9228d4-d316-4c0e-8f15-19049251294a"
        },
        "item": {
          "id": "0ce2d57b-7297-4080-823f-8b76601d4040",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "85712d95-1923-4384-a716-1305b41f3bde",
          "status": "Created",
          "code": 201,
          "responseTime": 4868,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bdf2ab1-4f4e-4e7e-b872-c4fd972a91d9",
        "cursor": {
          "ref": "4ab6881b-de94-40d2-8e36-a8c7e47f8d62",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "caa12275-312e-44d1-bd9e-09ca643f562b"
        },
        "item": {
          "id": "2bdf2ab1-4f4e-4e7e-b872-c4fd972a91d9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "085eeaa2-4de9-44b5-8019-e3de40344cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "181d95c0-a5c5-4369-8d90-42ca7c631780",
        "cursor": {
          "ref": "4206d973-dbec-4aeb-8f40-3154dad65a21",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "fdeecadf-0c0d-4546-923d-d23a4d7e21df"
        },
        "item": {
          "id": "181d95c0-a5c5-4369-8d90-42ca7c631780",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f78acd2a-183a-47a8-b819-06c573e859a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "7068f84d-9f17-4ce1-b69b-8f1267416d36",
        "cursor": {
          "ref": "9107e2e9-ad52-43a4-b9d1-47f5d584d3e7",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a6ed04b0-f2f2-4156-898d-6d66ecb0bb33"
        },
        "item": {
          "id": "7068f84d-9f17-4ce1-b69b-8f1267416d36",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "49b8b019-45fe-43a6-a4e5-49e43cb0096b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de3ed33-8825-4ae2-b1d1-cae457dd3c4e",
        "cursor": {
          "ref": "87de6541-6fa0-4766-ab51-87c71792a0e8",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b9bac91d-ae92-493f-a4ef-6852446dd1db"
        },
        "item": {
          "id": "5de3ed33-8825-4ae2-b1d1-cae457dd3c4e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "99e6df33-37fd-48c0-a933-2d7fa9b91517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4779bc-c758-4a1f-a770-02546c7c2591",
        "cursor": {
          "ref": "acee78f4-bb5e-4285-9ba7-6a637b46bb00",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "116c0a69-b41c-4a57-aaac-9b6166612d6c"
        },
        "item": {
          "id": "1a4779bc-c758-4a1f-a770-02546c7c2591",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7c4a68db-0e40-4607-9295-469a17ff36b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb91a8a-1cde-4907-81ea-7a892e37f354",
        "cursor": {
          "ref": "71e72064-9fe0-414a-9182-6dea4a0d63d2",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9394849c-436b-4636-81ca-94bc5d4dac60"
        },
        "item": {
          "id": "6bb91a8a-1cde-4907-81ea-7a892e37f354",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "70bd5653-3655-436a-91c6-0f177255fc28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d04606-5edb-4f01-b88c-6eafae3d9413",
        "cursor": {
          "ref": "043139b9-8001-4d25-b547-1288cba52cc3",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "158ebd3d-e960-4241-8347-b354989d74d6"
        },
        "item": {
          "id": "87d04606-5edb-4f01-b88c-6eafae3d9413",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1b5ef016-63ef-4d15-b7a9-a7361a6aad1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c4c1a5-67ac-4d54-ae60-5b0be4ceb458",
        "cursor": {
          "ref": "4e87ccc8-cbab-4dd6-b99f-8fb1e086679b",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "717efe23-9be7-4da5-a563-39f0de77728c"
        },
        "item": {
          "id": "53c4c1a5-67ac-4d54-ae60-5b0be4ceb458",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3cfb9334-c172-43ff-a24a-87a661cbecad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbfa7d13-6c66-4489-b793-85c2f272dad4",
        "cursor": {
          "ref": "ebd397f7-89ad-4e1a-9d9d-5cb90e615242",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d41ebc71-9c6f-4930-9682-a9549fa6a640"
        },
        "item": {
          "id": "cbfa7d13-6c66-4489-b793-85c2f272dad4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fdddc3b8-5513-48dd-8c56-855ef8954d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0fce09-ed14-43ba-a274-208118cea2ee",
        "cursor": {
          "ref": "f94ac856-c636-4242-8691-d427060f771e",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "32028dec-3a57-404c-86c7-dac94d70700d"
        },
        "item": {
          "id": "aa0fce09-ed14-43ba-a274-208118cea2ee",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "94f5ecf6-39e9-4b2c-89cc-9e47ad7d9dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06878d22-6d23-4132-b6fb-b3823b92398f",
        "cursor": {
          "ref": "b3f8ed14-0e95-443f-95f4-d593ce5b7479",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d0ecc09b-a778-452e-bf1e-cf417dced2b3"
        },
        "item": {
          "id": "06878d22-6d23-4132-b6fb-b3823b92398f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "47a1b569-3bb5-4302-86d9-eafdba6c0fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324f1f51-101d-445c-a3cd-f615269c040e",
        "cursor": {
          "ref": "e3d3d7ba-0a40-443b-871e-89f1c81d901e",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a0012a52-d23f-43cd-bb7f-71c76538a84e"
        },
        "item": {
          "id": "324f1f51-101d-445c-a3cd-f615269c040e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d1d76eae-2e64-4fbf-ae85-3100d1e2838f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864b2586-104a-4122-ba89-9d1bc5ceb2b0",
        "cursor": {
          "ref": "4cf854ed-80a2-4d51-9d2c-c4923fe40a07",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "86532411-aab6-492e-940d-61df35a8dddb"
        },
        "item": {
          "id": "864b2586-104a-4122-ba89-9d1bc5ceb2b0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "683fdf48-218a-4490-be24-e9e4d4544719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5020fd-7eae-4370-9522-d8304131dbd3",
        "cursor": {
          "ref": "23e59e91-6b17-4887-933b-0cc0034936f5",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "441f82b7-f282-4052-b2e2-51e52f4bc4ca"
        },
        "item": {
          "id": "1f5020fd-7eae-4370-9522-d8304131dbd3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bf86b747-c378-4185-baea-11a80ed352d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404080b6-2ae7-4047-a736-ecd91ed0087c",
        "cursor": {
          "ref": "68f01287-0523-41e9-99e0-1179720ee1a8",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6a603bd8-e4b4-4ae7-b4ca-4c0f44962b41"
        },
        "item": {
          "id": "404080b6-2ae7-4047-a736-ecd91ed0087c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0365fabb-d406-40f4-ad77-26d88945fccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cef0a8b-7e84-453f-aea3-49358b177919",
        "cursor": {
          "ref": "0a4fe86f-5db4-49ef-b19a-a6bf42278954",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a8431369-5cbc-4ef8-bc9c-96ce8053d14f"
        },
        "item": {
          "id": "1cef0a8b-7e84-453f-aea3-49358b177919",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "456556fe-7511-4b73-8eb4-63b9f3d52908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f155557b-6c4c-40fc-8b6d-ed4ff731bf72",
        "cursor": {
          "ref": "dbf608bc-9ad4-4c0f-a7c1-77e43f2037ae",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5114b952-4467-45da-89d1-22e71daf4668"
        },
        "item": {
          "id": "f155557b-6c4c-40fc-8b6d-ed4ff731bf72",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "33a40527-2550-4189-86e3-59db92077aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1399df33-3a3e-4768-a153-2b8774523206",
        "cursor": {
          "ref": "5a31b811-4df5-4397-b980-99bed776e0ce",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7ee0b1c3-de26-44db-9977-a8e140fd1c7f"
        },
        "item": {
          "id": "1399df33-3a3e-4768-a153-2b8774523206",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5fd9b5fc-1dc7-4997-b79b-a42f9551059e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73149fc9-6780-48bc-b295-2c8f6d6dcdb6",
        "cursor": {
          "ref": "52d5630e-9ff6-4863-8bb9-fb3ebba548b8",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "116c97b3-d360-48f3-8398-6a914903aea6"
        },
        "item": {
          "id": "73149fc9-6780-48bc-b295-2c8f6d6dcdb6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3003dc21-022c-4746-820d-fd81632f2bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede74f28-d295-4b67-a084-404e4bdf43d9",
        "cursor": {
          "ref": "6d94510e-aae9-46a1-8c0b-b7290c1e6f5e",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5986acac-e5b6-4df4-8c3d-a1bafed0fe8e"
        },
        "item": {
          "id": "ede74f28-d295-4b67-a084-404e4bdf43d9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c3a996ef-c6a5-44ea-93b4-40eaeb30c36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f447445-0b83-4459-973c-68dd7b46fe83",
        "cursor": {
          "ref": "7b5de968-2199-4232-85f5-336ae3e122c2",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d77790c5-10b7-4931-8940-da692dfafbab"
        },
        "item": {
          "id": "4f447445-0b83-4459-973c-68dd7b46fe83",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "27bc7b77-bae4-431d-9015-ce5d4ab5b0d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0dfc57f-6c15-48e8-b89b-83bd0119e048",
        "cursor": {
          "ref": "59af53b6-f65a-4f3a-b758-0acac12f7351",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c09b474f-f4cd-4f1c-bd32-0855f652cb35"
        },
        "item": {
          "id": "d0dfc57f-6c15-48e8-b89b-83bd0119e048",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f3ea0b05-cae1-4912-9714-cdeb14aaba0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9dec430-3513-4b5d-834e-54227d8e32e8",
        "cursor": {
          "ref": "f1750f31-3ca5-4bcd-8c56-46229ca046bc",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e12294cf-d5d1-4f37-90ba-fad778855536"
        },
        "item": {
          "id": "e9dec430-3513-4b5d-834e-54227d8e32e8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a871f793-aa41-4623-b6bb-9ec124fb6a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb8f6a8-9a72-4f6e-a5cd-c86b3f7dd4a0",
        "cursor": {
          "ref": "bb44c9b1-0506-4046-8b46-d6df49640dd7",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "aa80b330-c1fa-49e1-a3b5-0132bb893053"
        },
        "item": {
          "id": "ddb8f6a8-9a72-4f6e-a5cd-c86b3f7dd4a0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ccf384a8-6d9b-47b6-8dcf-13b3d0809789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e843260-dbf2-4f1e-831d-4cda7d1961c1",
        "cursor": {
          "ref": "65cabf49-161f-43bb-971e-2eccc31689f2",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6ce5d8a3-a66b-4b7e-a150-b6e20d83bbf5"
        },
        "item": {
          "id": "4e843260-dbf2-4f1e-831d-4cda7d1961c1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "75984d2b-fdfc-4941-bb7d-d524835a4f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7ca493-d97e-46ab-a66b-75b80682fa19",
        "cursor": {
          "ref": "016fb3d9-1c4c-4332-8fb0-002bbde70c9c",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d9ce624b-d241-43b4-a024-f0519298934d"
        },
        "item": {
          "id": "2c7ca493-d97e-46ab-a66b-75b80682fa19",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7a244685-b6e3-475f-a54b-fc453c192614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99200cd4-4ae5-480d-bc3b-cbb07f2fc300",
        "cursor": {
          "ref": "e427cee7-b56b-41ae-aa4c-421f7d8f835c",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "37b38105-1974-4841-bcb3-c6778d008e45"
        },
        "item": {
          "id": "99200cd4-4ae5-480d-bc3b-cbb07f2fc300",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "64be38fa-63b2-4655-9cbf-c3225270799a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2925cb0-b7a0-4b87-aa8f-0c194e22fbfb",
        "cursor": {
          "ref": "992cca26-d16e-4012-bffb-a5e205b8d794",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e5de52e3-b18f-4183-abf1-ee582920341b"
        },
        "item": {
          "id": "e2925cb0-b7a0-4b87-aa8f-0c194e22fbfb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2fe3f62f-443e-43b4-a3f3-eff4f7111845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645d1927-6749-4280-ad46-dfd20ed9942d",
        "cursor": {
          "ref": "4173294a-233b-47ab-962f-58b7d61561bf",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0dde1fbf-5aa7-4b9f-ba8f-97ed6f534285"
        },
        "item": {
          "id": "645d1927-6749-4280-ad46-dfd20ed9942d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8020c5da-27ec-4c5f-8b8a-86e1038cd54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d636c7-36a1-4d51-b6de-fe0ef91c3c55",
        "cursor": {
          "ref": "a5bfefa0-f502-4745-a9b6-b749432cf9d9",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9a3fd362-a150-4530-8150-6030e20dd830"
        },
        "item": {
          "id": "a5d636c7-36a1-4d51-b6de-fe0ef91c3c55",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "394656a7-507b-4323-baee-0f0738adf774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c7795c-8cd6-47ab-ad47-5686150eb6b1",
        "cursor": {
          "ref": "19c505c1-a071-4d41-86ac-7b42e1848b92",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b825522b-16bf-49a8-a7b6-a8bbc1c8e090"
        },
        "item": {
          "id": "c7c7795c-8cd6-47ab-ad47-5686150eb6b1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c5228bc8-b8e5-4073-9b9c-176758ccd316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d500edee-4f6c-49dd-b950-d389df016d40",
        "cursor": {
          "ref": "32206060-4824-46eb-b7df-bff33c3916a8",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "53d9aa98-4389-4e24-a299-f942c25c4ff6"
        },
        "item": {
          "id": "d500edee-4f6c-49dd-b950-d389df016d40",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d31694c6-ac29-40dd-b76a-4dd92daa499f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2c726c-2292-40b5-aae6-44424f57e6e5",
        "cursor": {
          "ref": "57c9d999-c8b8-4a41-832d-c94dcdae2069",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b87eac6b-e9ab-472b-bb6f-48a7be8b805b"
        },
        "item": {
          "id": "ca2c726c-2292-40b5-aae6-44424f57e6e5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b82a6f88-c018-406c-ae2a-16aa367fef22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67ceac5-542b-474c-a727-d92d34bf8387",
        "cursor": {
          "ref": "7e611e95-8bd7-415a-8175-bb320755ea80",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "78b10820-4e8e-434f-add6-f1e5da0cf567"
        },
        "item": {
          "id": "d67ceac5-542b-474c-a727-d92d34bf8387",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5031ad76-ccf2-4207-98ee-3f21f50c379f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5b6eed-cc9f-45f4-bca1-e56ddf58d16a",
        "cursor": {
          "ref": "75d166c7-c8cb-42f9-ba2a-5b65c978d420",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "47e6a0f2-a0eb-4c5e-9383-f05a1a4d4ccf"
        },
        "item": {
          "id": "db5b6eed-cc9f-45f4-bca1-e56ddf58d16a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c527b22c-b135-4bd8-a888-f39513ab8079",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fffb4aee-b2fb-4fd6-a054-417ce5f8c56b",
        "cursor": {
          "ref": "828eb754-87e8-44ec-b840-eac8ca890110",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "cae21832-89b2-492e-bc3b-6d67f7ae1715"
        },
        "item": {
          "id": "fffb4aee-b2fb-4fd6-a054-417ce5f8c56b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8b875ecb-ab37-4215-abd9-22afd0f3e57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3abc359c-c1cc-42d9-96e0-03fa4ebf70b0",
        "cursor": {
          "ref": "7870cec1-0502-4e54-9e6d-d7c687d7e70f",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9cecc877-407f-4906-86b3-ac9f090a84cd"
        },
        "item": {
          "id": "3abc359c-c1cc-42d9-96e0-03fa4ebf70b0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "62831313-21e9-461b-94dc-cc55347ac683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e19a380-c30f-4daa-834d-12d6f2313b9c",
        "cursor": {
          "ref": "deb75bb1-a92b-4bc1-aeed-8f60e5c212ec",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9598d135-4446-4e7b-8d14-862bbe606aae"
        },
        "item": {
          "id": "0e19a380-c30f-4daa-834d-12d6f2313b9c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5014385f-e522-4699-9c01-c605604caed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1fee7d-4a3a-4690-97b8-7c224aba6913",
        "cursor": {
          "ref": "2a387b04-17e9-4635-8e12-c85226e75a66",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "336266fc-8523-4989-bf9c-a36df2ebf66f"
        },
        "item": {
          "id": "2a1fee7d-4a3a-4690-97b8-7c224aba6913",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a423b298-8ec0-4a46-bcbc-88f2217c9f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64bf3a1e-3f36-4289-a78f-5b5746e8d138",
        "cursor": {
          "ref": "80b6f6c3-1dac-4d30-a147-4f58cd7d1906",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "08c39776-ff93-40a6-a4db-20b6dafc6f5c"
        },
        "item": {
          "id": "64bf3a1e-3f36-4289-a78f-5b5746e8d138",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a60de75f-0a43-4753-a8b1-ef8741cd52f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7262789b-e76e-49cf-a66d-6fb24f9ba364",
        "cursor": {
          "ref": "5555bf8b-df3d-41bf-b58c-8579f0bc739c",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ecc98a8b-0f3f-408c-af9d-ff92b5d09052"
        },
        "item": {
          "id": "7262789b-e76e-49cf-a66d-6fb24f9ba364",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7d4f4554-85b1-459a-aa88-f4ff6b2a3cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651127b9-3c12-46b0-8a8a-5e9f125f6323",
        "cursor": {
          "ref": "3267b7a4-87e2-4ed6-a70e-be9a817298ee",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "dc667f5c-dfa9-41fc-8ad4-8cb8b287c312"
        },
        "item": {
          "id": "651127b9-3c12-46b0-8a8a-5e9f125f6323",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1a842c59-c335-48d0-9de0-2d27b4768d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fd5f30-53f3-47e4-ba61-ab0c3e08a3b3",
        "cursor": {
          "ref": "9c17f7c9-22e0-4d29-8bf7-07999551c9ba",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9acfcc4e-3cab-4aa3-bfde-6aa605748c15"
        },
        "item": {
          "id": "e3fd5f30-53f3-47e4-ba61-ab0c3e08a3b3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b0f512ec-c6ac-4ef5-bf11-f03710ac7f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4cb257-74c5-48cb-b26f-fcb935b6859f",
        "cursor": {
          "ref": "5fb893cd-6362-4089-a5fc-99d0020d2aef",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e93208b7-9d51-45f2-85aa-e389d496b5c8"
        },
        "item": {
          "id": "ae4cb257-74c5-48cb-b26f-fcb935b6859f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "af747e03-0c92-4ccc-9569-bb1ba36e47fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3b6d26-770f-454d-88f6-e94d29c54a94",
        "cursor": {
          "ref": "79779940-0aa9-4456-8b90-dec8c12d6cf0",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "00f8e92e-4853-4845-9867-71b56898f979"
        },
        "item": {
          "id": "2c3b6d26-770f-454d-88f6-e94d29c54a94",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fc8fd4bb-664c-4547-8620-dd3fb869bf87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e40ee82-2e31-4473-817e-1931f2b449b2",
        "cursor": {
          "ref": "dd024916-68a0-45e4-8530-4a86dbb79d0c",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "411fe16d-330d-41f7-b750-5c8f1f1dd37d"
        },
        "item": {
          "id": "7e40ee82-2e31-4473-817e-1931f2b449b2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "78435509-8fa9-44e2-b9eb-9f87f266db5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ccdf3cb-510f-41f6-8d3f-042eb6b334a9",
        "cursor": {
          "ref": "68d093ff-f522-4b29-b019-d9de42bf8f3d",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a009f38d-1817-4cef-a96c-0cedcc2c62ce"
        },
        "item": {
          "id": "2ccdf3cb-510f-41f6-8d3f-042eb6b334a9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0ea2b8b2-39fb-4810-b326-096cb333e5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b286c1-e908-4ca7-980e-ff29d83a45c4",
        "cursor": {
          "ref": "9a58a163-d93a-4d20-87c5-181beffae2f1",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0b56e073-2064-4309-8bb9-52c9ee541efc"
        },
        "item": {
          "id": "54b286c1-e908-4ca7-980e-ff29d83a45c4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "574223db-3e42-410a-8cf9-9a5aa9e8b0e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f96543-0159-432b-8758-d3d96536555a",
        "cursor": {
          "ref": "2f35cf34-d6a3-49cd-abab-faa72af3b3f4",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c5fd69c7-dc96-4e6f-9e49-37199ff87c98"
        },
        "item": {
          "id": "d5f96543-0159-432b-8758-d3d96536555a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ac905d1a-1cf5-4ce4-9020-6a87188ffb76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3742fdf-999b-4886-979e-6b5f77be303a",
        "cursor": {
          "ref": "da831e09-b0e1-487c-8721-6aa8610b5600",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "461c2acc-d6cf-4c85-b6c1-10f67352e48d"
        },
        "item": {
          "id": "c3742fdf-999b-4886-979e-6b5f77be303a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "adb29140-43a0-4650-8004-08a6f14b58d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a620de-aa56-4167-ab66-2817ebca1e90",
        "cursor": {
          "ref": "95313ee2-f931-47fe-9354-16f963212b50",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "634b71ef-cbb1-49ac-aabd-2f2dc0ab6a35"
        },
        "item": {
          "id": "47a620de-aa56-4167-ab66-2817ebca1e90",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "781e7f17-db25-4f00-ab3e-f83b901f4175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8de3f89-18db-4e7b-9bf3-ad66483778e5",
        "cursor": {
          "ref": "f9600792-cf3b-480d-b808-c0876dff9784",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e0d396db-0e71-4ad0-82c9-855ac147fddb"
        },
        "item": {
          "id": "a8de3f89-18db-4e7b-9bf3-ad66483778e5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a1e27843-0e1f-41b5-a6c3-eb9ce7f42f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1374be1-9d6f-40cf-8869-8713ab6492ce",
        "cursor": {
          "ref": "320afe09-01ab-4903-93aa-0af87c5025c6",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5a3be983-3e99-4df8-a856-3179cfceb99c"
        },
        "item": {
          "id": "f1374be1-9d6f-40cf-8869-8713ab6492ce",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2ea49dee-b63a-40d5-a05e-ffcf4f297d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7916b6b2-c118-4f74-bbad-d741878d062a",
        "cursor": {
          "ref": "87c9e4bd-33fd-47ea-9833-54043c24c7da",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "689b3bb6-7f92-4199-90c5-a8296446aa40"
        },
        "item": {
          "id": "7916b6b2-c118-4f74-bbad-d741878d062a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "39223531-1659-48a8-b53c-ab5f176c007d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3b1a61-bf6d-42a6-9713-b7d83102cb58",
        "cursor": {
          "ref": "b28006cd-db79-4c8d-8355-1ac3e376f9d2",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "de9ed0a3-00a9-41fc-9fb7-ae524f8b69a2"
        },
        "item": {
          "id": "5a3b1a61-bf6d-42a6-9713-b7d83102cb58",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4dbdb16f-b994-48e4-8f85-127dd67f155a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4238683-de91-49a6-bea9-75768151000c",
        "cursor": {
          "ref": "3ddd0833-f831-4235-a3d0-c4f30f70bf0d",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b1b0b526-b461-4cd2-a0a8-5e719fe14996"
        },
        "item": {
          "id": "a4238683-de91-49a6-bea9-75768151000c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4380e478-2f6d-4175-9c70-3548d95ccfdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ceba35-8e89-4905-a8fd-2ab66317e159",
        "cursor": {
          "ref": "45e85635-2423-420f-836e-6a29bec30b81",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "587d70ae-0bc8-4d29-8db4-b91ef73e8128"
        },
        "item": {
          "id": "47ceba35-8e89-4905-a8fd-2ab66317e159",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f7a63c70-139e-4678-b740-63dd445ee9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d34f894-c61f-4734-a7ce-3d99e995a114",
        "cursor": {
          "ref": "918be837-88d2-49cd-a100-a7cac374d61f",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9e3e65f4-737a-4abd-bdd1-293c1265b5ac"
        },
        "item": {
          "id": "0d34f894-c61f-4734-a7ce-3d99e995a114",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0aae0771-0aa6-4493-8960-e4c07f22c989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f93405d-d309-4450-8284-a4bfdcd076dd",
        "cursor": {
          "ref": "9007bba0-6505-4104-8a50-84f03080fdbf",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a2398676-ce46-43a9-9291-7160e0c278c5"
        },
        "item": {
          "id": "3f93405d-d309-4450-8284-a4bfdcd076dd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "23db3d77-ded9-4149-833d-6fc8e70909ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27190b8d-6850-46b2-b7c3-5fe5c17f056e",
        "cursor": {
          "ref": "f3eca03e-6a44-4d5b-b689-102df681179a",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a72e035f-ec0f-4bad-82ee-4f13865c40bf"
        },
        "item": {
          "id": "27190b8d-6850-46b2-b7c3-5fe5c17f056e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "81bfc28e-c12e-4383-8ebd-be99598b5cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03aaa540-aa53-4c21-977e-b9d41f482d9d",
        "cursor": {
          "ref": "e8e9b67b-2cbe-407a-b16b-f6a1d17bc2f9",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7c8c3ee6-225b-4d10-adb5-ad0c3d427d77"
        },
        "item": {
          "id": "03aaa540-aa53-4c21-977e-b9d41f482d9d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "829859a8-f5f5-4926-933e-d143cfc7203f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c548a6d-66b9-4fb0-84f0-efc09e36d6da",
        "cursor": {
          "ref": "9f5ae8c0-6f2f-4e8d-9bd0-df7b86789ade",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0c03a56e-a059-4d36-97c9-6f37598485b3"
        },
        "item": {
          "id": "2c548a6d-66b9-4fb0-84f0-efc09e36d6da",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "04d906c4-a809-4f1e-b7fb-7211f3e53af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1abf292-34d1-4456-93e9-0b6c673d2344",
        "cursor": {
          "ref": "a338a9e3-f6e6-4b91-8c1e-c5d47d576504",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "fc640332-cc77-4a00-8459-3bbaab7c08ed"
        },
        "item": {
          "id": "d1abf292-34d1-4456-93e9-0b6c673d2344",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ed937b18-c940-4a36-b1d8-7705cfa91782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba16bdd-7a89-4686-9005-3059050ac6fa",
        "cursor": {
          "ref": "b243fa3d-5dfa-41b2-9319-615da1a96ba2",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9adb8e7c-86c6-41cd-8003-776e2ff6e981"
        },
        "item": {
          "id": "fba16bdd-7a89-4686-9005-3059050ac6fa",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "68f654c6-6bcf-4337-853c-26550a2cb2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bec26f5-2b0e-449d-a747-7ae6b49a6b6d",
        "cursor": {
          "ref": "3cf510b0-36de-45bc-8b94-07f2b2f4d378",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "dcc96d6d-a437-4de7-adbc-e57c571b51d7"
        },
        "item": {
          "id": "4bec26f5-2b0e-449d-a747-7ae6b49a6b6d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cfbe865b-4a6c-4f41-b7de-f70c8ea413d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497dbfa0-9612-435c-8e4e-0534d0e429f2",
        "cursor": {
          "ref": "287fb98e-49e8-40b3-baf9-e917770c6593",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "00c8764d-1c49-49e4-9b3e-48ac1781392c"
        },
        "item": {
          "id": "497dbfa0-9612-435c-8e4e-0534d0e429f2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9ab503c4-cf1f-4073-9031-2bb61adde2bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b941ae6b-bbf2-45de-9f9f-a4a7be1b2286",
        "cursor": {
          "ref": "a8d1452a-5d4c-4fdf-b3ff-29f915f4b837",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5d3fedb9-fd63-46ec-b231-4fe1a481e35d"
        },
        "item": {
          "id": "b941ae6b-bbf2-45de-9f9f-a4a7be1b2286",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ac75ad2c-257e-4849-9cb9-49fa0a2256d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5a34a2-b7f1-482b-a9df-a572e7cf4df4",
        "cursor": {
          "ref": "49104097-42bd-4052-8263-3d97d5c1f4d5",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "eaab36cb-6a14-4827-8322-74e6e5d3c6d0"
        },
        "item": {
          "id": "cc5a34a2-b7f1-482b-a9df-a572e7cf4df4",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6faa1557-216d-418b-a01a-5748dcefeb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336c0c01-f946-4bcf-bfb4-86fec8dee3e9",
        "cursor": {
          "ref": "de1faf60-b89f-4d48-888b-d9da93ff1805",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a1594823-0ab1-41d7-a5ff-1a2e51724587"
        },
        "item": {
          "id": "336c0c01-f946-4bcf-bfb4-86fec8dee3e9",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "26f12fdb-e105-45d4-bbd5-ae1dcf170e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcdf2499-a4ea-41bc-ae35-9d8d9d64523f",
        "cursor": {
          "ref": "e601e9a4-4703-493b-95c4-a7f61d0b2ba3",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b60ac77c-9a66-4a0a-b013-df86c77bdcae"
        },
        "item": {
          "id": "dcdf2499-a4ea-41bc-ae35-9d8d9d64523f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0e2e4879-ddd5-4bd5-8587-a48d11b29736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca3f7cb-95b5-4f9b-9415-39f4585646d5",
        "cursor": {
          "ref": "806d5f12-cb01-47b1-9c22-51046e586e05",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9e4e8087-f41a-48c3-a002-2ea30865b3ad"
        },
        "item": {
          "id": "fca3f7cb-95b5-4f9b-9415-39f4585646d5",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "be9c3664-ab71-4fff-a1ed-7739b06ee25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206b513e-a26b-4380-b09e-308c41d4fdec",
        "cursor": {
          "ref": "93bc5566-32e7-45d5-95a8-effab5b718cd",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6308b1a7-59ef-45ba-8590-43bbdafb71b4"
        },
        "item": {
          "id": "206b513e-a26b-4380-b09e-308c41d4fdec",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "56446403-1341-40b3-8078-34fe70504950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57db0b85-e594-4101-b173-23bc3de57bbb",
        "cursor": {
          "ref": "c8d71fb2-0391-4fe1-a27e-52144bae9fe3",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b82e4cf1-f26c-4ebc-b924-f424522f8dfb"
        },
        "item": {
          "id": "57db0b85-e594-4101-b173-23bc3de57bbb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6ca3b4e4-8460-4b0b-96da-478b877d4d25",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4791f30-749f-4455-a132-5818a80a7a85",
        "cursor": {
          "ref": "38f7e448-f2eb-47a5-b992-2e7d0ffb6803",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d8003a6a-641e-4a10-983f-2575ba651596"
        },
        "item": {
          "id": "a4791f30-749f-4455-a132-5818a80a7a85",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "bf12d19d-fdf2-4d61-8283-5bc0724edb12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ff0725-ecbb-4e45-bf69-75e5c6505399",
        "cursor": {
          "ref": "4e37adce-dfe0-4d1c-910f-fb6e052c912e",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "eab6f4a7-21be-4003-8775-8e217a1e3832"
        },
        "item": {
          "id": "73ff0725-ecbb-4e45-bf69-75e5c6505399",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ba0c7550-ab87-4cc0-a9a5-a6f7ca7cf9c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7bd1f39-93d2-4452-b090-0ca7539e1931",
        "cursor": {
          "ref": "c002e921-b2bf-40da-9ac5-a0de6be99dec",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "310af17c-aacd-4de6-a2d2-6452568bdd8a"
        },
        "item": {
          "id": "f7bd1f39-93d2-4452-b090-0ca7539e1931",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f06dee84-6a79-4a8c-bc68-c84339f2bd3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3bf7c16-1fce-4257-8970-69ff21d783ec",
        "cursor": {
          "ref": "0240b72c-9f8c-4ac0-969c-6678d9018c4c",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "758f76f3-6ad9-4035-b05b-2808a25ce0ac"
        },
        "item": {
          "id": "a3bf7c16-1fce-4257-8970-69ff21d783ec",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "81984319-c801-4a54-a6fa-2bd20d55ea79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be033c9-3a44-45f7-8135-7c2b2896096f",
        "cursor": {
          "ref": "85955c22-aeef-4032-871a-1456743f3933",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "22ef5868-2a48-4743-afdc-b89b011b9846"
        },
        "item": {
          "id": "7be033c9-3a44-45f7-8135-7c2b2896096f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c8d6e69e-2699-4521-bd53-907ab0ebfc5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427df7ad-0a39-4dfa-96ba-d363afba074f",
        "cursor": {
          "ref": "7c59dc1f-6973-4cc6-9c8d-116acd4e8449",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ecf22bd0-993a-4add-b8d9-9e51fb20877b"
        },
        "item": {
          "id": "427df7ad-0a39-4dfa-96ba-d363afba074f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "971f4656-554c-4e2b-ade3-ece43119bd23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a325a1d-8dce-4e94-a145-9acded7b4018",
        "cursor": {
          "ref": "9f2b29da-7a93-4e0b-a1cc-f877074274ed",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "08fb799b-5932-411d-bab5-874fb03d294a"
        },
        "item": {
          "id": "3a325a1d-8dce-4e94-a145-9acded7b4018",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ca7388b5-b858-4fa6-bf17-499774e09592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "345a3e18-c75a-40a4-8d2d-50dd3af626fa",
        "cursor": {
          "ref": "6b252630-ccdd-436a-b4ac-96ad7f4dfcaa",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5b4aa7c9-3e97-4729-ae6b-4bfe6350af93"
        },
        "item": {
          "id": "345a3e18-c75a-40a4-8d2d-50dd3af626fa",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "214e6bf3-bb87-4406-a136-f1d82927a07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7983c29e-c050-4198-9d10-edfb7de2892c",
        "cursor": {
          "ref": "046e4a4b-e18c-4899-9f5b-c89366f39e9d",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ff2d5835-425a-4ab6-8522-d8732445db4d"
        },
        "item": {
          "id": "7983c29e-c050-4198-9d10-edfb7de2892c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "52385199-578d-478e-a28c-831ee85d84ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bdd5cef-8323-46f6-b879-fd3419528c28",
        "cursor": {
          "ref": "2167ca81-6586-48a7-9d43-b256a65a648b",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4a2999a5-6075-42ad-9e6e-2f93cd8b303f"
        },
        "item": {
          "id": "5bdd5cef-8323-46f6-b879-fd3419528c28",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1d8a70ea-0a5f-402c-930e-f5847d4174c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2a27f6-bae5-4ed3-89f0-38ea525ca259",
        "cursor": {
          "ref": "24e6b517-00a2-44d7-b34c-0ed1e8ded0b2",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b23b9cae-945a-46ae-b01c-5799f26147cf"
        },
        "item": {
          "id": "3c2a27f6-bae5-4ed3-89f0-38ea525ca259",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "cc66a0ba-c6d3-4330-b322-57afb9cc4d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473afa93-a55a-41c3-a839-2c7d629c107f",
        "cursor": {
          "ref": "a16248dd-a477-420c-b190-d29e04436544",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2312316d-0f82-4445-a58c-65f3cf6108c3"
        },
        "item": {
          "id": "473afa93-a55a-41c3-a839-2c7d629c107f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a173ae71-6707-4a7d-8472-7c30930e3490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b4ef20-60a6-4bb9-8629-54c344014234",
        "cursor": {
          "ref": "51d4fc5b-e42e-43a2-8621-9f8c5990bc75",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ba5c83f9-cb6a-46fc-ada6-6f9ee72cd44b"
        },
        "item": {
          "id": "31b4ef20-60a6-4bb9-8629-54c344014234",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6d085893-f6bf-4c56-a7d6-d538e440261c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f90c842-51be-481d-840d-692ec0586f3f",
        "cursor": {
          "ref": "5d5602e1-480b-45f2-9db1-81f5a09d03f6",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e90ab3a3-6ff9-4615-a79b-52a286b106ad"
        },
        "item": {
          "id": "9f90c842-51be-481d-840d-692ec0586f3f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5185aa9c-9093-4d2c-9f9e-80e00a95a24e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94b80cc-1eec-4726-b856-6186d4ce5985",
        "cursor": {
          "ref": "1923a27b-4536-4191-a3d8-37dc8f964d6e",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b20e7295-2cce-408e-bb51-fefbc70afdcf"
        },
        "item": {
          "id": "e94b80cc-1eec-4726-b856-6186d4ce5985",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e1203601-b6bc-4e72-b2d6-167202fac374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45793ff-7c6f-4da1-87c6-293cc55beb30",
        "cursor": {
          "ref": "afbce28a-ddfa-4c15-8607-49f355a3393d",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d5ea9170-245e-4145-b4b9-3cee1df9bc23"
        },
        "item": {
          "id": "f45793ff-7c6f-4da1-87c6-293cc55beb30",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "96d4ac74-0071-48ed-b690-f1097825be69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e20193-cc85-4525-b4bf-b64d3425a5fa",
        "cursor": {
          "ref": "e5098410-7899-47de-862a-4521d600354b",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0c5fcf7b-e43b-4945-904d-606561e003cf"
        },
        "item": {
          "id": "d1e20193-cc85-4525-b4bf-b64d3425a5fa",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2e30092d-d177-45fb-8af4-a095db45d5ad",
          "status": "OK",
          "code": 200,
          "responseTime": 114,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "1297502b-d49f-47d9-9714-f8ff427518c1",
        "cursor": {
          "ref": "2a734e7c-c3b9-41b7-b123-e13895d0ebc5",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1d206ce8-e1f4-44e2-83fb-89c607cd4370"
        },
        "item": {
          "id": "1297502b-d49f-47d9-9714-f8ff427518c1",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "96053b2a-c143-4fb1-88c8-10a493aa15e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6d74d9-2a59-4f2f-9a6e-c2748708325e",
        "cursor": {
          "ref": "7b06e3f9-e32a-4618-9283-ee7f3f6c90bc",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "fa2ff1f5-1174-442e-8276-30a40e544427"
        },
        "item": {
          "id": "4c6d74d9-2a59-4f2f-9a6e-c2748708325e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "00b58259-cd17-4391-bf30-9748b936ec08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b331dc65-880d-4e6a-9b53-d8fae438543b",
        "cursor": {
          "ref": "cf504113-14c2-4f50-bb78-e0426aaf98fd",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f08ae504-af27-403a-9fdf-ac83f6912de6"
        },
        "item": {
          "id": "b331dc65-880d-4e6a-9b53-d8fae438543b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "bfb674b7-9cc2-4c3b-9671-70be9a1cda61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29477017-f8a0-4b1e-8225-c0799eb70f65",
        "cursor": {
          "ref": "cbdcfd64-d7c4-4f0c-8e55-e5129b84e5db",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9f20989e-e6c5-4f89-92c6-3a60065e63e3"
        },
        "item": {
          "id": "29477017-f8a0-4b1e-8225-c0799eb70f65",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "75b635e4-4f21-4cd6-a06e-853103a2f90a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd69f26c-4cce-4e0b-90e4-46eb853eb456",
        "cursor": {
          "ref": "f08eb150-b647-49f1-8a30-9ffc10991fc3",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a618cdbf-bab5-4263-8278-d919dba08929"
        },
        "item": {
          "id": "fd69f26c-4cce-4e0b-90e4-46eb853eb456",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1a1c85cd-f2e5-4037-8314-f93cc5dc7442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19890d7b-4f68-4bef-8837-129abe96e75e",
        "cursor": {
          "ref": "59833473-7d91-4126-963b-08e0e35b03ed",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "dd4243f5-2e72-4867-b250-c82303a8b021"
        },
        "item": {
          "id": "19890d7b-4f68-4bef-8837-129abe96e75e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a2e97559-526f-40ee-bfce-ad58575fd0be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed7d99d-4775-4d9d-80cc-2d975932cb05",
        "cursor": {
          "ref": "bbcb3339-4d89-42fb-a9fa-1bc599f042fb",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5c5624a2-4871-477d-a675-9f471cef2698"
        },
        "item": {
          "id": "7ed7d99d-4775-4d9d-80cc-2d975932cb05",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8bb4de0f-0078-429c-8853-194eb27c4397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2d8b0c-6b31-4e08-a4b6-d4ab7a364c02",
        "cursor": {
          "ref": "bed165e5-07b9-46d4-be24-4aa4c18aee84",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a7301bb4-9ab0-42c6-acb9-7f845f50fe2c"
        },
        "item": {
          "id": "9e2d8b0c-6b31-4e08-a4b6-d4ab7a364c02",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d7824bae-e55d-443d-a6bd-53b813425bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be29f27-f485-4038-98c4-0cc08f5d4686",
        "cursor": {
          "ref": "94c34f57-ca55-43f3-86de-b0fb29aadf0e",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9817464a-3abb-4015-b4af-7e47c3c7c471"
        },
        "item": {
          "id": "3be29f27-f485-4038-98c4-0cc08f5d4686",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a76b6fe2-4300-4044-acf5-c88918943f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b97c187-df4f-46e8-962f-9e02b9025de3",
        "cursor": {
          "ref": "a5029aad-4fff-48b8-9b21-6d4e05c9ab65",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "80c0478f-6c9c-4573-9061-bf28da8c5f70"
        },
        "item": {
          "id": "4b97c187-df4f-46e8-962f-9e02b9025de3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4c875343-6a70-4014-8863-f2bd9b777d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174ecf67-b615-4988-849b-c360722ee92b",
        "cursor": {
          "ref": "e103970b-e125-41be-865e-5a7ccf2e0252",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0e3980d3-8e3b-4260-8536-42a1bc800fd6"
        },
        "item": {
          "id": "174ecf67-b615-4988-849b-c360722ee92b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d8fa9e29-b4c2-4d64-9d3f-cc76285faf5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acce5dc7-aa37-4410-8d0f-6f1a46a9ea35",
        "cursor": {
          "ref": "678b7f98-998e-4065-9300-01d35b5ea77c",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "95285ac7-5ba2-4525-b45a-a1570ccde102"
        },
        "item": {
          "id": "acce5dc7-aa37-4410-8d0f-6f1a46a9ea35",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "bd644bd7-8be5-4733-be1b-273b3674b4be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf05aae-0554-4f0d-a969-1e897cfb4bbc",
        "cursor": {
          "ref": "75e6f166-078f-4d6c-9f9b-f81428a1b815",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0bff47fb-db00-4bd6-97f2-de6b3ab3af65"
        },
        "item": {
          "id": "ccf05aae-0554-4f0d-a969-1e897cfb4bbc",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "901e1f53-9e10-4145-a532-6015f4d10237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b08be3-78c9-45dd-93f2-f758f83ba8d2",
        "cursor": {
          "ref": "c9e0a696-ee5a-47e4-8d96-4c5c35d912b6",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "48fe449f-009d-40f6-bb9f-a44bda7eb075"
        },
        "item": {
          "id": "f1b08be3-78c9-45dd-93f2-f758f83ba8d2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "dbe8ac76-7046-44ff-83d4-1542b73677ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1008aea0-1af6-4b2b-a6e0-f5d55fb2cf58",
        "cursor": {
          "ref": "22f4f320-00c2-4821-a672-f12a3b91afa2",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f4f8e873-c789-49c9-8679-936602b396a9"
        },
        "item": {
          "id": "1008aea0-1af6-4b2b-a6e0-f5d55fb2cf58",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "eada5cd6-bf47-493e-8478-22e7e0d2b077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7789aae4-bf71-46cf-a4a4-3d34abd6e6fc",
        "cursor": {
          "ref": "81c37c8a-11fa-4c62-ba87-bdf802e7c513",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3132f89e-a1a9-440b-8e10-b981a9051db6"
        },
        "item": {
          "id": "7789aae4-bf71-46cf-a4a4-3d34abd6e6fc",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "bdc67766-aa5c-42e5-a693-fbaa03045145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47034307-99b8-4352-8a05-72da1595a41f",
        "cursor": {
          "ref": "16bef35f-dba2-4bd0-a459-d9a7045e4a59",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b72e2728-d75f-4b74-84cb-464f0b6023a0"
        },
        "item": {
          "id": "47034307-99b8-4352-8a05-72da1595a41f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "61850f2c-5660-4d53-997a-a4cd00cdd7e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e92bcd3-f22e-4181-aa6b-1c9a848ff5f8",
        "cursor": {
          "ref": "1f7d9c14-5fd4-410e-85f6-86b0b6adb687",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d4f22058-e2ee-4556-b5c2-62def5347c9c"
        },
        "item": {
          "id": "3e92bcd3-f22e-4181-aa6b-1c9a848ff5f8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9da9f528-d2af-457e-a742-43d84f4f0d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d452d21e-f9db-4d4f-8e12-2a8c938a2864",
        "cursor": {
          "ref": "d68abdc4-ffcd-4bb3-9e48-e1c8a2e8b01f",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3b4e362a-e975-42e7-8d01-e2c37cf56ce0"
        },
        "item": {
          "id": "d452d21e-f9db-4d4f-8e12-2a8c938a2864",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0670798f-7d3c-49c3-b5fa-c8ea464cdb18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a99219f-860a-4eda-863b-5544ff8e6f44",
        "cursor": {
          "ref": "bc875d6b-0e8a-4877-ab36-e21155f23a2c",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f822a4a6-c23c-43f3-8abe-2d87b9ba5333"
        },
        "item": {
          "id": "4a99219f-860a-4eda-863b-5544ff8e6f44",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f295e73b-9433-46bb-9b13-62ad32736de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b444366c-53de-4ae8-9c61-fefca4c0f122",
        "cursor": {
          "ref": "c05db016-c149-4ce3-97a2-b2c1c650cf71",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "26fecabd-5f7a-4a1a-a3cc-47d4e64fb8be"
        },
        "item": {
          "id": "b444366c-53de-4ae8-9c61-fefca4c0f122",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ac64653e-9d58-4d3c-a232-2b5438440f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a89a3d-64d8-465b-9ef5-85084131b3c7",
        "cursor": {
          "ref": "589d93dc-9280-436d-b7d2-ca5dff63cf3a",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1c708baf-c2e7-4034-b151-ec56e732dcf3"
        },
        "item": {
          "id": "70a89a3d-64d8-465b-9ef5-85084131b3c7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "81ef0c14-71b2-4adc-b782-aed754b3ecfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49761887-4785-4330-9567-a175caefd37d",
        "cursor": {
          "ref": "5c09e8b5-05b9-46f0-a9bb-d206d51b4840",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "faef383e-142f-40b3-bcec-9749d3d40948"
        },
        "item": {
          "id": "49761887-4785-4330-9567-a175caefd37d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a56482ca-5678-4311-9c2e-8ca090cfdebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ca1899-dadd-44e4-8ddc-b817a78c8290",
        "cursor": {
          "ref": "118d505f-7cc0-4675-a540-2ba57214306d",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "cd159315-2f3f-4d58-93d1-949834ab6007"
        },
        "item": {
          "id": "10ca1899-dadd-44e4-8ddc-b817a78c8290",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "29bc857b-625f-4813-a75c-df8fca7c33db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b53555-9f7b-4f8f-9716-632fcae2776b",
        "cursor": {
          "ref": "6a17dab8-24b7-4425-b8d6-848d72fc867e",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f6ebcb2e-ce24-4043-badb-dbc25ad05c78"
        },
        "item": {
          "id": "33b53555-9f7b-4f8f-9716-632fcae2776b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "cc820829-ba35-48d3-9e85-c461dc3f979b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6db9b4b-af25-484e-aa1b-6346aab17c5b",
        "cursor": {
          "ref": "93a34191-0b60-4067-9551-8ea697006358",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "eeddfd7f-4aa4-4cd3-b637-3c166ffc5990"
        },
        "item": {
          "id": "c6db9b4b-af25-484e-aa1b-6346aab17c5b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "fe1aa01a-df5b-446f-b817-22c1c4d8e691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e27c67-2ddd-488a-a6e3-e56e17d30186",
        "cursor": {
          "ref": "73809fb5-cd54-43ef-b069-3b9335a1d026",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "23943ed6-8f20-4dce-a53f-00d3adc08e9d"
        },
        "item": {
          "id": "33e27c67-2ddd-488a-a6e3-e56e17d30186",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c5b65063-e128-458f-9fa0-e910afb22fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959a986f-b94a-46fc-bef6-f535cf1bf407",
        "cursor": {
          "ref": "d17785e0-fef1-46be-b8dd-395ba90a5bc0",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "77c23ad3-f039-492c-9fe9-6107524c36dd"
        },
        "item": {
          "id": "959a986f-b94a-46fc-bef6-f535cf1bf407",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "efb3ae98-0da3-416c-b217-92f94a2afecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88924beb-e339-4f18-a98e-de77bdf536bb",
        "cursor": {
          "ref": "bc031fa1-8f7b-47f7-9405-9872e035735a",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "cc283fe3-e9cd-4c78-8fa3-9dccdb86e3f0"
        },
        "item": {
          "id": "88924beb-e339-4f18-a98e-de77bdf536bb",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f61b324f-e882-4604-9ef1-dd535ae1c36a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8b957e-faf2-4644-abf9-0895371c3b04",
        "cursor": {
          "ref": "7002dd08-1b8c-44ff-9c0a-f30200ecb51e",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7688bc42-6dab-4b96-aebc-7cf8611c872f"
        },
        "item": {
          "id": "1e8b957e-faf2-4644-abf9-0895371c3b04",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9265ba32-3532-4933-8592-706b82c518ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2eaa4b-d02f-4784-9cc8-6d2d4c4cf608",
        "cursor": {
          "ref": "471a1568-a861-46bd-b96e-58c42fb0d94c",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b22918c4-1018-4833-a52e-9c5d6f7f6824"
        },
        "item": {
          "id": "fc2eaa4b-d02f-4784-9cc8-6d2d4c4cf608",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f6a05f4a-99e8-4a50-80e4-6a00cd06b7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93a9307-9c52-4f8d-b6bd-2d8c48d6d05f",
        "cursor": {
          "ref": "5b5d0b04-5791-4f96-b5ea-a7486b57decd",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d3c322bc-d4e8-425d-8b19-8a8a557f9e2c"
        },
        "item": {
          "id": "f93a9307-9c52-4f8d-b6bd-2d8c48d6d05f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5016bece-04a6-4b9c-8120-2c3dc1136898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1943ba-f376-4ce0-816d-14fe4640cfe7",
        "cursor": {
          "ref": "4a02cec5-99e7-4fe7-bc66-f00dd355e07d",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "25a86fd4-d2ce-4185-8175-4e2d7108fb81"
        },
        "item": {
          "id": "5f1943ba-f376-4ce0-816d-14fe4640cfe7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "613d94d6-2d07-4afe-943e-173d210e2663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd0b0bc-4914-4e31-b85a-6d2ac8db07aa",
        "cursor": {
          "ref": "bb21a060-e42e-4ca1-a0aa-bb9e597d6804",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f03a64b3-4b14-40c8-92dc-04d7a8e33e7e"
        },
        "item": {
          "id": "cfd0b0bc-4914-4e31-b85a-6d2ac8db07aa",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "94528d59-a085-4e61-b3ae-9e2f891868f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6627188-a11d-475a-acce-18aa654b6b09",
        "cursor": {
          "ref": "ea8b8478-f0ee-4e6f-b1a3-f0914d35165e",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "cb3f8a6d-0a60-45f5-8c58-855f997a3ae9"
        },
        "item": {
          "id": "a6627188-a11d-475a-acce-18aa654b6b09",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4c96736c-6fa6-4f64-96fe-13b7f3cdb0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75f070d-9778-4969-b6d4-6ad8fdc96f6d",
        "cursor": {
          "ref": "fd976521-c8ba-4cd0-a0b3-1289254eb9d0",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "dbc9356b-c256-4792-8cd7-cdd299cbb96e"
        },
        "item": {
          "id": "a75f070d-9778-4969-b6d4-6ad8fdc96f6d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "81d30ff3-1648-443d-8074-74e62aa0cbac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b670c280-8ce5-4b41-bd20-9d38e4477e85",
        "cursor": {
          "ref": "54907cc0-bd7f-4701-b3a0-c11cb9db5dc9",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "11edee13-ecb4-422b-86a2-38cd7e7cc7ed"
        },
        "item": {
          "id": "b670c280-8ce5-4b41-bd20-9d38e4477e85",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "df66b56a-aca7-4ffa-818d-7fecb90f1be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e826685-5300-4c60-86e5-d8c15b9f5848",
        "cursor": {
          "ref": "e4486510-5dbf-44fa-9460-fc91669a95f4",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f1d1ba65-6403-4c82-a435-f5e1949d6c92"
        },
        "item": {
          "id": "9e826685-5300-4c60-86e5-d8c15b9f5848",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7979a147-f536-4c25-bdbb-72ac2311ba9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9df3b0-f4c2-4498-acd1-bd954f4586fd",
        "cursor": {
          "ref": "39d562d3-a44d-4966-ae01-4ceced57e9ea",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8afc5af9-1c7d-4e2d-8a4f-b2c6a9196377"
        },
        "item": {
          "id": "da9df3b0-f4c2-4498-acd1-bd954f4586fd",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f0ec3964-9976-44b7-a2ce-971f50f55295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc74a97-113d-4c64-b142-965900d45b93",
        "cursor": {
          "ref": "8f8a9785-1569-4675-b2a7-c9e1b7b78c08",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1fe33b43-ca93-4df7-9d3d-c87a36a464fc"
        },
        "item": {
          "id": "2fc74a97-113d-4c64-b142-965900d45b93",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "66cf7402-5e5f-4cd6-a4cf-561fa15df446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5059ab-c966-49bd-97ef-49ac4ffa6fd6",
        "cursor": {
          "ref": "cfe13e44-9e78-4318-a4a0-6740d60b8d94",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "fad72b5d-16e9-4041-a28a-4cefeae8bd5d"
        },
        "item": {
          "id": "5a5059ab-c966-49bd-97ef-49ac4ffa6fd6",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f07c4f59-178c-4ed0-b837-b5e593d1bdd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14cd0f9-2ee9-4ef5-9a73-5ee0e7eee720",
        "cursor": {
          "ref": "56f47b18-3dc5-4787-a383-002041f9b713",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ac0d811d-b1c9-4eb9-a645-c1464f32ef1d"
        },
        "item": {
          "id": "f14cd0f9-2ee9-4ef5-9a73-5ee0e7eee720",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ec4238e9-557b-41a4-95d0-cce8368b27e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a0eec1-9e7d-4311-a36f-3065f150ef42",
        "cursor": {
          "ref": "f0389703-868e-4327-a093-4407857681db",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f50826dc-8f0a-4f43-81b1-a8eaea1cd59a"
        },
        "item": {
          "id": "38a0eec1-9e7d-4311-a36f-3065f150ef42",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b363d646-fd03-4c74-ba68-30854bdcfb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d959325-ba1a-495a-a32c-e618a374ca14",
        "cursor": {
          "ref": "2450feb4-28ac-4323-a1c8-f35d9aff1dab",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3e7f0fd0-8b72-4470-8b1e-cc31fcb87884"
        },
        "item": {
          "id": "8d959325-ba1a-495a-a32c-e618a374ca14",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "900c9dc8-aed2-45c9-9abb-1cc4d244c9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac91e1b-c539-445c-8ba3-58f4fe278b84",
        "cursor": {
          "ref": "589f453b-5c9c-4973-821d-537d9d785d7e",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7fed3fd4-577d-4046-9a46-027f090464e7"
        },
        "item": {
          "id": "0ac91e1b-c539-445c-8ba3-58f4fe278b84",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ac176031-c280-47a3-a561-ceb73dd19f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f978880f-5368-435a-ad25-db79f4daae10",
        "cursor": {
          "ref": "3e443f8b-865e-471b-b3ba-f81a2dc544f4",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7a7c483c-76f0-4b50-a081-d80950554b29"
        },
        "item": {
          "id": "f978880f-5368-435a-ad25-db79f4daae10",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5a46695b-46f9-4391-8bee-544b0a8a1399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3f4c35-5bf3-47e2-96ed-0e586e482329",
        "cursor": {
          "ref": "b5777c81-68d9-46a5-bc4d-1a71fe38ec60",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a2c27eeb-8ab5-4052-9c24-3031cd77325e"
        },
        "item": {
          "id": "ef3f4c35-5bf3-47e2-96ed-0e586e482329",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "33ba381e-6202-4915-8789-792f0652a276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25cd923b-881b-40bd-90cd-a8592ca260db",
        "cursor": {
          "ref": "f39e40a9-1b43-4058-9c04-dee98b2b4b8d",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "83adf005-135f-41d8-99de-e7e200ccfda4"
        },
        "item": {
          "id": "25cd923b-881b-40bd-90cd-a8592ca260db",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5385fe69-b9cf-4958-b3f3-4182d579bb8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35da9c38-1e59-47ee-99c9-74823ac9d2ce",
        "cursor": {
          "ref": "bcd56d64-4de2-4b34-a5c6-7582999d1e92",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6bd534bb-652c-42ba-a3b1-6812414d0c6c"
        },
        "item": {
          "id": "35da9c38-1e59-47ee-99c9-74823ac9d2ce",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b0c06829-5d50-4689-b916-27a2387a56e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8a1d36-ca5f-45b2-8baa-a99a1fa6b859",
        "cursor": {
          "ref": "8c8bf885-4508-42bf-9b0c-3a7fabc457b3",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d093b553-8724-41f7-9cc6-78ee6d1db752"
        },
        "item": {
          "id": "7d8a1d36-ca5f-45b2-8baa-a99a1fa6b859",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7b74b3c2-60b8-4c06-83ed-7b573b647bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfac5202-aead-4dd6-9f73-5c4bbec862ba",
        "cursor": {
          "ref": "57c763a2-56ea-46c3-b599-ab454a7e4a6f",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "67adfe97-76dd-4bbe-9a20-e56d95e0058f"
        },
        "item": {
          "id": "dfac5202-aead-4dd6-9f73-5c4bbec862ba",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fd945822-e20d-4f27-b9bf-5ec4c5e1734c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7905fab4-94a4-456c-8272-052258156759",
        "cursor": {
          "ref": "0ead9dba-d112-49c1-bcd3-a4fd8fae0bd7",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0ca6ddb0-7f0f-45cb-ac45-de2bd9cdcc6a"
        },
        "item": {
          "id": "7905fab4-94a4-456c-8272-052258156759",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6a998a1f-4d60-4eb1-9370-9b8e27992e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5b0860-58e8-4fa1-8b2b-70e07db2d460",
        "cursor": {
          "ref": "811a5644-e9e6-4ac6-816c-b240442eb00f",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "af3c7ad4-1313-474a-825c-afa8ca2cdfba"
        },
        "item": {
          "id": "fd5b0860-58e8-4fa1-8b2b-70e07db2d460",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a2b49392-d782-45a7-8afa-2fa968ec61b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ac0841-5bee-48a7-919a-55e640e961b7",
        "cursor": {
          "ref": "7aed4a01-afa9-4a70-90f7-d86ad948a23e",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "fd9bae56-a367-4e67-b572-546a9de295d0"
        },
        "item": {
          "id": "97ac0841-5bee-48a7-919a-55e640e961b7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7a0c6f34-303b-48c9-9d87-9ac8b14010e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f547ba8-d512-4aa6-8439-3fd380387a65",
        "cursor": {
          "ref": "93f7e8c2-0d0c-4d63-89e5-71ddaf4f8b3c",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "2fedf374-138e-448d-8e14-0139cda2aaa2"
        },
        "item": {
          "id": "0f547ba8-d512-4aa6-8439-3fd380387a65",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "323ccfc3-374e-4fe3-ba6d-e2029c65c6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa329f4-ab04-4dd0-b032-94f3d32e3a66",
        "cursor": {
          "ref": "e175003f-e03e-4ed3-89f2-9bf4f84b3291",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "b5ca5cd0-1513-496f-95ff-571222a0c788"
        },
        "item": {
          "id": "4aa329f4-ab04-4dd0-b032-94f3d32e3a66",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "10efae6a-1f97-4983-9d72-6baae40d20e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735da74d-5a72-4186-a057-fccd4aefc50d",
        "cursor": {
          "ref": "34a88d47-deb9-49a6-b42a-6a42e646dc61",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "1a56b1f4-0c8e-4173-a089-eacb55e46f4b"
        },
        "item": {
          "id": "735da74d-5a72-4186-a057-fccd4aefc50d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "330a752a-db4e-4dd4-9744-299e9749dee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5599daed-3c5f-4a8c-8003-c69ff8953593",
        "cursor": {
          "ref": "e748d6a6-6d61-4fc0-96aa-451717ddd0fd",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "1a06f694-32c8-4ab8-b371-4fefe884d602"
        },
        "item": {
          "id": "5599daed-3c5f-4a8c-8003-c69ff8953593",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "30270408-b369-4adb-8e1f-48d6399e12b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88be400-af80-430e-82c5-52ebfb096800",
        "cursor": {
          "ref": "e6308ca3-230d-4ad1-a941-f455bce863b9",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "72a6bb94-703b-4cf8-9e73-236ccec8671b"
        },
        "item": {
          "id": "b88be400-af80-430e-82c5-52ebfb096800",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5b8ca225-64d6-4a04-995d-13435b673468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c076a88f-7388-4fb0-b9eb-34e1b64ac817",
        "cursor": {
          "ref": "e2077926-3689-422f-b992-f3b06b6c49c7",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "6bc85a77-ac26-4773-8300-e7d4b7581ced"
        },
        "item": {
          "id": "c076a88f-7388-4fb0-b9eb-34e1b64ac817",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1b4555a8-101e-4ca0-83e1-4e09c37ced51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374c76de-af3a-4245-ae4b-c316ed2fd9cc",
        "cursor": {
          "ref": "88d78b83-ce5a-4fb2-9c18-98d4ee40d5b1",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "82e6c54e-160c-4855-8f90-0dfa791eb016"
        },
        "item": {
          "id": "374c76de-af3a-4245-ae4b-c316ed2fd9cc",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "910c6e8f-5fc4-4561-a1e6-422b6aff4a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b22d22c-e124-43a6-9b1f-33b0df570de4",
        "cursor": {
          "ref": "c40d75df-4dc3-4b03-903c-075145bcb4a4",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "1ad95e66-4db3-4062-8d0a-b6799a24be40"
        },
        "item": {
          "id": "5b22d22c-e124-43a6-9b1f-33b0df570de4",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "43d0a68f-1f45-4915-8939-12e89e4f8890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d32c87-1fef-47bf-a42a-d32fdf27200c",
        "cursor": {
          "ref": "b7251cad-7a11-4604-9734-363bcfc52d15",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "7878293b-d0df-4ac3-a536-2ddaf7e23eff"
        },
        "item": {
          "id": "e7d32c87-1fef-47bf-a42a-d32fdf27200c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "208afdbf-b198-4368-aa44-f48666267e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1893fa3-4d8c-40b6-a711-f67d891abf34",
        "cursor": {
          "ref": "536ead68-f7a7-4904-99a7-fc73c37389ce",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "6ac0b486-a912-4c12-ae06-fdd55a6b7646"
        },
        "item": {
          "id": "f1893fa3-4d8c-40b6-a711-f67d891abf34",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6c56fd7a-4e4f-4377-89ba-3ceccc4d0cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626d80ac-bfdc-4357-b57e-48ae18ccfe2c",
        "cursor": {
          "ref": "5e12b3d5-56f5-4f28-85c2-143887f4c48b",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "1fba565a-96c2-45bd-866d-9dd1b7da56b9"
        },
        "item": {
          "id": "626d80ac-bfdc-4357-b57e-48ae18ccfe2c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "23347a4d-0e0d-4ee8-9134-739f65d29ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34af4b10-953b-4120-a5c2-80cbfa9f0643",
        "cursor": {
          "ref": "b4f3aa6b-bb7b-4312-a84e-3919e6abfa5d",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "57d45cc2-1086-40f4-bbef-ced8a07cba74"
        },
        "item": {
          "id": "34af4b10-953b-4120-a5c2-80cbfa9f0643",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "758e3ea9-fb05-48f3-814a-adafec375514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dbe8179-2390-4cc8-9dc4-bb57760eefeb",
        "cursor": {
          "ref": "12b62d88-3ed7-41c4-97b4-339496db3212",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "57fd73bd-2539-46f4-9361-10fb759965df"
        },
        "item": {
          "id": "9dbe8179-2390-4cc8-9dc4-bb57760eefeb",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "de9bef38-77d1-4120-9167-3ecd2b2ee49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a429310e-d312-49ce-828b-42b2d42c135a",
        "cursor": {
          "ref": "34c62d5b-7f49-4983-addc-7f316ecbdf33",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "150f5c99-2076-46c3-93fe-42faa68d0bb5"
        },
        "item": {
          "id": "a429310e-d312-49ce-828b-42b2d42c135a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "fc34ed64-c897-458d-aade-3506ca9f3ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945faf60-db1d-4d63-9dfc-5833dfce4f95",
        "cursor": {
          "ref": "ba8d8733-a182-4262-b020-c0897f5676e4",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "3654858b-e49a-4321-8591-f7cdd08a87a6"
        },
        "item": {
          "id": "945faf60-db1d-4d63-9dfc-5833dfce4f95",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5bcd3f6f-6e7f-430f-9a5f-46ac8e65fd72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2bd6fe-6930-44f1-bc9d-3ec69dba9799",
        "cursor": {
          "ref": "7b3ec009-9967-44b7-ba4c-12c5276c042c",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "bf1ca941-de63-4b69-995a-d245d5b1d97a"
        },
        "item": {
          "id": "7c2bd6fe-6930-44f1-bc9d-3ec69dba9799",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "32a0616d-23ce-46d7-9de2-9551a670857a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e5834f-17ec-441f-a3aa-4ab6f9b51a75",
        "cursor": {
          "ref": "ae530b83-a31f-4bc3-af9b-cc19dca3473e",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "cf4d82f7-a858-4ee8-addc-3e6497b5cd99"
        },
        "item": {
          "id": "a2e5834f-17ec-441f-a3aa-4ab6f9b51a75",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b1216627-aab4-49fb-a8ab-3e26b4dc4ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa5676c-c95e-4963-80e1-32beac8c430e",
        "cursor": {
          "ref": "86c0ad51-08af-47c6-a720-c1055dad9307",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "fe0df07f-364f-4541-89ee-ae0807f86304"
        },
        "item": {
          "id": "eaa5676c-c95e-4963-80e1-32beac8c430e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "380df34b-f9fb-47df-9524-e323794b4c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5869176-b80b-4082-9709-879d9e3c474f",
        "cursor": {
          "ref": "a05c9cb6-7a04-46bb-b1ca-f012a8a51a01",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "0f0a20b3-ab0f-42ff-babf-4442af641486"
        },
        "item": {
          "id": "d5869176-b80b-4082-9709-879d9e3c474f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3434f04a-a67c-4ca8-885b-219dc42f566c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed45fdbb-b634-489b-98f1-d2907139ba05",
        "cursor": {
          "ref": "3be7bd9a-8186-4e16-8d5e-4b4efa32cd94",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "15e813e4-cb5f-47d6-9bc7-61e238bae15a"
        },
        "item": {
          "id": "ed45fdbb-b634-489b-98f1-d2907139ba05",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ccbc6628-1ab1-4e66-b057-1f912208e28d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8508fc1a-3d04-4161-97b5-f66537bdedd9",
        "cursor": {
          "ref": "b3d8a3e0-438d-4aca-aec5-749ebc61df65",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "f17ae3ad-fa0c-445f-a5c6-907813e29f27"
        },
        "item": {
          "id": "8508fc1a-3d04-4161-97b5-f66537bdedd9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "010dfd95-6b4b-4add-bf79-bb71cfc06a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30479137-1e22-4ced-9842-352451e91c77",
        "cursor": {
          "ref": "8b1db2ba-24c7-405c-8351-05fea0c7b2ad",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "ef089ad8-b34f-4909-bd09-d7d0ae0d340f"
        },
        "item": {
          "id": "30479137-1e22-4ced-9842-352451e91c77",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0b4f58c3-bcc0-46f7-a066-edb05a7a96a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26694a55-7881-4bbc-acd4-7ec92a3abfaa",
        "cursor": {
          "ref": "d52f480b-dba6-4830-9fb9-a2537a61e166",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "3be6cd35-72eb-4bd4-9737-4117d6bd73b9"
        },
        "item": {
          "id": "26694a55-7881-4bbc-acd4-7ec92a3abfaa",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "72f1b801-d325-41bf-a2dc-a9fe3c874b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8582d336-0e55-41f9-8879-58e459e61432",
        "cursor": {
          "ref": "cba39e59-1d22-4803-82c9-ed6d1e54b84d",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "c41404af-2a7a-48c9-b76f-4b7868c844ff"
        },
        "item": {
          "id": "8582d336-0e55-41f9-8879-58e459e61432",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "12fff071-d40e-49f8-86d6-1ac995181da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f10e326-0246-4b29-a16b-411cf0457f9a",
        "cursor": {
          "ref": "35862f0c-ea7f-4130-9549-9d3a456ae394",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "a35ead5f-9781-4579-9fd6-eca5360ecf05"
        },
        "item": {
          "id": "0f10e326-0246-4b29-a16b-411cf0457f9a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e569a731-393d-46dc-a1f6-cdd886907985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b01f0f-5cde-4250-9941-5c2f39456115",
        "cursor": {
          "ref": "a86a3848-3d9b-418f-9f80-d85bf4566d79",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "3322d7ed-491b-4271-8ef6-a3f0aebe596a"
        },
        "item": {
          "id": "48b01f0f-5cde-4250-9941-5c2f39456115",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b5346a4b-7551-4bd9-adbf-2afbca1e46a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4298bc-31dc-429b-bf40-f4206ef61827",
        "cursor": {
          "ref": "0761fd00-1dfc-46ce-b1d6-aa58f0976841",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "3a4c7138-9b2f-4b08-bfaf-2436886c903f"
        },
        "item": {
          "id": "9e4298bc-31dc-429b-bf40-f4206ef61827",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c91421d0-4c45-4735-be89-9b9e73a54f9b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d41451-e5c9-406b-adc7-70ff2e0f0c45",
        "cursor": {
          "ref": "192006d6-e430-4ef8-8476-3fbcf1ba1d53",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "dde88b98-5962-4b16-a66b-d577070fc706"
        },
        "item": {
          "id": "76d41451-e5c9-406b-adc7-70ff2e0f0c45",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "40faeaad-66a5-4342-a86b-ac05fc25d630",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "22aa873d-c6d9-4069-a069-410618f6616e",
        "cursor": {
          "ref": "690bd9cc-b493-4766-a741-b3d8f935f6ed",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "3936f3fb-16c4-4282-9137-da508e688da6"
        },
        "item": {
          "id": "22aa873d-c6d9-4069-a069-410618f6616e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "274e8064-5168-4bb5-afe3-aba0f7431f1d",
          "status": "OK",
          "code": 200,
          "responseTime": 2727,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "03125f85-097b-4f89-a45f-fa7a57ae1e8b",
        "cursor": {
          "ref": "b093724c-6b23-4ca9-bc71-a081f16ecc31",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "8e65410a-24d9-4548-baa1-ff2ff61753cb"
        },
        "item": {
          "id": "03125f85-097b-4f89-a45f-fa7a57ae1e8b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9c3a28a8-08dd-4348-b057-298db31f3e69",
          "status": "OK",
          "code": 200,
          "responseTime": 2736,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f7be48-ea5b-4fdb-8276-d1ebbbc6da78",
        "cursor": {
          "ref": "55c74a9f-461f-49dc-b63e-f294962a6018",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "afa7d48e-1c97-4046-bfce-692805e29da0"
        },
        "item": {
          "id": "c7f7be48-ea5b-4fdb-8276-d1ebbbc6da78",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9074e3db-cb96-4b06-9769-1a6c511b1554",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f7be48-ea5b-4fdb-8276-d1ebbbc6da78",
        "cursor": {
          "ref": "55c74a9f-461f-49dc-b63e-f294962a6018",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "afa7d48e-1c97-4046-bfce-692805e29da0"
        },
        "item": {
          "id": "c7f7be48-ea5b-4fdb-8276-d1ebbbc6da78",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9074e3db-cb96-4b06-9769-1a6c511b1554",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5e79b5-137a-40df-a5cd-9b41b8d6b1ea",
        "cursor": {
          "ref": "941d0721-ba42-4327-a1a7-23147dae906f",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "c00d15da-663f-4971-9513-471cb77aefdb"
        },
        "item": {
          "id": "ea5e79b5-137a-40df-a5cd-9b41b8d6b1ea",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7f8e871a-2af2-4d3b-9df0-375fad1e74fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65413985-eb86-473b-9f43-7967361cfe4c",
        "cursor": {
          "ref": "6de1a311-0248-4511-8c55-6ca5dea2c552",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "74d8f69e-099f-4985-9462-8e2797cc71be"
        },
        "item": {
          "id": "65413985-eb86-473b-9f43-7967361cfe4c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1dc65baa-a0aa-4acf-a7d3-1638e04b6a96",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}