{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a45dc58b-2e5c-4936-b001-bce173fc3c25",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e9fa671f-ef0e-4f46-83b7-f897fa00628e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "546632c6-4b74-4a6c-b3df-248404c2ee2b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0470d264-8fd7-40c2-9015-0bfbdf4ea119"
                }
              }
            ]
          },
          {
            "id": "161125ba-8b1f-4ec4-bb52-3acbc9ad8593",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "81fba29b-c91f-4264-a64c-fa27ab6c6665",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9fc8ab3f-9af9-46e1-a1bd-2a1251146f5b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "024c6f85-76fe-49fd-99c9-6464102a1af1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b86c47e9-bd87-4cbd-94c4-95e9fd7b0922",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3c9a488d-b471-4f12-b209-00d4a002cbd2",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0061e61-24ac-4d38-91f3-7f2a646d041e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e361c12b-1cd6-429c-a9a0-4ffbbb5d6b00"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "73617282-5214-43b1-be3d-305a7e4613ae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0d1691fb-1eeb-4fa9-9c48-d832fb4cf657"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4f3c8d0f-6645-40b1-ba33-fef1fe68379b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "84d17ca2-cd30-41cc-8ffa-e4218f5270de"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2cdb230b-4a8b-4caf-a293-9da8af115a93",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d451b231-85cb-4577-afae-62ed3589de68"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9351ada4-d17f-410d-b8bf-a1b9542e3225",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3eb14a04-c627-4fcd-ba44-1e58b69f2391"
            }
          }
        ]
      },
      {
        "id": "a55d616a-d82b-442d-abfe-696acf1ef480",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "41403317-f848-4739-beb3-835e62ea0d5d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5686a9bd-6b15-4be7-ab53-175069b90820",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1ffe3ee9-24e5-4a1b-bae9-7ac44f9e6b9d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "675a0036-f863-47da-957f-5bd967effc78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e98d92a5-4fe9-486c-a60f-f37f27378cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02a71f6-70cd-4818-98fc-dbca6c2ee97e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5091d9-d0ff-4e6b-bdd7-4621221f7c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86eeb176-90e4-4810-97c7-239a123306ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a86c49-b388-4c85-ae38-8b5ca1c601b7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab47c31-b8cc-4a20-9bf2-e6e66cbde7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "477fd33f-ea94-486d-9ec3-73fee8be6abc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "250b0bfd-bd02-4678-b6d8-ebcf33eda345",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fc069ee1-4c10-408d-bb33-d2b72d5b68b1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d02bc44-965b-4ed3-ad4b-84e99bb11909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c58cf75-1c42-45d4-976b-93c02cdebf1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b0694c-0ab5-4caf-b7b0-0965ac89030c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4983d1d6-2e9f-46b6-ac1a-b7871dbf052d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1625594f-9a57-43da-a95b-465e81af5290",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e2452cef-1613-4cc4-8944-9014e0639134",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf5bb4a9-ee53-4bd2-8732-c3319011d3fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ea92b567-61c7-4100-aafc-49aaefb44e19"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4bb097d9-a11c-4d62-b406-274fdf3ad26b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c1734ca7-262d-417b-ae2e-31a174936898"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "398aad7e-61c5-464e-a37e-55889ebc1b38",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ae060fe-7b57-42d8-b979-cd62cdba20f8"
            }
          }
        ]
      },
      {
        "id": "fbda0b12-a2ca-40ff-9d15-660d9f7f1a9b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "cd1b9f80-f8be-4d6c-9622-8a957632db95",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a1e91163-8127-4ad9-b3a2-feb709d681df",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5cd2dc35-3b83-4f34-832f-10e87356ab3b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02755041-116d-4204-a6c6-40205ff7e282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46df7ce9-3abb-460c-8ad2-09212d46bb74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9642ac7d-a152-4ce0-9819-dd3ba7477d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efe464dd-e79d-4542-847a-c93f33c2d7d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed12d81c-323e-4568-ba88-721cf8462370",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd74986-1158-4f66-8b48-35a737c4fcb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3024d87-cd57-4ce6-a5a6-9ae6a092b752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf2d333-b189-4c57-8c25-e1c245d0cb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c01180d5-1189-427d-8d17-5c3e3ab6164c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf8c0e2-51f7-4bc9-9f90-d24f62245128",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1f23ad-64e1-4330-8f5e-b976f4a2b196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "610aa2d7-a6af-40e5-adc4-a177b9f96642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a52ed7b-bf14-4b69-97aa-be847357190a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9cffd410-73ce-4608-8b3e-505d66de77d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c846c656-aff4-4a6a-9c32-6954ec69d2f3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57fda76f-b738-482f-9898-5dc618a510a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab6d77dc-2a97-4da9-b9f5-eded8376d96e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2085d758-bca7-4637-a8e6-1fc611923a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34fb8c51-9442-4e8c-8a3d-8e74bd658aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b059f68-6f3b-4596-9f2b-f5c14566d6cc",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "602b42d3-7afb-4740-bc74-6c71e1e0a698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b150058-eb5b-43cc-af84-a6b0c88f558c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92566cca-29c8-483b-8cc1-c1ad1cb5e938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc77a7f1-6b9b-4785-aff2-6247e3ca10be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "672cdb0a-162e-453f-a019-185d1aa7f788",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f54c3f4-ffc7-4162-9330-19b837e274f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a424a5-ee3e-4b6a-882d-621d7f61dfb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e655aef-8170-4673-943e-cb8ccace0d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "583b3a7c-4084-4555-baa0-d58ecc7754ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01d1946-fe4b-4113-ac2b-3e93a72d8f33",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2e3313-9ba4-454a-9045-1b6718d7c762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd903710-de74-422e-874b-ab8eb5d24557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8771a7a9-23e4-4743-af2b-e38f329cf292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76497e91-fa18-4e5a-a190-69f088aac985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc59ef3-4f70-4c3f-9dfd-aa3f43a3119c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6691d03f-e846-4c7a-a9b3-2fde28cb0cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a52daf52-5e9a-470e-98c1-1127188a3a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77bcfe04-f304-4ff6-8fac-f0f0f1708103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0f96dda-2784-4ca7-890a-de09c2982444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c55ac2-59dd-4877-be45-9a2817e198ee",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddfd4636-471d-468b-8eb5-ed7d9176c42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93a1d1b9-c32c-4c91-bbe9-4008461d541a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6496fecd-c111-4e2e-afa1-7d7d0dc548a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "511e6177-9f4a-44ab-9cf3-3f7f6ee05a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c3e41f-e6ce-465f-98fc-002f27bf0c86",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6088a847-f4fd-4658-a8e9-d868737b45ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae5c49a-8f1b-46b1-b84f-45d2dab0045e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1f9c7f-0ff5-4a3c-a933-22c9080b3da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ab2675f-48c7-4ada-8515-6be181e16407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31dd0488-fd36-4d90-a00c-4ef319473aeb",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0881e3-6f58-4ee8-ae52-3b85b01ac614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab70113-8889-4559-8937-838dc33cf758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0df0a21-1a3a-4392-8c4d-9d881f027951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80ca9534-1ee5-4ef2-8a88-59fc2eaf58a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f432621f-7309-4cee-a548-01b5c4292cf3",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "826aeccc-541d-4ce7-bdf1-0a9939d69459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63089b2c-d06a-4801-b6ef-9a4ce6be8a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea72a0c-6e23-4d4a-a199-bf082ad88ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd4c11d9-7bc1-445b-90c6-f7dde92a7ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d82678-c3c8-4aba-bf27-266f741f63bb",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "456d4d3f-ea0c-4978-8786-c0be063ac0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba9a4acb-d135-4f23-8178-07a69a23401a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebf6d04-5d6f-4b95-a3c8-a58f318d0496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9639f296-8635-4b4a-b69c-36a395a75c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55aa87d-e774-4757-ac80-f454ecaa1317",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd061dad-5aff-4262-979c-92dce646eaca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "551d32ca-57c1-448a-9314-10eb59e54338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d80487-a689-496d-be14-5c9412480d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eaa64380-5e86-4f0e-b7ac-774150e69c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d145e38-f472-4189-9935-88938316a89c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae74e24-b5f3-4150-b896-768ee1e9ccbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae5fdd27-d97d-4b12-b85f-2bb6823d1433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c61dda72-998d-45ad-9c28-372bd0b7e84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "658fe82a-010a-4bb9-a6cb-311828f08468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f4e356-5843-4765-8757-3e002fd6a3e0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76fb75cf-a5bf-41a4-853e-aeaf863bf2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "247f290d-4e31-4ac7-b6ec-146b4055e5d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3712731-f199-4c7c-bd73-3c26d8dd929e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "209df573-d5f7-408e-b849-4fe7614e69e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eaa336d-53a7-40c2-a9e3-e60f0a32b47e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c9cf58-390e-400a-9b83-0c88e61eafd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f861e59a-07be-4aa1-bfee-29cd38ad1074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c428f47c-53be-4ce2-bc29-476c76137d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ed64488-1360-482e-b903-a55a2aafea71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d13b26-56a5-4a65-ae69-05eaf4b81e4d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dfe9eba-9ede-44ea-8284-601c573eeee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6252285-4f7e-4d8f-8e9f-ee7f0b1847fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262bf8a5-da81-45e2-a7e3-eee7bdadc8a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "342fbaf2-33a0-4852-aa85-4f143e99c41f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0de034-ae95-417f-a5fb-7306de99e757",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98762818-6461-4376-aef8-6fdf34bc6263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df748c7-dcd0-47be-a7c6-2997e6c772e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55897ddf-c7c2-4d11-932c-d4cc13b8443b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cea8720e-1624-4cdc-b163-aba81bfa6a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e394ea-5b9f-48b1-aa9b-6045890be20d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5556fd6a-1e37-4029-942c-109b5c0e7bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8cb0aba-a0e2-4931-b224-2324f4453a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884e75e2-4082-4c7b-9d7c-e2520b0d4ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3de32eb-a697-441b-a27a-174c3f33a508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58068b8c-6935-49dc-9068-93c0e86235f8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d3998e-41e5-4f6a-9ee8-7c577f51de55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f00f9cf4-c6ea-4f95-981f-523d6b43dca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c397bfc7-4fe8-4748-bf15-efe5c7348bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d45718ea-59cb-4802-ab14-ca3a40279a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c05c66-07f4-4b18-8b97-ab28cc425901",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "183bf859-6538-4821-b9ea-a96e2a631688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b531d4b4-6daf-4dfe-a8ae-d5cbe415e96c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b72dc0f-3cf3-4252-969e-9c6dfb5ae45c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "beb92a60-e426-4a5c-88c6-20c2cf02b979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3b2f5a-63c6-446e-ab9a-9f0c5e7f9c82",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfae9697-bdc2-4137-8dca-19198d168fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e4db18f-4055-4337-8ad9-8d613371c025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a80fd9c-3193-4dc9-8249-d7b39025f2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f6bb8038-e932-4e1d-8a74-70647771f613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc252830-f4aa-47de-877a-453d78490fa6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c63198-a47e-48a4-a359-d460c6125e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8cfca59-0575-4ac4-b592-b88dc23a9f95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4241503d-8688-4b78-828e-3ef4da6ad045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "11e10249-b534-4743-b8cc-7135beaac8ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02df4b8-13ec-4b81-91ec-e69830270d04",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd31440-d02f-4eec-b7cd-8876abbe7334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54e0cf01-34c5-41d6-8eaa-3bbe6423de80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4882a5e-39f2-4a3a-bd2e-5b2f5b8ed6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d908054-8145-497a-adf0-6bd79c146681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f0494c-4b05-4703-9664-12c9d86bf177",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8717d44-7ccb-4f82-87c2-2220fd708ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05352b33-a4f8-4b35-9e2b-1fb33c3c9f3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2b1523-860c-4957-9376-3ff6b82defb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ef71a02-c7b2-40b2-b890-0683df16e79c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea0822d-ac2b-42f5-9f84-47c5eb7ad631",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a368417-64e7-4ede-8a81-fac1e18f2b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4f39a00-d9a2-4d4f-9040-11bb05c9385e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d3f71d-8eb0-4a85-9677-13502f683a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5119e0e9-7e02-4a5e-a134-0be865b20dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd28744-2e4b-4a9f-8b09-80d8348937b6",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d035e8b9-e972-41c3-8a4d-e12f5b19fcaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f83f8650-6404-428c-a844-2c9e24bb630c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fc59db-c441-41d4-a418-effffbeef1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "18cdea8c-1e06-461b-a594-d17e02181fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6309f9c3-9c0b-4d04-bb4c-e76fd2de53c7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a39d05-bfd6-4509-b7b8-55359079fdd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2528c503-bd50-4ada-8a72-e44dec7307ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c239f14-4a56-458d-ab2f-3915a51e0368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f456488-8973-432d-a94a-1d1c129e44d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108a36ad-bc9a-49bf-9acd-fb268051453b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89963a4e-d8a5-4601-ba17-4e61cf1b2e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b385ec3-b643-4edc-85d8-be9b137559a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8094f743-2ded-47c7-b6e6-fa1c246b834c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae976398-350f-4ea2-807c-68ca2ccc4b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba8b654-fa7f-4a2f-9a38-05834f06319a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "541acd2f-e4c0-40ce-a843-04a692547ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f38cdb8b-1e35-4bc4-967f-6198fc59e80b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3705bc-705c-4df3-91d2-1eddee8c6a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6752272d-34e9-4826-b2a7-bd45d31fc387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6b4c43-004c-409f-bdf5-77e790ef1ca6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a2dc62-b764-45b5-9cc1-be3554df91fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d923c7b-f330-4576-a2b6-80056e9c51e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ffdc85-3537-40ef-8ae6-a8e8b761c8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b223500-d495-4d7b-933a-5b5483672921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52b6452-8fc3-476a-9192-e7852b58ebac",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04cbb2fa-3eab-443f-b33c-49459ffa2bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb2f0c3-2e91-4a8b-8986-b9d104cd72ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada9f80f-8445-406d-a821-fabeb4ecb68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "22934b29-97de-42c9-8957-a28734bc9a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95bbe86-13a4-4f9a-bb6f-1a99ff560c5f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1932263f-87d7-4dfd-bc8a-aa6f8467ef6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89f689db-401e-425c-932d-9a82be6237e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "348f3f37-cce9-41e5-97c8-1c6745a520e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c05e03f4-f386-4ac4-bb9f-57d28e3d98c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada36f58-0c00-4756-b1f8-127452dec49b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9d63be-62b2-44f5-8a85-0b039a372632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a51a43a1-40a3-40e6-b92c-100363f1db12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6ed9ef-f986-40d4-85b1-50cbade4d74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3778f8b9-11fe-4c72-87fe-280d57cb3402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c86772-13ed-40a5-9fde-a4762f5e6606",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d678322-6d4e-422d-8e23-66d70ac16150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c95521b6-355e-431a-b683-0e1f6a6388cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170a81c4-95a5-4fea-a1a1-24717c12b3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0d4fd547-20a2-477e-a850-1995bb3260d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c07708-b9e4-4832-98aa-f539d296c0ab",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a090dc88-5003-41d4-92fd-bb9dcb75934e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7562448e-f578-4e0c-afc5-ce33f3ac4dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e87969ea-bb36-4300-8352-91f0728143c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a690d461-8baf-41d0-845b-38cb47036962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c3dba2-3bc7-4d8c-8751-ef347efea762",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b837c9f-7932-41b6-b6d1-92b2e3aa3225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0abf034-b928-4bf9-88c8-e1ca94dc5faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd2f17d-0273-48ca-b7e9-b3506afe9c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ec0095d-104b-407b-8fc9-bae74a65ec45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d7a06e-29f7-4e5d-8185-27e142df9de3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eadbb96-469a-46e4-a466-ea65d90de361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f0fbc8-50af-4794-a2da-4e61fa3a248c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03befc1-15d2-43fa-a41c-377122f7ea99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "16ad52be-b4e1-4d0b-a1fa-e2f501a46aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3da6090-ca31-435a-8758-1d8e95792e9d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26fc7d88-2ac8-4e41-b73a-1305f1e166c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ed7719-0017-45f7-bc84-069abe9fd5a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962afd16-b803-4a10-b931-735710b6196c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d9c83f3-210b-4081-a296-69d19c8905a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ee3a97-7834-43f2-b902-980d623f48be",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49e50cd-5c9c-4f8d-bfd1-c249fb6eab1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "560b2a79-877b-49d0-8b21-6ed361f8e289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df9f8e4-e341-4e5b-95b8-ca53a02e951b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae33c884-db8a-4e8d-9ace-6ff37bd05380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5131cb70-da36-429f-9f26-37b8ecf2041d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ec7a75-ff48-4772-a03e-b7ab11fc8d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c78a107-a15b-495e-b58c-de126121718c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b5b13e-6890-4d54-8018-828a892a2025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "603d7ba6-ac57-4067-9ec6-177d81524dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55417db-5675-4797-b227-fa8feb248868",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6115cd-0efa-492c-bbaa-1b46f7946057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "765cd245-c79f-429c-9ce3-d45b63f4d06a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681061bb-0b83-48b8-abc6-d7d351d4825d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "814e3de0-2ce5-4b58-8287-0dbf2f8abcb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f0ba5d-d8cc-4a0e-b088-fc82659a56c1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2375a004-faa0-4017-9324-450f8015e038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa4da093-f6c0-4b96-b319-00b89a13175b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e4eed3-4978-4159-b7c4-8ece66bbf7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7010a5c-91b8-4172-9970-cd23430b489f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e165eac-bbaa-45e6-b85d-6a7cf01b80c2",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45827600-3a9e-49a3-b284-5b81a284a1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54fe1e29-d6ae-4ca2-bc82-cc695cdcb99b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a8fd27-d5f6-4f2e-a9cc-e7ba4cbfad75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d1daa26-f4ef-48fa-85f0-955da891de6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a65dbd9-3c90-408f-a5bc-b309a1af2ae6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d18893-063a-4a72-865a-fd5da42c3430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f479df69-078c-48be-bd23-e7fa482bdef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9962f01b-6e86-4cab-8f25-33014f5831a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5ab074d-5fd8-48d6-8ba4-432bd85b1776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12bf241-3487-4ece-9c89-22682dd4c5d9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a55e106-19be-44e0-8e1d-f39f54de6ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daaee989-2b74-4422-81d3-1da83a65fb13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2370911f-37a0-48cb-9bba-8a69dfc37104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d80251a-a250-43d1-86c6-eadd79b6d2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a02e1b4-a859-4402-be5e-28ac9b123ccf",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "217982b6-fdd3-43c1-9794-2cb701a103dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "312c21c7-7376-4e24-b8ce-02856b661660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4ae7a1-9f7b-4ba9-b74b-7d43edbcada1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9d55de9-7e2c-4338-8259-2fe42c9c55cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96612a3a-3293-4a99-a4cc-0245cac0a03a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d77f18a-2c78-431b-b86c-747e6197d218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74551dd7-83c1-4ac7-b02b-895e84c373ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33703422-9fba-48f6-81c7-29bc28ac3c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6708174-4718-4491-86e8-eb5e2acf295d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "913716c5-8003-442d-a1e6-94c1abfb5ba8",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426975d0-80f1-484c-b07d-b2150c2451da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "397269eb-7a35-45fb-89f2-4f2698c0fa3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f382c0a-303f-4f4e-9555-0f6405c71ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc703c6-5c58-40f1-8fe4-c975b3633ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2cd120-c407-48b1-a768-0da6bf397104",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd00b7d6-e7bd-4062-af78-3028bc4bea1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f9016d7-3132-4028-8541-a63b63082b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6026fa4a-4f2e-4153-82fc-1a1496992e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "55a36820-adb1-41e6-935e-122bb9164eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5fd0d3-feba-492b-b2c4-71e07fdedeac",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5817428e-e40f-4e71-9b27-c62681722531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8eb5511-933c-4dd9-86a7-b77e970b3c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ab0de6-0c39-43e8-97de-644620083529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "051cc92f-b120-4489-ad84-4ee44572fa6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0b96e1-c22b-4211-953a-b05be20e2108",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30132e1c-325d-41c3-b9f4-cd589f63272e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "235f4572-8319-44f1-800f-3dc85957c7e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b435c08-1d0a-4d80-aa4f-a87585db6b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5fa3047-16c9-4f4e-8a7f-c2657b8226f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7acb1603-bd7a-4865-8b74-1b25c2d3ebba",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e813e88b-0730-49a4-91b0-85958c9bb7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "037d09bd-a44a-4435-a656-b67ed13a9470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f485a82a-b996-4a4e-8592-dd40c0ccc0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccaeda85-6fd3-4d97-b25c-efe74eb9244d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1ecf0d-aeb8-4dd2-90e4-78f50883abf7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2040fdf-5b24-4876-82f0-3107dc0208c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "332bdca8-d7c4-4682-8c16-0728b800df68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd26280b-e4e4-4176-9967-f1a051d275aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47d5b2a5-47f2-4fce-8c28-20a44a6f0440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb03f74c-b271-48a2-8ca3-af2710bd2a92",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "263ce1d3-4030-4dee-869e-4f40eb9d4e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ff3740-e0f7-44d9-93da-b7d41c035999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ffd61c-e5c0-436e-88be-b83f058ddce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8bcb96c1-cd48-4dd8-9c4b-1e585ca34714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e186d3bb-2bae-4b27-be3c-5f56b0649a00",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5b5aea-0185-4b43-add0-3939b2911a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8be12b4f-243e-4cde-94e9-9abd060c1dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54932f0-1af4-4dc7-8428-ce030d95744d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a66e688-41b1-43ed-ba6f-8bfe9e09e442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5824521-93e0-4a02-9e19-a544b63c5b61",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b940a4b4-81b9-4bb4-8fd9-3be57ff74c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb6510d0-aadd-4c7e-a804-bdcf8d60eb6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01df961e-6b8e-40ce-b97b-5e3466e32409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "28f6f12c-ff10-4d9b-9813-b487e7d2c522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1629ef-1abf-4a7e-945b-61011f4cd345",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf9b075a-c35f-496b-890c-24961fe91fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a278bd-5dd1-492f-9a1c-ed9bca7a6dfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d085201-d803-41c2-a8c3-c867b2001cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f896fe89-b0d0-422a-a099-4736a6c8c162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d9b94f-9316-4116-aba1-6e9dbe37acca",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75045a36-6b60-41c2-bb86-646cf82ade26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f17c7b-41df-4b7e-9691-df598453cc8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da91f9f-bd6e-4c9b-b0d7-0980d19cc047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "22abc38b-d61b-4d33-9f0c-3c60368aae20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ea2bc4-e83f-4785-9c1e-0e16c2e3c461",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13537823-c633-4557-b343-e5cf73a10374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce23310-91b0-4cb7-82ad-70786afa0ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34108b3b-b77e-4c84-bc96-d722c78042c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c38597e3-e078-4460-a976-afe95ad3b043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b12852-ebe7-498a-9c35-960d163e8687",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d185eb1-8b19-49d1-9f9c-b08b40b57bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1230d876-a1cb-433c-8ce4-0269933bd29c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c757cb2-dd73-4952-86b6-c8d625a6800f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c643f74-7d2a-4cfd-8d62-b25be8ebe9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4edaacb-f60d-4d67-9914-d7b7b82b551d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d62a9e-10a7-4d3f-a8ca-ab8c034dbd55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33c433ed-0e82-49e4-b15c-293a8a6791bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a8116b-7937-41de-8f14-b039a06c0cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2b8fdb4-e21a-40b2-8b4e-5b0d4b83c02d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0526542f-164f-421d-8b5d-80466da5a0ae",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6075b5-cc70-44f5-ba98-d86a286dc7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87c75e8f-1d7e-4bfd-96f4-4d3871f044e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a609557-f290-47ce-b183-98c515d5f4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "193096e2-34d2-41f2-90d6-0468e7928f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf83be0f-2bd6-480b-90cc-2a2676605be8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc37e52e-bf8a-4936-8cf4-5cb70bac132e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8953abb5-b945-4a08-a761-a16cd2313630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94017304-2500-4570-81b1-23f27823a591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "abd97fb3-e0f4-4aed-8fba-15f08819e576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb5690f-c2c0-411b-956a-32da2526cce1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d73f3a-cfc7-4790-99d6-972adf037010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f78aa4-3a7b-4ece-9996-30138e74c77e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9fbb806-36a9-4c99-a8aa-145ebf4e736f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c80c358-b6d0-4fc2-907b-3f41e7bf8e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a5647d-b03f-4344-b97d-7989c6ff9fc9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60d8c1d-8d17-4144-aadc-6ef2b34a0295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bd3ec4a-1103-4d72-b6f7-a225af738b23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a0e63a-e8e3-4369-9a15-c19624bbac8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0d59fb3a-8e2f-43fa-8125-a2a4db6531c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47f907f-7f2b-4ca4-993b-b602d517aff7",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc56c2e-9771-4d17-8dd7-aff75a29bbb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c9e4a7-e723-4227-a03c-3c6c824c8cbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7e1d97-a45d-495d-9eb3-6c0a92ecbcb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "36b44b20-51ec-4469-8839-fa9465d98d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d104470-c56a-480d-ae27-d16cc1083ebd",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c0dc0d-6b69-4f24-813c-51bd3bda1202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "666511b3-6da5-45c0-b2b2-9866b7bde58d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a968cfa7-67f7-4e75-a9fa-018d8b76b5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "45743e6c-fd62-41e6-b683-0ba05da69215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca4ef07-1bdb-4039-9d9b-cb318a450efe",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b4b76f-137f-4732-8d8b-2b4484adcd41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f2b4884-ec1d-4315-bfd5-4f91dfd80674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e154061-3431-47a9-ac50-5b45424a4680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d7a9313-ebd7-40c1-a739-da9384da29b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1606e27b-b40d-4021-9e1b-a80f2ba89490",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c42522-467c-4cc0-afe3-4490498ff020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35cda014-343a-4033-a324-1e8617ca0c67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac43a548-2193-41fb-8e60-3e170a9c4322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ece33f65-e048-403c-8b48-ab0c53876a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5a35e1-33e1-4f90-9b31-c78e83211d63",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb25466-f359-4d12-a2e7-b916c3aaf2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb5354ba-410d-4bd4-b40f-4402f84fd791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca192c7-0a6f-447d-8c16-e98eae0c57f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6322e437-6a9e-41b3-b15c-1d352f068edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d7fedc-02c0-43ac-b346-ba0875884fa8",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5d2142-a923-4000-8e42-6258b8f1e706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "433576f4-5979-4f32-a08e-184a4eeff72d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b50db1-6b37-4665-8bb0-7dcd3211ae2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea148c3e-89f8-4aec-82a7-e23b065cbcc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60becac1-54ea-48a5-8c3a-01a3b1906ef4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4362d7e8-5e16-4bc7-a650-6a1771708514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e0e00c-a814-44f3-a42c-3b9957ba80f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39de43c-e99e-4b20-acfc-76d179d308b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bbf7b636-dd43-4d37-8859-8a5a13f8c7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7220bc74-56c7-4c1d-9d31-229892d33c05",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af05c64-2806-47be-b5cd-ea12e49e7dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cec78e65-7542-4e36-92f5-09df24348351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ea4732-f731-486a-88aa-6518564f5504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "11b0931b-113c-4ae2-b73d-b6561dc5c5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44bbdabc-3a7d-4d62-bb72-d8e9e8d162f3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5db7275-049e-4902-b4a0-84039465b044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "870eca4b-115f-4a01-8007-576399d32b86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98e2b88-b287-4731-82c9-c383032fcf0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "19156b85-ece7-4140-bb9a-0b814760f488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6950aa7a-e7ae-4896-973e-6b6769eec9c9",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa73b09-0054-43bf-9a2c-6048f5e5c017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eca853b-9552-41c1-a7a6-cce067fe485a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395cf945-924d-484a-939d-a8f4fe77e8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7db09e0b-7916-48cf-8852-cfbc9fec08b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63079e9d-fc90-4159-93d0-dfcd37f6012f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ced1d8-62e5-4ce9-a122-04c3091901ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d6312a5-1674-43ee-babe-de73357c2b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f6eb5ff-c5c1-474f-8a52-68b662cd8171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d09750ab-48fe-49ec-a040-e20def632e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d2096e-2cc3-433b-81cd-0ee641cc28c9",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c001e67b-bb50-4b5c-a3ed-81fe8ca78701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e266c8d-f726-4758-b954-6723f3f51593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8cf5bcb-c24c-4c51-a458-84957e84e945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "231e625e-25f6-4cf7-9f52-904feccc933b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daefd58e-c86b-4c77-aa87-741506808082",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29fd672c-155e-4a99-b00d-dd334d509acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a692e281-3f36-44c9-88d8-1af36cc3b7be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6e125b-b19c-4173-a410-da143638b829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cf4fcb4d-44fd-4403-8d82-2c618bda07da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f1bf81-8960-4b86-a131-516841b185a2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb6d9e9-d472-4306-8385-3166b5958ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80e63faa-966c-4153-a5ce-9c9b9fe89c3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d63aa06-3c6e-495d-aef4-9f6b89741670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd13838b-00bf-42a7-9bf5-273249db311a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86cf276d-e55a-4e0d-a0de-c88b4b22712c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "090d7e62-942d-4309-8c86-c449e12874a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "499afdee-9dff-476e-9c94-da5a80626ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90655924-278f-46a3-9b19-83631d272418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf53a0a-a05d-4104-b7dc-f61b76b5bd05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d225638f-9860-482e-af6f-ded163771984",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "492c5ede-741a-4d4e-a12e-0690e0c8cfea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc2ceb5e-4906-4b02-a3d1-46d69b1f87ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21251ad8-b505-433d-9caf-47ed4eeff8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0ddaa4c-6504-4881-be6a-96b8b1f0432f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465eb413-8070-4ea1-9d31-7f21ed393496",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "820ed645-38ab-4eb2-99b4-62d95747d0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "353726c4-dd07-406c-87a9-ca0b30ab82c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e58424d-bdb6-4407-b652-08db6ea1e41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4b66e03-aab5-4b9b-9e2c-c8aaa891af09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a39d078-b293-425c-b9f5-b3c93b8d45aa",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8eeb2db-60cb-4dbb-a6f1-db911d77848d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66263323-f3fe-40ff-94be-e21e88e4db9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3559a92-479c-4bf2-a372-3175b9dc793b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f52b581-500c-4dad-b3a0-f25c52b4a7e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d909a50d-6417-4ef8-94e9-e71e9f80e7b9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c959992d-537d-4496-aabe-33ebd7dce0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54507bc8-9601-432d-8597-0fd3b2e15b3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6307b6-561f-4a82-8cf5-fadbdf5c8580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a686383d-c168-4cab-99d8-0c8b21537608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be1f683-fa26-4350-b86c-7452f6b1a121",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51a8324-c8b3-4fb8-9967-55d2bdcaf4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "358befc0-e92e-4550-a9ac-e5008cf58a9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e448329b-1352-47da-86eb-7a7847ff18d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5490bfdd-9e43-4a66-8bf3-54565ba22b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c1921d-ae26-446f-9312-5b80eae83660",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4058a75c-335d-4e02-ab19-ef55231c198f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "754f9e61-a30d-470a-bb34-4f12836d9234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba3cb948-bcc3-4d7e-a938-0a8ccb9810e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b209a08-c137-47ff-8b4e-ae5a7905e9f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a280c290-3f94-48b1-8173-ca640947cb06",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa41a3c7-4b33-4fd7-9e02-e13d112489d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a44c8cac-bad9-4446-805b-8907b50a3090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f840dcd-11eb-4136-b467-9345abf09576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "66c35612-bd5b-4d43-9a28-24b7be9161eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb4377d-07b2-49e2-ba83-3ce3eb60cedd",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ed4d3d-79c5-4f45-8546-12e7be897409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b2ed580-4dc3-49ef-8fd3-2a0088c3184b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aee76af-dde4-45b9-b9ff-c54e8dfee89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9585ae7-f337-4816-a591-3d2f00c164cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff61f6e-344c-44cd-a335-9910390a8fc4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbfddae0-b8cc-4933-9248-96ea6971c42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f85fdaa-fcd8-4022-b653-097a8fd094f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7481474b-9b3f-46c1-8cd4-e662b1d13830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "75cd3a84-4c33-4eed-8032-efdb35d2b75e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37fc6ffa-c5d4-4fe9-8e91-8aa9d3cde97c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b70a0f2-ac23-4005-972b-9864de7863b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3410835e-fc0f-4fa0-b0e6-ccfb42223e9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ea2fe3-bad7-46e8-9c9f-23ef3977d29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7afdb8e-491f-4eae-9c99-da930667cc5e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d7b29ea3-0256-428a-abe3-c4e008eb368a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c7d153d-990e-4a67-9824-ec217f2d630c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b56019f-0794-4806-ba43-6c11a67496f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6dd24a8c-6695-4879-a395-87a3eaaac28b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15cf549e-cb55-472d-b478-d848f67a3499",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abebed3e-5ab1-4d4a-a81f-1569b72229b3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "090620c1-6d74-4c59-ab06-d23b415f2ef6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4e87847-0503-4ea9-aace-6e744cb7227e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2d6ec9a-f143-4952-bef3-83ba744f0e26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "445ef74f-84af-4f85-867f-1753197dd1af"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "383937ce-0644-4f93-9ebb-2d33caaa6e3d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5d349aa9-3598-4057-a6da-9f10378e0a59"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3e32d5a8-5ee7-4bb5-8dce-543e9e1b68e6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eb4a881a-efdc-45dc-bcbc-32dca3744f42"
                }
              }
            ]
          },
          {
            "id": "f9722991-af0a-45be-8be7-dece6fe6ed62",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7e956fff-2264-4ed5-83ab-f954b6ac6a11",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "76582854-0347-493f-90e4-d2d46b74ead6",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8999fb-b953-4694-9249-2958d6fb1aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "57c77de7-0ee1-4adb-9bcf-c19b89d43f74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14dfa8a3-99c1-4a7d-8f2d-b31284d42a0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd4f06e-d25f-4b19-afdb-9cfe9e335cb0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2560e967-c111-44a6-aa83-714fa2cdd424",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a521f54-24f7-465e-8b90-eb5b790ca121",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c25184eb-02d9-4128-807c-171ea6d1bc76"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe619d84-6912-42f3-8dec-fc4dba71a139",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "76dc1da6-10cc-47b2-9ff6-0e9e096a4624"
                    }
                  }
                ]
              },
              {
                "id": "4950cb67-8d10-4427-ae74-1dd4ef56d36a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7d3c127-e51e-44d0-975f-c97ad63cfbef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e1db15ff-1d55-4ff2-a5f0-e8982384cfb5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6766aa6a-f679-4981-89a9-1452d500f9f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e6111e54-39c5-4b2f-a4ef-ea277899ba3a"
                    }
                  }
                ]
              },
              {
                "id": "e2462ff3-aa99-4608-9d0e-81531cc0b7e9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "558bc058-b5d6-4623-8f87-585ffc3ffab7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9b9f5b45-54cb-4368-a156-2a3af3800a52"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9631fcb0-c31c-4049-b156-6d13e5f03dc9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c5fcf5c7-ddfa-4708-91b3-62e7e02aac69"
                    }
                  }
                ]
              },
              {
                "id": "49c74c48-cc7b-4047-b50e-544f4099b8c9",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c03447d-6c69-4b8f-a601-54b3748e245a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7d6e69c8-53fe-49bd-b484-ab06459964e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c695fd00-e261-478b-a4b3-2d1ae4819271",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "119aaf6a-1826-4612-9fd0-80713869c7a7"
                    }
                  }
                ]
              },
              {
                "id": "628d0d55-fae1-4380-ab4d-6ce476b5db92",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7982b34-fa9d-4d83-a642-953bce0f2bab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7d878f47-51f7-4db7-97bb-1cad0bbe5d89"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7b29eaa-0285-4179-a766-f84793b26159",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "00f55af5-93cc-450c-902f-4495eac743d2"
                    }
                  }
                ]
              },
              {
                "id": "a57c739b-fe7f-4cc8-8750-e84de0afc778",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f5da21e-265e-4443-819a-27422a276d66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97fc872e-bb09-4e6a-b674-a686c67a4b92"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "909942d2-be97-48b4-9eaa-be83bffae8aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a208dc46-d53f-4dba-b363-1e84cef4770b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "55ab482d-540e-4e5e-b225-53c391bd6f91",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cea7cb11-af12-4064-a0a0-b83c0a772fe9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "328ab179-5590-441b-896f-fd5da0866744",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "63db7c3c-579f-4c59-8a3d-74e67598f491"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8356d7ca-ded5-49d0-b89f-ccd4366f5bfc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7fd709b0-7e77-4633-a6ef-3c094dc4d2d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "96783d3c-177d-4cea-ab4b-fd74113b0eb6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9ace8267-0179-4910-8a23-fb55ac97254f"
            }
          }
        ]
      },
      {
        "id": "f1eeac05-d4dd-4e5f-9982-2b1369fac75c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c93c1060-0261-457b-9052-745991b9c04a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7b5dbf5f-8f3b-46b4-8086-92936b11ff22",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0ed9fc11-bb23-418f-a0bc-bdcd7ae8bbed",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c4295e-6302-499f-83ac-4ae76c897d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09baa80f-282b-43ee-a13b-37eba9a20e6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac6da6c-8d32-4588-8da1-21dd3b73d20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4af988b6-3665-46bd-bb78-6ea032b709f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a315806-cb99-4e0d-9666-890e71cbf638",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6daf4333-cbad-43be-9b20-e0c4cf77f1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da49b38c-8925-45e2-805b-f1518408147f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9358c800-d07d-4e2c-809c-60d295c3a1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "41b517b1-3aa4-4aa6-9f71-89869dfbc968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7471860c-35f0-4d7e-8130-48e56828d14c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb19229-e7f4-4139-b632-71392b95487a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87733d19-1098-4d21-a6d5-73b077029180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ae6ff9-bec7-4df8-b716-8532457ea337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a2792d0-49b8-40b3-bb1c-78e97774ce1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac53ba18-c812-4b73-9bb6-845e35b09cd5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ea8dbc-05c0-410e-8a74-136d1eacac96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98125cc1-1082-4f66-a7fe-136e005ae2c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c361a6b8-75fd-451d-8fc8-0a50eaaf95b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3365ff83-1070-4a03-aae2-5b1c071995b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd5baf9-f36d-443f-aa80-f51f261887f1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e14304-6780-441f-985a-e0dcdf2b219a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f12ffd2c-75d1-4c5a-9a77-de1414777a9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23cb2f94-5d73-4410-9679-6e496b8d1e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9eb5a5f-3a50-4159-9228-ba5eda6fa71f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f332a0-152d-4e58-8c43-c705d31d5f38",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3c58fc-f7a6-42ed-94f6-cdf2628cd8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "499209c6-4535-4196-a91a-932daa46916d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb3a3ad-d238-43d8-a7fa-0529bc01a639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca4e8bd1-f6de-459a-83c5-37e7f6db63a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7269731e-26dc-49bb-a328-65da2b6ae256",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5650063-e7d3-4367-b179-aab91c37401c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed786c94-f0c0-4583-8f67-a8f36be759d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655fac45-95ac-44ff-90e9-153b9cc06fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd5f768a-b2f3-4d22-87e4-8c91ce046179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9015f446-8f62-4c98-a0cf-1fe948da9890",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e640f06f-696e-4f58-a4f9-505accb7d4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ade2eb88-56e1-4dc0-8353-3f6057d67224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e73203-5b88-48e7-a943-748446b56276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64d2500f-a191-46c9-a49f-14cc781356a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79962ef2-d88f-473c-9987-276e81a2d164",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d417bde-e4cc-48b6-ab7d-9fa33b43d370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "351bbde9-6af4-4ae6-89df-a940e4d1695f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021588a2-4a80-480f-847d-7e8d0908f0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e880c2f0-72f2-40a2-9e60-ab9608deab18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6efe0c-fb28-4066-af36-6db3c42c1a5a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "094468aa-135b-4508-afc1-a4b2058d529d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1364eb97-e6bd-4f35-9586-c467ff339e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f4c2c3-7b3a-4ddc-831d-6327fa6da633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf492373-b0d1-4e3a-b2b4-f95b8499c9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c477628d-4265-4881-b085-bdff90d76c8e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70429a74-d3d1-4e00-906a-6cba639281df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22fb2ffa-e745-4a6a-a0f6-f969f002c19e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98498ebd-0744-4eba-9b22-5d6c844fa1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fde4353f-bf23-4296-a306-c595f0493dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b37188-05f5-437b-8e13-7eedc2762582",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4698a2ec-ecec-4b51-bbf4-1353b683f16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f233b35a-b3a1-47ed-a40c-6b595036a144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529e5574-97ea-42d2-a5c5-017c3f6a5045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0406386c-d6e7-4988-8e15-0ff9d670da9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7dbbef3-0895-4de7-860a-922f02d7cc32",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93214a9d-c016-443d-b035-439c12213a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06fe8015-7633-45f9-be66-7c5b98f687f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e10cbb5-5ca5-44ba-99a6-040364073358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4cf6ab6-1923-4cde-8cbe-b257a31f6d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0326ced-88c3-4532-b329-e9c87b96d23f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e9e515-b855-46d2-b6e0-e3ce15a05fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "611940b7-8a30-4e7c-99fa-3455441fd22c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a787971-8844-499c-9082-62623bee927a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b74ba8f1-2721-4df7-83cc-9f7ff5f9c86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be84349-9bae-472f-b909-b8159c301ffb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d8c3cc-fdd8-4bb4-9acd-18a1ad5e5019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2479faf7-f671-42d4-97f3-6409ef59b217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c4dccc-e2b3-4cf4-8db8-c3608d9a6d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fac5598-0c92-4a17-a4d4-369e4f3a3fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6488cd24-b464-49a1-b45a-41c3fe5e39da",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7bb45b-222f-4af4-a638-ae1806c9e1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc3aaca-2572-495e-8c9f-1f4e17c57d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "338f82b4-6907-4ce6-aaca-9715ab0a39b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "699a5533-ebc0-4389-9fdb-2dbd324cee4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c0acae-b802-44ef-ab2c-76b401078d91",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a903b62f-a54c-41f6-a982-55eeace66011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cbfff3b-8d4e-4e69-b9bf-b2af02f68d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66439d45-f468-496c-a97d-6c33f8ea536d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c68d0230-ce73-4d52-9996-b427595b73a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6d213e-3d2e-41a2-86b3-6c2e377d322d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5368a5-861b-445e-b378-2c2461f264d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38ca3208-62e8-483a-b9f7-dc446714c62c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6e1cf3-ab91-43b5-8e94-99c27d5a2178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed16c79f-1715-4a87-8a8b-f113f92b4021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d35aba7-ad4e-4280-ad57-e3f05425649a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "834dd0fe-8ec3-433a-8583-6715b4dfe05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc80bed0-18c0-400e-b827-1907627fbcbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4cbbfb1-3738-4676-9cab-c82f20dc397f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "151b1791-5563-4623-ae28-c41103fef1d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c52063-7b47-4c29-adff-e32aa0a78579",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db26e5de-36ad-4335-9b25-3e8323e31b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "353c1b66-e3d2-416c-ba9f-18b16f9b998e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78875b46-6dff-4cfa-98f0-46c7498fa90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c1a902-937c-4a8b-ae73-ffcff2f968fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c58fc1-75e1-448e-ab2c-c5c708a9057a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f18790-6608-469e-804e-08ac348aca59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9846082b-1e9d-4252-abcc-fb7d717965ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d885e23e-01aa-4e51-bf34-c0f49c23e2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f55da3c6-58d9-454d-bd58-9b4ef35741a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd3b306-854f-452a-87d2-8aa9a8556330",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3ace5e-48c4-48c4-9326-04e265322f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a145b6b-dc5e-4a17-b518-f9b91c21e7f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73d1374-8270-4cd1-9712-e3f63ccf3d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9412de50-5491-4527-b762-de3978a593d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c900946f-9a57-44a1-be64-d4c80a1aa7a3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e585f5d-8e12-45f8-b2ea-c0245cee7396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f2cb4fb-27f3-48af-9a3a-a050b0066939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6f7054-4900-4302-b82e-76970a5ed50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64b2352b-f6f4-4ff4-8aac-9716573f883d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd65839-4dd0-42d6-ba45-a6d2c3c81467",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "183d9441-7f6d-4d40-87f7-1b45bb1af1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96c4da33-1a53-4ccf-8e92-119ba0833355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef722591-4b00-4d00-8661-0d1555d54237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db1d2355-e989-4c52-a92c-311fddfea7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c72c843-6c85-48b9-aa5f-8946abf7dc39",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0729b1-35e5-4413-9564-d59e5a1d0c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20598ae2-ab14-41f8-9adc-c5f6e6a5b2f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69451d4a-ecda-4f4d-9ec4-5f2c6337e5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "904829b7-8b7e-46df-8df8-af04a498ffd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae33512-2e67-4a88-901d-5098a1a62c91",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54aff84-e8de-4ba5-9109-79844e8c28f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d014dc39-0ede-426b-b618-8284e2ff0437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d81b55b-28f8-4432-a398-2a16561462dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15abe2c4-ac2b-4cbb-a294-a287d526fbf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efeefca5-74cd-42a9-a084-bbf5a233bcdf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade0aa97-7080-447a-afbe-1380e68b26db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69948580-f49a-48d1-b2e5-f1667da7354c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979382c0-6453-4dff-aa2f-7c9887f79d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8823e94-dbbd-4e55-b88b-988127f279cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af1515e-78d6-4ae1-824d-277c74dbb9c4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a4aeb8-e661-4a90-88a3-7738dd761dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35de4939-bdd0-4682-815a-25a32d4130a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f677c77-5ccf-473a-a3c1-6c8052ed7bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a444abfd-538d-46f0-85e9-c775bf9c1de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5c15e3-c094-4bfa-862f-28ca51ffd2fa",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc4a9f7-1995-4f1a-a11d-3c43ca50d83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ccb1ea-3cd2-4959-a250-afe971a16596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736a767b-b7c7-4c39-b673-2e43c7c48b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d9f558b-1708-4dbc-b6e5-e2f752fa23d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f033bdbd-e11b-4fca-ab1b-2fef92a3d536",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6c964c-57f6-4670-a670-80528a59d7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bca056e-2590-40a6-a9e0-5960c0f901ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51106e8-496d-4b4d-b2e6-766ad37c19a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2111bac-7449-42a3-8aa2-e80464916d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358ae56e-be48-4442-b1e8-006ecd3694f3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6242c42a-43bc-4db0-8569-c241ee11ef7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a0f8635-0b58-46b8-a941-f8ea5cbd98f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78490aed-aef9-4160-8c99-3e654a438fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58b6e528-a6ff-4dd5-9b96-f3745b44b466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dacbe899-e4cd-4769-8bac-a37bfef9591f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0e1a67-f0e2-45e9-a224-bdd47a75fe44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32cac293-94c4-4dc3-8372-54e62d0cdf12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95403df2-7812-4888-b571-485d64c0fdd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "987f0739-c496-4929-859e-e57003968a94"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "30e61474-56c9-4d11-a813-e1376eb1a67f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "36786dee-41d6-469e-81a5-e9227c02104e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45185fb9-21a4-4872-aeba-a0a20b3b2e3d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a9ebace0-ac84-4ec1-aa6f-8c2fc724765a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3c2b92-587e-463d-ae34-0d3ac01a4d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d16518f-08fe-4b6f-9994-bfd4b9fdc200"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd309f56-c0d3-4a4e-8799-5a1b271b4874",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5b3db1a-20fa-479b-8d50-4fce9e5ab106"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "190304a8-65f2-4fa3-aa88-e2de6f1430bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92851df6-22a3-4696-8472-d698eba6a7b8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f61a216b-e9d8-417e-bde6-e14597372726",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a0a04a64-1f90-4bb2-9308-d826ebc8ab53"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cca2c6a1-6d8a-4028-8c88-7401985c0fe9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4b17a6a4-8ff8-4eb3-be70-93c337a1e0c8"
            }
          }
        ]
      },
      {
        "id": "c379d735-a6de-4190-8cea-4cd27e02f3b1",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "bd98f988-1466-4434-96a1-8f33d663c780",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a692b154-5f9b-4bab-8d37-68081c5209d3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "749569e0-707f-4c1d-8911-90ae20bc3ed5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5aa88d-0bcc-448b-9ea9-ce4e7fe50566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "764a0b8c-2ca1-43c8-9487-594de421001a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5b4cc7-1ba6-455f-89ba-1abf6983b545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ebcfa64-60b4-4ab8-9dc0-b7b0e80d499c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d01248-d11c-4922-86c3-bec4f6131ace",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d0c009-3d61-43ce-a32a-147f5c038c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07786bce-80bf-4f0a-b2f9-d9c30c00e817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273c7291-9d4a-474c-9779-d8cf87cb536a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee54d60-da0c-441f-a38f-eb1263f65b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43b9138-49b5-47d4-8c28-4010463af991",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a072344-3f70-40b4-834c-26b136690b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21a3aa8-6ba2-4531-ba88-6df1f53f7409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf66c3a-5869-4da6-92f5-f75c1e0965fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddcadd32-6c17-4cca-a418-b187d5e9ef62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295d5e78-6704-4553-9034-6245039a07ea",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "177cd1e2-324a-49f9-b4fd-f9e53ff82c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac63d0c-ebdc-423e-bf85-04130acef89e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad438e65-e9f5-4a7e-bba7-1e2af6a56405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "339772ea-cd06-4410-afb7-5517fb108ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75027de1-13aa-48ad-9709-9e8e0e698159",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7174e3d-77ff-4d9c-8402-1e99e87b5ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3bf78b0-c17c-40e7-85dd-561a9f3b774e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b048e6-9591-4e4f-8a1a-9e0d92ea7b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f731d84a-550a-4287-8048-e5305608602b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec7fb8a-6850-4b4f-a6be-a05b0f088c6b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa921230-e003-4c5f-a8e8-01baea809b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5db83a0-4f65-4155-b906-72d3d469c22e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016824e0-fca6-4702-8c2b-2f81a1b29627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "530cfc2d-8942-486e-853f-b4c6276e11ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caee5054-7945-423a-b5d1-d00b3b24a2f5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80cdf42a-3911-4e57-bb61-8ac9cf042d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9b8111e-dfaf-4483-a87d-993c8eb12c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8151e0c6-ea79-4346-be2c-702a0cebb11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca183a2f-ba04-46d1-9c0c-671b496fb45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b58b578-dd2f-4c9e-8a75-70d43aca6f04",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e814ba7-186a-4fa4-a31d-9a0048902e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d2419cc-457f-4836-87df-53ea48457c29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27406ac1-d173-4d91-bc22-12d2a19c98a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9891e28-fece-479e-be05-306dc2fb285d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4a9c34-9257-462d-a93b-95854da1e059",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88c2150-2da2-4ae5-948c-4bac30e66e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "825404c6-9a5f-4ea0-b337-f35539294144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ab681a-8900-4609-9e55-16f910478f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "efdfb2c7-2862-40b2-8569-c6938a0889e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de98bb8-27d5-40e6-960b-571c04deb05e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac382736-8cf5-4be2-8a56-211c8e10ff66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48dfa71d-6541-4743-83e5-8564e99cfb33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba58414-d854-4eac-974f-e5f33a65f218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4395c87a-4cd8-4f36-9619-98cafc639fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9f8731-da52-40e7-a261-f7502e65d949",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a408a311-3e35-48d8-92dc-5cf956aff0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5603c0c-c5fc-4612-92a4-3554759c3bdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a1c585-33a5-4979-9f5f-f6913c69b0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "99f8da84-0031-4bc6-9902-bacefcdefb15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752d072b-f3f0-47e3-aa6c-cc1fd07ec328",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6492c0d-2013-42ea-912f-c2948ab01b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6005023f-75bb-405b-ace0-be3c555b1843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7c3d6d-5759-4b4d-9213-b11563fe30e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5e1d084c-fe3d-4a14-8324-264f6e539741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1e7375-a254-47aa-85aa-2d2c1246c8d4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b24a6d-78ea-4895-85b0-6d83ba63dcde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d3bfd18-9803-4945-bfd9-e4fd93d2db18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b5ad69-40cf-4756-b244-22768e3e231d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c33213f-9dcd-49b6-ac59-38ec19398d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6683c554-c3e7-44c7-ad89-7b27c3a0ca7e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce846ae-84a0-42d6-9898-81776640b65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bbb3db5-2c45-4c0c-8cdc-588f2ebfcb3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d298fa2-1fd9-4e23-9196-787185c0d39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1902c6bd-0727-4593-98a8-432ef436836a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54eee816-5ef1-45f5-9358-d30ae695436b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff288bcb-df19-40f4-b723-f91564bb6db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3627c7f3-e02a-4f34-ad53-7842bccb34cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5e3297-65d6-4b1e-a28a-c11a05cb1eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "65e6b483-638e-4950-80b4-50c6b8ad24b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2342f0-2482-4b7e-aa81-3682dea75f27",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f944cb9d-a558-417c-8af5-b34187e39797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd21879-9893-4fd9-88c8-a5973103e5fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549c59f9-100c-4fd6-a741-d914e973c27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbc5c86f-67b9-4968-9ef5-19db4b68ee76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb83489-eca2-4bab-beb8-f4ef3ed8c14c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be87b7d-c28a-4fad-b06e-0097ac06de51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e869607-8140-4c11-a889-0a7e75efcb38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014bb64e-40b3-4614-9f3e-a363c0e069e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c6b9533-03bb-46bd-973e-17d6abd48272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434b7bfe-9b45-41a9-ab5a-b63ea329b419",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1932d46-0edd-438d-be74-ecabe1410897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ec8459c-9e2e-4b0d-8fcf-a4ec4b15a86d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0a9466-5c52-4a87-a6a5-f10825895387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb652d59-ec8f-4b96-8e73-8c5a21741b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e8926e-c64f-44e9-a6ae-41c4a3604e0a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8557c234-eaef-4272-abee-e9168c5770f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc2ac6b-307b-46fb-9a73-16cb9dbdbd97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f70253-9bc8-4aed-8458-ce550e2c75a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c4af08a-8321-47c7-acd7-7f2ecb85726c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ef4738-f30e-4a22-b6ba-8ae8689dc50b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef2ad80-02c1-4126-a743-3a639bfa4e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d845dbb4-5c45-4283-9e63-da3da22cf5be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1fbc84-0d08-4385-b88c-dda9aa5b021d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa5e9a66-f25e-4ec9-b0af-8194df306f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d9925f-c2c0-40cf-a9b8-4768b04ee1b0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4558b803-53a5-43a3-acd5-6caa0442caee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05b0a215-8c6b-4c9d-97cb-c7a14ff35b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a98787a-eff1-46d2-80e0-2d7bc841faca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05e5676b-ca20-4e29-a6e0-2b374ba14656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e839dff-9f9a-4383-90f6-4595e10d6da1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "912edce4-3c64-4e61-aac5-5e12a89d7bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e06ad29-8b7c-4c3d-8fd8-36c1e04f4513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378e4f50-379c-4c9e-a386-6b32e712f898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fe54d8f-bac0-480f-b9b3-cf7225907513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91da8a76-e967-428b-a65a-a71ae8393551",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56228b3-869b-46b7-b85e-75e97e010e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52be1d3c-00a4-4f7a-8617-f709a9a3a7d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c952253-0b0d-4670-8584-4d7f92cc2bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31c097d3-1c74-4ae1-b8c6-7fd6a035cbf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a798d367-5e4d-4e4e-b251-5a19dfacad2d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7c1d03-6bf3-47c4-8b8d-84660e27279e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79278af1-0e00-407d-94c5-e42db1899794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9ea371-0054-4ab8-a455-eeaebfe0493a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a8dace7-c671-4e46-86af-9a5228121bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac7f111-794b-4555-9ce4-827db333af98",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce4ae40-8ae3-430d-85e5-b8c312dc375b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c776d6-319c-47f4-b4a4-bcd66f1aa66d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1efa5918-26b1-4e50-b0b3-b3a4929d5c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb24b1a4-de8d-48f3-93c7-126de9c7c2a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e241aa0-ee2b-4f64-8128-fef40c8821d7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ebe2ab-29a3-4ce6-be06-8a83072b3aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ebdbb0-0f83-4361-855f-5feafbf9ed58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a149cab-07ad-46b2-9562-988948594080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6b347d1-42f0-494c-8daf-97c180d022d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b2d7c2-ac1e-4e9b-aa76-16c31781cd8a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cabe58b-fe8e-4b72-9d3d-5c27da27dd48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "100b3d60-9e73-4e7c-bb77-ce1e4cffd257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba80004b-7327-4a01-84a3-ea7bb4ce1001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe0c0a2f-4ee5-4164-89e0-25948942b13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb570b0-0679-4b4f-a5ea-fc2055b31d70",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "663be65b-af3f-4b2f-baf6-a627f7ad918b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67dc5fcc-ecc9-48c7-bc59-a07ea92d80bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba15eeeb-4c6c-448b-b1cb-2bbd490f6af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d392d00b-e147-422a-ac55-ecfaed0d814f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac43ff1-4b4e-467b-a42c-8e3547eb611a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "855f2444-b79a-4f91-a4d3-d08508d9e6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3136bf5-abed-414e-853f-2a54ab94afd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cb3df3-bd90-4c16-9532-b140c4512a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e03b3b6c-ef95-4dd9-944f-3b77ec6ab05d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414450df-bd1d-4b13-ad66-7983f4b9b936",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce32979-7e0a-403f-8442-4c4f7e02e28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5c4a1b2-b8bb-4133-b95e-bf636419c0db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f9439a-194d-4d75-92fa-06c5d16ae599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "301a8ccd-3ed6-4676-936d-66fb38276720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ffd374-5b2d-4071-be1d-f433caf651ce",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c6aa03-0f50-4e59-93ae-1c05632252a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45dd53a5-a237-48fb-94ad-23d0072adb32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b88004b-4cb5-43ac-95a5-6ee8de8076ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "978005c8-7f82-47ff-87d5-f7ede39e16aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa90eddf-db78-439c-a43d-6b2561990f43",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00762ffc-9377-4d6a-b238-acdf505d0d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee6f228f-da89-4cc2-92a8-bc252f1ff0a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e437fff-3ee1-4f15-aa79-1ce72d9c58f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c93c3ab-ddd7-47b1-a6de-0938e2c169c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99cceaba-ad0c-4e90-879d-808d2105695f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d525e8d7-8332-450e-b4f4-61755d942b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da378aa-d03d-43a5-b3f2-8807a9f1cdf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04cd1474-6d96-4b3b-b306-434f6a4e8fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "314e30eb-3e06-42ba-80a7-6d77f6e8ac2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0947047a-6227-48cb-be5e-465160851f39",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5da3aec-e458-47eb-afb0-8bf83b647941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e457ee0-55a8-46bc-9b2d-0ab4975a6dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7365c6d-90b2-4c8a-8520-914c5277351e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e36ab09-4fcb-4eed-b766-9f6353aa8a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb32972-8cd7-43c7-b5b4-d9a1159132ec",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc74d3a-2f2a-47a7-a6b3-c29cbfea6f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02525887-c478-4a78-b97f-05a744f623fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60993d1f-73cc-4504-9786-3a38d36e7e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ca971d2-1827-445e-a1b7-d24886616950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f6ae2a-49e6-4229-bb7f-a644c8a1ccc8",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fa386f-3df2-453f-b128-f0c7c5de726f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e908edf-0e75-41cb-a8e5-c23ed07353b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03750cd2-9572-4623-827d-0454d6e31167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50f3b489-f2e0-4c96-9c6f-8b34a5194da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f20bad-6e6f-4c8c-b451-8a8387fb054a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08337a84-2ccc-466e-9e69-079efcf260d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d86c75a2-114d-44f9-aefe-1d7799853263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62bbd378-1ebf-478f-987d-a5492f5d1aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4399d45-c65b-4726-ae8e-2c668fa8d149"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "75051f08-d552-412d-9fa7-4fb5f46540e9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "804ce87a-edcf-461e-8f01-b3607cf0101d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb6057e-2831-4472-9970-7e5aab051058",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "24cc6f2d-8d9a-42dd-a824-c01fefa034e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eacc54bf-d4b7-4679-a0b1-be719e03fb7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f03d3e79-1ca8-4136-82c8-95c5ff946a3e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3aeb8ac-016f-49f5-b5f4-8ae2920d7a2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3dbedf2c-45bb-4963-b1d3-ad5bd7603d72"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad56c1ac-f989-46a9-a972-c47cabf7f1ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1bfb58ec-a3a0-4d55-bc10-1f2a7284b4d4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e27c521b-320f-4ad1-a52d-80236a7911cb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6c776fce-3d0d-431c-9762-b72726b8706d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b7a7d2e-9b67-40b8-bb93-ac82f03cec65",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7ce67655-2ab1-4fb0-865a-d45d320ddd3b"
            }
          }
        ]
      },
      {
        "id": "f6fcedd3-b8d6-4c59-81e3-ba0b7c3b1256",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b9eabe3e-6545-4069-b768-76b3d03a235f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "21eee7e5-5266-4944-a998-7e2b7675a52c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8da0bd3f-4344-4ee8-ac62-4c86de4e25ef",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf78a5fa-d968-46be-9c96-09c4606fdef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f9a0b7d-254b-4645-8a45-30c217176d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f021e85f-24f7-4b1f-8e00-0a903463b8d4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d53786f4-8f7e-4a22-87ad-e85c9b443403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4ade1b-1ea6-4ae4-8c28-862c182cf509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18affc31-fef6-4f86-bbe4-2c22bb9e81de",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f00b79c-6f01-4980-bb0b-c5cfb7e723fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e70eb31a-a7b7-48a4-a3b0-fd157af42564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de85b9cb-be0e-45d7-8a36-8ed12016ae7b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdfb437-d9b1-42e0-9892-cccf64906fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84d6d61c-0b22-402f-8c93-7723ff6157c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068e457e-64a9-4528-9434-8e5bff89088d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16757080-5c52-47ac-8b35-4cb168c3954d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33e82fe6-f6de-481c-9800-708bebeb6c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a529809-bb14-4406-8e6e-de423816c2d5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2a4673-a1e3-4127-9044-070113194423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1dab24b-d662-487e-ac6a-73c6742e1720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c451a7f7-7eed-4e71-96b2-d03ff50acbd3",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a8a7f3-eb0d-49c9-babd-ae12f6588442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3601e98b-8603-4ecb-9c18-a215314fad04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6971ff58-1f3a-4691-802e-5d5bb966b0a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c186d738-b3c0-41cd-9f35-e197c75812b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b6aa66-198c-4cad-af4b-13f48f6cff6a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21f9096-3891-4c61-835f-92c62740d50b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "410a4707-3c89-4bd6-ab80-5b97e500ea0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "298777b1-b9d6-447f-9679-ff8e7b2aa457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e9e7ccf-c184-4111-9124-4176ecf899d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cabf36d4-4e0f-42a2-8293-fc209c587925",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe363a5-930e-419e-9613-259bfa43d167",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57c81685-22f0-452a-8718-947ceafb6c87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b94ec98d-fdba-41ba-b84d-ffdc54607844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee68791-2c57-43f1-a56d-b2d825da884d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b89c0a0-4999-43e7-ab38-a8cf20806623",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca7984b6-084c-4c3b-862b-8c1ca697083c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48d983e3-940a-4bbb-b9bd-cbd32d513620"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bea53be-fb0e-49d0-a4a8-aa7b58a419fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "188054a9-7a27-4e67-b063-c70ee0f3fbf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451ac22f-ece5-49ac-a5e7-8ba23a47081e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c29f06-f2e8-4b14-ab41-7b86ef72ba70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f352c6-cb21-4283-8490-3545bd778048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e57d6fe-6e40-4481-93d8-b6d5f753ac53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b97e97-8514-4976-b718-a50705f5f1a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6420ad12-88a2-4b27-ac80-ffe9c4537135",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2b3f87-dc53-4aa3-bd7d-e88d09c9ebaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3521077f-a26c-4990-83b1-33ebbdda7b3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2a1f56-ed21-4a4e-be9e-8669599674ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dae94d59-af51-48af-925c-722e4fecd1c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225f4148-f0cc-42b9-8c50-043f82b1ee11",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc175fa6-48cd-4e2c-8743-33f49ecae3d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bcd21f4-073a-4c2b-8e3f-e3bba9386ef5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2348a1-2a48-4df0-921e-c353d627cfeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc01932-896d-418f-b340-a99a8de8e4bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f1eeb3-26c5-4c76-b171-41534bbc5401",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea6276f-2d8d-403e-a464-f5a0a19dcfc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "593e362c-2c3d-459f-847f-32c731b14b32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92d75b1-74ba-4a44-9348-86338e723e64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da914ee-a4d9-4fb6-96d9-f0e1b6a283ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d7800a-19c8-4afb-8291-bce59f3c32ab",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b3c80f-3e38-41f0-86a9-1c2a39a2c99e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f21a550-a18c-45cd-adc7-eea504e9ebcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58f46a6-fbf8-42d3-9a21-d73f8d9fed99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8d14394-4c56-43ac-9bcf-eae48a1868ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708ba21a-29fc-4340-baca-bbe083baad93",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75300f94-ae5a-488b-a1cc-ec972385a901",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1fe8250-b249-483e-a2d0-fcda47493e30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0d43f5-5b08-4959-8fbd-188f6f1331ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69ca7409-df69-4d2e-8d7d-43de44e048b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec27fe8-64d8-4842-8b55-f024c6a7b523",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce1340f-f353-408b-875c-4eb9f3f48e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f69c1e3f-054d-46cc-9b0d-4ba734f2e9b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc6e48b-f86e-4d27-852c-0d30e787184b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b36398c-1075-4847-b17c-373de4b67713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8634fc9-274f-4ff2-8428-6f40df416a56",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495a6a47-683d-4469-90f6-234e8ff10b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c5b9646-d8e4-4345-8967-6dbdbccf39b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7c4668-2045-487c-a869-4d23182259de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "026c7342-5afa-4b71-82fa-3ff0bc990d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4330672b-fe5b-4788-9986-488383e4d1b4",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fe9760-8fbc-4e14-96f2-2a9a2c9f4e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "045e3fc2-ed6e-460a-8284-cbad76d411d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f26d06-cfc2-4c1e-987b-a6f1750fa568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9dd5b77-b8be-4111-aeac-525c9f52c717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718f2d13-cccd-4c99-9146-f32aaf948696",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5146ecb8-f184-4238-a4fa-117abbdd68f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b2e1b5-c1e7-493d-9296-d1508d292c59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "359d1deb-1506-40ad-9d3e-48f3cfa4dd33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f045dd-e71b-4786-97cd-6dac90651890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2238614f-3a8f-4a6c-8a55-fb755886b799",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b306d15-2e6d-47a7-b7ab-38dd124954ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7154c08-de6d-498a-b7c2-8874a8d82a08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c950518d-c576-4713-90f1-34b98a003e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff45b35-0ff0-4d59-9f24-8e8d77912ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2a0315-d594-416d-858b-9631f8be7190",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0510cc5-24a0-424d-8e46-209659f1c67c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b64dfdbc-c3cc-43b2-9d90-d6f5250c8a13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab9d0c2-2242-497f-8e01-3342211036d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9d3971d-9a63-476f-9789-0838f879272f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26090c70-2853-477c-97e0-14784b665592",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825036fe-0893-48d6-a9a8-3e521f5fb00b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92e51777-bd0b-4513-8c1c-bb1c2534e3ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f2b43b-4e4a-4ee2-b207-430c0fcaeaa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c3a4489-3625-4c01-95ec-8b315c350284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5c668e-f833-4950-808d-477316c7ef66",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b00cfc-aa5d-41ce-9241-f5c390fc16cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0382bbff-88cc-4c03-9dd9-ab07f892ea6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "852c4bbf-803d-4ba5-8c43-f2257ddf80db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf2149da-3df4-4f6d-8930-2f4e98bfdaec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "180c491e-9c21-4da9-a0ff-f3d2384105bb",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e62c870-0c71-4eef-8994-8c760cc2d948",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92f94d8a-4bfa-4ac3-82b6-932e2af98088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc8f50f-f298-496d-b8c8-da11b3026699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ef12ca4-e7fe-4173-ab2e-5b4b1680f1e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781c9e46-0272-4d61-82cd-7c69977a675a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb9a6c9-efab-4fcf-8020-d6d2d02e8bb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2277f49-420b-45c6-9b03-9954d1bf037e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56f7941-7c25-40e1-b72b-45f97ea8431c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39f2548e-73a7-4598-beb6-a4ae36c29e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b78fd9e-6d4f-4e8e-ba03-0dc493e7a114",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0211d63-f271-4089-b326-1fe1f41056d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "849f18cb-744c-4041-ba9c-440887d62455"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e4aca2-3ca4-4ecb-bc7d-f0bd762ca68d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e10dbca-f377-4ad4-a2c5-a0a9a0cc8bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39aa2d67-c111-4882-9d05-7a7d04dd8f3e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e83542-9716-4397-925c-782cbe7b28ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05ffb206-d47f-4469-898c-2097792d3987"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c77a46-4e11-4f35-83af-4c6600f97600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a146720-45d6-4f21-bfd9-b92cde36d613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3b6abb-b207-421f-96bc-4f89cebd33a9",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f2a092-2c95-4f51-a0a2-5844a064228f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82ca221e-7195-4aaa-b76b-7bcf036f82f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e60c8a2-7cd6-436b-bbeb-bb3911b3ac97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0050ca03-6317-455d-a913-bc66c5d5751c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c520f99f-1da0-4715-8e96-e425ba37accb",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03afb21-9898-435a-8cd9-4ce2b6ab90f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8063f32d-a313-41b1-b156-8102988e9d2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e54400-d442-4dca-80c4-4e7abfcc05b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e73d566-b82e-4e25-8b3f-c7974275af48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c829dd-aa70-415b-a12b-645325c8221e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42d9b28-fef2-4dc5-8210-1bab9ab0ab49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16644498-b6ec-4258-b914-c53e1dd3d848"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "711ab406-5cde-4212-8e72-44f21897ea86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44dcd8f3-e815-43f8-a842-ace4d4b7790f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ec4335-0e6e-43ab-96a5-7c388c86ba4f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3506d02a-87bc-463c-9c7c-8413418845fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fa6be5d-0f1e-4a38-9889-d10618427f94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce5d1aa-87cf-4f6b-92b4-ec171093c1e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7c53bad-f30b-470d-9df3-c661dec03254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ab9f55-3274-40d2-b78e-a8ae4663b85d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d2ed39-552b-44e9-8a7c-b5ba2ffbb76f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d19e5bb-a60a-4763-878c-6a97e97e9025"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d3dbce-1cb7-4391-b955-681ad4c7895e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54ec61bf-7832-426b-8c8e-68fc924f93c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29968765-afb1-43b4-9483-520f84e8c22e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411b7be8-700c-49d7-a277-67105c421a71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e540f42-e7f7-4c18-8f89-907574178f8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8816592c-4183-4c8c-b3da-e56635375d0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f3dc402-c3f5-4a66-81b8-f0cd07702cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5082e90-79f2-4811-9546-c041ed627ae7",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d7a4fd-fb6b-4dc7-ac91-9e20a42885db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20008b51-039f-4734-9b62-b945c55c3778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c307483-8ea1-405d-83a1-357b68e29c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c07119-70c3-4e85-851b-0045a7288d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ec5994-1618-4dc5-b796-33c5b3653fd8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c08425f-0897-4e88-8208-c0db1c46a9f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00d33400-b3ba-4e32-9726-41099dd9ffd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee901035-e4da-4953-b103-9c7d13df0868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b883bcce-6c74-41c4-a4ca-a05bf1817772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd44aa3-4275-47cc-9b01-afa1669b5d61",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a10de5-ae7f-4b97-9042-5cf2161fe961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c94004-02ab-475e-97e9-496b87d2b842"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d77a273-4813-40ce-9fa7-e9fa4414618f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aa3d81f-d338-48ee-9619-9bbad22e301a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08bb294-df84-4eaa-a233-bbab75da7a06",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b5096e-74e1-43ad-a422-2538f668abd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "915fd092-6bff-46ff-9481-8ffc83e4cfe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43837b00-8426-4dd9-b8e0-01248916896a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4beea82b-3f35-4d51-a14b-489dac0cf689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b19a238-5125-48ae-8bf9-cdfe06ea7e39",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89c9a59-9335-4d85-8632-0d2f74a88b8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56373c98-e07e-499a-97eb-48e8f2379ae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bbdf484-75f0-4c05-b8cd-2d68c7d1ef88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d452c1bc-b070-4caa-b93b-89de05c67932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94368ea4-b3a1-4d9c-8699-1a263bd8c7e6",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2067bcf-6259-43f3-8bf8-d9d5351c194b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83dbf017-8724-464e-9e8c-7cbd8e65d8c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee189112-54c6-45a1-8303-fe2ba714dd70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c278212-f394-4345-baeb-635027d2c293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791da4f0-ab9e-4456-bd9b-bad24d5a3510",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "348d81a0-cb11-48b9-a8cc-022ff5bf643a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7434907-ff39-490a-84a0-121a6338caa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3723b1ca-3f0d-4426-adf8-c8001104ae61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fbee76a-6a5c-4c85-8771-151de3739f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35dcb15-e609-4176-b780-50384ae2d599",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7efbf4-12d9-4053-9ab9-636070b59e4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e14b7cdb-afc1-47c6-be5a-2f77dc0c6833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d027406e-706f-4cd8-93b8-c1eea8b48b1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ab6be42-f976-4fbc-a03b-42c9dbc38deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd81ea7f-fcc3-4a19-9a12-037583e19359",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6706f230-14c0-4d43-82a7-dc9427aa4592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ac748c4-2a55-4102-b00e-d5b759c0f15c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6996fe-dd1a-4519-bd90-968e71bc5ac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1177f366-45d1-47f9-b23a-2db5de72fb3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce68f173-5fef-48b1-be97-f815d9e66159",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e51b7ac-3696-4ccc-ae15-94f3db05033e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f59a9e-26cf-4e3f-a5e8-4c0c00eb0f14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39951924-0826-48b9-82ed-9c1984f19921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "017a8517-d0ca-4c2e-9450-e57b89dafa3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af37b130-c4ad-45b6-99c1-1a65e5fa4990",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596695d8-e9c2-4d68-b5dd-0b18c9ff2b86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc2d7562-fed9-46e1-9470-7be3ec6d8b90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d472db7a-9a81-43eb-89fa-9510463aa9db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "954ef1fc-4e1a-4607-b1ec-151c1d8b8a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3826f0-5197-46ba-900f-97c7c52c81e9",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e9004c-6dd4-4aa6-b976-b5994b6f14a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9840b42e-9b92-40c1-ae1d-777b32ec22d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "501f1672-6089-471f-9f02-78fd4a92474a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f41a701b-ef7a-4378-8717-582085c72b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41e7613-f9e0-40c9-9038-c632d894e81c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1181ddd-3e1c-4992-bc95-208aa31891bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0fbe09f-82ef-4b57-aebf-181e9b8dff0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5999790b-bfd4-4007-816f-729c55770668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64debc86-9a9a-44be-a00f-c1ce79b6cbbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b86eea-2927-4443-9359-957d52857350",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1407e8df-c94b-4068-b118-44fb5beb87fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "265a1c4c-43f7-4dc7-be5d-16900c41bf43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "997a3a65-18d9-4f0a-93c6-611440061ec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9e83b78-f13c-4c9d-9644-f9a8e225c0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebe20bf-8a93-4c23-9f7d-08068ce7ac3b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e752889a-03d2-46d9-ad9b-d64c8ddbc910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f33fa35-bd60-45fc-b9f8-b4f65bab13c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56352b9-9b74-4a3a-982b-e5a46b1d4e38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b269d3-f978-473d-b759-58372aa00359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68d88ac-82a6-4361-8005-a5d86e922463",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afed79c9-c2e8-466c-93ae-ad18dca7660e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a8e7743-1c49-43f6-a424-8ed44a7cd050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92a06ed-f75c-4fdc-a0bb-3d31426b4ca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b0c6a9-eca8-44d8-9cb4-f287d93154ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611c6c44-c4b8-4f8f-9489-62eb1cc938b3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c94901-347d-4167-bb6e-51d363769870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b41ee7-89d6-49aa-8ea7-0c21f4047042"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a64e1b-8580-46a1-8072-05d04c9eee73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "648205ad-a53d-4aac-8d47-5dfd6c8a9817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e1def7-0a68-4222-a795-385fc875f1b2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ab6347-7adf-4dba-928b-cfee9253b05b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af617d00-6a07-455e-ba70-1fa288dc3dfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c72b0c-6d2f-4aa3-92b6-8969cf13cd79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79a3fa27-3755-430c-9416-3884b0368a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339aedbc-4f41-4bd6-bfe3-b67080b4f610",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8785ce-5767-456e-b61a-c80f1b69d8b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "234c4eb4-5428-4db8-93b9-72441bd56716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb93616-89ae-40ee-a063-03f1a6f5111e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f0cd45d-745b-4713-81c1-116ae174e306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb13f0e1-1437-4ae0-a878-73ff625ff307",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427a99fb-1bf4-4456-ad70-513520684497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d5382d6-4c04-43ab-bead-ad35dbadeebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf074311-ad68-4d55-9c66-f6ad9456ddf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e971f05-9c6d-4f7a-a9ca-6cbd6cf0747a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ad24f3-1488-46d4-99df-646eb6f4762b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0b9322-dee8-491d-af06-6f857faea7fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "019ae7cf-4934-4d8a-ac14-86abb7b9b58c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f83597d-10dc-4f0a-93ae-1969850a1f0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f911956-21cb-493b-b916-6cf4b0f91869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65586a05-1b22-4b55-ad8c-742d0107947a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f65cacb-bef8-4927-bece-27cba244f60f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b89e7da-5f1d-4e43-824e-dd739ddb265c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33af8dc3-8078-4ab4-8143-d69e6f321f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0b0cda1-f7fb-4761-953b-2ea0d2b0beb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07c8c0c-1c67-4852-abd4-11f70b8ee428",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c8449a-a9be-4913-950b-9eeef04d0036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391ffd7f-7dce-4bea-ad88-f6e67b0a081c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ba3097-f92e-4df0-9b3d-34c5f23b8935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d158738-d0c1-4512-8d37-6bd6b1d6363e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f6d9d7-f4a8-4f2f-bfa7-8d408390c26b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda30f49-e145-44c3-908a-76e07f8f5598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2426d673-0e2a-4c29-827e-474aa9f5f210"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db11ed3c-2eae-4c56-948d-87ae074365d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27866640-451d-4635-9c76-f5de301f49a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f834d96-3221-44e8-a988-569ab21b4d53",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac2d928-f045-4f71-82c4-57f97c5d3f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9eb79fc-2ba9-46f2-b81c-d40839a443cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84786346-0977-41fd-a64f-4e1a05b9cd12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06385cac-d3a5-4ae2-9a3b-2bcd2a48e2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf0a59d-740b-42e5-9d66-a0cf4765714a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fcc46ec-bc79-4b94-b541-a406f77eceab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79798d4c-0c89-400e-91b7-59d075c3647a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a0bfab-7957-4853-9fd3-9073bff503b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "674cefb5-7d02-4a4a-9dea-29f3c78bde02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89244cd-37d3-4d45-a05d-340eb012184f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0389c480-a655-4cdc-91f2-ab4ed003db27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "559ea838-8370-4881-907b-1fde5f5fe569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef043a6-75d1-4706-b18f-a082e61a2b6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b61651-5173-49be-be11-038ebaac85ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0540df9e-16c9-4698-9e04-9d88f19d77d2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2791339d-25c9-4280-a9cc-b947eabd08ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7018f9e-594f-4907-aa20-c2772fa89127"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "561cdc8a-9676-4587-b05e-63f018b3eb83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bceb90f-69a4-4fb7-ae46-531edf99b6ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c73032-bf2c-4476-bd83-147fc1c74fe9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c2c027-133d-4112-9926-e725f504d505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef94c2f7-adf1-47fc-919c-7539beee57e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7b009e-1ecb-4b13-abb9-1dd94c64c1cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1747c403-520c-4595-a0d7-23be362f4d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c555f1e-a61f-4af8-b060-c9015ffbbb28",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faabdab7-c31d-46ec-8844-67263000ec5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b79297a-60ef-4d3b-a00a-b4489b580477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e1e054a-2c87-44e5-9e56-0f1f6f6ae8c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "420137ff-85c6-40ca-a285-05b502997642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7760f36-2a8c-45df-a134-ae5ea83ae40f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f45b113-9d1f-4c44-864b-c0aca4ca160e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b23e99b-2c06-4653-95ec-e560d317d3f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf8d855-63e3-4569-9cf0-db1e5c9178d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be70192c-78bb-46a3-a6c2-e013ced67733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5097c44-701a-455b-8bc2-c657c185b94b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead3c689-916f-4f06-a2c3-725adb6307ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccdca691-228a-41df-b184-146a2c382b9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "282d2d96-9555-4a4b-9b52-d8b74eef9bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e86b14f2-719b-4e4e-933a-a7eff47d04dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d95d08-5774-47af-9805-366dc889ef02",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ef0938-7b03-47ea-ae03-f3d268183df6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cfc3e7f-7875-4754-aa3c-d36e7a7ca5cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "286fdec4-4d02-4baa-8a02-7d15892fa8fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb4a6f5-c439-4a57-82cd-1191cb73dd89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28b15aa-38a8-4358-83cb-16a57731b656",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdffa751-01fd-49c7-bde2-056435ff6f61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48240b8d-62a1-4501-8761-11dd5dd4a5ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3908e285-e32a-4216-bdaf-07e2a8756be1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b67dcf0-c97a-496c-9104-824ab7549454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b0a270-a410-49bf-a896-65148a152fab",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f35c290-db57-47e4-8be4-fe5b14079c12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7b28b87-ef32-4958-a15f-f1b28f96e7ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a63b64-1a5b-4699-8794-8e364befc417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c65f3e5-ac08-4c12-88d2-6ff6b45b9064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd565ff-1749-493f-8ffa-6c2cccfc130e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25448fd-7415-467d-9f85-af33beb7b94a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2dded65-bf7f-43a7-aaf1-985e04b18454"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2244403-9a11-4c32-ad28-bbff0c0c6b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29c37b03-6d89-4d38-9fe6-873f1cfcf1eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ef893f-1b57-48b8-be27-ccec04a69cb1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3cee7f-122f-4a7a-b841-76f2619eb75f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30eee340-37fc-4e1e-b9d3-ce22a81d4197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af85bb8-7e4a-4269-89a7-9e3812a3a169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd1f63a-20a0-4289-8a36-d6e629d3f85c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426fb435-2f11-42fb-a433-3fe3953218f0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb768caa-c73d-46f2-987d-745fe9b2337d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "412d8bc8-66f6-4549-848e-8031162edb84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca435b3c-42e9-4b42-b27d-b9082f63deb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ebc8395-2de5-4a64-b7ea-d5cc30d01612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7069d63-2765-4821-928a-7238d4308e49",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d8c13c-89b0-4e3a-9391-1ef0866455c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eddba187-bad9-45f9-b9cd-0d993716a674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8d4e6a-fa0d-43cb-a97d-c7b4ea43fd57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c8df1a-ebaf-4e4a-b3ce-770498360915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff6ff82-a2ed-4337-8c84-80ad3ef227b8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c659aa9-a513-4263-88bb-9c6ad0950e36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21cb9e5d-f6fa-4de3-a95a-ef2898f63658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b328bde0-4aa5-4c7e-a422-28f8c26d83f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f46a8e5a-84e0-4c80-885c-064385bd6867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76866bd0-a0ab-45c3-969d-80922e642578",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ade495-c4fb-4069-869a-bc9f7b12ec7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de4f6300-c117-46a0-a849-fe97b6a25118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c811250-bcac-42b0-a507-665b805c38a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df3917e6-ce41-4e7c-bd46-782a609a09af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4ba4f9-3006-4d92-ab87-148f4529fb5c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19df7c5-1dd8-4a6c-8794-768a5bcb4c56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "594390e8-fb8e-49c3-9457-e95ef70b9c75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e842a7bc-504f-47cd-8458-cda2359ca3ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7819aa1e-b340-4113-8b11-e3e3258be13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f7eabb4-1a79-4b03-af3b-9705ffdf31e5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5826293f-4f99-472a-b063-3ac9dfcd6234",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad09bbfe-f828-4826-aac8-bc16d4bf2175"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c565eed-5004-46b2-9833-2af5d56b0d9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb5bf624-2aca-424d-a249-8587f0b2a2bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e85d04cd-6573-4b8c-9107-b4332f400431",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f305b8-0279-48a5-9b3b-76408811b1f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b05d31e-661d-47f7-a0b4-ceafd55792af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f572d176-eb92-4d79-a405-3c966008a9a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40847e2a-14ff-4655-b72b-96e6385ae6ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32d8f80-d0fa-45d7-a2d6-b2a67f863d4e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83218811-4777-4e66-8df3-53a967e450b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9a0a6fa-bf57-4ef7-b174-e2c7c3609d32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e346d7d1-70d0-4b22-9a08-93bc7656b704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e287240f-01b0-497a-9f94-2eeefdc82f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368a8a3b-69f6-4d54-8703-dca7f99df85c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b8ebbf-2b02-4b59-a947-203fb7a648ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "805be744-f6f5-4f0a-99f1-1523a2f969b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74ca930-e230-4f0f-acc8-e91d0167b860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81ff67ab-6ea0-4d08-8cc4-26172347f3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c3ab55-58f2-4a70-986d-5c2b1a0fb3f7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28021f75-41a2-4211-a8ed-ccb182910f1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73da81e5-634b-4590-b6da-19afea715dd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced1555b-6b9c-48ea-8858-177d591d2913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e8eb17-74bb-486a-9e8b-ada2da0fa006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306acf1f-5bf0-463f-8e21-0c336649dfd4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d45cc5-f896-4f07-b803-67d2d7c76257",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86b1d925-6855-4d7b-bff3-019ec8df83e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d62896-b429-4353-bf88-0a6f128f0414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6bb284d-29c7-4783-b087-11075d194fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6ef6b8-f4d0-4ecc-9c34-ee4716038a27",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9809e891-31d7-4dc4-b63e-7b0b135de6fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e94db1c-68d0-4c7d-b2fb-e91308101d36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6793558-1246-4856-a15f-68c0d781ac75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07869799-59bc-487a-97ea-f664740816a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6634c62-109c-4c6c-a295-20aa3923127e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d8f153-707b-4539-b95b-2d2efac1ab35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcccfeaa-9f95-4aef-b0d6-55558edd2303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "062207bd-466c-4625-bdbb-999974166e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11c2ec80-c130-4839-8957-82b43ee1ad87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247e1950-a836-4bb5-a797-193bf0c894a4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97d4ca0-b8ae-441d-8668-2b839c1dad68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f320b691-3405-47dc-8c20-f4964562489f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6acd97e-9753-49ae-a12a-fde0483e79d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb59df99-1888-4d82-b559-ab4ab613eb81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bfc8813-228c-4fd9-b0ca-8d74783b1d64",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03a532c-d198-4448-a9c4-3a3fb8ac428b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ada20c2b-caa0-485d-8877-b031773b5e85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1c8485-214c-4844-bd5e-4e6e0702d3c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "475065b3-361f-4921-aac9-3651c79b65ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f41c16-d4f2-48e2-b887-9f5494650813",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6f6004-f0f6-44d3-a2eb-cb7907e0f41c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fe95b1e-3bd9-4267-ae67-ee73f28ad59f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be9ad7c-74b0-481c-b3f5-010130cc0757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "253c109e-b725-46fb-9149-1d83ee87dfd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b6a27a-ab4b-4858-b047-de2b26a430ba",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1b85bf-9865-47a4-a7c0-1f5329beefa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c9e9ccb-9ae4-4faa-ae7d-1b74727cefeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6661f2d7-c605-48b5-a8eb-02163822305f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6643d7bc-9528-4f68-99db-c31f8f42cb9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2b6244-967f-4105-a04f-3b397936a4f1",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3682bb0b-ca39-418b-9829-a22820d47b3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f19f853b-ab61-461f-813e-c46dcdcb882d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e80e9a-744d-4bbb-94be-7a602d168dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede6965a-6cc3-4d2b-ad3e-c97006eab056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22bd75de-ad09-46e8-8c99-4a62716a30a3",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c3de7c1-7e49-42f5-b910-3d22029234f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d789245e-df08-4a9b-98e1-c16f5a5f72d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e7a980-c162-4e77-a52f-a4e4803dfa32",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36fe1c0f-ad05-480b-aae0-7bcba186fcc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5fa766d-3c5d-4e7b-9958-117cd2625215",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db588f1c-6f87-4ab4-bdfa-7716da719552",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd2cafe4-d6ee-4de3-8325-bc6f3423c5ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc05342-aad4-4f1c-a358-d8315973da9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e86d6d6-2ece-412d-9a0e-dc4426bb54c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885357f2-5293-4ebb-808f-dbbdea46deac",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ef5c08-6814-4fb1-9b88-9b49c52a4067",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "295cf99a-50bf-4f2d-bc89-18ea141f0b99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc15aa2a-c1b9-4cf1-8244-96cf40c51a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1271cda7-4428-4367-9252-7a6da51e1a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272e39d3-87b0-4cca-ade9-4153d7dc902d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d377e3-94b2-4651-9f3e-931c64de09c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a4c49f4-c735-4e18-9fb8-3e7788230ba1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f9f610-8c28-4e7f-b2eb-f84b4f8e8810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abe6a670-878f-4d98-ae61-47075064961c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35bdd54d-4bd6-4bce-a3d4-1a56e0c7f94c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93cf1744-70a3-48f5-8a65-ebac0da5f6b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fb483ae-f836-45e6-9859-169cbc9bbfe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4624b6c9-380e-43c7-ba06-8e0ad3bbceae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbaa9c73-a518-40ca-a18b-2b52bd5deb0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee438ae3-a1b9-4b14-bd6e-a4a8abc2c204",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a676dd-fbb3-4046-97d8-f860d05ef08e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c01db025-1af3-4e2c-8d34-3d7a4f028ce8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "565cb7f1-3729-480c-b5ea-ee32fb165692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e485bd-87ff-4e09-b92d-3dfaf390b20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19401c2-51ff-4f0f-9214-7257e0ef7d62",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4feca0-07ae-4736-ba53-eff054204aba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a32f1934-b5b9-4cb3-86f2-011daf54f0bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58110be4-4daf-4c3c-a423-b7df58b6d931",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bf6c117-72dd-4659-b604-096323daee12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ebc282-0bf6-4d3a-bd06-8b0260dedbec",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "983dd9a7-d69a-4938-9d79-a389aa177d9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8bf6d11-a28b-4e8d-8845-8b18d0c68915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c9ea2c-bd80-431b-a9ed-4b823904d122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b09a905-4e2f-4606-9576-14c2b2dd520a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38d0a431-8da2-4e5c-9907-ef8b6214ab9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5b725a7-22d3-4a28-90b8-9e8fa6c7ca5e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d868634-4c65-462d-982e-36a144169b97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b0790e6-f617-42da-861a-57133ed1c50d"
                    }
                  }
                ]
              },
              {
                "id": "4ca0ab3f-ee1b-4d29-b6a2-57660b539c76",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b9d34dee-8884-4463-ae41-5d16be89450f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12405789-c29e-46dd-bc33-4d39448ef184",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "25cc593a-a44f-451e-95fc-2fe18b1f2e1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "304756a5-ce2a-4c45-8cea-452fec8becce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26b736fa-60c8-4f81-b653-c4faf2407780"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6449b96-8e3a-4f33-93be-0dae2d5bbf7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c6e714f-b4dd-4542-a72b-13616f1666f3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "56b7009a-1090-4a40-8f54-045679420cfe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9b696b3-aa6f-486f-9c48-4022248a8c06"
                    }
                  }
                ]
              },
              {
                "id": "7ca833ef-a055-437a-9f57-54d5af2cc155",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f3d4a555-8827-4dc9-830a-d3b6d82d595d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5dfe2f-117d-4307-851e-96b15e714f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d12580d5-8bed-4232-ab75-b70f6050e0d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e762a2-2dbc-4988-9256-8b2693f516d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e651ee9-9644-424a-97ee-98cb25ce9f04"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "93100ba8-59b4-4e77-a304-70e928de79ba",
            "name": "Positive Testing",
            "item": [
              {
                "id": "72d581b9-b479-4114-a2c2-2b6490b8bb83",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7fbbd77-6bc1-4a83-ae90-689e4615db4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "591dd555-8140-497f-b1e8-fbb735e8dc77"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "068156a2-7246-456d-afa4-7cc9778d17bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e16680c8-ed2f-40b5-aa74-35362aaf517c"
                    }
                  }
                ]
              },
              {
                "id": "3e97b22f-6747-4cb6-9f27-28acc9eaccba",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "627a00f2-cf7e-4773-8f7b-a16cb68fde09",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "308837f9-6f4c-4901-bdd9-1830b8248194"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "035af434-cddf-4fa5-a18b-29ddb2a9aa9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75a8e9e9-cc6d-4104-ae76-17f0212ccb17"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e9ee9ef5-6a6a-4d18-b8bc-ec91ea2e4d57",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1c2324bc-fc1c-4de4-8fbd-bebeef3094c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "716aab4c-ce2f-4492-8aa7-47e14706d157",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "42adfa92-4951-46c7-b4cb-4911f43a32c8"
            }
          }
        ]
      },
      {
        "id": "a1136621-debe-4420-9d4c-968a0adfa8ee",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "efc0aa00-cd5e-4bb8-b3bc-4e31b1ab5875",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f83f4a8d-6fd4-4400-b8cf-57d0cb16680a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "38926c9d-5779-4bde-8f57-27b6ae4f6cae",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ff7669-2cac-4dd6-848f-088f2176936b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2eedec91-653a-4ea1-bbda-d40937ea13fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4dfd78a-4dc9-4976-8385-75bf23a12886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51188dcf-d5db-4d1b-8954-5831a826b085"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59764b68-9224-4d39-8a17-06e25e2ffd31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5d9c7e3-7998-4d11-9ff8-bff17161fce0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "261d8c31-e03f-44c0-bc4e-0a511bc8b145",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e919294-6063-44db-9af1-bfa7a395eadb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fcabb7ab-31d1-4296-853f-c1e79920c5e0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2b583d7f-c315-4b7c-a938-6b5a82acc46c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ccd03591-827c-42e9-8c3f-eaf0d7f21044",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a21806aa-4276-493a-99db-94a9405537c5"
            }
          }
        ]
      },
      {
        "id": "bc1ae473-e35d-4b0f-a2c3-c028b9c19412",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "431d0440-43b2-4bfc-8bdd-4c7d7e0ec229",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4bf9fd31-07a3-4789-bd6e-ae361717ba8e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "33f2fd0c-c4cc-4f9c-b6c7-9a5cc2ee760a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f00f41-1812-432f-80bb-811833f776c5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb9e646e-315d-4717-8349-b748dfabd88a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "151e461f-2388-4ab8-93c1-e6b2f8797cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6dc7b15-2f16-4683-af6f-43be660bfbd1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58218242-c57f-4d4f-b472-c3f7de46264b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fcc8cd4b-dfa4-449e-ad9a-efe4ee618473"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "12e950d7-e534-477a-ae0a-eef70a5063c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06c4058c-8c36-4dcd-a6a9-fc81b9f74342"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34439789-c87f-4cc1-a50e-5708ba449883",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0202e237-2ac7-4f8e-bd53-7d33ba0652af"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7260edb0-2c43-43ea-8355-2318533534c8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "692fdae0-3115-45b6-b247-657ece96fd97"
            }
          }
        ]
      },
      {
        "id": "636d4672-cde1-4d3d-ae37-1a327c6cca32",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "10690ce2-5ab2-4eda-b89a-67ed27344da4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6ae8e840-507a-4ab2-bc60-2a0686acb914",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4937fc2d-9216-4d1a-9552-92c5512e18d6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c403c9b-d5ee-4c02-ae7e-def0ad0c0099",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f396cee8-a7ba-4338-90e2-24386a123fb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72097a83-e8fd-4d00-8d33-71a3c3c2291a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6729d16b-4536-4825-adea-d5f90dacd319"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab894108-7417-4dbd-a635-a1853c827da3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec6af7d7-c037-48f2-a450-1f70c81f5322"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e39c1979-451b-4534-9faa-e83c0be37ffe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3d5d917-d479-47df-a3d1-53ca318b1d2d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b9ce21a-7b14-41e6-8d73-a2b0c1016927",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8800c0c0-6a88-4be6-afc3-c536af494939"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b6f90892-853a-41c1-9b08-98b84a20b5d7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "41672cbd-0052-46f0-806a-d58d04d0ea29"
            }
          }
        ]
      },
      {
        "id": "e1fdda7a-d5a7-4fbc-80a8-722a6c61d6d7",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4134d29c-3c15-4ec5-b5c5-0edb9c7535eb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2c4905c0-7b2e-41c8-a243-c68a52f40d0c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9e35b305-5163-42c7-991a-d90c058e0d50",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7d21dced-ba98-4b7d-81cc-06da97de2e9e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f1b295d-b723-4357-bf76-7b41d34ac604",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 95.1052631578947,
      "responseMin": 11,
      "responseMax": 6787,
      "responseSd": 473.45729106597037,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698366768652,
      "completed": 1698366807762
    },
    "executions": [
      {
        "id": "e9fa671f-ef0e-4f46-83b7-f897fa00628e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c4b4cc75-faf8-458a-ad14-2f5c0fd7a89b",
          "httpRequestId": "b2c2f9bb-8327-40a0-89e3-3f121a277c57"
        },
        "item": {
          "id": "e9fa671f-ef0e-4f46-83b7-f897fa00628e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9e2a07de-3ced-4f9c-bf12-6d2422ac9436",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "161125ba-8b1f-4ec4-bb52-3acbc9ad8593",
        "cursor": {
          "ref": "343525ea-29a2-4845-8fcc-2f483f44ba0a",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3f31e47c-b334-410c-a602-d2e53f9f2e25"
        },
        "item": {
          "id": "161125ba-8b1f-4ec4-bb52-3acbc9ad8593",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6701be84-3de4-4314-bb39-7718ab9f854c",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "3c9a488d-b471-4f12-b209-00d4a002cbd2",
        "cursor": {
          "ref": "a69cea2e-ab21-40c7-980a-bf0a19299d38",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9c9000b4-cf05-459c-b422-4d51cb724cb5"
        },
        "item": {
          "id": "3c9a488d-b471-4f12-b209-00d4a002cbd2",
          "name": "did_json"
        },
        "response": {
          "id": "977b43b0-2952-4319-8581-720ebdaed44b",
          "status": "OK",
          "code": 200,
          "responseTime": 264,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ffe3ee9-24e5-4a1b-bae9-7ac44f9e6b9d",
        "cursor": {
          "ref": "bc84ab6f-0b9f-47ce-9b6d-24160247cd1a",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "39575add-b704-431d-981a-91bbc23c380a"
        },
        "item": {
          "id": "1ffe3ee9-24e5-4a1b-bae9-7ac44f9e6b9d",
          "name": "did:invalid"
        },
        "response": {
          "id": "45acd998-33d0-48cc-9a15-83694d01a5a0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 668,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ffe3ee9-24e5-4a1b-bae9-7ac44f9e6b9d",
        "cursor": {
          "ref": "bc84ab6f-0b9f-47ce-9b6d-24160247cd1a",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "39575add-b704-431d-981a-91bbc23c380a"
        },
        "item": {
          "id": "1ffe3ee9-24e5-4a1b-bae9-7ac44f9e6b9d",
          "name": "did:invalid"
        },
        "response": {
          "id": "45acd998-33d0-48cc-9a15-83694d01a5a0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 668,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02a71f6-70cd-4818-98fc-dbca6c2ee97e",
        "cursor": {
          "ref": "92537fc2-8e55-48e5-8a96-07c19c486405",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "716397d0-2911-4473-b61d-5bdc3591627a"
        },
        "item": {
          "id": "f02a71f6-70cd-4818-98fc-dbca6c2ee97e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d17f2eee-2a56-47d3-8ffc-6fc5653f9d76",
          "status": "Not Found",
          "code": 404,
          "responseTime": 49,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a86c49-b388-4c85-ae38-8b5ca1c601b7",
        "cursor": {
          "ref": "9181e348-ab25-411b-833d-0a1f91d2cda1",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a792405d-8075-4d07-ad80-41826f8c3ca7"
        },
        "item": {
          "id": "79a86c49-b388-4c85-ae38-8b5ca1c601b7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f7a2038b-8ac1-4626-ab32-16d634dc07a5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 42,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc069ee1-4c10-408d-bb33-d2b72d5b68b1",
        "cursor": {
          "ref": "15974606-4faa-49bc-9a2b-4adef26a55f3",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "84679f70-98a3-4c00-9f09-50cc41085591"
        },
        "item": {
          "id": "fc069ee1-4c10-408d-bb33-d2b72d5b68b1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b1170570-03eb-4534-b4db-74de7b84597a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2452cef-1613-4cc4-8944-9014e0639134",
        "cursor": {
          "ref": "f91361e9-216e-4170-84bb-f5b86fb0092a",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "44833f3f-2c42-47dd-8a47-5b6bf0599117"
        },
        "item": {
          "id": "e2452cef-1613-4cc4-8944-9014e0639134",
          "name": "identifiers"
        },
        "response": {
          "id": "61f374fd-64a2-4ff2-b123-a7efca3bc27a",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd2dc35-3b83-4f34-832f-10e87356ab3b",
        "cursor": {
          "ref": "f64b2e31-cda7-4374-92f1-4977830465cc",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "845968af-256a-4a2b-b89a-9ec678cffe00"
        },
        "item": {
          "id": "5cd2dc35-3b83-4f34-832f-10e87356ab3b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "04274988-80a0-4080-bb8c-8d7b7d03f587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed12d81c-323e-4568-ba88-721cf8462370",
        "cursor": {
          "ref": "b82ce425-2bbe-4cf3-a360-c0d5b5355486",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "84f14dd3-0bc7-4dc5-aca5-d05f59572074"
        },
        "item": {
          "id": "ed12d81c-323e-4568-ba88-721cf8462370",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e1c5e101-ca1a-41c6-b55c-7259ab200e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf8c0e2-51f7-4bc9-9f90-d24f62245128",
        "cursor": {
          "ref": "90bf2944-1ead-48c3-a8e9-c42925cf7b2e",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "022cec49-d692-42a1-9f94-b4b8e64408cb"
        },
        "item": {
          "id": "fbf8c0e2-51f7-4bc9-9f90-d24f62245128",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "63cba1fa-5a14-4324-8b2f-9c5cdb357c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c846c656-aff4-4a6a-9c32-6954ec69d2f3",
        "cursor": {
          "ref": "b4b0f47a-2748-4c47-822c-c65d8a6fe394",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "93f75967-8d89-4161-be67-e77484dd7eeb"
        },
        "item": {
          "id": "c846c656-aff4-4a6a-9c32-6954ec69d2f3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "974f6d45-d1fc-4bdc-9cb3-884fb2ed1336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b059f68-6f3b-4596-9f2b-f5c14566d6cc",
        "cursor": {
          "ref": "be37183d-696f-4f47-90ee-20d248608aa6",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "518a5e4a-7ae7-45fe-90b4-3135e003c897"
        },
        "item": {
          "id": "1b059f68-6f3b-4596-9f2b-f5c14566d6cc",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2a9e6f96-8c14-4d6d-9672-7092227e819a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672cdb0a-162e-453f-a019-185d1aa7f788",
        "cursor": {
          "ref": "e6c9a983-ad13-4062-84fc-e760d3aa3270",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7ad11470-462e-4e86-ac0f-795ed93a48e6"
        },
        "item": {
          "id": "672cdb0a-162e-453f-a019-185d1aa7f788",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8d67c864-4fe2-480c-b6cb-22d7cdccfb48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01d1946-fe4b-4113-ac2b-3e93a72d8f33",
        "cursor": {
          "ref": "9f1467dd-aefd-464c-817a-d2365a0deb9d",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "29a2c949-162e-48b5-bc6e-850755c314ed"
        },
        "item": {
          "id": "a01d1946-fe4b-4113-ac2b-3e93a72d8f33",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0aa4e9c9-4486-4383-af4c-a02645941dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc59ef3-4f70-4c3f-9dfd-aa3f43a3119c",
        "cursor": {
          "ref": "0a146751-97a6-49ef-a6cf-b04b5094bce7",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "43859061-d751-4879-b40d-8d05fda9543d"
        },
        "item": {
          "id": "4bc59ef3-4f70-4c3f-9dfd-aa3f43a3119c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "792846ae-8526-478d-9fa7-14ed62498d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c55ac2-59dd-4877-be45-9a2817e198ee",
        "cursor": {
          "ref": "cf6d4107-2027-4bff-b796-f8a5f707b903",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1e43c76f-a9f4-4254-bf6e-932186c4ecd4"
        },
        "item": {
          "id": "24c55ac2-59dd-4877-be45-9a2817e198ee",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9ad898b6-946c-443d-bfe2-16129540a8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c3e41f-e6ce-465f-98fc-002f27bf0c86",
        "cursor": {
          "ref": "71524ddd-525b-4547-b366-51066fc56fd5",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b968dfe0-edd8-4b0c-8ce5-b01e400639f4"
        },
        "item": {
          "id": "34c3e41f-e6ce-465f-98fc-002f27bf0c86",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "76e5808b-6056-49e8-8c15-cae62ee9e766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31dd0488-fd36-4d90-a00c-4ef319473aeb",
        "cursor": {
          "ref": "d9af9dc5-8d5a-49c2-8093-edd569dae944",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5d081e9d-45af-4a0f-8c00-33dc518d1d38"
        },
        "item": {
          "id": "31dd0488-fd36-4d90-a00c-4ef319473aeb",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "816fb5e6-6b47-4dec-bc6b-231ee75d7cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f432621f-7309-4cee-a548-01b5c4292cf3",
        "cursor": {
          "ref": "922e5d60-b179-48e4-a093-1b91f0f8bd3b",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2bfba3d8-5332-4839-b519-400bf45e3a5e"
        },
        "item": {
          "id": "f432621f-7309-4cee-a548-01b5c4292cf3",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "08507e0e-597c-4264-9ce3-2f1a247bac5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d82678-c3c8-4aba-bf27-266f741f63bb",
        "cursor": {
          "ref": "435a1537-4ded-43e2-be68-1fd9dfc005b9",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0e30465a-fcd6-467c-8bc8-37358833cca6"
        },
        "item": {
          "id": "78d82678-c3c8-4aba-bf27-266f741f63bb",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "beba493a-a2d1-4cb0-9d5a-880d17c6118f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55aa87d-e774-4757-ac80-f454ecaa1317",
        "cursor": {
          "ref": "7437862d-ae2d-42f1-849f-b55b44c9ee2c",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4a71c386-d1f5-42e9-9b9a-0270f7fe8229"
        },
        "item": {
          "id": "f55aa87d-e774-4757-ac80-f454ecaa1317",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c861de91-6c32-41a3-a489-49e8a3864e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d145e38-f472-4189-9935-88938316a89c",
        "cursor": {
          "ref": "93f40eee-63c0-4099-96e4-34ad33c83758",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6d3455aa-6885-4cbc-a05e-a130950332c3"
        },
        "item": {
          "id": "6d145e38-f472-4189-9935-88938316a89c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d0dc008d-4b1e-4388-b90e-4874b1ac7573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f4e356-5843-4765-8757-3e002fd6a3e0",
        "cursor": {
          "ref": "c664a522-e18e-4f59-a241-ae855be45d4e",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b6bd97ac-efb6-4357-bdc2-eb1db5fabf90"
        },
        "item": {
          "id": "68f4e356-5843-4765-8757-3e002fd6a3e0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f45031e6-6d06-4697-80ac-da1101b1cde5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eaa336d-53a7-40c2-a9e3-e60f0a32b47e",
        "cursor": {
          "ref": "b231b940-5d26-4248-bf75-3139930ab588",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "10a2eca6-f9b4-4fa5-bae4-8acb9424594d"
        },
        "item": {
          "id": "2eaa336d-53a7-40c2-a9e3-e60f0a32b47e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "aa88ffc8-8f84-46a7-9e0e-1a5aaea28d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d13b26-56a5-4a65-ae69-05eaf4b81e4d",
        "cursor": {
          "ref": "3a96272a-634e-4d95-9535-fd1daa9727d9",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9145badf-86b5-4c67-9db6-8d116f3c66e2"
        },
        "item": {
          "id": "50d13b26-56a5-4a65-ae69-05eaf4b81e4d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "cde558cc-d5c6-4813-922d-cc3ff42d8276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0de034-ae95-417f-a5fb-7306de99e757",
        "cursor": {
          "ref": "4413ea79-c84e-46bc-ad5b-34ee7cea143e",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "812862e0-6a6f-4a03-aff2-71412501eb86"
        },
        "item": {
          "id": "8c0de034-ae95-417f-a5fb-7306de99e757",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "bc39b397-2f80-46bc-a286-51102eeb634c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e394ea-5b9f-48b1-aa9b-6045890be20d",
        "cursor": {
          "ref": "b33543f2-7b68-44d4-a53d-4dbb9344c194",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "90543b21-63b9-440b-b6cf-a4158c292de6"
        },
        "item": {
          "id": "64e394ea-5b9f-48b1-aa9b-6045890be20d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "88cd46c5-cf1e-4331-89ce-9bb1eb37c842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58068b8c-6935-49dc-9068-93c0e86235f8",
        "cursor": {
          "ref": "c181652a-e2d1-4712-b15e-0fdc604ced53",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "13bb1f41-85e0-4ca5-98e6-8957124aebd6"
        },
        "item": {
          "id": "58068b8c-6935-49dc-9068-93c0e86235f8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f449d3d9-53d9-4448-a6f1-c142171e08c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c05c66-07f4-4b18-8b97-ab28cc425901",
        "cursor": {
          "ref": "ac41ae63-2178-4d70-8308-ddac2644d2c6",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9e6876f5-eeab-43a3-85f4-573d443a5a3b"
        },
        "item": {
          "id": "a1c05c66-07f4-4b18-8b97-ab28cc425901",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0359d130-06b0-4741-bd1c-ac78aa2f89a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3b2f5a-63c6-446e-ab9a-9f0c5e7f9c82",
        "cursor": {
          "ref": "157ec383-1dfe-42d0-a2f9-6b424ad1cada",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e05c01a3-50d8-4ea6-8f94-50739f504808"
        },
        "item": {
          "id": "0f3b2f5a-63c6-446e-ab9a-9f0c5e7f9c82",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "cf218c72-6670-4ffa-a523-4f5f8dab02ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc252830-f4aa-47de-877a-453d78490fa6",
        "cursor": {
          "ref": "1de45dda-e5c3-4e6b-9c03-95dada95582f",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a5f08481-f788-4aec-94fd-24fc7d121e0e"
        },
        "item": {
          "id": "cc252830-f4aa-47de-877a-453d78490fa6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c1ac7715-3d45-486d-afbb-7b22a700d462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02df4b8-13ec-4b81-91ec-e69830270d04",
        "cursor": {
          "ref": "e8522223-0072-4373-b2cb-6d59a157942e",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f8161d57-9db8-4fbd-bb86-b2834edf92c3"
        },
        "item": {
          "id": "f02df4b8-13ec-4b81-91ec-e69830270d04",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8fb1a9ac-bc20-4b40-9c67-acaf625e9a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f0494c-4b05-4703-9664-12c9d86bf177",
        "cursor": {
          "ref": "980745c2-8356-4073-95e4-ea54855cb063",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9399a30e-a1ad-41f2-a4b9-dd1715c9f529"
        },
        "item": {
          "id": "19f0494c-4b05-4703-9664-12c9d86bf177",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "65c5c5b6-f94f-4375-a1d1-302f74747b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea0822d-ac2b-42f5-9f84-47c5eb7ad631",
        "cursor": {
          "ref": "1a4de056-ddfb-47a0-8465-3247943d4e04",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "63c72acc-9f6e-4931-ac1f-2b3989b0b75e"
        },
        "item": {
          "id": "2ea0822d-ac2b-42f5-9f84-47c5eb7ad631",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f7bfbd41-ad73-43e1-be94-6956a833dc29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd28744-2e4b-4a9f-8b09-80d8348937b6",
        "cursor": {
          "ref": "b9e39611-b8ca-47d0-a4ee-0608902384e5",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "aa16bd7e-276f-472e-9482-58746d56b583"
        },
        "item": {
          "id": "cfd28744-2e4b-4a9f-8b09-80d8348937b6",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a27bb96b-163e-4ea1-90bd-3696ed791b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6309f9c3-9c0b-4d04-bb4c-e76fd2de53c7",
        "cursor": {
          "ref": "fa338372-f8b6-40a5-93ed-43b32e1395ee",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "59542131-06f8-4356-951b-008995163a15"
        },
        "item": {
          "id": "6309f9c3-9c0b-4d04-bb4c-e76fd2de53c7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "01357493-8f0b-4d38-a743-415ff15c15a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108a36ad-bc9a-49bf-9acd-fb268051453b",
        "cursor": {
          "ref": "53442b9b-f5e7-455e-90ca-f6b3dec62058",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7db162c0-2e4f-4bfc-a1e7-cba2f5ce3279"
        },
        "item": {
          "id": "108a36ad-bc9a-49bf-9acd-fb268051453b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3d6d6e15-d488-4c74-bb28-95efc156dec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba8b654-fa7f-4a2f-9a38-05834f06319a",
        "cursor": {
          "ref": "0f9d9888-3d58-4020-85a1-0b16b3c5d09b",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7ba70bff-e25c-4611-913f-07076f760c24"
        },
        "item": {
          "id": "eba8b654-fa7f-4a2f-9a38-05834f06319a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "bc32378d-1f2c-4909-8d52-9dbd15b74a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6b4c43-004c-409f-bdf5-77e790ef1ca6",
        "cursor": {
          "ref": "0ae3d33b-64b0-4bf0-a589-fca4b4066caf",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "189586b3-3d5b-42ff-82eb-af0e3be2ab47"
        },
        "item": {
          "id": "ca6b4c43-004c-409f-bdf5-77e790ef1ca6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f04e4858-d4dc-4c5f-9062-030c3d629842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52b6452-8fc3-476a-9192-e7852b58ebac",
        "cursor": {
          "ref": "2d53904b-0169-4775-b66f-cd218e243b58",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "817fae11-7f6b-45bf-8f27-45c7276d350a"
        },
        "item": {
          "id": "c52b6452-8fc3-476a-9192-e7852b58ebac",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7ffa0af1-cde8-4216-9ba1-9e08e7825bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95bbe86-13a4-4f9a-bb6f-1a99ff560c5f",
        "cursor": {
          "ref": "436931a2-8b01-4027-a3c3-09fd5904575e",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "94600a8d-44ec-45db-bd04-3c22a1019abf"
        },
        "item": {
          "id": "f95bbe86-13a4-4f9a-bb6f-1a99ff560c5f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "948e9005-b139-42df-b1ab-e13fe69a3d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada36f58-0c00-4756-b1f8-127452dec49b",
        "cursor": {
          "ref": "918ab2cd-cf60-4a95-838f-b8ac3ecab04c",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2f38f2c5-23ae-421c-992e-5c2326fbb6a9"
        },
        "item": {
          "id": "ada36f58-0c00-4756-b1f8-127452dec49b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "59134271-3d93-4bc6-a854-ec9ad2e4fe70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c86772-13ed-40a5-9fde-a4762f5e6606",
        "cursor": {
          "ref": "d148dce7-7dc3-451f-9294-e85121222143",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "afa03caf-01a7-410d-8947-e30885ccb4a5"
        },
        "item": {
          "id": "06c86772-13ed-40a5-9fde-a4762f5e6606",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9dc23f3c-589c-4109-9e89-e356480e343a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c07708-b9e4-4832-98aa-f539d296c0ab",
        "cursor": {
          "ref": "d2ef9073-b4af-4dcc-8b59-b2edc4f43e53",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2369c948-7180-4154-ac9b-7215db0791a8"
        },
        "item": {
          "id": "12c07708-b9e4-4832-98aa-f539d296c0ab",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "06bc7c0e-426f-4b18-bc10-97b7e12a7b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c3dba2-3bc7-4d8c-8751-ef347efea762",
        "cursor": {
          "ref": "e737063a-7922-4b9a-ae67-1bdcd0f1db3d",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "db41779e-2f79-4ccc-99bf-666db2ac2ece"
        },
        "item": {
          "id": "a9c3dba2-3bc7-4d8c-8751-ef347efea762",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "72692bdf-afee-4e17-a3d6-2c7342388920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d7a06e-29f7-4e5d-8185-27e142df9de3",
        "cursor": {
          "ref": "c6d1049d-a81c-461e-8e73-a06bf605c971",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "183d5e67-a352-4d60-8f7d-e78c787f30e5"
        },
        "item": {
          "id": "91d7a06e-29f7-4e5d-8185-27e142df9de3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "51c3bfb8-4798-4280-9b3a-92fed437b0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3da6090-ca31-435a-8758-1d8e95792e9d",
        "cursor": {
          "ref": "59683d66-bf89-4620-aaf3-a7a1c9086918",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1474afb1-119b-46e2-82b0-6021f863503a"
        },
        "item": {
          "id": "f3da6090-ca31-435a-8758-1d8e95792e9d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "cce5c8c5-cf88-409b-a170-0e8f50dacf4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ee3a97-7834-43f2-b902-980d623f48be",
        "cursor": {
          "ref": "2cc2ec4f-a606-4687-9f5c-fc4cc469a44a",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a9a941ec-8db1-4106-aa20-b7311aa26dec"
        },
        "item": {
          "id": "90ee3a97-7834-43f2-b902-980d623f48be",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c6dee08f-7c75-47b1-b0af-56574ba237b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5131cb70-da36-429f-9f26-37b8ecf2041d",
        "cursor": {
          "ref": "21f6c5fd-2846-41f9-9a20-1481023d1e18",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c6c07b75-330f-46c6-8d65-2e6e642eb24c"
        },
        "item": {
          "id": "5131cb70-da36-429f-9f26-37b8ecf2041d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "21c49d91-60f1-46fa-810e-e03df842ecf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55417db-5675-4797-b227-fa8feb248868",
        "cursor": {
          "ref": "dbc4fa1a-fbed-4090-9cad-e9310e8303bc",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f1aee578-094f-4ca3-88f9-d130333a1bd2"
        },
        "item": {
          "id": "a55417db-5675-4797-b227-fa8feb248868",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "62e24d4f-20a7-4b2b-af49-a5a47360a399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f0ba5d-d8cc-4a0e-b088-fc82659a56c1",
        "cursor": {
          "ref": "ac5d3ec2-5d74-4d3b-85fa-a12d2b956ce4",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "dd3fb1e7-72aa-4c3e-87fb-97e5c6af2da9"
        },
        "item": {
          "id": "78f0ba5d-d8cc-4a0e-b088-fc82659a56c1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6e569ecc-5910-42aa-ab11-e24343b8947e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e165eac-bbaa-45e6-b85d-6a7cf01b80c2",
        "cursor": {
          "ref": "e9853b0e-1664-4696-9e06-36098bc84c0f",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ee8eb885-0459-44bf-b16d-eeadf6304108"
        },
        "item": {
          "id": "6e165eac-bbaa-45e6-b85d-6a7cf01b80c2",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a05e00c9-d5d7-4ef0-96b9-382c0313dc4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a65dbd9-3c90-408f-a5bc-b309a1af2ae6",
        "cursor": {
          "ref": "59069bf3-f020-436f-b538-e6035eb1a576",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "dd306241-269f-4eb1-9c4f-cd70a659d105"
        },
        "item": {
          "id": "7a65dbd9-3c90-408f-a5bc-b309a1af2ae6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9a0c5adb-6229-4805-9df0-ba0777e0ae85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12bf241-3487-4ece-9c89-22682dd4c5d9",
        "cursor": {
          "ref": "4d36c7e9-0f45-4f0e-b4e2-9f48c17bd039",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e8db97a3-f76a-436f-ad6c-f747fdb9b5f1"
        },
        "item": {
          "id": "e12bf241-3487-4ece-9c89-22682dd4c5d9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9f76b90b-8abb-4a0e-a8cf-9bbda2c2cf00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a02e1b4-a859-4402-be5e-28ac9b123ccf",
        "cursor": {
          "ref": "4c879d85-c7ea-4061-96c9-c7b423da479e",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b9537634-e8f9-41b8-acff-15b9c2f20e81"
        },
        "item": {
          "id": "5a02e1b4-a859-4402-be5e-28ac9b123ccf",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7700bfa5-72de-405b-8a11-e81a1f58d4d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96612a3a-3293-4a99-a4cc-0245cac0a03a",
        "cursor": {
          "ref": "418e67d7-813f-410e-8903-39146167d59c",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6c3c0d6f-cbc1-482d-a97c-b7f611458fb2"
        },
        "item": {
          "id": "96612a3a-3293-4a99-a4cc-0245cac0a03a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "db5e31e3-0666-4502-91be-987d6bee9eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913716c5-8003-442d-a1e6-94c1abfb5ba8",
        "cursor": {
          "ref": "4b95e0b0-2577-4684-8b6b-2325a2df3f45",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3763afae-8332-4a65-baac-34de46f1e859"
        },
        "item": {
          "id": "913716c5-8003-442d-a1e6-94c1abfb5ba8",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "96242c0d-70d2-453d-9c22-f2977958f442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2cd120-c407-48b1-a768-0da6bf397104",
        "cursor": {
          "ref": "e39161c4-8422-483f-ad6c-d75fc02bcec6",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "660eedc3-9bcf-4f42-b74c-0ad9a2147f30"
        },
        "item": {
          "id": "7c2cd120-c407-48b1-a768-0da6bf397104",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "fee4df4f-6801-4fef-be38-c1edfeb1319b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5fd0d3-feba-492b-b2c4-71e07fdedeac",
        "cursor": {
          "ref": "aa74aaec-201e-48ca-b8cc-b94a452627df",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "afa7c6ef-254a-4958-9cf1-f0be3eb1df6a"
        },
        "item": {
          "id": "7f5fd0d3-feba-492b-b2c4-71e07fdedeac",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f1dd4285-da85-4df2-afa4-df3640cd51d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0b96e1-c22b-4211-953a-b05be20e2108",
        "cursor": {
          "ref": "8334aae4-35ea-41e0-a383-9e8cb5198187",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0ecd6614-db51-45ef-a88b-1c6c90c73b9f"
        },
        "item": {
          "id": "cc0b96e1-c22b-4211-953a-b05be20e2108",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9425015d-db74-4bc2-87b0-bd329a8840ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acb1603-bd7a-4865-8b74-1b25c2d3ebba",
        "cursor": {
          "ref": "4a1eff97-df34-4c78-8a7b-3ba91bcda0ca",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8ddc44df-fdbf-4454-b5b3-64a71fbc8680"
        },
        "item": {
          "id": "7acb1603-bd7a-4865-8b74-1b25c2d3ebba",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "dc1dc943-6477-442b-a719-03f47503613e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1ecf0d-aeb8-4dd2-90e4-78f50883abf7",
        "cursor": {
          "ref": "e3abb780-ce15-427c-950b-b40f5a1c15e0",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "361dcf34-cd5f-4f6e-af5e-59471fffac9b"
        },
        "item": {
          "id": "5c1ecf0d-aeb8-4dd2-90e4-78f50883abf7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "62cd2fc7-ea74-482f-bcd7-bf77badd4610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb03f74c-b271-48a2-8ca3-af2710bd2a92",
        "cursor": {
          "ref": "1b9f8255-12e4-40fb-a1d7-52734c3113b8",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a6bc7018-2637-46e7-bd1d-07ad342816b8"
        },
        "item": {
          "id": "fb03f74c-b271-48a2-8ca3-af2710bd2a92",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5345232c-8684-445c-9a78-939b5179dcd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e186d3bb-2bae-4b27-be3c-5f56b0649a00",
        "cursor": {
          "ref": "ebef7b03-80fe-4649-ad26-755f8c18c57a",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3b14631e-a911-42b3-82df-77ec95f5411b"
        },
        "item": {
          "id": "e186d3bb-2bae-4b27-be3c-5f56b0649a00",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "231b844d-70ab-4431-a90b-c34ab7772a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5824521-93e0-4a02-9e19-a544b63c5b61",
        "cursor": {
          "ref": "dc7999cd-5aac-4c90-82e8-27ccb1c1457b",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "583caf6a-c66e-457e-8977-c23d6e5117c9"
        },
        "item": {
          "id": "d5824521-93e0-4a02-9e19-a544b63c5b61",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e7fb194e-614d-4093-85da-a1e7a795a42e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1629ef-1abf-4a7e-945b-61011f4cd345",
        "cursor": {
          "ref": "d49e51df-f91d-424d-a1e7-1f4bc15cfcdd",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "bc3d5f52-1ec5-4a1d-b82c-1007ee1957f9"
        },
        "item": {
          "id": "9c1629ef-1abf-4a7e-945b-61011f4cd345",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "fbbd6c70-6aa4-467b-86b9-9344c3471572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d9b94f-9316-4116-aba1-6e9dbe37acca",
        "cursor": {
          "ref": "3793b0d9-e4db-40f8-ad7d-a69742f6298d",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2ae600a7-886c-476c-856c-4fd3c20d81e3"
        },
        "item": {
          "id": "22d9b94f-9316-4116-aba1-6e9dbe37acca",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "abd8fa0b-9970-4519-9db5-6056d1a44a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ea2bc4-e83f-4785-9c1e-0e16c2e3c461",
        "cursor": {
          "ref": "af153b15-6f16-4086-aa34-f38aaac054ce",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d8919595-5885-4442-b4e0-2183b1109ac0"
        },
        "item": {
          "id": "c2ea2bc4-e83f-4785-9c1e-0e16c2e3c461",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "abfcb976-8f9c-42aa-a6b6-4de5a8800d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b12852-ebe7-498a-9c35-960d163e8687",
        "cursor": {
          "ref": "5a7be982-4f81-43b5-b8c9-f926067ee9ca",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "bda34bec-47dd-4e4f-84a7-9e389ca29c68"
        },
        "item": {
          "id": "16b12852-ebe7-498a-9c35-960d163e8687",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "99b55e0f-fcbd-4b03-befd-286315b2b94e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4edaacb-f60d-4d67-9914-d7b7b82b551d",
        "cursor": {
          "ref": "437ed75c-cf70-418e-a8e9-520aa4eb3548",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c918302a-2c49-4fc3-a56c-3771d8af1ef1"
        },
        "item": {
          "id": "e4edaacb-f60d-4d67-9914-d7b7b82b551d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "18afa989-aa07-4ef8-9710-ddfcebc6a9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0526542f-164f-421d-8b5d-80466da5a0ae",
        "cursor": {
          "ref": "a864f45b-b438-44d6-9f2c-1118b99c5738",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "40c36874-3a12-44d3-abcb-3fc38bccb1d8"
        },
        "item": {
          "id": "0526542f-164f-421d-8b5d-80466da5a0ae",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "64130e25-03af-4c1a-b647-5769d30dee60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf83be0f-2bd6-480b-90cc-2a2676605be8",
        "cursor": {
          "ref": "f3fcfdbb-f5dc-4c5c-bbba-c5f03c67352c",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f63213d5-36cb-45a4-a867-4bfd41a70f04"
        },
        "item": {
          "id": "cf83be0f-2bd6-480b-90cc-2a2676605be8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "74119f1f-4643-4857-b7c9-365c15aae19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb5690f-c2c0-411b-956a-32da2526cce1",
        "cursor": {
          "ref": "ff25dd0b-9df5-4688-bfb7-a1d659aba9b6",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "bd0ac8ba-083e-4495-a2aa-e3e62007c95e"
        },
        "item": {
          "id": "6bb5690f-c2c0-411b-956a-32da2526cce1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b68fc58d-e42d-4908-9c99-47edda888633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a5647d-b03f-4344-b97d-7989c6ff9fc9",
        "cursor": {
          "ref": "b3ee8529-6cda-440a-bf34-fc02ff994706",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d9b2f89a-07c3-4b56-bf77-d40a1b5f2b7f"
        },
        "item": {
          "id": "e3a5647d-b03f-4344-b97d-7989c6ff9fc9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "cf765049-4443-45ea-b8d3-d35879cbd019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47f907f-7f2b-4ca4-993b-b602d517aff7",
        "cursor": {
          "ref": "a9e96b48-6076-440e-ab6d-1666e2a95dc9",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2b3101dc-5d84-4373-abcb-9e7d98ae282e"
        },
        "item": {
          "id": "d47f907f-7f2b-4ca4-993b-b602d517aff7",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "193464e5-b539-4a2c-89bb-7630d1b0a009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d104470-c56a-480d-ae27-d16cc1083ebd",
        "cursor": {
          "ref": "cd3e294c-3810-4860-aa99-74f636f32c4a",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d35b0f27-a4ee-4f8d-9d05-68fda6a460ec"
        },
        "item": {
          "id": "2d104470-c56a-480d-ae27-d16cc1083ebd",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9ae1ae8c-660e-4442-a2fd-ce703d1446d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca4ef07-1bdb-4039-9d9b-cb318a450efe",
        "cursor": {
          "ref": "76e9ec3b-cf97-4bca-8c42-001a50f1ec8c",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7604d02b-17c8-4d0e-afa1-3467ba93ca10"
        },
        "item": {
          "id": "0ca4ef07-1bdb-4039-9d9b-cb318a450efe",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "abb86640-0c0a-4f27-931d-366e3392000c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1606e27b-b40d-4021-9e1b-a80f2ba89490",
        "cursor": {
          "ref": "ad9a78e8-fe63-499e-a052-d0d443dff1d1",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "fe282e84-d1d0-4ad1-b089-be674cf721b5"
        },
        "item": {
          "id": "1606e27b-b40d-4021-9e1b-a80f2ba89490",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2b5d7881-fa6d-43f1-85d2-cf97047a1010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5a35e1-33e1-4f90-9b31-c78e83211d63",
        "cursor": {
          "ref": "7e5b145b-8498-4ccb-903f-65b54b8df614",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4111161a-8f95-4535-8dd0-95bd863da42d"
        },
        "item": {
          "id": "fb5a35e1-33e1-4f90-9b31-c78e83211d63",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7bb4d984-2bc9-4d78-a412-44a6824efea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d7fedc-02c0-43ac-b346-ba0875884fa8",
        "cursor": {
          "ref": "4c126b82-190d-45ff-9995-c3b2e6e5f4db",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "04c00e36-d81b-4099-8ae7-f882342e9d68"
        },
        "item": {
          "id": "f5d7fedc-02c0-43ac-b346-ba0875884fa8",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8dea4f2a-3cdc-4457-92fa-b42088e6675f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60becac1-54ea-48a5-8c3a-01a3b1906ef4",
        "cursor": {
          "ref": "9bd0b040-f921-4c73-b679-7818a92ef02a",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "40a852d3-5cb4-4f03-8bb4-69ed8cf0760b"
        },
        "item": {
          "id": "60becac1-54ea-48a5-8c3a-01a3b1906ef4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d8e681d1-1854-41e6-86b8-b9deb47f006b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7220bc74-56c7-4c1d-9d31-229892d33c05",
        "cursor": {
          "ref": "b8e6a67e-a425-4ce7-b718-84664e6c4abd",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a644f03a-6c80-43b4-9f6e-156b242ee13e"
        },
        "item": {
          "id": "7220bc74-56c7-4c1d-9d31-229892d33c05",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d5bfafac-4d8b-4f7b-990b-289005b1f675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44bbdabc-3a7d-4d62-bb72-d8e9e8d162f3",
        "cursor": {
          "ref": "0c4a88f3-0b0c-4b43-bafb-4d2b69b8ac41",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3a664f7b-04fd-44de-bb34-6b968b112bfb"
        },
        "item": {
          "id": "44bbdabc-3a7d-4d62-bb72-d8e9e8d162f3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "415e5f92-c40a-41a5-ab9a-413397f234a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6950aa7a-e7ae-4896-973e-6b6769eec9c9",
        "cursor": {
          "ref": "6f7d0a64-ae20-429b-a80a-f7e6cbd7a586",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "64fe2b4a-5ef8-4746-82f4-daf4fc1afe58"
        },
        "item": {
          "id": "6950aa7a-e7ae-4896-973e-6b6769eec9c9",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "10218ef2-92e4-4478-93c6-1ee7f8b08f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63079e9d-fc90-4159-93d0-dfcd37f6012f",
        "cursor": {
          "ref": "a56b66c5-63fd-43ff-8682-a3c9a7bc1697",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "866935c9-67ea-4147-9b01-49d44c88e089"
        },
        "item": {
          "id": "63079e9d-fc90-4159-93d0-dfcd37f6012f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "52c5eb2f-d181-44c4-a36a-b6a12fb8343b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d2096e-2cc3-433b-81cd-0ee641cc28c9",
        "cursor": {
          "ref": "c346d512-bba7-4c2d-83b3-944663a612d3",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ec706b3a-5caa-46c4-8c87-134240f1bf36"
        },
        "item": {
          "id": "e7d2096e-2cc3-433b-81cd-0ee641cc28c9",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "149fbb20-6064-4111-bf09-3bc68d01f590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daefd58e-c86b-4c77-aa87-741506808082",
        "cursor": {
          "ref": "8cb02012-5f17-46b8-9773-c4526fe0fe49",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c3de61c2-55c1-495b-8ccc-e7346cef2fe5"
        },
        "item": {
          "id": "daefd58e-c86b-4c77-aa87-741506808082",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "364a3e48-8c5e-4829-8a2b-352c0f6809c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f1bf81-8960-4b86-a131-516841b185a2",
        "cursor": {
          "ref": "b49c38b7-a2ee-481a-a3d9-8296428c8f02",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e09dd3a1-4860-463d-99a0-7222fa329b50"
        },
        "item": {
          "id": "b8f1bf81-8960-4b86-a131-516841b185a2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1b7bb82b-12c0-47d9-8fa2-09ce4644f186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86cf276d-e55a-4e0d-a0de-c88b4b22712c",
        "cursor": {
          "ref": "21e098f7-591d-480e-91b4-39c510853d6a",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "782e9be9-5859-4b33-adf9-ecce8a77b93a"
        },
        "item": {
          "id": "86cf276d-e55a-4e0d-a0de-c88b4b22712c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b2ce1c0f-e440-48e5-9bff-583c5e849bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d225638f-9860-482e-af6f-ded163771984",
        "cursor": {
          "ref": "6a6c3453-10e3-4598-851a-ed7acffaee87",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "799c50d9-50e2-4f08-9b02-d5708ca6fa58"
        },
        "item": {
          "id": "d225638f-9860-482e-af6f-ded163771984",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ce8696f7-e139-4958-a8ed-28dfcc40699e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465eb413-8070-4ea1-9d31-7f21ed393496",
        "cursor": {
          "ref": "35e56be1-2e3e-4c7b-bafe-b3f4babd4856",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ead41e10-fa63-4118-8b83-3cd1c4e8616b"
        },
        "item": {
          "id": "465eb413-8070-4ea1-9d31-7f21ed393496",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "99f2fe77-8e32-43f4-b398-74dcfdac0daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a39d078-b293-425c-b9f5-b3c93b8d45aa",
        "cursor": {
          "ref": "eb309688-9478-4dab-b086-bcaf7ba9542e",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "17502a3b-9ed6-4ee3-8150-6b43337329f4"
        },
        "item": {
          "id": "7a39d078-b293-425c-b9f5-b3c93b8d45aa",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "aca9f2e3-16d1-48e3-bb69-b6b66012df33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d909a50d-6417-4ef8-94e9-e71e9f80e7b9",
        "cursor": {
          "ref": "5c8fc5a9-a990-4cf5-8bc5-f1866df7d26e",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9fff4227-b3cf-40d8-b47c-5a44c4c52315"
        },
        "item": {
          "id": "d909a50d-6417-4ef8-94e9-e71e9f80e7b9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "58fdf3c4-07d5-4df4-ac49-f0775019588b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be1f683-fa26-4350-b86c-7452f6b1a121",
        "cursor": {
          "ref": "e062e947-0330-4d5d-b479-02927569a3ed",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "42b8fb27-9578-4813-ab82-2b8d58d55aba"
        },
        "item": {
          "id": "9be1f683-fa26-4350-b86c-7452f6b1a121",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f2158322-5666-4b63-9f30-2efd188dd335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c1921d-ae26-446f-9312-5b80eae83660",
        "cursor": {
          "ref": "d7e4308b-fa43-4abd-86df-15e538449dd0",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "617276e0-df99-47b3-b876-2a127a0e69cf"
        },
        "item": {
          "id": "78c1921d-ae26-446f-9312-5b80eae83660",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "30c1066b-8740-4989-ada8-1b2e97aa02bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a280c290-3f94-48b1-8173-ca640947cb06",
        "cursor": {
          "ref": "782a8e2d-66de-4445-aaf3-4fa2c6129166",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "603da5c7-6075-4338-b5fe-aabf72f81b76"
        },
        "item": {
          "id": "a280c290-3f94-48b1-8173-ca640947cb06",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "853045db-7c01-47f7-a0b8-199a35b0a931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb4377d-07b2-49e2-ba83-3ce3eb60cedd",
        "cursor": {
          "ref": "9ccbcde7-3407-424f-b2b5-01ff06b5c2fe",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ef803b9f-3661-4ab0-a6de-da3f1cb3c5b3"
        },
        "item": {
          "id": "fcb4377d-07b2-49e2-ba83-3ce3eb60cedd",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f548c37c-c626-479f-ab45-3bc47841e48a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff61f6e-344c-44cd-a335-9910390a8fc4",
        "cursor": {
          "ref": "d1456424-9e0a-4a6a-9b42-54de07ed5e59",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8863f7ef-ecd4-4020-8e57-4e99833daec1"
        },
        "item": {
          "id": "2ff61f6e-344c-44cd-a335-9910390a8fc4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2d31b2c0-b5fb-4fec-b306-fd63d0418301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37fc6ffa-c5d4-4fe9-8e91-8aa9d3cde97c",
        "cursor": {
          "ref": "c4d3ee24-20c9-4084-b4da-117ba4f7e50e",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "155e5188-1116-486f-a594-2e7f782434fd"
        },
        "item": {
          "id": "37fc6ffa-c5d4-4fe9-8e91-8aa9d3cde97c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2883dcb3-fce9-43bd-aa67-ee5cf36cbd17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7d153d-990e-4a67-9824-ec217f2d630c",
        "cursor": {
          "ref": "7b866899-41c7-4800-99b9-3d18b15a6b89",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0dbadacb-7c6d-4d81-a59a-fa88a1ed5966"
        },
        "item": {
          "id": "8c7d153d-990e-4a67-9824-ec217f2d630c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b99ba8d9-e338-4d5a-98c6-7aa3b7c819fc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76582854-0347-493f-90e4-d2d46b74ead6",
        "cursor": {
          "ref": "ad407b43-cbcc-4e0c-86d4-b023258c3c84",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9fdf276d-9eba-44e6-85bb-f9b19dd3986e"
        },
        "item": {
          "id": "76582854-0347-493f-90e4-d2d46b74ead6",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "5c0ff376-8d33-45b8-9a51-ed762babbfd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "2560e967-c111-44a6-aa83-714fa2cdd424",
        "cursor": {
          "ref": "b924d2e2-0e49-4268-8ad9-89040a90b726",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "dfb4d56b-7e62-4fe0-9d8b-c772f5f32ee0"
        },
        "item": {
          "id": "2560e967-c111-44a6-aa83-714fa2cdd424",
          "name": "credentials_issue"
        },
        "response": {
          "id": "38133b6f-fd5f-4bb5-a3ca-5af76974d531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "4950cb67-8d10-4427-ae74-1dd4ef56d36a",
        "cursor": {
          "ref": "09c46cd6-ebcd-471f-9c57-e107aefb9961",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0f43b16a-145a-4e6a-9d99-fc5f27aa37b3"
        },
        "item": {
          "id": "4950cb67-8d10-4427-ae74-1dd4ef56d36a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "64455ea4-8ca2-402f-997a-9cff7bb534e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "e2462ff3-aa99-4608-9d0e-81531cc0b7e9",
        "cursor": {
          "ref": "aa13d64d-3beb-4b67-bae7-498b5a8f7845",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "53759140-8c8f-43af-be5d-ba6b03bdaf33"
        },
        "item": {
          "id": "e2462ff3-aa99-4608-9d0e-81531cc0b7e9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9d677b3e-e2d7-40c8-9bdb-109157bcff05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "49c74c48-cc7b-4047-b50e-544f4099b8c9",
        "cursor": {
          "ref": "0ff99c4f-adba-4d52-9b70-d1215caee708",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "41d6517a-0e5a-488b-b7d2-23b0204ab484"
        },
        "item": {
          "id": "49c74c48-cc7b-4047-b50e-544f4099b8c9",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "614b72b8-6f58-4926-bff3-9bffe31be8f9",
          "status": "Created",
          "code": 201,
          "responseTime": 6787,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "628d0d55-fae1-4380-ab4d-6ce476b5db92",
        "cursor": {
          "ref": "39eddf92-1458-4bf3-9649-4980c18b3cf9",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ee2e9955-e0bc-4d39-9752-9e884c82b06d"
        },
        "item": {
          "id": "628d0d55-fae1-4380-ab4d-6ce476b5db92",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "720a2fa0-7b8f-4a30-afa4-d91f40b6629b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "a57c739b-fe7f-4cc8-8750-e84de0afc778",
        "cursor": {
          "ref": "5a82b5bd-066f-47f0-83d8-7a3d482e6acb",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "dabb6d81-36ba-4de0-adc8-ac1fe5ef1af2"
        },
        "item": {
          "id": "a57c739b-fe7f-4cc8-8750-e84de0afc778",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "001afae5-d8f7-4dab-ba06-dbf683c6b945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "0ed9fc11-bb23-418f-a0bc-bdcd7ae8bbed",
        "cursor": {
          "ref": "a5872dbd-0f5b-46ec-b1b3-a7f96deb8615",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7cc41bba-f2aa-4ab3-9f51-8feddea02d94"
        },
        "item": {
          "id": "0ed9fc11-bb23-418f-a0bc-bdcd7ae8bbed",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cc92e336-1f0a-4c56-9761-c40a1567930b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a315806-cb99-4e0d-9666-890e71cbf638",
        "cursor": {
          "ref": "ae868ec6-e03e-4958-98d7-5b234795c2a0",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "73676618-0c2c-4b93-8cd4-afb42c02607c"
        },
        "item": {
          "id": "3a315806-cb99-4e0d-9666-890e71cbf638",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2d0f2535-9fd5-44c0-8931-fd99a4fe2065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7471860c-35f0-4d7e-8130-48e56828d14c",
        "cursor": {
          "ref": "ce8338e2-ab97-44cf-8b18-2c761d14d96e",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6fb01ec7-d742-463d-b3b0-91ea23c6a697"
        },
        "item": {
          "id": "7471860c-35f0-4d7e-8130-48e56828d14c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c0a3247e-d5cc-43d0-86be-44c5967c5cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac53ba18-c812-4b73-9bb6-845e35b09cd5",
        "cursor": {
          "ref": "47ed4440-5f05-4d6f-912d-e6c0086c6771",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "16d4621a-252e-4513-837e-6aa288bae8bc"
        },
        "item": {
          "id": "ac53ba18-c812-4b73-9bb6-845e35b09cd5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "659178f1-e46f-4851-b3d3-c9e9f2ac77b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd5baf9-f36d-443f-aa80-f51f261887f1",
        "cursor": {
          "ref": "5ff65907-7b56-438c-a1cb-3515245191aa",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b3beff9a-34b5-4d29-b7fb-ba159ad4d545"
        },
        "item": {
          "id": "5bd5baf9-f36d-443f-aa80-f51f261887f1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8b102997-e0b7-4859-88e3-3d248d00bc15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f332a0-152d-4e58-8c43-c705d31d5f38",
        "cursor": {
          "ref": "e3fd8792-5065-43d9-8fc1-9187c4e7c671",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "fe595ab2-2b9b-4d76-898a-5311c2879abb"
        },
        "item": {
          "id": "45f332a0-152d-4e58-8c43-c705d31d5f38",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "77150e6b-9aa3-4b36-aebb-83233c1ab8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7269731e-26dc-49bb-a328-65da2b6ae256",
        "cursor": {
          "ref": "5a629289-f7d0-4f5d-aa9f-83d718ee4085",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "81c4349a-5f3a-46e2-b730-21dff34cecf3"
        },
        "item": {
          "id": "7269731e-26dc-49bb-a328-65da2b6ae256",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "563ea41b-0ad7-4885-b291-664e7fcf3279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9015f446-8f62-4c98-a0cf-1fe948da9890",
        "cursor": {
          "ref": "1fefce79-73c1-422c-90e2-aae0fafd1e2d",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0d613b8a-5e5b-4234-80c6-a82a4fcf8b4a"
        },
        "item": {
          "id": "9015f446-8f62-4c98-a0cf-1fe948da9890",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8b63a9fb-232d-44d3-996a-1a21d9876844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79962ef2-d88f-473c-9987-276e81a2d164",
        "cursor": {
          "ref": "fc5b5847-9f92-471c-9cdd-7c14724c3648",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b4cb3f5a-200d-4190-9b59-12d1ca8d64ce"
        },
        "item": {
          "id": "79962ef2-d88f-473c-9987-276e81a2d164",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bf3d7126-e1f2-46d0-8adc-98e943150b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6efe0c-fb28-4066-af36-6db3c42c1a5a",
        "cursor": {
          "ref": "886c2be2-4004-4e4c-b484-71c100a9d32e",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ff729e72-c8c9-4f1f-8907-e108986da4d1"
        },
        "item": {
          "id": "4c6efe0c-fb28-4066-af36-6db3c42c1a5a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ff8f7b31-d121-42b9-a563-12f6440f7abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c477628d-4265-4881-b085-bdff90d76c8e",
        "cursor": {
          "ref": "376ef014-b06b-4d42-b290-222e8ac4bd8d",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "cb953ec7-7dbb-4b05-a498-aa5e280e7514"
        },
        "item": {
          "id": "c477628d-4265-4881-b085-bdff90d76c8e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5c79f633-ca75-4062-915a-2b5ebd67b988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b37188-05f5-437b-8e13-7eedc2762582",
        "cursor": {
          "ref": "ba9f878f-3eaf-445a-b863-0fe8b5a9dc1a",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "bf991112-4fff-4bfe-b755-bb4bd5cb6731"
        },
        "item": {
          "id": "22b37188-05f5-437b-8e13-7eedc2762582",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f37b98dd-5432-4e73-98b4-faaa08668201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7dbbef3-0895-4de7-860a-922f02d7cc32",
        "cursor": {
          "ref": "4048850f-d54b-4aba-941a-4e16d8eb9aab",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e97beab6-211f-4f05-b890-583ce842be0d"
        },
        "item": {
          "id": "f7dbbef3-0895-4de7-860a-922f02d7cc32",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7d5ddc74-cc17-486b-924e-96b60e279d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0326ced-88c3-4532-b329-e9c87b96d23f",
        "cursor": {
          "ref": "cf8f08d7-128f-4696-96a0-d2ef5eb3bb3d",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b21b1f86-f10a-48f0-91d2-2520622a30a4"
        },
        "item": {
          "id": "f0326ced-88c3-4532-b329-e9c87b96d23f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "67a2ecef-26d7-498b-b18a-64d28f1f717c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be84349-9bae-472f-b909-b8159c301ffb",
        "cursor": {
          "ref": "f4a08077-c9b1-48a8-aef8-a10ad31bec66",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d8ef2734-204d-4315-bc99-43a0e11646d7"
        },
        "item": {
          "id": "3be84349-9bae-472f-b909-b8159c301ffb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6fcbf705-7e93-4207-9451-9837aaeaffa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6488cd24-b464-49a1-b45a-41c3fe5e39da",
        "cursor": {
          "ref": "5a0d0c6d-0eb0-4fdf-bf05-eb25b0ee95ce",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "42b8857a-d639-458f-93cb-ac8601a97d26"
        },
        "item": {
          "id": "6488cd24-b464-49a1-b45a-41c3fe5e39da",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e94eeee5-b372-4a46-91eb-2d5a8a78b58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c0acae-b802-44ef-ab2c-76b401078d91",
        "cursor": {
          "ref": "319f7ff6-858f-4b48-b834-5ab0b95a15ab",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d7aa23d0-59f7-4915-8b47-9ddebdb30fc2"
        },
        "item": {
          "id": "36c0acae-b802-44ef-ab2c-76b401078d91",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cac59d43-cc48-4713-a0a9-2b518bddba63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6d213e-3d2e-41a2-86b3-6c2e377d322d",
        "cursor": {
          "ref": "be01f0e3-8ba2-45b6-864e-f7a8027a6b36",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9a23a3e7-7f74-4a4e-ac25-2375193cdbdb"
        },
        "item": {
          "id": "5d6d213e-3d2e-41a2-86b3-6c2e377d322d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "83b7c802-54ea-4bf6-9387-c831f884d109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d35aba7-ad4e-4280-ad57-e3f05425649a",
        "cursor": {
          "ref": "b5ae2645-b771-4a9a-af12-bf6164210221",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "20deed2f-ca5c-4fb1-a255-c55b27927a1c"
        },
        "item": {
          "id": "8d35aba7-ad4e-4280-ad57-e3f05425649a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a725c33b-4468-473b-befc-dd60067de283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c52063-7b47-4c29-adff-e32aa0a78579",
        "cursor": {
          "ref": "5d0a547f-614e-4fc4-b70b-7409857433e6",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6fea08e3-e21e-4508-8911-3e4b822498aa"
        },
        "item": {
          "id": "24c52063-7b47-4c29-adff-e32aa0a78579",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e7b12d57-4648-452b-bfda-974c24488b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c58fc1-75e1-448e-ab2c-c5c708a9057a",
        "cursor": {
          "ref": "b9309829-b4fd-4302-9eff-1779e01783e7",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "fb47f7c3-a6f4-461f-b82b-ec1df3e957c3"
        },
        "item": {
          "id": "d3c58fc1-75e1-448e-ab2c-c5c708a9057a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b1136ffc-89d1-4a57-bd57-16cbd877c032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd3b306-854f-452a-87d2-8aa9a8556330",
        "cursor": {
          "ref": "a9dc914d-fb33-416b-ade2-3f86b4ad33b8",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "eddc4b96-504a-4404-a666-855a82345b7a"
        },
        "item": {
          "id": "4fd3b306-854f-452a-87d2-8aa9a8556330",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "52df410b-c6c8-48fd-9479-e51a76f41a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c900946f-9a57-44a1-be64-d4c80a1aa7a3",
        "cursor": {
          "ref": "d2d57e71-c4b0-4244-95b9-cbb209da968c",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "fe3ce849-baa9-4e4c-9161-b33d0097ec2c"
        },
        "item": {
          "id": "c900946f-9a57-44a1-be64-d4c80a1aa7a3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b413a78e-d303-41bb-b5be-6fac3fb46d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd65839-4dd0-42d6-ba45-a6d2c3c81467",
        "cursor": {
          "ref": "5530ba01-bdf7-4c78-bdea-10171e4ae5b1",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "82adc447-8233-471d-ba64-07c26f7ee1ab"
        },
        "item": {
          "id": "6bd65839-4dd0-42d6-ba45-a6d2c3c81467",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "265184c8-3e7f-42fa-9b53-e20031f689f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c72c843-6c85-48b9-aa5f-8946abf7dc39",
        "cursor": {
          "ref": "0cbad477-c6f3-4bd1-a33b-7c5a3c0ab07b",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "15c55101-dd58-47c5-98fc-6a41eec1bd6e"
        },
        "item": {
          "id": "7c72c843-6c85-48b9-aa5f-8946abf7dc39",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8634d171-4e0f-43b6-b3cc-76bdbb8baa1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae33512-2e67-4a88-901d-5098a1a62c91",
        "cursor": {
          "ref": "4d748cd0-87e7-45e1-8321-23d8eb189a9e",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b6647308-113d-4848-b9b5-096b0599fc69"
        },
        "item": {
          "id": "dae33512-2e67-4a88-901d-5098a1a62c91",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "88e78a40-c3aa-4bfe-ad2f-eb2d7bd7fbfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efeefca5-74cd-42a9-a084-bbf5a233bcdf",
        "cursor": {
          "ref": "581bdc10-85a9-4234-a01d-0d44f6031894",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "03b6ee50-3399-4df0-9a0b-545c4d3ad617"
        },
        "item": {
          "id": "efeefca5-74cd-42a9-a084-bbf5a233bcdf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fa4a3663-5d22-42fe-8502-705bf4f09d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af1515e-78d6-4ae1-824d-277c74dbb9c4",
        "cursor": {
          "ref": "0f1acbc0-f71e-4136-862f-c118ac175941",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "031779a2-4a77-41ca-8ad1-14dc5ecea6c8"
        },
        "item": {
          "id": "5af1515e-78d6-4ae1-824d-277c74dbb9c4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1a8219d5-d3b6-4cf4-819a-e0f1a9864d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5c15e3-c094-4bfa-862f-28ca51ffd2fa",
        "cursor": {
          "ref": "b0737db4-89af-49db-830d-b0e0d3c43845",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6221521b-2e32-40a8-a40e-9fb24001242f"
        },
        "item": {
          "id": "3d5c15e3-c094-4bfa-862f-28ca51ffd2fa",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e1cbce4f-ac54-4640-9181-f1756c022363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f033bdbd-e11b-4fca-ab1b-2fef92a3d536",
        "cursor": {
          "ref": "38257dc9-bf57-4622-bc46-aa8dba96f7e9",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e1421644-9317-4304-8eae-831ac051cbbb"
        },
        "item": {
          "id": "f033bdbd-e11b-4fca-ab1b-2fef92a3d536",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c687f3b7-d96c-41b0-9611-55e6ff0e278c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358ae56e-be48-4442-b1e8-006ecd3694f3",
        "cursor": {
          "ref": "e670fcef-fa45-4235-80c4-04a329effd5b",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "002e5704-dabb-4d69-8504-aa684d92f209"
        },
        "item": {
          "id": "358ae56e-be48-4442-b1e8-006ecd3694f3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "903b81b8-ce6d-4788-992e-90e3e7b5cb10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dacbe899-e4cd-4769-8bac-a37bfef9591f",
        "cursor": {
          "ref": "b16a5704-79ed-4888-908c-5dc0c0e3daeb",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8a0da53d-d70d-48c9-8748-0bce036367c2"
        },
        "item": {
          "id": "dacbe899-e4cd-4769-8bac-a37bfef9591f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5cd38977-f370-4e75-ba6c-1c102995779f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36786dee-41d6-469e-81a5-e9227c02104e",
        "cursor": {
          "ref": "c0b04280-b405-4950-8a8a-9abbd22e3e4e",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3e90e55d-6153-4d78-9aaa-290e010badee"
        },
        "item": {
          "id": "36786dee-41d6-469e-81a5-e9227c02104e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "99fb95d2-053d-4a71-adf4-ee2acf88bdd4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749569e0-707f-4c1d-8911-90ae20bc3ed5",
        "cursor": {
          "ref": "0af9bc7d-4425-4a16-9ba2-2fbdf002a97f",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "572a1221-17f0-41a8-933d-c153a42c4bfb"
        },
        "item": {
          "id": "749569e0-707f-4c1d-8911-90ae20bc3ed5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c1ddb81f-6a49-4029-8cfa-255bcacec4f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d01248-d11c-4922-86c3-bec4f6131ace",
        "cursor": {
          "ref": "f8907238-c8df-4872-a7e1-4733b4580b3f",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "16d948c5-81be-49ff-b556-fc85040957f5"
        },
        "item": {
          "id": "45d01248-d11c-4922-86c3-bec4f6131ace",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b5cdb9f2-556e-4d5f-b5eb-0a8656276cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43b9138-49b5-47d4-8c28-4010463af991",
        "cursor": {
          "ref": "973b0b3f-56a0-4ca8-ba7d-a4e75a133a0b",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "da6e7ad0-9691-4570-9dda-5a915f39ed7a"
        },
        "item": {
          "id": "b43b9138-49b5-47d4-8c28-4010463af991",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "be9311ef-d340-41a3-8dbf-db42c92f3bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295d5e78-6704-4553-9034-6245039a07ea",
        "cursor": {
          "ref": "8976452e-8464-42f3-b8a6-27277dd2d903",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "87facb53-8037-417c-ab7f-e0a75522f43d"
        },
        "item": {
          "id": "295d5e78-6704-4553-9034-6245039a07ea",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d96876ff-4746-465b-8d28-0110db85546b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75027de1-13aa-48ad-9709-9e8e0e698159",
        "cursor": {
          "ref": "5082d371-c70b-4cd6-8a8d-2aff259ebcc8",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "adfb3366-7590-4f3a-a5cc-6fa8b2c64a86"
        },
        "item": {
          "id": "75027de1-13aa-48ad-9709-9e8e0e698159",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "760174bb-a3d9-499f-979a-49dfdb4da78c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec7fb8a-6850-4b4f-a6be-a05b0f088c6b",
        "cursor": {
          "ref": "584f72ad-b66e-465e-8081-d1c4efd9bb3d",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a2d49a31-8f6c-4a99-8cae-12aed9a76c71"
        },
        "item": {
          "id": "aec7fb8a-6850-4b4f-a6be-a05b0f088c6b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "149c1028-dc39-4048-990a-689c53f82fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caee5054-7945-423a-b5d1-d00b3b24a2f5",
        "cursor": {
          "ref": "3d835937-6ec2-4315-9d4e-2da85abdb3f1",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b4aa4af0-221c-46d6-9e01-cb63f717983f"
        },
        "item": {
          "id": "caee5054-7945-423a-b5d1-d00b3b24a2f5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f0fca236-7e7e-4857-88ef-3d4707ed4471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b58b578-dd2f-4c9e-8a75-70d43aca6f04",
        "cursor": {
          "ref": "22166a3b-ba60-48da-b81e-2b5856ae8383",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "70e88b0b-11bf-4457-bf56-64d06dbc5638"
        },
        "item": {
          "id": "3b58b578-dd2f-4c9e-8a75-70d43aca6f04",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1fe5830e-b0e5-4e92-b3cf-a8ab2997ce4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4a9c34-9257-462d-a93b-95854da1e059",
        "cursor": {
          "ref": "368e1e55-2faa-4874-857e-bc86e4642779",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "550f15e2-d7bb-42d7-b1bc-f3e005745e09"
        },
        "item": {
          "id": "1c4a9c34-9257-462d-a93b-95854da1e059",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "73f81a37-9b4a-4fbb-98d4-3ba44fa05d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de98bb8-27d5-40e6-960b-571c04deb05e",
        "cursor": {
          "ref": "1cd82822-53de-497c-bfd2-75a91b159d6f",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "441096c7-9bdf-4bcc-ac31-446f0960824e"
        },
        "item": {
          "id": "0de98bb8-27d5-40e6-960b-571c04deb05e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "29bd0092-4194-4386-a921-6886bf7f2d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9f8731-da52-40e7-a261-f7502e65d949",
        "cursor": {
          "ref": "e15c6f5f-91a0-4815-aa7f-aa41a9c25e69",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a4941aaf-b03f-4a68-93b2-eca8cf1395fb"
        },
        "item": {
          "id": "da9f8731-da52-40e7-a261-f7502e65d949",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "69fd5731-e421-4b74-bad0-0f1b1b810128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752d072b-f3f0-47e3-aa6c-cc1fd07ec328",
        "cursor": {
          "ref": "983f7599-0500-4662-aa9f-00e1376e80d6",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0720d289-0065-429c-adb1-5b745078b5cb"
        },
        "item": {
          "id": "752d072b-f3f0-47e3-aa6c-cc1fd07ec328",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "008d62cd-2a6a-4311-b3ed-ff81a4f648d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1e7375-a254-47aa-85aa-2d2c1246c8d4",
        "cursor": {
          "ref": "647ee963-bf32-4e30-a51f-da651f04bece",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d13f8074-0eda-4fe0-a68d-7c79cda095cd"
        },
        "item": {
          "id": "8a1e7375-a254-47aa-85aa-2d2c1246c8d4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "292410ea-f2ef-4f05-85a4-f11dc377689b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6683c554-c3e7-44c7-ad89-7b27c3a0ca7e",
        "cursor": {
          "ref": "b9e12ce9-9425-4131-99f1-f9262bd3d85b",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "11e327ce-878f-4c53-9a0a-f1af5d6c38d4"
        },
        "item": {
          "id": "6683c554-c3e7-44c7-ad89-7b27c3a0ca7e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e0e17b7f-a562-475c-b74a-fef842cb1225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54eee816-5ef1-45f5-9358-d30ae695436b",
        "cursor": {
          "ref": "185bd984-d031-4137-8018-d710fbf06a32",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "93edb00c-ff50-470e-a56c-a426a204a8ba"
        },
        "item": {
          "id": "54eee816-5ef1-45f5-9358-d30ae695436b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "07076868-85fb-435f-8765-9d9a14dd8590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2342f0-2482-4b7e-aa81-3682dea75f27",
        "cursor": {
          "ref": "05737dea-2769-41f7-b531-84f5956349ab",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a0b503c0-ad15-4def-b5d5-76b0e69f857e"
        },
        "item": {
          "id": "9e2342f0-2482-4b7e-aa81-3682dea75f27",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9ec1f290-f38e-4e59-803d-e52bc05b26af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb83489-eca2-4bab-beb8-f4ef3ed8c14c",
        "cursor": {
          "ref": "0bbc827e-0165-44cf-8856-6c8061389531",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "aded9c3a-5254-4b9b-9f56-2b2bf9c1d369"
        },
        "item": {
          "id": "6eb83489-eca2-4bab-beb8-f4ef3ed8c14c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "99f9fdfd-7ffd-4e06-8b74-0a2852a2cdae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434b7bfe-9b45-41a9-ab5a-b63ea329b419",
        "cursor": {
          "ref": "908949d9-efa2-442e-ba84-c26e9155b721",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "cb425bdb-ae7f-4fdb-8534-a490ae64f56a"
        },
        "item": {
          "id": "434b7bfe-9b45-41a9-ab5a-b63ea329b419",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2ce461ff-239a-4842-9ac8-03f62b8cb127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e8926e-c64f-44e9-a6ae-41c4a3604e0a",
        "cursor": {
          "ref": "8d8c5662-907d-4df3-b41a-3c507cc2a6be",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a4f7974b-8cca-4aaf-8ffc-a8dbc2b0eeb5"
        },
        "item": {
          "id": "e5e8926e-c64f-44e9-a6ae-41c4a3604e0a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1adc1bc0-3583-4f41-bccb-fb87ad7fa5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ef4738-f30e-4a22-b6ba-8ae8689dc50b",
        "cursor": {
          "ref": "988737b7-e764-46c2-aec5-8dec35c19af8",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6011f88c-51c4-42f5-ba02-370b73db6282"
        },
        "item": {
          "id": "99ef4738-f30e-4a22-b6ba-8ae8689dc50b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6b9bf5a2-fc06-4136-b863-71396c977b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d9925f-c2c0-40cf-a9b8-4768b04ee1b0",
        "cursor": {
          "ref": "81a165a4-99ad-4a74-96fc-faaad55a0b5e",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f2bd0053-6e8d-4eb9-86c1-be3cf72af972"
        },
        "item": {
          "id": "c4d9925f-c2c0-40cf-a9b8-4768b04ee1b0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "22eb02ce-16a1-4f22-9f1a-7cbc95f1a7b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e839dff-9f9a-4383-90f6-4595e10d6da1",
        "cursor": {
          "ref": "1087cfed-9ac6-40f1-9f23-8deb2d37f6e5",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e2f87e04-2c84-4362-ad65-580731bda0d5"
        },
        "item": {
          "id": "1e839dff-9f9a-4383-90f6-4595e10d6da1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f4ee6e9d-4345-4029-ad9a-70f360a578da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91da8a76-e967-428b-a65a-a71ae8393551",
        "cursor": {
          "ref": "d425d2ed-3c5c-4ce8-a2d4-153d468a6bf1",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "87ffab00-da84-4531-a490-f7b311ff8885"
        },
        "item": {
          "id": "91da8a76-e967-428b-a65a-a71ae8393551",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "29d423f3-4863-4fe1-9f29-dea02b4a330a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a798d367-5e4d-4e4e-b251-5a19dfacad2d",
        "cursor": {
          "ref": "a2ddb18d-3658-43eb-9247-4dc721d98b7c",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "18737f27-94c7-4519-b238-32130457de62"
        },
        "item": {
          "id": "a798d367-5e4d-4e4e-b251-5a19dfacad2d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1630f4c7-19b3-4af9-86a2-e306605ecf75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac7f111-794b-4555-9ce4-827db333af98",
        "cursor": {
          "ref": "601de68c-c766-401e-8204-a9f2ba60bc37",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "de71507c-9f88-48da-8820-fa803e04c8a8"
        },
        "item": {
          "id": "bac7f111-794b-4555-9ce4-827db333af98",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7cc4d143-1fd5-4fd0-988d-3e0a98611140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e241aa0-ee2b-4f64-8128-fef40c8821d7",
        "cursor": {
          "ref": "cd677ef1-e36d-4507-8ad8-af270f8b9cba",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "368c1d66-4066-4ca1-9984-7a0eb9accdc1"
        },
        "item": {
          "id": "3e241aa0-ee2b-4f64-8128-fef40c8821d7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "67060004-1b2f-498c-971b-92d1e2328720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b2d7c2-ac1e-4e9b-aa76-16c31781cd8a",
        "cursor": {
          "ref": "92dfe2f3-6175-48b7-acfc-f3cb511f9e05",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c445c2ea-bbca-4f88-8037-220f7d706351"
        },
        "item": {
          "id": "47b2d7c2-ac1e-4e9b-aa76-16c31781cd8a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bd23eb40-be99-4b9d-a501-dcddd69ef95a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb570b0-0679-4b4f-a5ea-fc2055b31d70",
        "cursor": {
          "ref": "69202ae4-31f7-430b-bb89-dc49239327b3",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ab7472e4-81b3-4469-bdf8-8362078e284b"
        },
        "item": {
          "id": "7eb570b0-0679-4b4f-a5ea-fc2055b31d70",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "24b2892c-2b74-47c2-9546-5c9004e193bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac43ff1-4b4e-467b-a42c-8e3547eb611a",
        "cursor": {
          "ref": "951a7555-6990-4996-b598-77403741c555",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "38dbe027-1f11-4a78-b0cf-d5ae8b3989df"
        },
        "item": {
          "id": "3ac43ff1-4b4e-467b-a42c-8e3547eb611a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2741b3ff-05ea-4e69-9c16-4f819c8bbdd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414450df-bd1d-4b13-ad66-7983f4b9b936",
        "cursor": {
          "ref": "35d28c25-1458-49f4-b58a-9f9072e45612",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3b46e37f-7606-415d-a80a-1a387640c346"
        },
        "item": {
          "id": "414450df-bd1d-4b13-ad66-7983f4b9b936",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "abf87e1c-30ba-46a2-bc9e-5bf303c5eafb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ffd374-5b2d-4071-be1d-f433caf651ce",
        "cursor": {
          "ref": "779abec1-4021-450d-bb43-7a4863e7cb3d",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "28a596ee-c786-41f9-b7dc-56ac353d222c"
        },
        "item": {
          "id": "75ffd374-5b2d-4071-be1d-f433caf651ce",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "af366faf-bb5f-40f1-97f9-65d25c26f15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa90eddf-db78-439c-a43d-6b2561990f43",
        "cursor": {
          "ref": "005912f2-69be-4a39-8c57-311d1699cb14",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "74b9cf6a-525a-4478-aeb4-7201361abbaa"
        },
        "item": {
          "id": "aa90eddf-db78-439c-a43d-6b2561990f43",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "a11b17b2-a31c-42f5-a291-2b065c762a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99cceaba-ad0c-4e90-879d-808d2105695f",
        "cursor": {
          "ref": "7f488cb4-5e9f-4cbc-98be-fcf1a317c4fb",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9580097e-2f11-4530-96ad-4b057afad745"
        },
        "item": {
          "id": "99cceaba-ad0c-4e90-879d-808d2105695f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8c3680e1-0ead-4d52-bf92-4a15394a8ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0947047a-6227-48cb-be5e-465160851f39",
        "cursor": {
          "ref": "4a729e07-3e2e-4580-95b4-81279331ee23",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6d3193f4-4204-42bb-9e3f-74218cb3caa5"
        },
        "item": {
          "id": "0947047a-6227-48cb-be5e-465160851f39",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d5e14d99-0444-4257-8039-fed6b20985c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb32972-8cd7-43c7-b5b4-d9a1159132ec",
        "cursor": {
          "ref": "a2910e7a-0e1f-4b00-9098-d58d5d582467",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "907fd0a3-84c9-479f-a1df-7056a5a13cc7"
        },
        "item": {
          "id": "abb32972-8cd7-43c7-b5b4-d9a1159132ec",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "97770202-9bb2-4d92-a91f-226946e8d558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f6ae2a-49e6-4229-bb7f-a644c8a1ccc8",
        "cursor": {
          "ref": "1fbe8f7d-8ae0-4421-b74f-f1868a6c1134",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e9e1b5fd-ea1f-404a-a1df-539ad50ab334"
        },
        "item": {
          "id": "28f6ae2a-49e6-4229-bb7f-a644c8a1ccc8",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7a15e358-9c63-4519-a005-60adc3bc9cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f20bad-6e6f-4c8c-b451-8a8387fb054a",
        "cursor": {
          "ref": "a399a588-4397-4906-b233-1693a7efaaa7",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a1316718-e98d-4ce1-814c-2c83e1c6b85d"
        },
        "item": {
          "id": "34f20bad-6e6f-4c8c-b451-8a8387fb054a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "bce5419f-08ba-407a-9a37-383767a80290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "804ce87a-edcf-461e-8f01-b3607cf0101d",
        "cursor": {
          "ref": "6bce85af-0479-44bb-9228-6891b68bc4ac",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9d23274c-30c4-4daf-80f6-c87ad9ee6b9a"
        },
        "item": {
          "id": "804ce87a-edcf-461e-8f01-b3607cf0101d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "832d8ba4-8af3-467f-9164-6ca2f6b2efe0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da0bd3f-4344-4ee8-ac62-4c86de4e25ef",
        "cursor": {
          "ref": "dba97db3-9cc4-4489-ac92-320cf0e1cca9",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5de8bedc-e064-4db1-8874-dc31c1e3ead6"
        },
        "item": {
          "id": "8da0bd3f-4344-4ee8-ac62-4c86de4e25ef",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c45c28e2-5e64-442e-9109-8a95a60bc2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 160,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f021e85f-24f7-4b1f-8e00-0a903463b8d4",
        "cursor": {
          "ref": "e1f06322-033e-47a0-bb6b-7689b94b33a0",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6010aeef-53f6-4b21-94eb-b12a0267599b"
        },
        "item": {
          "id": "f021e85f-24f7-4b1f-8e00-0a903463b8d4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0b627bd1-d1b4-4bcb-897b-22c71b3cb388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18affc31-fef6-4f86-bbe4-2c22bb9e81de",
        "cursor": {
          "ref": "19ef676a-1ede-4639-b80b-d6ec31ba2d7a",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9d063f2a-321c-44be-9603-8bcc59599909"
        },
        "item": {
          "id": "18affc31-fef6-4f86-bbe4-2c22bb9e81de",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ee77b4c9-516e-43e6-a282-1b419907194d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de85b9cb-be0e-45d7-8a36-8ed12016ae7b",
        "cursor": {
          "ref": "57c2c073-fe77-4e28-84e4-84321d606fc9",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "70035783-c816-447c-817f-ef5a94222466"
        },
        "item": {
          "id": "de85b9cb-be0e-45d7-8a36-8ed12016ae7b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a5fe9d9e-02a7-44aa-a9dc-358433d073fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068e457e-64a9-4528-9434-8e5bff89088d",
        "cursor": {
          "ref": "ad0904eb-55b3-4279-afb5-cd4a9d741e8d",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "604ff4b3-01f0-4ce7-b305-55b9192b6520"
        },
        "item": {
          "id": "068e457e-64a9-4528-9434-8e5bff89088d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "549b1e54-ba67-4ccd-ad9c-208dedec372a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a529809-bb14-4406-8e6e-de423816c2d5",
        "cursor": {
          "ref": "4faf6410-e344-4486-9fa3-4aade356f78e",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c2ed07bb-6d4b-4412-8102-2744c8bf76fc"
        },
        "item": {
          "id": "5a529809-bb14-4406-8e6e-de423816c2d5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e1730064-27f5-44d2-adb9-1cf2b213d000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c451a7f7-7eed-4e71-96b2-d03ff50acbd3",
        "cursor": {
          "ref": "bd276004-b331-4391-a764-51ce0f7e88dd",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "dbdbcd0d-03c0-4766-b8c0-c049b6f20b3e"
        },
        "item": {
          "id": "c451a7f7-7eed-4e71-96b2-d03ff50acbd3",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "26528315-443f-4ce0-ad71-284151584fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b6aa66-198c-4cad-af4b-13f48f6cff6a",
        "cursor": {
          "ref": "c1338c79-896e-43bd-b5ed-e4e1c80cd067",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8e288166-a59f-45cd-8112-1f0ff70c499e"
        },
        "item": {
          "id": "60b6aa66-198c-4cad-af4b-13f48f6cff6a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "32f66d94-1964-456c-9014-e7c11699b739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cabf36d4-4e0f-42a2-8293-fc209c587925",
        "cursor": {
          "ref": "f8ead2bb-e3a1-41c1-9912-227689c0f2c4",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7702f3f6-93b7-47e7-b825-1b91684da0b3"
        },
        "item": {
          "id": "cabf36d4-4e0f-42a2-8293-fc209c587925",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "77e57b0a-15da-42ef-b8a9-f73ec0b14773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b89c0a0-4999-43e7-ab38-a8cf20806623",
        "cursor": {
          "ref": "5792440f-a46c-4dcd-b7ef-50cf4cb60346",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "97049d35-1157-41e3-8cac-c778c267986f"
        },
        "item": {
          "id": "2b89c0a0-4999-43e7-ab38-a8cf20806623",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c6e6d21b-a7a1-4d33-a7f6-bdcd4c7608ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451ac22f-ece5-49ac-a5e7-8ba23a47081e",
        "cursor": {
          "ref": "1018175e-4f0d-4aa9-ba3b-3c9f9d0a932d",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c03af199-4097-4740-af20-026eb5a8f1c1"
        },
        "item": {
          "id": "451ac22f-ece5-49ac-a5e7-8ba23a47081e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "29ab5fb8-70c4-4b44-a898-06ebd1e53d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6420ad12-88a2-4b27-ac80-ffe9c4537135",
        "cursor": {
          "ref": "484a0b01-8772-4c4a-8e2f-315eca6b0717",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ca088e54-645d-4778-b27b-e440b8fb36f1"
        },
        "item": {
          "id": "6420ad12-88a2-4b27-ac80-ffe9c4537135",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9d34ec33-133e-488b-a687-21263ae58fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225f4148-f0cc-42b9-8c50-043f82b1ee11",
        "cursor": {
          "ref": "0f51790e-7c98-435e-9351-2daf84b2d7c0",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d1da9aa7-32a8-429c-a39d-98d737eb149c"
        },
        "item": {
          "id": "225f4148-f0cc-42b9-8c50-043f82b1ee11",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "71b4fc58-52a5-4a1b-b3e3-d839e5d8171c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f1eeb3-26c5-4c76-b171-41534bbc5401",
        "cursor": {
          "ref": "29eaa997-b855-43d1-af04-77b675d1b809",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "fd35f462-8974-42d6-98c3-68c89623828a"
        },
        "item": {
          "id": "c4f1eeb3-26c5-4c76-b171-41534bbc5401",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "fc6d624e-ff1b-429d-b3cf-3d689ecf5f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d7800a-19c8-4afb-8291-bce59f3c32ab",
        "cursor": {
          "ref": "862bb1c1-9132-4635-9ec1-10891f2109ff",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6dfae0a9-4048-422b-8e15-9064ecb69243"
        },
        "item": {
          "id": "08d7800a-19c8-4afb-8291-bce59f3c32ab",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7807a498-8bec-4729-99c8-3acffacd5fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708ba21a-29fc-4340-baca-bbe083baad93",
        "cursor": {
          "ref": "c73368e1-23f9-4f94-814e-9574e2003f13",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2de48d2e-37aa-4010-a327-f77a64cf637c"
        },
        "item": {
          "id": "708ba21a-29fc-4340-baca-bbe083baad93",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "01e51df9-09f4-4cec-98fe-b4e8ac2afb78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec27fe8-64d8-4842-8b55-f024c6a7b523",
        "cursor": {
          "ref": "c2ab3b65-70b8-4555-84d1-56029db92e16",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "622a9c03-8968-4394-acd9-2b7c0254cdbd"
        },
        "item": {
          "id": "cec27fe8-64d8-4842-8b55-f024c6a7b523",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3dd85f9b-19e8-4b76-9b91-1d8ed09350dd",
          "status": "OK",
          "code": 200,
          "responseTime": 176,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "e8634fc9-274f-4ff2-8428-6f40df416a56",
        "cursor": {
          "ref": "8058c676-c1fb-4a72-a51e-9cffee286ab8",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "dca3ed8a-c65d-46ab-8066-7a46d1d42d16"
        },
        "item": {
          "id": "e8634fc9-274f-4ff2-8428-6f40df416a56",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f5e26f6d-cbfa-4a92-b263-036909f87d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4330672b-fe5b-4788-9986-488383e4d1b4",
        "cursor": {
          "ref": "a330448f-90de-4da7-8b34-82299a12fec2",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "fb6f52a6-6f04-4ca8-8d09-555b3840244e"
        },
        "item": {
          "id": "4330672b-fe5b-4788-9986-488383e4d1b4",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "868fd900-c2a3-4fa4-a13e-6698e31bd032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718f2d13-cccd-4c99-9146-f32aaf948696",
        "cursor": {
          "ref": "0054e368-ea99-41c7-9511-3c60f9bf06e4",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "69b28eb6-ef55-43fa-bd07-7a88f31ca599"
        },
        "item": {
          "id": "718f2d13-cccd-4c99-9146-f32aaf948696",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6e7872e7-8574-420b-8ed0-0d816fa2d5b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2238614f-3a8f-4a6c-8a55-fb755886b799",
        "cursor": {
          "ref": "a4309464-2219-4c7e-ba52-a62ffc76c71b",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2e97ee70-b241-4f59-bba6-ea4496a14d4e"
        },
        "item": {
          "id": "2238614f-3a8f-4a6c-8a55-fb755886b799",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "7fd61ed8-48fe-48dc-8d2b-f4cb96be74e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2a0315-d594-416d-858b-9631f8be7190",
        "cursor": {
          "ref": "86971219-f583-499d-aef6-7c1ced9ffa96",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "53c8b3a8-a958-44f0-b3d3-32ce31834ddc"
        },
        "item": {
          "id": "2b2a0315-d594-416d-858b-9631f8be7190",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "31693074-43c9-4c36-86ad-6cca3e110544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26090c70-2853-477c-97e0-14784b665592",
        "cursor": {
          "ref": "316f0b3f-6698-4ebf-9eac-e51387e0e0d2",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1d74b13b-3601-4520-b18d-64cb1e1196ca"
        },
        "item": {
          "id": "26090c70-2853-477c-97e0-14784b665592",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9fa2cbe0-4ca4-42d4-8fe4-0b8d42b0549c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5c668e-f833-4950-808d-477316c7ef66",
        "cursor": {
          "ref": "05f7d418-3b38-45d7-800d-7365f67e0a97",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "948075f4-1265-4847-a487-af4ea939dc3c"
        },
        "item": {
          "id": "3d5c668e-f833-4950-808d-477316c7ef66",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e863a114-cc50-4795-8f01-b5f6047fc074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "180c491e-9c21-4da9-a0ff-f3d2384105bb",
        "cursor": {
          "ref": "aeedcbbc-49cd-46e2-b76f-fb7b80fbc3e4",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a44d48e7-70e9-4be8-9a5d-92701273ab92"
        },
        "item": {
          "id": "180c491e-9c21-4da9-a0ff-f3d2384105bb",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d9cb37ce-3d74-4e33-89d9-0970e7876654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781c9e46-0272-4d61-82cd-7c69977a675a",
        "cursor": {
          "ref": "ce06ba96-9111-4d8d-8a13-a7b023847061",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "16f65290-c300-481a-8ba8-8ff3443b2afb"
        },
        "item": {
          "id": "781c9e46-0272-4d61-82cd-7c69977a675a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "eba930b3-937c-44b4-95a3-9908ae63246a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b78fd9e-6d4f-4e8e-ba03-0dc493e7a114",
        "cursor": {
          "ref": "a4213b9e-6aea-493e-976b-528b8f4dbf87",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "906ad61a-cec9-43f9-9247-f33a35dd8079"
        },
        "item": {
          "id": "8b78fd9e-6d4f-4e8e-ba03-0dc493e7a114",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "de4200bc-d191-4eb2-b787-2a3f684dd707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39aa2d67-c111-4882-9d05-7a7d04dd8f3e",
        "cursor": {
          "ref": "52408434-346a-4200-846b-f7c976648f3f",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3cbd1518-33e1-44a8-b0a6-df2b5f291663"
        },
        "item": {
          "id": "39aa2d67-c111-4882-9d05-7a7d04dd8f3e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "76524065-649d-4d14-81de-e1db2e54ce00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3b6abb-b207-421f-96bc-4f89cebd33a9",
        "cursor": {
          "ref": "6157b01b-611b-487d-bc9c-40c757c25136",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1796d26f-4057-475d-a54a-bb5badb4e68c"
        },
        "item": {
          "id": "ad3b6abb-b207-421f-96bc-4f89cebd33a9",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ef5da07e-407a-4598-a292-edc014293376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c520f99f-1da0-4715-8e96-e425ba37accb",
        "cursor": {
          "ref": "299ba897-3dee-432c-8d1b-2e01f70936b2",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "72c67e5f-2d64-4234-93e5-65ef95e1efa7"
        },
        "item": {
          "id": "c520f99f-1da0-4715-8e96-e425ba37accb",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "64de25f8-e308-4ef2-b1f4-d3243bba0e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c829dd-aa70-415b-a12b-645325c8221e",
        "cursor": {
          "ref": "99cadf64-683e-4536-aba5-1233657438df",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3d26bbe1-6c13-4bd4-8e9a-4ae9a9b25716"
        },
        "item": {
          "id": "e8c829dd-aa70-415b-a12b-645325c8221e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e7a208ba-57a0-4356-9ecd-095baa2e7c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ec4335-0e6e-43ab-96a5-7c388c86ba4f",
        "cursor": {
          "ref": "b0a9e9fe-23fe-4e99-8c27-384a3205ecb4",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "16238fec-1e8f-45c5-b765-693ccd7457d4"
        },
        "item": {
          "id": "c5ec4335-0e6e-43ab-96a5-7c388c86ba4f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "13d10970-76d9-4a0b-bd43-234b1144f18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ab9f55-3274-40d2-b78e-a8ae4663b85d",
        "cursor": {
          "ref": "e0d3de04-92eb-4d8f-be95-a273479af495",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ddf5be73-dd09-470d-89f4-6b418d69bc1e"
        },
        "item": {
          "id": "61ab9f55-3274-40d2-b78e-a8ae4663b85d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c3f851e2-f412-4375-84c7-997a0e86e909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29968765-afb1-43b4-9483-520f84e8c22e",
        "cursor": {
          "ref": "b4b158a3-2e9d-43c3-a529-16871044e2d1",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9ebf46fa-1474-4fe5-a8b3-784aa794210c"
        },
        "item": {
          "id": "29968765-afb1-43b4-9483-520f84e8c22e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5f1425be-2b72-491d-9707-608e754da4a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5082e90-79f2-4811-9546-c041ed627ae7",
        "cursor": {
          "ref": "bf133f24-aefb-4338-886c-95ce532260fc",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "905dec8f-2fef-4791-b1eb-071cb47b452d"
        },
        "item": {
          "id": "b5082e90-79f2-4811-9546-c041ed627ae7",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d3334a45-92c9-4030-8683-3657c6e85ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ec5994-1618-4dc5-b796-33c5b3653fd8",
        "cursor": {
          "ref": "73a77109-c9c0-4355-9cd4-3318d298f871",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e06c2cd5-462d-4a3c-890a-c0f70f413c15"
        },
        "item": {
          "id": "65ec5994-1618-4dc5-b796-33c5b3653fd8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2fbdd59f-3801-453f-9506-e2b7e3aab453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd44aa3-4275-47cc-9b01-afa1669b5d61",
        "cursor": {
          "ref": "f5ef5129-bba8-41f7-921e-a5c0071a49ab",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d48112ca-a3d9-4d2c-b24d-0ef88907348a"
        },
        "item": {
          "id": "8bd44aa3-4275-47cc-9b01-afa1669b5d61",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "71d9e7ff-2a4f-4096-92df-aa3754d4cf78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08bb294-df84-4eaa-a233-bbab75da7a06",
        "cursor": {
          "ref": "479e6c99-dd97-4eee-b3df-97454a8dd6ad",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ed84696c-5499-49bd-a9df-552ce376a2b9"
        },
        "item": {
          "id": "e08bb294-df84-4eaa-a233-bbab75da7a06",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "150e043c-c806-44cb-af4f-c89eab9a7e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b19a238-5125-48ae-8bf9-cdfe06ea7e39",
        "cursor": {
          "ref": "8cf7b214-7f03-4ebc-8ace-0b2304b00622",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d875624d-af7b-4966-9cdb-68f5b992b3cd"
        },
        "item": {
          "id": "7b19a238-5125-48ae-8bf9-cdfe06ea7e39",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8ad26e8c-10f7-4345-a9f6-dc0d665b0569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94368ea4-b3a1-4d9c-8699-1a263bd8c7e6",
        "cursor": {
          "ref": "dd9ec07c-568a-431c-8a79-53d81f3cacc6",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7d502aff-c1ac-4cbb-bcbf-f5c4990df77b"
        },
        "item": {
          "id": "94368ea4-b3a1-4d9c-8699-1a263bd8c7e6",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4d58652c-0657-44fb-8e1b-0140968d7bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791da4f0-ab9e-4456-bd9b-bad24d5a3510",
        "cursor": {
          "ref": "eff5c7ca-1752-4eec-97f8-9fbdd79b6809",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "92ffa62a-b351-4d79-951b-9ea2b3a20e0c"
        },
        "item": {
          "id": "791da4f0-ab9e-4456-bd9b-bad24d5a3510",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8e7c7d55-23ac-46a2-8528-b70b27ad1955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35dcb15-e609-4176-b780-50384ae2d599",
        "cursor": {
          "ref": "b3a8a232-91d4-4a79-b0c5-e9bb52292d2e",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "36bfc25a-3d3d-42c3-932c-a3603b38c4b1"
        },
        "item": {
          "id": "e35dcb15-e609-4176-b780-50384ae2d599",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1c2a682f-9399-4e56-a76e-ee345283a297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd81ea7f-fcc3-4a19-9a12-037583e19359",
        "cursor": {
          "ref": "59acb977-925a-401b-8907-3f1dcfac92fd",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e2207103-c5a8-4549-8b5c-2d5c219a790c"
        },
        "item": {
          "id": "fd81ea7f-fcc3-4a19-9a12-037583e19359",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "76617a03-83c1-4ac4-9624-f22b8fee7e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce68f173-5fef-48b1-be97-f815d9e66159",
        "cursor": {
          "ref": "19f122a5-2c63-43be-a233-c1cd5110bb57",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "696016e6-05db-42f4-8fe5-90f48202ddab"
        },
        "item": {
          "id": "ce68f173-5fef-48b1-be97-f815d9e66159",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6fd62b7f-7f2a-44d7-b0b9-b0e870e81410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af37b130-c4ad-45b6-99c1-1a65e5fa4990",
        "cursor": {
          "ref": "bb5dfd97-cca7-429f-b5d4-19bf8a84f302",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "96f51eed-6795-489e-be49-c6381226c2d4"
        },
        "item": {
          "id": "af37b130-c4ad-45b6-99c1-1a65e5fa4990",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "50e26a71-0e5f-40e8-bffe-4c48afdceb0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3826f0-5197-46ba-900f-97c7c52c81e9",
        "cursor": {
          "ref": "4ad7d61f-997e-4ec0-831f-3d3165d92bcb",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a83361c0-f7e6-46c3-894f-a2e285f9ba24"
        },
        "item": {
          "id": "cb3826f0-5197-46ba-900f-97c7c52c81e9",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "cc3d9b59-7d21-47d9-92c2-f453b3c6387d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41e7613-f9e0-40c9-9038-c632d894e81c",
        "cursor": {
          "ref": "c39418f4-a47c-4a0f-a0a1-1debcf17309e",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d96780ca-4ce3-4db3-9c53-84f3ef448aab"
        },
        "item": {
          "id": "d41e7613-f9e0-40c9-9038-c632d894e81c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6b2f4516-d86f-4424-ad05-4299fe3808d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b86eea-2927-4443-9359-957d52857350",
        "cursor": {
          "ref": "94c2152b-38ea-4217-b675-48680f4cae3a",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "86a5af09-3a01-4b03-a58f-02bec57f20bd"
        },
        "item": {
          "id": "e0b86eea-2927-4443-9359-957d52857350",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7758bcdd-cad2-466d-ba5e-ba55038c95df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebe20bf-8a93-4c23-9f7d-08068ce7ac3b",
        "cursor": {
          "ref": "e6f202d8-3e82-4b54-ba70-ad79132dc6e9",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ab5f7e71-0407-49fe-86d3-4e3007385c62"
        },
        "item": {
          "id": "2ebe20bf-8a93-4c23-9f7d-08068ce7ac3b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3a13b82f-b611-45b4-86e7-d0ef9d538d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68d88ac-82a6-4361-8005-a5d86e922463",
        "cursor": {
          "ref": "4c770acc-a4b5-4613-955b-a20e8db6a6b2",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "31dfd098-115a-4a68-8ca6-4398f85f45ca"
        },
        "item": {
          "id": "e68d88ac-82a6-4361-8005-a5d86e922463",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ff2c84f5-119f-4fe7-87cc-c016d18f6dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611c6c44-c4b8-4f8f-9489-62eb1cc938b3",
        "cursor": {
          "ref": "a7c8e0e3-8bc6-42b1-9741-ff1619d2e42f",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d5f2f110-8e25-4c28-b406-6eb7693e2c96"
        },
        "item": {
          "id": "611c6c44-c4b8-4f8f-9489-62eb1cc938b3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a752406c-015c-44d2-881d-89a217c596fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e1def7-0a68-4222-a795-385fc875f1b2",
        "cursor": {
          "ref": "13c0511d-9a48-49e4-bd77-fa951d1af3a8",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "738c854a-8535-4e7f-a445-4fa3f4370775"
        },
        "item": {
          "id": "53e1def7-0a68-4222-a795-385fc875f1b2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ecc98c83-64b2-4713-ba35-1267249344e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339aedbc-4f41-4bd6-bfe3-b67080b4f610",
        "cursor": {
          "ref": "b6bab565-08b1-4c1d-a562-ca59f27b555f",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "743baf87-e8ee-4c8b-aad2-eaf864312781"
        },
        "item": {
          "id": "339aedbc-4f41-4bd6-bfe3-b67080b4f610",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "fdcf30e3-dd5c-4efc-a3b5-2378ce7bacd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb13f0e1-1437-4ae0-a878-73ff625ff307",
        "cursor": {
          "ref": "f6f5f4ce-5575-48f0-847e-0c10638bd92a",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4f34b9f7-1f24-469f-8fc4-8e84db921d9c"
        },
        "item": {
          "id": "eb13f0e1-1437-4ae0-a878-73ff625ff307",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b53b64d0-01df-4783-a9b9-c135125c6d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ad24f3-1488-46d4-99df-646eb6f4762b",
        "cursor": {
          "ref": "2c8c0250-4289-4a23-8a7c-1a3c2862784d",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2946ae4f-5dfd-4a42-b06d-973113c3bdc5"
        },
        "item": {
          "id": "b3ad24f3-1488-46d4-99df-646eb6f4762b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b84efb41-eb2d-4721-accc-79d3553399d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65586a05-1b22-4b55-ad8c-742d0107947a",
        "cursor": {
          "ref": "45472831-4e11-4e11-8d08-1b27d702b792",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ae7e8edf-a0ce-41bf-a39e-e9e690eec6ee"
        },
        "item": {
          "id": "65586a05-1b22-4b55-ad8c-742d0107947a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a833a174-2cad-4b59-91f9-bb4d28d9f7a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07c8c0c-1c67-4852-abd4-11f70b8ee428",
        "cursor": {
          "ref": "4ac955df-4999-4889-89cc-12a02010f6c4",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d941d21a-8cba-4a12-bddd-9cdc02db2cf7"
        },
        "item": {
          "id": "d07c8c0c-1c67-4852-abd4-11f70b8ee428",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "bd73931e-1af5-4ac3-9df1-9361cd10e5b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f6d9d7-f4a8-4f2f-bfa7-8d408390c26b",
        "cursor": {
          "ref": "6eceeb91-638d-4c4b-8356-ea3747c5f3ee",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3444b807-5c3f-4950-a2ed-e6bdc16e3170"
        },
        "item": {
          "id": "28f6d9d7-f4a8-4f2f-bfa7-8d408390c26b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "633b88f1-3a86-4366-94b0-7775ae352034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f834d96-3221-44e8-a988-569ab21b4d53",
        "cursor": {
          "ref": "ee8e4069-5b69-42ae-8a06-6020096736ca",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0881b783-0c58-47ac-b9db-42df34f1efe9"
        },
        "item": {
          "id": "2f834d96-3221-44e8-a988-569ab21b4d53",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a1b2d33b-c06c-4167-bd4a-9f4d26a5f136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf0a59d-740b-42e5-9d66-a0cf4765714a",
        "cursor": {
          "ref": "8e36e17b-383b-4fc3-9601-4631bf8921d2",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a560f4bd-0528-4bf2-9a73-54f8a50f7b66"
        },
        "item": {
          "id": "5cf0a59d-740b-42e5-9d66-a0cf4765714a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "443f9de4-5a78-49d9-8bb1-f0ecc18ee4d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89244cd-37d3-4d45-a05d-340eb012184f",
        "cursor": {
          "ref": "93a0be29-df37-47a1-81d4-965439d45770",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d8012142-baa3-4bd8-a004-297754d32c06"
        },
        "item": {
          "id": "f89244cd-37d3-4d45-a05d-340eb012184f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c80f18a0-0b2c-49b7-890f-b2f492c683f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0540df9e-16c9-4698-9e04-9d88f19d77d2",
        "cursor": {
          "ref": "d9cda4f0-6d3e-4c9c-ab5d-20c1c4283571",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ec186f6c-4443-4532-9514-1d95e1f4a242"
        },
        "item": {
          "id": "0540df9e-16c9-4698-9e04-9d88f19d77d2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b93f7f4b-003b-46f1-bc9e-cb69bdaefdca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c73032-bf2c-4476-bd83-147fc1c74fe9",
        "cursor": {
          "ref": "aec2fe0d-0fbf-4552-b946-6d70eb8d3afc",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ee37369f-918f-4a13-aebf-f8db18c31a61"
        },
        "item": {
          "id": "38c73032-bf2c-4476-bd83-147fc1c74fe9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "da17e39d-bade-4ca8-9ba2-74267f5f82ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c555f1e-a61f-4af8-b060-c9015ffbbb28",
        "cursor": {
          "ref": "49f89e14-3c83-4fad-be34-c9301a63085e",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "771d1387-53c3-411f-abe8-301ca1ebdc84"
        },
        "item": {
          "id": "8c555f1e-a61f-4af8-b060-c9015ffbbb28",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5c88a6d0-f3cc-4b8d-997a-ec6d308ff0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7760f36-2a8c-45df-a134-ae5ea83ae40f",
        "cursor": {
          "ref": "82287580-e99e-4e6c-b7ab-f46241ae4bd1",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "fcec7a29-c547-4101-a4db-d5e7728ec2fd"
        },
        "item": {
          "id": "a7760f36-2a8c-45df-a134-ae5ea83ae40f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "75aee0a2-e8f6-43e2-932a-cf65f1839737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5097c44-701a-455b-8bc2-c657c185b94b",
        "cursor": {
          "ref": "cfb8144c-9155-44ff-a4d3-53992df55ec1",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7d2785f4-447b-40e1-924a-dbc3a18d6446"
        },
        "item": {
          "id": "a5097c44-701a-455b-8bc2-c657c185b94b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "97fe9730-08b5-4594-b864-62781502a84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d95d08-5774-47af-9805-366dc889ef02",
        "cursor": {
          "ref": "814ce010-8759-4141-b81b-c8b8af62cb04",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4224b692-ef06-42f6-932d-25c5b8491eff"
        },
        "item": {
          "id": "a4d95d08-5774-47af-9805-366dc889ef02",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0d29391e-4bf6-4e0f-836c-071aad5f65c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28b15aa-38a8-4358-83cb-16a57731b656",
        "cursor": {
          "ref": "cff9f287-6378-4e74-acd2-8324bee1b75d",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c3d18654-2867-473b-b97a-25abf4679199"
        },
        "item": {
          "id": "d28b15aa-38a8-4358-83cb-16a57731b656",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9715b37a-e6b7-455c-aca3-d77ed6560667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b0a270-a410-49bf-a896-65148a152fab",
        "cursor": {
          "ref": "d42a41bb-e1a8-4ccd-9385-36a3f802710e",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f6ee8813-aa76-4945-b466-6bc7e63cdacc"
        },
        "item": {
          "id": "f6b0a270-a410-49bf-a896-65148a152fab",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1c6f1fb4-b568-4981-83ae-7b449acd7866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd565ff-1749-493f-8ffa-6c2cccfc130e",
        "cursor": {
          "ref": "c2c1a07a-b71a-4cdd-afff-5df1f3a7aaea",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8b19fdfc-9bdb-490c-b789-6d1057909cb3"
        },
        "item": {
          "id": "5cd565ff-1749-493f-8ffa-6c2cccfc130e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1ba7136e-3395-458a-bdba-0b624c1b85e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ef893f-1b57-48b8-be27-ccec04a69cb1",
        "cursor": {
          "ref": "0c9f3b8b-e83f-4aa5-b0b0-290dce72af05",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "aef6fa81-a25f-4459-afad-35e072689960"
        },
        "item": {
          "id": "76ef893f-1b57-48b8-be27-ccec04a69cb1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "bc64098a-52a4-4e4c-94a0-8effa6c06e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426fb435-2f11-42fb-a433-3fe3953218f0",
        "cursor": {
          "ref": "b9890171-568b-481a-ac09-14589bb4e458",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ce9d6899-1d31-42c2-800d-1e5c5cb6f42c"
        },
        "item": {
          "id": "426fb435-2f11-42fb-a433-3fe3953218f0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a06913ac-0655-4bcf-9d42-8e55f2dd3052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7069d63-2765-4821-928a-7238d4308e49",
        "cursor": {
          "ref": "085a10d8-99ab-4320-b24b-68457a996957",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6be7d5b5-96b1-469f-b683-2ab2574c2002"
        },
        "item": {
          "id": "f7069d63-2765-4821-928a-7238d4308e49",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "13930e39-341f-4265-a915-bd8dd5509c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff6ff82-a2ed-4337-8c84-80ad3ef227b8",
        "cursor": {
          "ref": "353c4ff4-33cc-47a3-82f9-235a22b2fafe",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "9d95f3e9-56e6-48b2-9661-cc81810b4350"
        },
        "item": {
          "id": "aff6ff82-a2ed-4337-8c84-80ad3ef227b8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ab0df6a1-310b-4895-92af-9b53cdc89f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76866bd0-a0ab-45c3-969d-80922e642578",
        "cursor": {
          "ref": "021f93c7-b7ed-4c82-bfeb-a167b6173acd",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "713044d4-d419-4916-ac4f-4f6bb963b420"
        },
        "item": {
          "id": "76866bd0-a0ab-45c3-969d-80922e642578",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9c453dc5-0896-4031-abc5-b825932800b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4ba4f9-3006-4d92-ab87-148f4529fb5c",
        "cursor": {
          "ref": "dfd234f1-b2f6-4c42-884d-c81becaae6fe",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "366497f2-53f7-4c7c-9d5f-4599364d3611"
        },
        "item": {
          "id": "fc4ba4f9-3006-4d92-ab87-148f4529fb5c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b1e2e01b-05a8-41f5-a576-cb5be748f968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7eabb4-1a79-4b03-af3b-9705ffdf31e5",
        "cursor": {
          "ref": "9af5f27e-4a50-4ec2-a9e9-16df8bd7184e",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "19abfa06-062b-40d7-957a-297b348e6528"
        },
        "item": {
          "id": "5f7eabb4-1a79-4b03-af3b-9705ffdf31e5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7943da54-e953-4aeb-9746-fd418eefe266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e85d04cd-6573-4b8c-9107-b4332f400431",
        "cursor": {
          "ref": "c86949d0-3ce6-43ce-bb9f-ce1e7ffdf338",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "499ed801-27c7-4a98-a593-8583e6caee50"
        },
        "item": {
          "id": "e85d04cd-6573-4b8c-9107-b4332f400431",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c69be712-9f81-4072-976f-74bf0419c6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32d8f80-d0fa-45d7-a2d6-b2a67f863d4e",
        "cursor": {
          "ref": "8478485e-f63f-4293-94f2-726902d9cac3",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "c6ced6a5-e5f6-4235-b117-ad67da7fd795"
        },
        "item": {
          "id": "a32d8f80-d0fa-45d7-a2d6-b2a67f863d4e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8e86e7c6-cfa0-44ae-bf0b-da3da0689ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368a8a3b-69f6-4d54-8703-dca7f99df85c",
        "cursor": {
          "ref": "87d17e66-8521-418c-ac95-1dda437940fb",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "136e4799-df96-44fa-9794-af8a14fa12b9"
        },
        "item": {
          "id": "368a8a3b-69f6-4d54-8703-dca7f99df85c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2afe0471-2202-42e2-ad8c-237f3bad4550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c3ab55-58f2-4a70-986d-5c2b1a0fb3f7",
        "cursor": {
          "ref": "87b1ed5c-9af5-40e9-902b-039a6cb9bcd4",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "27920f9f-73bf-412e-a606-10b6cba1bf06"
        },
        "item": {
          "id": "23c3ab55-58f2-4a70-986d-5c2b1a0fb3f7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "901ebc75-02d3-4578-a638-08a73fda9354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306acf1f-5bf0-463f-8e21-0c336649dfd4",
        "cursor": {
          "ref": "4a92c2c2-ad58-405b-b88e-e5343975f6de",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "56a8a3fa-216b-4316-9b85-98f37326808b"
        },
        "item": {
          "id": "306acf1f-5bf0-463f-8e21-0c336649dfd4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d7dae5ac-7f81-489a-b436-eca6e42cdcc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6ef6b8-f4d0-4ecc-9c34-ee4716038a27",
        "cursor": {
          "ref": "dd88b3f5-c314-47cb-9d8b-978af0e07a46",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "0973e14c-1e2f-45ce-9e10-87e54c77f646"
        },
        "item": {
          "id": "aa6ef6b8-f4d0-4ecc-9c34-ee4716038a27",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5f6de445-4205-4d08-a905-b165759ce750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6634c62-109c-4c6c-a295-20aa3923127e",
        "cursor": {
          "ref": "9538ee42-0d63-4d39-8896-62c49f2b7ac4",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "8a552f9c-d859-4c55-abdf-77405587a8c9"
        },
        "item": {
          "id": "d6634c62-109c-4c6c-a295-20aa3923127e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "47bebfc0-8705-4c15-8d6f-c2f94596d882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247e1950-a836-4bb5-a797-193bf0c894a4",
        "cursor": {
          "ref": "bd605776-b307-4640-add9-7a96fa93556c",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "d589d622-3f74-4f9a-8fb5-d5107ee5c1e8"
        },
        "item": {
          "id": "247e1950-a836-4bb5-a797-193bf0c894a4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "dd03f18c-5c53-4520-808e-226e8169f5fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bfc8813-228c-4fd9-b0ca-8d74783b1d64",
        "cursor": {
          "ref": "8d5c9317-af8d-48f6-b7e8-dc69d3da8dd9",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "3a2f65ad-dd05-4bc6-8c7b-00c8bb2d87f2"
        },
        "item": {
          "id": "2bfc8813-228c-4fd9-b0ca-8d74783b1d64",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "55809f14-ef2b-45f4-a8d0-2eb7ddcc7824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f41c16-d4f2-48e2-b887-9f5494650813",
        "cursor": {
          "ref": "fc5c892c-e0c7-4599-8e3f-b6bc8e8ad1a6",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "e1ee6262-7004-486a-a0d5-dfa294bdf16b"
        },
        "item": {
          "id": "63f41c16-d4f2-48e2-b887-9f5494650813",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9c4f8afb-657c-44a8-8195-8b05043594a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b6a27a-ab4b-4858-b047-de2b26a430ba",
        "cursor": {
          "ref": "35333260-6d49-42d2-b16b-9a7e2288ef34",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "a49925a9-66d5-4fbf-b65a-f0fffd6ede8e"
        },
        "item": {
          "id": "50b6a27a-ab4b-4858-b047-de2b26a430ba",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2a4990b5-38a5-49f8-853b-a4a100512edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2b6244-967f-4105-a04f-3b397936a4f1",
        "cursor": {
          "ref": "c95ef914-2664-46a5-92b3-d668d892dd37",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "966b6022-02c2-4ed0-88ad-97037243d418"
        },
        "item": {
          "id": "4f2b6244-967f-4105-a04f-3b397936a4f1",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "94bb0d86-daea-4525-9c45-0b3940c55688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22bd75de-ad09-46e8-8c99-4a62716a30a3",
        "cursor": {
          "ref": "f0b30817-4b3c-40e5-865b-c358108f1970",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "9b09758b-33ff-47f9-bc89-17fa5e4ffbd1"
        },
        "item": {
          "id": "22bd75de-ad09-46e8-8c99-4a62716a30a3",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4974b024-8fac-42ad-9a91-25712fc79b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5fa766d-3c5d-4e7b-9958-117cd2625215",
        "cursor": {
          "ref": "5c9f0831-7c8c-47ac-a44f-337443d047a8",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "679d5c28-3318-4554-a07c-2ab184a41012"
        },
        "item": {
          "id": "f5fa766d-3c5d-4e7b-9958-117cd2625215",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0461b8bc-9578-4727-bf9e-d43e762f4917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885357f2-5293-4ebb-808f-dbbdea46deac",
        "cursor": {
          "ref": "8e92920c-acba-4b43-819f-3b75dbf42dc3",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "b7ede30b-acc5-40b2-bd0a-fe9b899653b4"
        },
        "item": {
          "id": "885357f2-5293-4ebb-808f-dbbdea46deac",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9c8d9d49-4531-4f14-bf03-7119a971bfa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272e39d3-87b0-4cca-ade9-4153d7dc902d",
        "cursor": {
          "ref": "8ae5b2e5-459a-4338-b7ed-f299ae011fe4",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "13b61fa4-870e-46d3-a515-1c987efb4654"
        },
        "item": {
          "id": "272e39d3-87b0-4cca-ade9-4153d7dc902d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9fd93e2a-67c4-4299-ab28-db5d12c9982e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35bdd54d-4bd6-4bce-a3d4-1a56e0c7f94c",
        "cursor": {
          "ref": "d0b8e5a4-53f8-4e47-b11d-6543d848dbf7",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "13f4b3be-da3e-42db-8fe0-73d4ca6a4238"
        },
        "item": {
          "id": "35bdd54d-4bd6-4bce-a3d4-1a56e0c7f94c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a62c9939-b9f5-46b1-af54-701e578ff7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee438ae3-a1b9-4b14-bd6e-a4a8abc2c204",
        "cursor": {
          "ref": "4eceeffe-9fe9-4220-be22-0348a7a9983e",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "8c9218c7-3b82-4520-a9b3-620abb10444b"
        },
        "item": {
          "id": "ee438ae3-a1b9-4b14-bd6e-a4a8abc2c204",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d500f7f3-37e2-419a-9e86-cdc099dedc4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19401c2-51ff-4f0f-9214-7257e0ef7d62",
        "cursor": {
          "ref": "ca50bfd6-b6c2-41b8-ac89-a81a3640ea13",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "201b5114-c97c-4a57-b224-b842bc96a62d"
        },
        "item": {
          "id": "e19401c2-51ff-4f0f-9214-7257e0ef7d62",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a63bbfdd-6bcf-4bf1-992c-8895d7d978b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ebc282-0bf6-4d3a-bd06-8b0260dedbec",
        "cursor": {
          "ref": "3a7f6736-2d32-4b9d-b622-25caede86983",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "bc1649d0-fce6-404f-b790-1d3a1f71730a"
        },
        "item": {
          "id": "75ebc282-0bf6-4d3a-bd06-8b0260dedbec",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "38b0e244-7c32-4929-ba2f-4c39686735aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d34dee-8884-4463-ae41-5d16be89450f",
        "cursor": {
          "ref": "9d54b9a6-0697-448b-946d-7ae12296a1f5",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "8acb6890-06e2-4da9-9abf-fca15042a9ea"
        },
        "item": {
          "id": "b9d34dee-8884-4463-ae41-5d16be89450f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a4af4b74-504d-415e-aa3d-44053211694d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d4a555-8827-4dc9-830a-d3b6d82d595d",
        "cursor": {
          "ref": "03dda736-b317-48f5-ae55-848f3a3950b4",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "1140de6b-8d3f-47a0-978f-fb6cb6b47bc9"
        },
        "item": {
          "id": "f3d4a555-8827-4dc9-830a-d3b6d82d595d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "efd16cc2-be44-4e1e-b2d5-3d4b7c70fd34",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d581b9-b479-4114-a2c2-2b6490b8bb83",
        "cursor": {
          "ref": "cf0366b7-7bfb-46a5-bbd6-176f11c64308",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "c54caac5-66da-417c-9454-5dd52cf9ab6d"
        },
        "item": {
          "id": "72d581b9-b479-4114-a2c2-2b6490b8bb83",
          "name": "credentials_verify"
        },
        "response": {
          "id": "69f37c51-ee00-4ad7-90cd-b3dea882ec09",
          "status": "OK",
          "code": 200,
          "responseTime": 2966,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e97b22f-6747-4cb6-9f27-28acc9eaccba",
        "cursor": {
          "ref": "03f2aa72-072a-4e44-8951-cea93889886c",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ad72ebd2-eed2-4f6a-8092-a40d37a555a8"
        },
        "item": {
          "id": "3e97b22f-6747-4cb6-9f27-28acc9eaccba",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d2ce3171-c205-4a9f-8b36-6c3b52978c7c",
          "status": "OK",
          "code": 200,
          "responseTime": 2997,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "38926c9d-5779-4bde-8f57-27b6ae4f6cae",
        "cursor": {
          "ref": "1c47e811-54b2-4e45-ac73-abdfc24f0c6b",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "109c0652-e42a-4b3d-aad9-8e5455164147"
        },
        "item": {
          "id": "38926c9d-5779-4bde-8f57-27b6ae4f6cae",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "27ad85eb-1d7d-47ac-aabb-86123b34a0d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38926c9d-5779-4bde-8f57-27b6ae4f6cae",
        "cursor": {
          "ref": "1c47e811-54b2-4e45-ac73-abdfc24f0c6b",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "109c0652-e42a-4b3d-aad9-8e5455164147"
        },
        "item": {
          "id": "38926c9d-5779-4bde-8f57-27b6ae4f6cae",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "27ad85eb-1d7d-47ac-aabb-86123b34a0d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f2fd0c-c4cc-4f9c-b6c7-9a5cc2ee760a",
        "cursor": {
          "ref": "b4d17713-6db5-4fd3-9523-d48ba905f844",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "93d26f04-268f-4a15-8767-98e376b89933"
        },
        "item": {
          "id": "33f2fd0c-c4cc-4f9c-b6c7-9a5cc2ee760a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "59588baa-85b6-41f0-b545-a1a2e2a381b5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4937fc2d-9216-4d1a-9552-92c5512e18d6",
        "cursor": {
          "ref": "f1313305-1898-4d52-9640-b281f8aba22b",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "b36660ee-add8-4193-9209-b2f08af5cdfc"
        },
        "item": {
          "id": "4937fc2d-9216-4d1a-9552-92c5512e18d6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f81c7974-50d4-458b-b5b3-b5508b433361",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}